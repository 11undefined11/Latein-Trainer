{"mappings":"AGEO,MAAM,EAA2B,CAEpC,CACI,UAAW,4BACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,YACX,YAAa,eACb,kBAAmB,SACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,gBACb,kBAAmB,kBACnB,oBAAqB,uDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,cACb,kBAAmB,WACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,4EACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,mBACb,kBAAmB,YACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,8DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,kEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,SACb,kBAAmB,WACnB,oBAAqB,mCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,KACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,mBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,aACb,kBAAmB,SACnB,oBAAqB,qCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,GACb,kBAAmB,sBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,iBACb,kBAAmB,UACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,WACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,iBACnB,oBAAqB,sDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,cACb,kBAAmB,kBACnB,oBAAqB,wDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,iBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,6BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,aACb,kBAAmB,UACnB,oBAAqB,yBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,GACb,kBAAmB,iBACnB,oBAAqB,iCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,uBACnB,oBAAqB,0BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,sBACb,kBAAmB,qBACnB,oBAAqB,iCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,qBACb,kBAAmB,kBACnB,oBAAqB,iDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,sBACb,kBAAmB,sBACnB,oBAAqB,4DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,eACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,oBACb,kBAAmB,0BACnB,oBAAqB,gEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,oBACb,kBAAmB,iBACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAEA,CACI,UAAW,0CACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,QACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,gBACb,kBAAmB,gCACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,WACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,oBACb,kBAAmB,qBACnB,oBAAqB,kBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,oBACb,kBAAmB,+BACnB,oBAAqB,wEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,GACb,kBAAmB,oBACnB,oBAAqB,cACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,gBACb,kBAAmB,SACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,gBACb,kBAAmB,kBACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,wBACX,YAAa,GACb,kBAAmB,2BACnB,oBAAqB,YACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,GACb,kBAAmB,cACnB,oBAAqB,YACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,eACb,kBAAmB,uBACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,cACb,kBAAmB,aACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,cACb,kBAAmB,aACnB,oBAAqB,oCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,aACb,kBAAmB,OACnB,oBAAqB,yDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,qBACX,YAAa,GACb,kBAAmB,gBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,aACb,kBAAmB,OACnB,oBAAqB,8BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,GACb,kBAAmB,qBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,sBACb,kBAAmB,kBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,aACb,kBAAmB,MACnB,oBAAqB,sBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,eACb,kBAAmB,UACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,aACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,iBACb,kBAAmB,gBACnB,oBAAqB,sDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,kBACb,kBAAmB,4CACnB,oBAAqB,6DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,aACb,kBAAmB,OACnB,oBAAqB,qCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,sBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,iBACb,kBAAmB,sBACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,kBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,yCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,UACX,YAAa,aACb,kBAAmB,MACnB,oBAAqB,4DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,qBACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,4DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,YACb,kBAAmB,cACnB,oBAAqB,6DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,sBACb,kBAAmB,mBACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,sBACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,mDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,cACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,iBACb,kBAAmB,UACnB,oBAAqB,yBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,cACb,kBAAmB,QACnB,oBAAqB,8CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,KACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,sBACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,wBACb,kBAAmB,SACnB,oBAAqB,8DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,kBACb,kBAAmB,aACnB,oBAAqB,gCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,YACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,eACb,kBAAmB,SACnB,oBAAqB,8BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,YACb,kBAAmB,OACnB,oBAAqB,yDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,GACb,kBAAmB,+BACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,YACb,kBAAmB,oBACnB,oBAAqB,gEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,UACnB,oBAAqB,kCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,cACb,kBAAmB,SACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,GACb,kBAAmB,KACnB,oBAAqB,YACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,WACb,kBAAmB,OACnB,oBAAqB,mCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,YACb,kBAAmB,SACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,sBACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,8DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,sBACX,YAAa,GACb,kBAAmB,eACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,qDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,oBACX,YAAa,GACb,kBAAmB,cACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAEA,CACI,UAAW,iCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,oBACX,YAAa,GACb,kBAAmB,8BACnB,oBAAqB,8BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,qBACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,oBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,sBACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,oCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,OACnB,oBAAqB,2BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,YACb,kBAAmB,SACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,oBACb,kBAAmB,WACnB,oBAAqB,oCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,eACb,kBAAmB,YACnB,oBAAqB,iCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,YACb,kBAAmB,gBACnB,oBAAqB,kCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,wBACX,YAAa,GACb,kBAAmB,WACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,YACb,kBAAmB,aACnB,oBAAqB,oDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,iBACb,kBAAmB,UACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,gBACb,kBAAmB,QACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,gBACb,kBAAmB,WACnB,oBAAqB,6BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,cACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,wBACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,YACb,kBAAmB,UACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,GACb,kBAAmB,uBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,sBACb,kBAAmB,8BACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,KACX,YAAa,GACb,kBAAmB,cACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,yDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,WACb,kBAAmB,QACnB,oBAAqB,4DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,kBACb,kBAAmB,WACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,qBACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,mCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,GACb,kBAAmB,YACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,wBACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,sBACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,YACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,6BACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,6BACX,YAAa,GACb,kBAAmB,mBACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,2BACX,YAAa,GACb,kBAAmB,qBACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,yBACb,kBAAmB,sBACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,uBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,GACb,kBAAmB,WACnB,oBAAqB,kCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,eACb,kBAAmB,eACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,GACb,kBAAmB,KACnB,oBAAqB,6BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,GACb,kBAAmB,eACnB,oBAAqB,qCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,uCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,wBACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,6BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,wBACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,GACb,kBAAmB,gBACnB,oBAAqB,oCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,UACnB,oBAAqB,oCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,WACb,kBAAmB,yBACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,GACb,kBAAmB,WACnB,oBAAqB,0BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,0BACX,YAAa,GACb,kBAAmB,uBACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,cACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,eACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,sBACX,YAAa,GACb,kBAAmB,qBACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,kBACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,yBACb,kBAAmB,UACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,yBACb,kBAAmB,QACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,WACb,kBAAmB,SACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,mCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,mBACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,uBACX,YAAa,GACb,kBAAmB,iCACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,UACb,kBAAmB,2BACnB,oBAAqB,yBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,iBACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,6BACb,kBAAmB,yBACnB,oBAAqB,uEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,oCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,QACX,YAAa,YACb,kBAAmB,UACnB,oBAAqB,uCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,GACb,kBAAmB,oBACnB,oBAAqB,YACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,wCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,WACb,kBAAmB,OACnB,oBAAqB,0BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,eACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,eACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,mBACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,oBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,6BACb,kBAAmB,cACnB,oBAAqB,oBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,eACb,kBAAmB,aACnB,oBAAqB,wBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,uDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,0BACb,kBAAmB,kBACnB,oBAAqB,oFACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,UACb,kBAAmB,OACnB,oBAAqB,8DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,YACb,kBAAmB,QACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,0BACb,kBAAmB,UACnB,oBAAqB,mDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,0BACb,kBAAmB,sBACnB,oBAAqB,2DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,mBACb,kBAAmB,SACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,eACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,iDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,mBACb,kBAAmB,cACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,mBACX,YAAa,gBACb,kBAAmB,aACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,+BACnB,oBAAqB,cACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,cACb,kBAAmB,YACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,aACb,kBAAmB,QACnB,oBAAqB,gEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,sBACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,GACb,kBAAmB,sBACnB,oBAAqB,oDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,qBACnB,oBAAqB,yDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,wCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,SACX,YAAa,wBACb,kBAAmB,SACnB,oBAAqB,wCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,wBACb,kBAAmB,mBACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,KACX,YAAa,GACb,kBAAmB,iBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,uBACb,kBAAmB,QACnB,oBAAqB,uCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,cACb,kBAAmB,uBACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,wBACb,kBAAmB,6CACnB,oBAAqB,iEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,YACb,kBAAmB,kBACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,YACb,kBAAmB,OACnB,oBAAqB,iDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,wBACb,kBAAmB,WACnB,oBAAqB,mDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,uBACb,kBAAmB,sBACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,wBACb,kBAAmB,wCACnB,oBAAqB,qDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,yBACb,kBAAmB,QACnB,oBAAqB,oDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,GACb,kBAAmB,gBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,GACb,kBAAmB,UACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,YACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,yBACb,kBAAmB,SACnB,oBAAqB,2BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,cACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,aACb,kBAAmB,SACnB,oBAAqB,+FACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,0BACb,kBAAmB,uBACnB,oBAAqB,qDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,gCACb,kBAAmB,gCACnB,oBAAqB,qEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,GACb,kBAAmB,WACnB,oBAAqB,cACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,cACb,kBAAmB,UACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,wBACb,kBAAmB,WACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,WACb,kBAAmB,QACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,0BACb,kBAAmB,eACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,WACnB,oBAAqB,2DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,8BACb,kBAAmB,uBACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,mBACnB,oBAAqB,oEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,8BACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,eACX,YAAa,YACb,kBAAmB,OACnB,oBAAqB,mFACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,WACb,kBAAmB,SACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,wBACb,kBAAmB,cACnB,oBAAqB,yBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,gBACb,kBAAmB,eACnB,oBAAqB,eACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,wBACb,kBAAmB,WACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,yBACb,kBAAmB,SACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,iDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,uBACb,kBAAmB,oBACnB,oBAAqB,uDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,YACnB,oBAAqB,kDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,eACb,kBAAmB,kBACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,wBACb,kBAAmB,uCACnB,oBAAqB,uDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,iCACb,kBAAmB,mDACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,GACb,kBAAmB,0BACnB,oBAAqB,WACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,oBACb,kBAAmB,YACnB,oBAAqB,gCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,WACb,kBAAmB,SACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,YACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,YACb,kBAAmB,SACnB,oBAAqB,2BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,2BACb,kBAAmB,OACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,aACb,kBAAmB,WACnB,oBAAqB,qCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,mBACnB,oBAAqB,eACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,cACb,kBAAmB,UACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,8BACb,kBAAmB,6BACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,6CACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,QACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,oBACb,kBAAmB,0BACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,cACb,kBAAmB,yBACnB,oBAAqB,eACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,QACnB,oBAAqB,cACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,aACb,kBAAmB,SACnB,oBAAqB,eACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,mBACb,kBAAmB,0BACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,wBACb,kBAAmB,WACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,2BACb,kBAAmB,YACnB,oBAAqB,mCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,yBACb,kBAAmB,sBACnB,oBAAqB,6BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,yBACb,kBAAmB,UACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,6BACb,kBAAmB,QACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,sCACb,kBAAmB,0BACnB,oBAAqB,mCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,WACnB,oBAAqB,uCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,+BACb,kBAAmB,2BACnB,oBAAqB,uEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,aACb,kBAAmB,SACnB,oBAAqB,6BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,WACb,kBAAmB,OACnB,oBAAqB,mDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,aACb,kBAAmB,sBACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,wBACnB,oBAAqB,oCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,oBACb,kBAAmB,mCACnB,oBAAqB,wFACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,WACb,kBAAmB,SACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,iBACnB,oBAAqB,8CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,mBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,oBACX,YAAa,GACb,kBAAmB,cACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,uBACb,kBAAmB,yBACnB,oBAAqB,oBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,aACb,kBAAmB,aACnB,oBAAqB,uCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,aACb,kBAAmB,OACnB,oBAAqB,kDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,8BACb,kBAAmB,yCACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,gCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,YACX,YAAa,iBACb,kBAAmB,yBACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,2BACnB,oBAAqB,8CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,cACb,kBAAmB,UACnB,oBAAqB,yBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,uBACb,kBAAmB,SACnB,oBAAqB,kBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,WACb,kBAAmB,SACnB,oBAAqB,uDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,WACb,kBAAmB,OACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,qBACb,kBAAmB,QACnB,oBAAqB,qCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,2BACb,kBAAmB,YACnB,oBAAqB,uBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,YACb,kBAAmB,QACnB,oBAAqB,iBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,wBACb,kBAAmB,mBACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,YACb,kBAAmB,OACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,aACb,kBAAmB,gBACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,mBACnB,oBAAqB,sBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,yBACb,kBAAmB,6CACnB,oBAAqB,uEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,4BACb,kBAAmB,QACnB,oBAAqB,iBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,YACb,kBAAmB,WACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,WACb,kBAAmB,QACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,yBACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,aACb,kBAAmB,gBACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,uBACb,kBAAmB,kBACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,aACb,kBAAmB,SACnB,oBAAqB,uCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,WACb,kBAAmB,SACnB,oBAAqB,uDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,YACb,kBAAmB,QACnB,oBAAqB,mCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,oBACX,YAAa,wBACb,kBAAmB,iBACnB,oBAAqB,kDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,wCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,WACX,YAAa,WACb,kBAAmB,UACnB,oBAAqB,sBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,wBACb,kBAAmB,SACnB,oBAAqB,uBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,gCACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,sBACb,kBAAmB,sBACnB,oBAAqB,sDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,wBACb,kBAAmB,WACnB,oBAAqB,8BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,YACb,kBAAmB,OACnB,oBAAqB,8CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,WACb,kBAAmB,QACnB,oBAAqB,gCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,aACb,kBAAmB,gBACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,aACb,kBAAmB,eACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,aACb,kBAAmB,QACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,WACb,kBAAmB,SACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,iCACb,kBAAmB,sCACnB,oBAAqB,kBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,uBACb,kBAAmB,wBACnB,oBAAqB,cACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,oBACX,YAAa,GACb,kBAAmB,uBACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,UACb,kBAAmB,qBACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,cACb,kBAAmB,oBACnB,oBAAqB,yDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,sBACb,kBAAmB,UACnB,oBAAqB,8BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,WACb,kBAAmB,QACnB,oBAAqB,mDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,kBACb,kBAAmB,QACnB,oBAAqB,oBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,oCACb,kBAAmB,YACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,oBACb,kBAAmB,YACnB,oBAAqB,oBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,wCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,0BACb,kBAAmB,WACnB,oBAAqB,mDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,SACnB,oBAAqB,sDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,aACb,kBAAmB,QACnB,oBAAqB,kDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,gCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,QACX,YAAa,YACb,kBAAmB,QACnB,oBAAqB,sEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,gCACb,kBAAmB,yCACnB,oBAAqB,mFACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,cACb,kBAAmB,SACnB,oBAAqB,yBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,GACb,kBAAmB,iCACnB,oBAAqB,oCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,oBACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,sBACb,kBAAmB,SACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,aACb,kBAAmB,cACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,cACb,kBAAmB,SACnB,oBAAqB,wBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,uCACb,kBAAmB,QACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,gCACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,wBACb,kBAAmB,gCACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,kBACb,kBAAmB,cACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,sBACb,kBAAmB,uBACnB,oBAAqB,sBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,GACb,kBAAmB,UACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,8BACb,kBAAmB,yBACnB,oBAAqB,qDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,WACb,kBAAmB,QACnB,oBAAqB,WACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,gCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,UACb,kBAAmB,aACnB,oBAAqB,mCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,oBACb,kBAAmB,QACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,6BACnB,oBAAqB,4DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,sBACX,YAAa,GACb,kBAAmB,sBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,iDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,aACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,uCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,OACX,YAAa,YACb,kBAAmB,QACnB,oBAAqB,iDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,yBACb,kBAAmB,qBACnB,oBAAqB,iBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,mCACb,kBAAmB,mBACnB,oBAAqB,8EACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,WACb,kBAAmB,OACnB,oBAAqB,qCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,eACb,kBAAmB,YACnB,oBAAqB,oCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,SACb,kBAAmB,QACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,WACb,kBAAmB,uBACnB,oBAAqB,oDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,WACb,kBAAmB,sCACnB,oBAAqB,oDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,mCACb,kBAAmB,8BACnB,oBAAqB,iCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,UACb,kBAAmB,MACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,YACb,kBAAmB,OACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,cACb,kBAAmB,SACnB,oBAAqB,wDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,WACb,kBAAmB,QACnB,oBAAqB,mDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,WACb,kBAAmB,SACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,WACb,kBAAmB,gBACnB,oBAAqB,iBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,uBACnB,oBAAqB,aACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,gCACb,kBAAmB,yBACnB,oBAAqB,kCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,0BACb,kBAAmB,kBACnB,oBAAqB,kDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,oBACb,kBAAmB,SACnB,oBAAqB,+DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,iBACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,8BACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,OACX,YAAa,GACb,kBAAmB,kBACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,cACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,WACb,kBAAmB,iBACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,4BACb,kBAAmB,WACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,2BACX,YAAa,6BACb,kBAAmB,mCACnB,oBAAqB,uCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,eACb,kBAAmB,mBACnB,oBAAqB,qCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,gBACb,kBAAmB,WACnB,oBAAqB,yDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,sCACb,kBAAmB,qBACnB,oBAAqB,gCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,6BACb,kBAAmB,cACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,YACb,kBAAmB,SACnB,oBAAqB,mDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,uBACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,uBACb,kBAAmB,SACnB,oBAAqB,kDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,aACb,kBAAmB,OACnB,oBAAqB,wCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,qBACb,kBAAmB,QACnB,oBAAqB,wBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,WACb,kBAAmB,SACnB,oBAAqB,wBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,oBACX,YAAa,GACb,kBAAmB,yBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,kBACb,kBAAmB,UACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,iBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,aACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,YACb,kBAAmB,MACnB,oBAAqB,uCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,kDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,aACb,kBAAmB,QACnB,oBAAqB,oCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,aACb,kBAAmB,wBACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,yBACb,kBAAmB,YACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,UACb,kBAAmB,OACnB,oBAAqB,cACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,2BACb,kBAAmB,sBACnB,oBAAqB,0BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,YACb,kBAAmB,aACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,gBACnB,oBAAqB,qDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,yCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,oBACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,yDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,GACb,kBAAmB,sBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,mBACX,YAAa,cACb,kBAAmB,wBACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,OACnB,oBAAqB,kCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,oBACb,kBAAmB,mBACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,gBACb,kBAAmB,MACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,wBACX,YAAa,GACb,kBAAmB,0BACnB,oBAAqB,uCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,aACb,kBAAmB,UACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,wBACb,kBAAmB,SACnB,oBAAqB,eACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,oBACb,kBAAmB,6BACnB,oBAAqB,eACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,oBACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,aACb,kBAAmB,UACnB,oBAAqB,eACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,uBACb,kBAAmB,wBACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,GACb,kBAAmB,UACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,oBACX,YAAa,GACb,kBAAmB,mBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,qBACb,kBAAmB,qBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,wBACb,kBAAmB,oBACnB,oBAAqB,iBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,YACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,yBACX,YAAa,GACb,kBAAmB,+BACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,iBACb,kBAAmB,YACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,YACb,kBAAmB,kBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,cACb,kBAAmB,mBACnB,oBAAqB,2BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,sBACnB,oBAAqB,8BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,yBACb,kBAAmB,iBACnB,oBAAqB,8CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,WACb,kBAAmB,OACnB,oBAAqB,iCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,8CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,WACb,kBAAmB,QACnB,oBAAqB,uDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,+BACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,QACX,YAAa,cACb,kBAAmB,OACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,GACb,kBAAmB,wBACnB,oBAAqB,oDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,4BACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,iBACb,kBAAmB,YACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,UACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,cACnB,oBAAqB,qDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,qBACb,kBAAmB,SACnB,oBAAqB,oBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,YACnB,oBAAqB,yDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,eACb,kBAAmB,OACnB,oBAAqB,uDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,8CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,OACnB,oBAAqB,wDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,oBACb,kBAAmB,wBACnB,oBAAqB,qDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,uBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,wBACb,kBAAmB,mBACnB,oBAAqB,oCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,UACnB,oBAAqB,oCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,UACb,kBAAmB,uBACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,cACnB,oBAAqB,uCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,8BACb,kBAAmB,YACnB,oBAAqB,sBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,oBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,0BACb,kBAAmB,kCACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,iBACb,kBAAmB,OACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,aACb,kBAAmB,QACnB,oBAAqB,kDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,gCACb,kBAAmB,qBACnB,oBAAqB,mDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,mBACX,YAAa,iBACb,kBAAmB,gBACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,YACb,kBAAmB,QACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,+BACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,UACX,YAAa,cACb,kBAAmB,YACnB,oBAAqB,wCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,gBACb,kBAAmB,4BACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,aACb,kBAAmB,4BACnB,oBAAqB,kDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,SACnB,oBAAqB,eACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,kBACb,kBAAmB,QACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,eACb,kBAAmB,gBACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,aACb,kBAAmB,sBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,gBACb,kBAAmB,UACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,gBACb,kBAAmB,WACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,qDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,0BACb,kBAAmB,4BACnB,oBAAqB,oCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,iBACb,kBAAmB,OACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,WACb,kBAAmB,QACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,eACb,kBAAmB,OACnB,oBAAqB,6BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,aACb,kBAAmB,SACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,uCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,YACb,kBAAmB,mBACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,mBACb,kBAAmB,QACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,YACb,kBAAmB,SACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,mBACX,YAAa,sBACb,kBAAmB,oCACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,yBACb,kBAAmB,yBACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,SACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,yBACb,kBAAmB,gBACnB,oBAAqB,mCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,eACb,kBAAmB,UACnB,oBAAqB,2BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,uBACb,kBAAmB,uBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,2BACb,kBAAmB,cACnB,oBAAqB,uCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,yBACb,kBAAmB,4BACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,WACb,kBAAmB,WACnB,oBAAqB,qDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,yCACb,kBAAmB,2CACnB,oBAAqB,qCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,8BACb,kBAAmB,2BACnB,oBAAqB,gCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,2BACb,kBAAmB,iDACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAIA,CACI,UAAW,yCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,mBACX,YAAa,iBACb,kBAAmB,qBACnB,oBAAqB,iDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,qBACX,YAAa,mBACb,kBAAmB,OACnB,oBAAqB,uCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,GACb,kBAAmB,wBACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,eACb,kBAAmB,kCACnB,oBAAqB,wDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,aACb,kBAAmB,UACnB,oBAAqB,wCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,6BACb,kBAAmB,gCACnB,oBAAqB,mCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,eACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,eACb,kBAAmB,eACnB,oBAAqB,qCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,cACb,kBAAmB,SACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,oCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,yBACb,kBAAmB,OACnB,oBAAqB,qCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,KACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,uCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,kBACb,kBAAmB,oBACnB,oBAAqB,iBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,oBACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,oBACX,YAAa,cACb,kBAAmB,mBACnB,oBAAqB,qCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,sBACX,YAAa,GACb,kBAAmB,uBACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,aACb,kBAAmB,WACnB,oBAAqB,8BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,kBACb,kBAAmB,wBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,qCACb,kBAAmB,YACnB,oBAAqB,6BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,4BACb,kBAAmB,sBACnB,oBAAqB,kCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,cACb,kBAAmB,WACnB,oBAAqB,iBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,cACb,kBAAmB,cACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,uBACnB,oBAAqB,wCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,gBACb,kBAAmB,YACnB,oBAAqB,gBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,aACb,kBAAmB,+BACnB,oBAAqB,mBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,SACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,uBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,4BACX,YAAa,GACb,kBAAmB,sBACnB,oBAAqB,qCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,GACb,kBAAmB,8BACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,4BACb,kBAAmB,qBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,qCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,wBACnB,oBAAqB,oCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,gBACb,kBAAmB,QACnB,oBAAqB,eACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,gBACb,kBAAmB,WACnB,oBAAqB,qDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,uBACnB,oBAAqB,iDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,WACb,kBAAmB,SACnB,oBAAqB,yBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,mCACb,kBAAmB,8BACnB,oBAAqB,sDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,4BACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,WACb,kBAAmB,gBACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,WACb,kBAAmB,SACnB,oBAAqB,8FACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,gBACb,kBAAmB,WACnB,oBAAqB,+DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,cACb,kBAAmB,SACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,YACb,kBAAmB,kBACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,kBACb,kBAAmB,QACnB,oBAAqB,0DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,2DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,cACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,8BACb,kBAAmB,gCACnB,oBAAqB,+DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,YACnB,oBAAqB,sDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,wBACb,kBAAmB,yBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,GACb,kBAAmB,iBACnB,oBAAqB,sBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,oBACX,YAAa,GACb,kBAAmB,iBACnB,oBAAqB,+DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,+BACb,kBAAmB,cACnB,oBAAqB,gEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,QACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,qBACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,gCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,YACX,YAAa,iCACb,kBAAmB,iBACnB,oBAAqB,kDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,OACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,WACb,kBAAmB,qBACnB,oBAAqB,2BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,YACb,kBAAmB,YACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,WACb,kBAAmB,sCACnB,oBAAqB,kCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,wBACb,kBAAmB,kCACnB,oBAAqB,iCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,UACb,kBAAmB,WACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,GACb,kBAAmB,yBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,oBACX,YAAa,kBACb,kBAAmB,mBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,iBACnB,oBAAqB,gCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,YACb,kBAAmB,aACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,aACb,kBAAmB,SACnB,oBAAqB,qCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,sCACb,kBAAmB,uBACnB,oBAAqB,oEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,wBACb,kBAAmB,oBACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,4BACb,kBAAmB,0BACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,UACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,yBACb,kBAAmB,iBACnB,oBAAqB,oDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,kBACb,kBAAmB,gBACnB,oBAAqB,qCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,mCACb,kBAAmB,uBACnB,oBAAqB,4EACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,YACb,kBAAmB,UACnB,oBAAqB,oBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,sCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,mBACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,gBACb,kBAAmB,qBACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,mBACb,kBAAmB,qBACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,wBACb,kBAAmB,qBACnB,oBAAqB,8BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,aACb,kBAAmB,wCACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,uBACb,kBAAmB,6BACnB,oBAAqB,gBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,wBACb,kBAAmB,sCACnB,oBAAqB,sBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,2BACb,kBAAmB,YACnB,oBAAqB,0BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,aACb,kBAAmB,mBACnB,oBAAqB,oBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,mBACX,YAAa,GACb,kBAAmB,WACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,mBACX,YAAa,iBACb,kBAAmB,QACnB,oBAAqB,yBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,kBACb,kBAAmB,aACnB,oBAAqB,kBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,cACb,kBAAmB,eACnB,oBAAqB,sBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,+BACb,kBAAmB,cACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,GACb,kBAAmB,UACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,WACb,kBAAmB,kCACnB,oBAAqB,aACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,uBACb,kBAAmB,cACnB,oBAAqB,wCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,gBACb,kBAAmB,cACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,0BACb,kBAAmB,YACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,YACb,kBAAmB,iBACnB,oBAAqB,wCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,oBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,gBACb,kBAAmB,WACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,YACb,kBAAmB,QACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,mCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,MACX,YAAa,UACb,kBAAmB,OACnB,oBAAqB,wCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,wBACb,kBAAmB,iBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,mBACnB,oBAAqB,kDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,sBACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,gBACb,kBAAmB,eACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,oBACb,kBAAmB,SACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,0BACb,kBAAmB,0BACnB,oBAAqB,gCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,aACb,kBAAmB,qCACnB,oBAAqB,2DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,wBACb,kBAAmB,uBACnB,oBAAqB,kBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,+BACb,kBAAmB,WACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,0BACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,0BACb,kBAAmB,4BACnB,oBAAqB,qDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,qBACX,YAAa,wBACb,kBAAmB,4BACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,mCACX,YAAa,GACb,kBAAmB,UACnB,oBAAqB,mCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,0BACb,kBAAmB,mBACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,+BACb,kBAAmB,oBACnB,oBAAqB,2BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,UACb,kBAAmB,QACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,0BACb,kBAAmB,SACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,uBACb,kBAAmB,aACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,UACb,kBAAmB,OACnB,oBAAqB,8BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,aACb,kBAAmB,SACnB,oBAAqB,6BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,eACb,kBAAmB,QACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,mCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,uBACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,SACX,YAAa,YACb,kBAAmB,WACnB,oBAAqB,oCACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,OACX,YAAa,GACb,kBAAmB,oBACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,yCACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,UACnB,oBAAqB,cACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,YACX,YAAa,+BACb,kBAAmB,eACnB,oBAAqB,8BACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,6BACnB,oBAAqB,qBACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,WACX,YAAa,wBACb,kBAAmB,aACnB,oBAAqB,kDACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,YACnB,oBAAqB,oCACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,kBACX,YAAa,wBACb,kBAAmB,0BACnB,oBAAqB,oBACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,MACX,YAAa,WACb,kBAAmB,OACnB,oBAAqB,eACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,WACX,YAAa,eACb,kBAAmB,OACnB,oBAAqB,gDACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,QACX,YAAa,UACb,kBAAmB,OACnB,oBAAqB,+BACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,YACX,YAAa,yBACb,kBAAmB,SACnB,oBAAqB,sCACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,mBACnB,oBAAqB,mCACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,+CACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,SACX,YAAa,wBACb,kBAAmB,eACnB,oBAAqB,oCACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,UACX,YAAa,4BACb,kBAAmB,SACnB,oBAAqB,wDACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,SACX,YAAa,aACb,kBAAmB,SACnB,oBAAqB,0CACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,YACX,YAAa,mCACb,kBAAmB,gCACnB,oBAAqB,sCACrB,YAAa,EACb,SAAU,CAAA,CACd,EAGA,CACI,UAAW,gCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,QACX,YAAa,sBACb,kBAAmB,SACnB,oBAAqB,iDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,0BACb,kBAAmB,eACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,mBACX,YAAa,oBACb,kBAAmB,qBACnB,oBAAqB,+DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,iCACb,kBAAmB,cACnB,oBAAqB,qEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,uBACb,kBAAmB,mBACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,wBACb,kBAAmB,0BACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,eACb,kBAAmB,mBACnB,oBAAqB,wEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,UACb,kBAAmB,yBACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,eACb,kBAAmB,gBACnB,oBAAqB,6BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,eACb,kBAAmB,WACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,6BACb,kBAAmB,UACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,4BACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,mBACb,kBAAmB,UACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,kBACb,kBAAmB,YACnB,oBAAqB,2BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,8BACb,kBAAmB,sBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,sBACb,kBAAmB,oBACnB,oBAAqB,iCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,6BACb,kBAAmB,sBACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,qBACb,kBAAmB,0BACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAIA,CACI,UAAW,4BACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,QACX,YAAa,YACb,kBAAmB,UACnB,oBAAqB,wCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,iCACb,kBAAmB,mBACnB,oBAAqB,wBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,qBACb,kBAAmB,wBACnB,oBAAqB,2FACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,YACb,kBAAmB,2BACnB,oBAAqB,aACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,GACb,kBAAmB,MACnB,oBAAqB,8CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,WACnB,oBAAqB,iBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,yBACb,kBAAmB,UACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,aACb,kBAAmB,OACnB,oBAAqB,0EACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,qBACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,GACb,kBAAmB,uBACnB,oBAAqB,mCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,WACb,kBAAmB,iBACnB,oBAAqB,gFACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,WACb,kBAAmB,QACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,0BACb,kBAAmB,SACnB,oBAAqB,mBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,aACb,kBAAmB,QACnB,oBAAqB,kDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,yBACb,kBAAmB,YACnB,oBAAqB,iBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,2BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,eACb,kBAAmB,8BACnB,oBAAqB,oDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,uBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,gBACb,kBAAmB,mBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,sBACX,YAAa,oBACb,kBAAmB,oBACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,4BACb,kBAAmB,SACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,qCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,YACX,YAAa,cACb,kBAAmB,QACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,eACb,kBAAmB,oCACnB,oBAAqB,oDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,GACb,kBAAmB,wBACnB,oBAAqB,8CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,uBACb,kBAAmB,YACnB,oBAAqB,2EACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,kCACnB,oBAAqB,+EACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,uBACb,kBAAmB,YACnB,oBAAqB,wCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,YACb,kBAAmB,eACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,qDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,WACb,kBAAmB,qBACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,GACb,kBAAmB,qBACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,kBACb,kBAAmB,QACnB,oBAAqB,iBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,sBACb,kBAAmB,YACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,sBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,kCACb,kBAAmB,sBACnB,oBAAqB,uCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,gBACnB,oBAAqB,0BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,kBACX,YAAa,GACb,kBAAmB,mBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,6BACb,kBAAmB,UACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,oBACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,mBACb,kBAAmB,eACnB,oBAAqB,oDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,4BACnB,oBAAqB,qFACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,wBACb,kBAAmB,WACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,GACb,kBAAmB,uBACnB,oBAAqB,wCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,4CACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,oDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,YACb,kBAAmB,YACnB,oBAAqB,oCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,wBACb,kBAAmB,yBACnB,oBAAqB,8CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,gCACb,kBAAmB,sCACnB,oBAAqB,gBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,WACb,kBAAmB,SACnB,oBAAqB,qDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,cACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,YACnB,oBAAqB,6BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,WACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,mBACX,YAAa,GACb,kBAAmB,oBACnB,oBAAqB,0BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,YACb,kBAAmB,OACnB,oBAAqB,oBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,WACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,YACb,kBAAmB,QACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,mBACX,YAAa,GACb,kBAAmB,6BACnB,oBAAqB,0BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,cACb,kBAAmB,QACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,2BACb,kBAAmB,iCACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,MACX,YAAa,GACb,kBAAmB,KACnB,oBAAqB,aACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,aACb,kBAAmB,4BACnB,oBAAqB,0BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,WACb,kBAAmB,OACnB,oBAAqB,yDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,WACb,kBAAmB,kBACnB,oBAAqB,6DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,oCACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,WACX,YAAa,4BACb,kBAAmB,kBACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,8BACb,kBAAmB,2BACnB,oBAAqB,wCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,YACb,kBAAmB,OACnB,oBAAqB,8DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,gCACb,kBAAmB,gBACnB,oBAAqB,sBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,oBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,mBACX,YAAa,iBACb,kBAAmB,yBACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,cACb,kBAAmB,yBACnB,oBAAqB,8CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,aACb,kBAAmB,iBACnB,oBAAqB,gBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,WACb,kBAAmB,OACnB,oBAAqB,2CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,SACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,wBACb,kBAAmB,SACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,kBACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,OACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,6BACb,kBAAmB,gBACnB,oBAAqB,eACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,UACb,kBAAmB,WACnB,oBAAqB,+DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,sBACb,kBAAmB,uBACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,WACnB,oBAAqB,4DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,GACb,kBAAmB,SACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,cACb,kBAAmB,SACnB,oBAAqB,qDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,sBACb,kBAAmB,YACnB,oBAAqB,wBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,0CACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,SACX,YAAa,cACb,kBAAmB,oBACnB,oBAAqB,mCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,GACb,kBAAmB,sBACnB,oBAAqB,4DACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,oBACb,kBAAmB,WACnB,oBAAqB,4BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,aACb,kBAAmB,iBACnB,oBAAqB,4CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,YACnB,oBAAqB,sFACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,6BACX,YAAa,mCACb,kBAAmB,0BACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,UACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,WACb,kBAAmB,UACnB,oBAAqB,mDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,8BACb,kBAAmB,YACnB,oBAAqB,yEACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,GACb,kBAAmB,WACnB,oBAAqB,yBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,YACb,kBAAmB,SACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,YACb,kBAAmB,mBACnB,oBAAqB,qCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,YACb,kBAAmB,iBACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,yBACnB,oBAAqB,8BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,iCACb,kBAAmB,0BACnB,oBAAqB,0CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,wBACb,kBAAmB,SACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,mBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,6BACb,kBAAmB,+BACnB,oBAAqB,uBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,YACb,kBAAmB,sBACnB,oBAAqB,+BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,2BACb,kBAAmB,2BACnB,oBAAqB,kDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,UACX,YAAa,0BACb,kBAAmB,mBACnB,oBAAqB,8BACrB,SAAU,CAAA,EACV,YAAa,CACjB,EAGA,CACI,UAAW,+CACX,YAAa,GACb,kBAAmB,GACnB,oBAAqB,GACrB,YAAa,EACb,SAAU,CAAA,CACd,EACA,CACI,UAAW,aACX,YAAa,eACb,kBAAmB,UACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,QACX,YAAa,YACb,kBAAmB,SACnB,oBAAqB,GACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,oBACX,YAAa,kBACb,kBAAmB,MACnB,oBAAqB,yCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,SACX,YAAa,YACb,kBAAmB,SACnB,oBAAqB,qDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,WACX,YAAa,uBACb,kBAAmB,2BACnB,oBAAqB,sDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,mBACb,kBAAmB,UACnB,oBAAqB,mCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,kDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,QACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,GACb,kBAAmB,UACnB,oBAAqB,uGACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,cACX,YAAa,GACb,kBAAmB,wBACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,iBACX,YAAa,iCACb,kBAAmB,0BACnB,oBAAqB,kFACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,gBACX,YAAa,GACb,kBAAmB,wBACnB,oBAAqB,qBACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,OACX,YAAa,YACb,kBAAmB,wBACnB,oBAAqB,6CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,aACX,YAAa,GACb,kBAAmB,qBACnB,oBAAqB,gDACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,wBACb,kBAAmB,SACnB,oBAAqB,sCACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,eACX,YAAa,GACb,kBAAmB,aACnB,oBAAqB,+CACrB,SAAU,CAAA,EACV,YAAa,CACjB,EACA,CACI,UAAW,YACX,YAAa,iCA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","sources":["<anon>","index.ts","src/add-vocabulary.ts","src/vocabulary.ts","src/home-menu.ts","src/show-vocabulary.ts","src/vocabulary-training.ts","src/inflect-vocabulary.ts"],"sourcesContent":["\nconst $5510b14661877595$export$acdc19bbe942e978 = [\n    // --- Unit 1 ---\n    {\n        latinWord: '^con^Lektion 1: De schola',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'schola f.',\n        inflections: '2.F. scholae',\n        germanTranslation: 'Schule',\n        relatedForeignWords: 'engl. school, ital. scuola, span. escuela',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'hic (Adv.)',\n        inflections: '',\n        germanTranslation: 'hier',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'sedit',\n        inflections: 'sedi, sessum*',\n        germanTranslation: 'er/sie/es sitzt',\n        relatedForeignWords: 'vgl. Sediment (= Ablagerung), Re-sidenz (= Wohnsitz)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'amica f.',\n        inflections: '2.F. amicae',\n        germanTranslation: 'Freundin',\n        relatedForeignWords: 'frz. amie, ital. amica, span. amiga',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'meus/a/um',\n        inflections: '',\n        germanTranslation: 'mein',\n        relatedForeignWords: \"besitzanzeigendes F\\xfcrwort (Possessivpronomen) frz. est, ital. \\xe8, span. es\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'disciplina f.',\n        inflections: '2.F. disciplinae',\n        germanTranslation: \"Sch\\xfclerin\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'bonus/a/um',\n        inflections: '',\n        germanTranslation: 'gut',\n        relatedForeignWords: \"frz. bon, ital. buono, span. bueno; vgl. Bona-\\xd6l; der Bonus\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'semper (Adv.)',\n        inflections: '',\n        germanTranslation: 'immer',\n        relatedForeignWords: 'ital. sempre, span. siempre; vgl. Semperit = \"Es/Er geht immer\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'sunt',\n        inflections: 'fui, -',\n        germanTranslation: 'sie sind',\n        relatedForeignWords: 'frz. sont, ital. sono, span. son',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'et',\n        inflections: '',\n        germanTranslation: 'und',\n        relatedForeignWords: 'frz. et, ital. e',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'amicus m.',\n        inflections: '2.F. amici',\n        germanTranslation: 'Freund',\n        relatedForeignWords: 'frz. ami, ital. amico, span. amigo',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'sed',\n        inflections: '',\n        germanTranslation: '1) aber; 2) sondern',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'discipulus m.',\n        inflections: '2.F. discipuli',\n        germanTranslation: \"Sch\\xfcler\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'malus/a/um',\n        inflections: '',\n        germanTranslation: 'schlecht',\n        relatedForeignWords: 'span. malo;(a); vgl. Bonus-Malus-System',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'laetus/a/um',\n        inflections: '',\n        germanTranslation: \"froh, fr\\xf6hlich\",\n        relatedForeignWords: 'ital. lieto; vgl. die Vornamen Laetitia und Letizia',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'saepe (Adv.)',\n        inflections: '',\n        germanTranslation: 'oft',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ridet',\n        inflections: 'risi, risum',\n        germanTranslation: 'er/sie/es lacht',\n        relatedForeignWords: 'frz. rire, ital. ridere, span. reir; engl. ridiculous',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'cur?',\n        inflections: '',\n        germanTranslation: 'warum?',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nunc (Adv.)',\n        inflections: '',\n        germanTranslation: 'jetzt, nun',\n        relatedForeignWords: 'vgl. engl. now',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'non',\n        inflections: '',\n        germanTranslation: 'nicht',\n        relatedForeignWords: 'frz. + ital. non, span. no',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'pensum n.',\n        inflections: '2.F. pensi',\n        germanTranslation: 'Aufgabe',\n        relatedForeignWords: 'vgl. das Arbeitspensum',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'magnus/a/um',\n        inflections: '',\n        germanTranslation: \"gro\\xdf\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'itaque',\n        inflections: '',\n        germanTranslation: 'deshalb, daher',\n        relatedForeignWords: 'vgl. Magnum (Eis; Schusswaffe)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'gaudet',\n        inflections: 'gavisus sum',\n        germanTranslation: 'er/sie/es freut sich',\n        relatedForeignWords: \"vgl. die Gaudi (= Spa\\xdf)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'diu (Adv.)',\n        inflections: '',\n        germanTranslation: 'lange',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'laborat',\n        inflections: 'laboravi, laboratum',\n        germanTranslation: 'er/sie/es arbeitet',\n        relatedForeignWords: 'vgl. engl. lab(o)ur; das Labor',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'libenter (Adv.)',\n        inflections: '',\n        germanTranslation: 'gern',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'interrogat',\n        inflections: 'interrogavi, -atum',\n        germanTranslation: 'er/sie/es fragt',\n        relatedForeignWords: 'vgl. engl. interrogation mark (= Fragezeichen)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'respondet',\n        inflections: 'respondi, responsum',\n        germanTranslation: 'er/sie/es antwortet',\n        relatedForeignWords: 'ital. rispondere; vgl. Kor-respondent (= Briefeschreiber)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'tum (= tunc)',\n        inflections: '',\n        germanTranslation: 'dann, damals',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'clamat',\n        inflections: 'clamavi, clamatum',\n        germanTranslation: 'er/sie/es ruft, schreit',\n        relatedForeignWords: 'ital. chiamare, span. llamar; vgl. re-Klamieren, Re-Klamation',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'laudat',\n        inflections: 'laudavi, laudatum',\n        germanTranslation: 'er/sie/es lobt',\n        relatedForeignWords: 'vgl. Laudatio (= Lobrede)',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 2 ---\n    {\n        latinWord: '^con^Lektion 2: Quid grammaticus docet?',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'quid?',\n        inflections: '',\n        germanTranslation: 'was?',\n        relatedForeignWords: 'vgl. doziere, Dozent (= Hochschullehrer)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'docet',\n        inflections: 'docui, doctum',\n        germanTranslation: 'er/sie/es lehrt, unterrichtet',\n        relatedForeignWords: 'vgl. doziere, Dozent (= Hochschullehrer)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ubi?',\n        inflections: '',\n        germanTranslation: 'wo?',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iam',\n        inflections: '',\n        germanTranslation: 'schon',\n        relatedForeignWords: 'span. ya',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'exspectat',\n        inflections: 'exspectavi, -atum',\n        germanTranslation: 'er/sie/es erwartet',\n        relatedForeignWords: 'engl. to expect',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'intrat',\n        inflections: 'intravi, intratum',\n        germanTranslation: 'er/sie/es tritt ein, betritt',\n        relatedForeignWords: 'engl. to enter, frz. entrer, ital. entrare, span. entrar, ital. salve',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'salve!/salvete!',\n        inflections: '',\n        germanTranslation: \"sei/seid gegr\\xfc\\xdft!\",\n        relatedForeignWords: 'ital. salve',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'magister m.',\n        inflections: '2.F. magistri',\n        germanTranslation: 'Lehrer',\n        relatedForeignWords: \"frz. ma\\xeetre; vgl. Maestro (= Dirigent)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'amat',\n        inflections: 'amavi, amatum',\n        germanTranslation: 'er/sie/es liebt',\n        relatedForeignWords: 'vgl. Amateur (= \"Liebhaber\", <-> Profi)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'non solum - sed etiam',\n        inflections: '',\n        germanTranslation: 'nicht nur - sondern auch',\n        relatedForeignWords: '<-> iam =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'etiam',\n        inflections: '',\n        germanTranslation: 'auch, sogar',\n        relatedForeignWords: '<-> iam =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'lingua f.',\n        inflections: '2.F. linguae',\n        germanTranslation: '1) Zunge; 2) Sprache',\n        relatedForeignWords: 'engl. language, frz. langue, ital. lingua',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Latinus/a/um',\n        inflections: '(Adjektiv!)',\n        germanTranslation: 'lateinisch',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Graecus/a/um',\n        inflections: '(Adjektiv!)',\n        germanTranslation: 'griechisch',\n        relatedForeignWords: 'engl. Greek, Greece, span. griego',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'liber m.',\n        inflections: '2.F. libri',\n        germanTranslation: 'Buch',\n        relatedForeignWords: 'ital. + span. libro; vgl. engl. library (= Bibliothek)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quam',\n        inflections: '',\n        germanTranslation: 'wie',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'pulcher/chra/chrum',\n        inflections: '',\n        germanTranslation: \"sch\\xf6n, h\\xfcbsch\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'verbum n.',\n        inflections: '2.F. verbi',\n        germanTranslation: 'Wort',\n        relatedForeignWords: 'vgl. verbal (= durch Worte)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'secum',\n        inflections: '',\n        germanTranslation: 'mit sich, bei sich',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'cogitat',\n        inflections: 'cogitavi, cogitatum',\n        germanTranslation: 'er/sie/es denkt',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'puer m.',\n        inflections: '2.F. pueri',\n        germanTranslation: 'Bub',\n        relatedForeignWords: 'pueril (= kindlich)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'puella f.',\n        inflections: '2.F. puellae',\n        germanTranslation: \"M\\xe4dchen\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quod',\n        inflections: '',\n        germanTranslation: 'weil',\n        relatedForeignWords: '<-> quid =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quis?',\n        inflections: '',\n        germanTranslation: 'wer?',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'habet',\n        inflections: 'habui, habitum',\n        germanTranslation: 'er/sie/es hat',\n        relatedForeignWords: 'engl. to have, frz. avoir, ital. avere, span. haber',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'spectat',\n        inflections: 'spectavi, -atum',\n        germanTranslation: 'er/sie/es schaut an, er/sie/es betrachtet',\n        relatedForeignWords: \"vgl. Spektakel, spektakul\\xe4r; engl. spectator (= Zuschauer)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'oculus m.',\n        inflections: '2.F. oculi',\n        germanTranslation: 'Auge',\n        relatedForeignWords: \"vgl. Mon-okel (= Ein\\xadglas), Okular\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'tuus/a/um',\n        inflections: '',\n        germanTranslation: 'dein',\n        relatedForeignWords: 'ital. tuo, span. tu',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'monet',\n        inflections: 'monui, monitum',\n        germanTranslation: 'er/sie/es (er)mahnt',\n        relatedForeignWords: \"vgl. Monitor (= elektronisches Anzeigeger\\xe4t)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iratus/a/um',\n        inflections: '',\n        germanTranslation: \"zornig, erz\\xfcrnt\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 3 ---\n    {\n        latinWord: '^con^Lektion 3: Quam pulchra Roma est!',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'Roma f.',\n        inflections: '2.F. Romae',\n        germanTranslation: 'Rom',\n        relatedForeignWords: \"vgl. perforieren (= durchl\\xf6chern), per\\u2026 (Mail, Post etc.)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: \"per (Pr\\xe4p. + Akk.)\",\n        inflections: '',\n        germanTranslation: 'durch',\n        relatedForeignWords: \"vgl. perforieren (= durchl\\xf6chern), per\\u2026 (Mail, Post etc.)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'via f.',\n        inflections: '2.F. viae',\n        germanTranslation: \"Weg, Stra\\xdfe\",\n        relatedForeignWords: \"ital. via, span. v\\xeda; vgl. Viadukt (= Br\\xfccke \\xfcber ein Tal)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ambulo, -as',\n        inflections: 'ambulavi, ambulatum',\n        germanTranslation: 'gehen, spazieren',\n        relatedForeignWords: 'vgl. Ambulatorium, Ambulanz (siehe unten)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'multi/ae/a (Plural)',\n        inflections: '',\n        germanTranslation: 'viele',\n        relatedForeignWords: 'vgl. Multivitaminsoft, Multitasking, Multitalent',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'multum (n. Sg.)',\n        inflections: '',\n        germanTranslation: 'viel',\n        relatedForeignWords: 'ital. molto',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'aedificium n.',\n        inflections: '2.F. aedificii',\n        germanTranslation: \"Geb\\xe4ude\",\n        relatedForeignWords: 'ital. + span. edificio',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'video, -es',\n        inflections: 'vidi, visum',\n        germanTranslation: 'sehen',\n        relatedForeignWords: 'ital. vedere; vgl. das Video, Videorekorder',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'et',\n        inflections: '',\n        germanTranslation: 'und',\n        relatedForeignWords: 'z. B. Quintus Gaiusque = Quintus et Gaius',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'clarus/a/um',\n        inflections: '',\n        germanTranslation: \"1) ber\\xfchmt; 2) hell\",\n        relatedForeignWords: 'vgl. klar; Clara (= \"die Ber\\xfchmte\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'monstro, -as',\n        inflections: 'monstravi, monstratum',\n        germanTranslation: 'zeigen',\n        relatedForeignWords: \"vgl. Monstranz (= Beh\\xe4lter, in dem die Hostie gezeigt wird)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'spectaculum n.',\n        inflections: '2.F. spectaculi',\n        germanTranslation: 'Schauspiel',\n        relatedForeignWords: 'vgl. Spektakel; <-> spectat =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ibi',\n        inflections: '',\n        germanTranslation: 'dort',\n        relatedForeignWords: '<-> ubi =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'statua f.',\n        inflections: '2.F. statuae',\n        germanTranslation: 'Statue',\n        relatedForeignWords: 'ital. statua, span. estatua',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vir m.',\n        inflections: '2.F. viri',\n        germanTranslation: 'Mann',\n        relatedForeignWords: \"vgl. Triumvirat (= Dreim\\xe4nnerbund); viril (= m\\xe4nnlich)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: '-ne',\n        inflections: '',\n        germanTranslation: \"(Fragepartikel, un\\xfcbersetzt)\",\n        relatedForeignWords: 'z. B. Amasne Iuliam? = \"Liebst du Julia?\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'certe (Adv.)',\n        inflections: '',\n        germanTranslation: 'sicherlich',\n        relatedForeignWords: 'ital. certo, span. cierto, engl. certainly',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'forum n.',\n        inflections: '2.F. fori',\n        germanTranslation: 'Forum; Marktplatz',\n        relatedForeignWords: 'vgl. Forensik = Gerichtsmedizin (das Gericht tagte am Forum!)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Romanus/a/um',\n        inflections: '',\n        germanTranslation: \"r\\xf6misch\",\n        relatedForeignWords: 'engl. Roman; vgl. Romanisierung',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'templum n.',\n        inflections: '2.F. templi',\n        germanTranslation: 'Tempel',\n        relatedForeignWords: 'frz. temple, ital. tempio, span. templo',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'tam',\n        inflections: '',\n        germanTranslation: 'so',\n        relatedForeignWords: '<-> tum =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'deus m.',\n        inflections: '2.F. dei',\n        germanTranslation: 'Gott',\n        relatedForeignWords: 'frz. dieu, ital. dio, span. dios',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dea f.',\n        inflections: '2.F. deae',\n        germanTranslation: \"G\\xf6ttin\",\n        relatedForeignWords: \"frz. d\\xe9esse, ital. dea, span. diosa\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: \"ante (Pr\\xe4p. + Akk.)\",\n        inflections: '',\n        germanTranslation: 'vor',\n        relatedForeignWords: 'vgl. Antipasto (= Vorspeise), antizipieren (= vorwegnehmen)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: \"post (Pr\\xe4p. + Akk.)\",\n        inflections: '',\n        germanTranslation: 'nach; hinter',\n        relatedForeignWords: 'vgl. post mortem (= \"nach dem Tod\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'solum (Adv.)',\n        inflections: '',\n        germanTranslation: 'nur',\n        relatedForeignWords: \"ital. solo, span. s\\xf3lo; vgl. non solum - sed etiam\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: \"ad (Pr\\xe4p. + Akk.)\",\n        inflections: '',\n        germanTranslation: 'zu, an, bei',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 4 ---\n    {\n        latinWord: '^con^Lektion 4: De spectaculis',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: \"de (Pr\\xe4p. + Abl.)\",\n        inflections: '',\n        germanTranslation: \"1) von (... herab); 2) \\xfcber\",\n        relatedForeignWords: 'frz. de, ital. di, span. de',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: \"cum (Pr\\xe4p. + Abl.)\",\n        inflections: '',\n        germanTranslation: 'mit',\n        relatedForeignWords: 'ital. + span. con',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: \"sine (Pr\\xe4p. + Abl.)\",\n        inflections: '',\n        germanTranslation: 'ohne',\n        relatedForeignWords: 'frz. sons, ital. senza, span. sin',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'femina',\n        inflections: 'feminae* f.',\n        germanTranslation: 'Frau',\n        relatedForeignWords: 'vgl. Feministin, feminin',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'gaudium',\n        inflections: 'gaudii n.',\n        germanTranslation: 'Freude',\n        relatedForeignWords: 'vgl. \"Mordsgaudi\" (= ein riesiger Spa\\xdf)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'narro, -as',\n        inflections: 'narravi, narratum',\n        germanTranslation: \"erz\\xe4hlen\",\n        relatedForeignWords: 'span. narrar; vgl. engl. narrator',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Romani (Pl.)',\n        inflections: 'Romanorum m.',\n        germanTranslation: \"die R\\xf6mer\",\n        relatedForeignWords: 'engl. the Romans (\"die R\\xf6mer\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'copia',\n        inflections: 'copiae f.',\n        germanTranslation: 'Menge, Vorrat',\n        relatedForeignWords: 'ital. + span. copia; vgl. Kopie',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: \"e / ex (Pr\\xe4p. + Abl.)\",\n        inflections: '',\n        germanTranslation: 'aus, von',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'terra',\n        inflections: 'terrae f.',\n        germanTranslation: 'Land; Erde',\n        relatedForeignWords: \"vgl. Terrarium, Terrasse, Parterre (= Erdgescho\\xdf)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'alienus/a/um',\n        inflections: '',\n        germanTranslation: 'fremd',\n        relatedForeignWords: \"vgl. Aliens (= die Au\\xdferirdischen/Fremden)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'pugno, -as',\n        inflections: 'pugnavi, -atum',\n        germanTranslation: \"k\\xe4mpfen\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'neco, -as',\n        inflections: 'necavi, -atum',\n        germanTranslation: \"t\\xf6ten\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'placeo, -es',\n        inflections: 'placui, -itum',\n        germanTranslation: 'gefallen',\n        relatedForeignWords: 'frz. plaire, ital. piacere',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'novus/a/um',\n        inflections: '',\n        germanTranslation: 'neu',\n        relatedForeignWords: 'vgl. re-novieren (= erneuern), In-novation',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'alius/a/ud',\n        inflections: '',\n        germanTranslation: 'ein anderer',\n        relatedForeignWords: '<-> alienus/a/um =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'alius - alius',\n        inflections: '',\n        germanTranslation: 'der eine - der andere',\n        relatedForeignWords: 'z. B. alius interrogat, alius respondet =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'gladius',\n        inflections: 'gladii m.',\n        germanTranslation: 'Schwert',\n        relatedForeignWords: 'vgl. Gladiator (= \"Schwertk\\xe4mpfer\"), Gladiole',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'postremo (Adv.)',\n        inflections: '',\n        germanTranslation: \"schlie\\xdflich, endlich\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'supero, -as',\n        inflections: 'superavi, superatum',\n        germanTranslation: \"1) besiegen; 2) \\xfcbertreffen\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'si',\n        inflections: '',\n        germanTranslation: 'wenn, falls',\n        relatedForeignWords: 'span. si, ital. se',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'bene (Adv.)',\n        inflections: '',\n        germanTranslation: 'gut',\n        relatedForeignWords: 'frz. bien, ital. bene, span. bien; vgl. Benefizkonzert',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vita',\n        inflections: 'vitae f.',\n        germanTranslation: 'Leben',\n        relatedForeignWords: 'ital. vita, span. vida; vgl. Vitamine; vital (= lebendig)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dono, -as',\n        inflections: 'donavi, donatum',\n        germanTranslation: 'schenken',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: \"pro (Pr\\xe4p. + Abl.)\",\n        inflections: '',\n        germanTranslation: \"f\\xfcr\",\n        relatedForeignWords: \"Pro und Kontra (= F\\xfcr und Wider)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'suus/a/um',\n        inflections: '',\n        germanTranslation: 'sein, ihr',\n        relatedForeignWords: 'Possessivpronomen; ital. suo, span. su',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: \"a / ab (Pr\\xe4p. + Abl.)\",\n        inflections: '',\n        germanTranslation: 'von',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: \"prae (Pr\\xe4p. + Abl.)\",\n        inflections: '',\n        germanTranslation: 'vor',\n        relatedForeignWords: \"vgl. Pr\\xe4position (= Vorwort)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'neque (= nec)',\n        inflections: '',\n        germanTranslation: 'und nicht',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 5 ---\n    {\n        latinWord: '^con^Lektion 5: De thermis',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'mihi / tibi / sibi (Dativ)',\n        inflections: '',\n        germanTranslation: 'mir / dir / sich',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'me / te / se (Akkusativ)',\n        inflections: '',\n        germanTranslation: 'mich / dich / sich',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'delectare',\n        inflections: 'delecto 1, -avi, -atum',\n        germanTranslation: '(jemanden) erfreuen',\n        relatedForeignWords: 'sich an etwas delektieren (= erfreuen)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nonne?',\n        inflections: '',\n        germanTranslation: 'nicht?',\n        relatedForeignWords: 'aus: non-ne? (Frage)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ego / tu',\n        inflections: '',\n        germanTranslation: 'ich / du',\n        relatedForeignWords: '(siehe Grammatica); vgl. Egoist',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Graeci (Pl.)',\n        inflections: 'Graecorum m.',\n        germanTranslation: 'die Griechen',\n        relatedForeignWords: '<-> Graecus/a/um =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ita',\n        inflections: '',\n        germanTranslation: 'so',\n        relatedForeignWords: 'ita est = \"ja\" (w\\xf6rtlich?)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'inquit',\n        inflections: '',\n        germanTranslation: 'er/sie sagte',\n        relatedForeignWords: '(in die direkte Rede eingeschoben)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'num?',\n        inflections: '',\n        germanTranslation: 'etwa?',\n        relatedForeignWords: 'z. B. Num rides? = \"Lachst du etwa?\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vester/tra/trum',\n        inflections: '',\n        germanTranslation: 'euer, eure',\n        relatedForeignWords: \"franz. v\\xf4tre, ital. vostra/a\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quoque (nachgestellt)',\n        inflections: '',\n        germanTranslation: 'auch',\n        relatedForeignWords: 'z. B. etiam tu = tu quoque',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nobis / vobis (Dativ)',\n        inflections: '',\n        germanTranslation: 'uns / euch',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'noster/tra/trum',\n        inflections: '',\n        germanTranslation: 'unser, unsere',\n        relatedForeignWords: \"franz. n\\xf4tre; vgl. Pater noster =\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'in (+ Abl.)',\n        inflections: '',\n        germanTranslation: 'in, auf',\n        relatedForeignWords: 'in aedificio (WO?) = \"im Geb\\xe4ude\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'animus',\n        inflections: 'animi m.',\n        germanTranslation: '1) Sinn, Geist; 2) Mut',\n        relatedForeignWords: 'vgl. animieren (= \"anregen\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'in animo habere',\n        inflections: '',\n        germanTranslation: 'vorhaben',\n        relatedForeignWords: 'w\\xf6rtl.: \"im Sinn haben\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nos / vos (Nom. + Akk.)',\n        inflections: '',\n        germanTranslation: 'wir; uns / ihr; euch',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quis nostrum',\n        inflections: '',\n        germanTranslation: 'wer von uns',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quis vestrum',\n        inflections: '',\n        germanTranslation: 'wer von euch',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nobiscum / vobiscum',\n        inflections: '',\n        germanTranslation: 'mit uns / mit euch',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'in (+ Akk.)',\n        inflections: '',\n        germanTranslation: 'in, nach; gegen',\n        relatedForeignWords: 'in aedificium (WOHIN?) = \"\"ins Geb\\xe4ude\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'manere',\n        inflections: 'maneo 2, mansi, mansum',\n        germanTranslation: 'bleiben',\n        relatedForeignWords: 'vgl. permanent (= dauerhaft)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'properare',\n        inflections: 'propero 1, -avi, -atum',\n        germanTranslation: 'eilen',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'aqua',\n        inflections: 'aquae f.',\n        germanTranslation: 'Wasser',\n        relatedForeignWords: 'ital. acqua, span. agua; vgl. Aquarium',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iterum (Adv.)',\n        inflections: '',\n        germanTranslation: 'wieder(um)',\n        relatedForeignWords: 'Eselsbr\\xfccke: \"iterum = wiederum\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'minime (Adv.)',\n        inflections: '',\n        germanTranslation: 'keineswegs; nein',\n        relatedForeignWords: 'vgl. minimal = sehr klein, sehr gering',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'licet (nur 3.P. Sg.)',\n        inflections: '',\n        germanTranslation: \"es ist erlaubt, es ist m\\xf6glich\",\n        relatedForeignWords: 'vgl. die Lizenz = Erlaubnis, Berechtigung',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'otium',\n        inflections: 'otii n.',\n        germanTranslation: \"Freizeit, Erholung, Mu\\xdfe\",\n        relatedForeignWords: 'ital. ozio, span. ocio',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'sub (+ Akk.)',\n        inflections: '',\n        germanTranslation: 'unter (...hin)',\n        relatedForeignWords: 'vgl. Subvention = finanzielle Hilfe',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'terrere',\n        inflections: 'terreo 2, terrui, territum',\n        germanTranslation: '(jemanden) erschrecken',\n        relatedForeignWords: 'vgl. engl. subdue, submarine; vgl. jemanden terrorisieren, Terrorist',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 6 ---\n    {\n        latinWord: '^con^Lektion 6: De Romulo et Remo',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'filia',\n        inflections: 'filiae f.',\n        germanTranslation: 'Tochter',\n        relatedForeignWords: 'vgl. Filiale (-> Tochterunternehmen)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'tamen',\n        inflections: '',\n        germanTranslation: 'dennoch, trotzdem',\n        relatedForeignWords: '<-> tam =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'duo/duae/duo',\n        inflections: '',\n        germanTranslation: 'zwei',\n        relatedForeignWords: 'ital. due, span. dos; vgl. Duett, Duo',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'filius',\n        inflections: 'filii m.',\n        germanTranslation: 'Sohn',\n        relatedForeignWords: 'frz. fils, ital. figlio',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'parvus/a/um',\n        inflections: '',\n        germanTranslation: 'klein',\n        relatedForeignWords: '<-> magnus =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'paulo post',\n        inflections: '',\n        germanTranslation: \"wenig sp\\xe4ter\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'post (nach Abl.)',\n        inflections: '',\n        germanTranslation: \"sp\\xe4ter\",\n        relatedForeignWords: '<-> post + Akk. =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'appropinquare',\n        inflections: 'appropinquo 1, -avi, -atum',\n        germanTranslation: \"sich n\\xe4hern\",\n        relatedForeignWords: 'engl. to approach',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'liberi (Pl.)',\n        inflections: 'liberorum m.',\n        germanTranslation: 'die Kinder',\n        relatedForeignWords: '<-> libri, librorum =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'autem',\n        inflections: '',\n        germanTranslation: 'aber',\n        relatedForeignWords: 'immer nachgestellt: ego autem = sed ego (\"aber ich\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'deinde',\n        inflections: '',\n        germanTranslation: 'dann',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'portare',\n        inflections: 'porto 1, portavi, -atum',\n        germanTranslation: 'tragen, bringen',\n        relatedForeignWords: 'franz. porter, ital. portare; vgl. trans-portieren, ap-portieren (=heranbringen\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'annus',\n        inflections: 'anni m.',\n        germanTranslation: 'Jahr',\n        relatedForeignWords: \"frz. an, ital. anno, span. a\\xf1o; vgl. Annalen (= Jahrb\\xfccher)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'oppidum',\n        inflections: 'oppidi n.',\n        germanTranslation: 'Stadt',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'aedificare',\n        inflections: 'aedifico 1, -avi, -atum',\n        germanTranslation: 'erbauen',\n        relatedForeignWords: \"frz. \\xe9difier, ital. edificare; vgl. aedificium =\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'regnare',\n        inflections: 'regno 1, regnavi, -atum',\n        germanTranslation: 'herrschen, regieren',\n        relatedForeignWords: \"frz. r\\xe9gner, ital. regnare, span. reinar, engl. to reign\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'posse',\n        inflections: 'possum, potui, -',\n        germanTranslation: \"k\\xf6nnen\",\n        relatedForeignWords: '(siehe Grammatica); vgl. engl. possible',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'sex',\n        inflections: '',\n        germanTranslation: 'sechs',\n        relatedForeignWords: 'vgl. Sextett',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'duodecim',\n        inflections: '',\n        germanTranslation: \"zw\\xf6lf\",\n        relatedForeignWords: \"ital. dodici; vgl. das Dutzend (= zw\\xf6lf St\\xfcck)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dis = deis',\n        inflections: '(3./6.F. Pl. m.)',\n        germanTranslation: \"den G\\xf6ttern\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'di = dei (= dii)',\n        inflections: '(1.F. Pl. m.)',\n        germanTranslation: \"die G\\xf6tter\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'gratus/a/um',\n        inflections: '',\n        germanTranslation: '1) dankbar 2) lieb, angenehm',\n        relatedForeignWords: 'ital. grato',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'esse',\n        inflections: 'sum, fui, -',\n        germanTranslation: '(zu) sein',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'auxilium',\n        inflections: 'auxilii n.',\n        germanTranslation: 'Hilfe',\n        relatedForeignWords: \"span. auxilio; vgl. engl. auxiliary verbs (= Hilfszeitw\\xf6rter)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nonnulli/ae/a (Pl.)',\n        inflections: '',\n        germanTranslation: 'einige',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'magnificus/a/um',\n        inflections: '',\n        germanTranslation: \"gro\\xdfartig, pr\\xe4chtig\",\n        relatedForeignWords: \"frz. magnifique, ital. magnifico, span. magn\\xedfico\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'trans (+ Akk.)',\n        inflections: '',\n        germanTranslation: \"\\xfcber; jenseits von\",\n        relatedForeignWords: 'vgl. Transit, Transfer, Transformator, \"Transdanubien\"',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 7 ---\n    {\n        latinWord: '^con^Lektion 7: De Romanis et Sabinis',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'venire',\n        inflections: 'venio 4, veni, ventum',\n        germanTranslation: 'kommen',\n        relatedForeignWords: 'frz. venir, ital. venire, span. venir',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'habitare',\n        inflections: 'habito 1, -avi, -atum',\n        germanTranslation: 'wohnen; bewohnen',\n        relatedForeignWords: 'frz. habiter, ital. abitare, span. habitar',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ut',\n        inflections: '',\n        germanTranslation: '1) wie; 2) als',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'apud (+ Akk.)',\n        inflections: '',\n        germanTranslation: 'bei',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'legere',\n        inflections: 'lego 3, legi, lectum',\n        germanTranslation: 'lesen',\n        relatedForeignWords: \"ital. leggere; vgl. Lekt\\xfcre, Legende\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'consilium',\n        inflections: 'consilii n.',\n        germanTranslation: 'Plan, Beschluss; Rat',\n        relatedForeignWords: 'frz. conseil, ital. consiglio, span. consejo',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'capere',\n        inflections: 'capio M, cepi, captum',\n        germanTranslation: '1) fassen, ergreifen; 2) fangen; 3) nehmen',\n        relatedForeignWords: 'vgl. S. 53f; ital. capire; vgl. kapern, kapieren (= verstehen)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nuntius',\n        inflections: 'nuntii m.',\n        germanTranslation: 'Bote; Nachricht',\n        relatedForeignWords: \"vgl. Nuntius (= p\\xe4pstlicher Botschafter)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'populus',\n        inflections: 'populi m.',\n        germanTranslation: 'Volk',\n        relatedForeignWords: \"vgl. popul\\xe4r (= beim Volk beliebt), Populismus\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'mittere',\n        inflections: 'mitto 3, misi, missum',\n        germanTranslation: 'schicken',\n        relatedForeignWords: 'vgl. Missionar (= einer, der ausgeschickt wurde)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dicere',\n        inflections: 'dico 3, dixi, dictum',\n        germanTranslation: '1) sagen; 2) nennen',\n        relatedForeignWords: 'vgl. Diktat; Diktion (= Ausdrucksweise)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'parare',\n        inflections: 'paro 1, paravi, -atum',\n        germanTranslation: '1) vorbereiten, bereiten; 2) erwerben',\n        relatedForeignWords: 'vgl. etwas parat haben (= etwas vorbereitet haben)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'audire',\n        inflections: 'audio 4, audivi, -itum',\n        germanTranslation: \"h\\xf6ren\",\n        relatedForeignWords: \"vgl. Audio-Datei, Audienz; Auditorium (= H\\xf6rsaal)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nam',\n        inflections: '',\n        germanTranslation: \"denn, n\\xe4mlich\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: \"dum (+ Pr\\xe4sens)\",\n        inflections: '',\n        germanTranslation: \"w\\xe4hrend\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'subito (Adv.)',\n        inflections: '',\n        germanTranslation: \"pl\\xf6tzlich\",\n        relatedForeignWords: '<-> ital. subito = \"sofort\"!',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'rapere',\n        inflections: 'rapio M, rapui, raptum',\n        germanTranslation: 'rauben',\n        relatedForeignWords: 'frz. ravir, ital. rapire',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'domum',\n        inflections: '',\n        germanTranslation: 'nach Hause',\n        relatedForeignWords: '<-> domum =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'arma (Pl.)',\n        inflections: 'armorum n.',\n        germanTranslation: 'Waffen',\n        relatedForeignWords: 'frz. arme, ital. + span. arma; vgl. Armee, Alarm (aus \"Ad arma!\" = \"Zu den Waffen!\"), Armada',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'adiuvare',\n        inflections: 'adiuvo 1, -iuvi, -iutum',\n        germanTranslation: \"unterst\\xfctzen, helfen\",\n        relatedForeignWords: 'vgl. Adjutant (= Hilfsoffizier eines Kommandanten)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'relinquere',\n        inflections: 'relinquo 3, reliqui, relictum',\n        germanTranslation: \"1) verlassen; 2) zur\\xfccklassen\",\n        relatedForeignWords: \"vgl. Reliquien (= \\xdcberreste von Heiligen), Relikt (= \\xdcberbleibsel)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'domi',\n        inflections: '',\n        germanTranslation: 'zu Hause',\n        relatedForeignWords: '<-> domum =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iniuria',\n        inflections: 'iniuriae f.',\n        germanTranslation: 'Unrecht',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'tolerare',\n        inflections: 'tolero 1, -avi, -atum',\n        germanTranslation: 'ertragen',\n        relatedForeignWords: 'vgl. tolerant sein (= nachsichtig sein)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'bellum',\n        inflections: 'belli n.',\n        germanTranslation: 'Krieg',\n        relatedForeignWords: 'vgl. Rebellion, Duell (duellum = bellum)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'bellum gerere',\n        inflections: 'gerere 3, gessi, gestum',\n        germanTranslation: \"Krieg f\\xfchren\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'inter (+ Akk.)',\n        inflections: '',\n        germanTranslation: 'zwischen',\n        relatedForeignWords: 'vgl. international, Intercity-Zug, Intervall, interaktiv',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'contendere',\n        inflections: 'contendo 3, -tendi, -tentum',\n        germanTranslation: \"1) eilen; 2) k\\xe4mpfen\",\n        relatedForeignWords: 'Grundbedeutung: \"die Kr\\xe4fte anspannen\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'necesse est',\n        inflections: '',\n        germanTranslation: 'es ist notwendig',\n        relatedForeignWords: \"engl. necessary; vgl. das Necessaire (= Beh\\xe4lter mit Reisebedarf)\",\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 8 ---\n    {\n        latinWord: '^con^Lektion 8: De Lucretia',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'tres (m./f.)',\n        inflections: 'tria (n.)',\n        germanTranslation: 'drei',\n        relatedForeignWords: \"frz. trois, ital. tre, span. tres; vgl. Triathlon; Triumvirat (= Dreim\\xe4nnerbund)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'hora',\n        inflections: 'horae f.',\n        germanTranslation: 'Stunde',\n        relatedForeignWords: 'engl. hour, frz. heure, ital. ora, span. hora',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'facere',\n        inflections: 'facio M, feci, factum',\n        germanTranslation: 'tun, machen',\n        relatedForeignWords: 'frz. faire, ital. fare',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'neque - neque',\n        inflections: '(= nec - nec)',\n        germanTranslation: 'weder - noch',\n        relatedForeignWords: 'vgl. neque =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dormire',\n        inflections: 'dormio 4, -ivi, -itum',\n        germanTranslation: 'schlafen',\n        relatedForeignWords: 'frz. dormir, ital. dormire, span. dormir',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'solus/a/um',\n        inflections: '2.F. solius, 3.F. soli',\n        germanTranslation: 'allein',\n        relatedForeignWords: 'ital. + span. solo/a; vgl. Solo, Solist',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'duo/duae/duo',\n        inflections: '',\n        germanTranslation: 'zwei',\n        relatedForeignWords: '(siehe Grammatica); ital. due; vgl. Duett, Duo',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'unus/a/um',\n        inflections: '2.F. unius, 3.F. uni',\n        germanTranslation: '1) ein; 2) einzig',\n        relatedForeignWords: \"frz. un, ital. uno, span. un; Unikat (= Einzelst\\xfcck)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'primus/a/um',\n        inflections: '',\n        germanTranslation: 'der erste',\n        relatedForeignWords: \"ital. primo; vgl. Primel, Primat, prima, prim\\xe4r\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'castra (Pl.)',\n        inflections: 'castrorum n.',\n        germanTranslation: 'das Lager (Sg.)',\n        relatedForeignWords: 'vgl. Kastell (= kleines Lager), engl. castle',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'resistere',\n        inflections: 'resisto 3, restiti, -',\n        germanTranslation: 'sich widersetzen, Widerstand leisten',\n        relatedForeignWords: \"engl. to resist; vgl. resistent (= widerstandsf\\xe4hig)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'committere',\n        inflections: 'committo 3, commisi, commissum',\n        germanTranslation: 'begehen (ein Verbrechen); beginnen (einen Krieg)',\n        relatedForeignWords: 'engl. to commit (a crime)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nisi',\n        inflections: '',\n        germanTranslation: 'wenn nicht, falls nicht',\n        relatedForeignWords: '<-> si =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'parere',\n        inflections: 'pareo 2, parui, -',\n        germanTranslation: 'gehorchen',\n        relatedForeignWords: 'vgl. parieren; <-> parare 1 =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'servus',\n        inflections: 'servi m.',\n        germanTranslation: 'Sklave',\n        relatedForeignWords: 'Servus! (erg. sum) = \"Ich bin dein Diener\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'non iam',\n        inflections: '',\n        germanTranslation: 'nicht mehr',\n        relatedForeignWords: '<-> iam =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'culpa',\n        inflections: 'culpae f.',\n        germanTranslation: 'Schuld',\n        relatedForeignWords: 'ital. colpa, span. culpa',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nullus/a/um',\n        inflections: '2.F. nullius, 3.F. nulli',\n        germanTranslation: 'kein',\n        relatedForeignWords: 'vgl. Null; <-> nonnulli =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'exemplum',\n        inflections: 'exempli n.',\n        germanTranslation: 'Beispiel',\n        relatedForeignWords: 'engl. for example (\"zum Beispiel\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'maxime (Adv.)',\n        inflections: '',\n        germanTranslation: 'sehr; am meisten',\n        relatedForeignWords: 'vgl. maximal',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'familia',\n        inflections: 'familiae f.',\n        germanTranslation: 'Familie',\n        relatedForeignWords: 'engl. family, frz. famille, ital. famiglia',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'expellere',\n        inflections: 'expello 3, expuli, expulsum',\n        germanTranslation: '1) vertreiben; 2) verjagen',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 9 ---\n    {\n        latinWord: '^con^Lektion 9: Quem Romani maxime timent?',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'quem?',\n        inflections: '',\n        germanTranslation: 'wen?',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'timere',\n        inflections: 'timeo 2, timui, -',\n        germanTranslation: \"f\\xfcrchten; sich f\\xfcrchten\",\n        relatedForeignWords: 'ital. temere, span. temer',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Galli',\n        inflections: 'Gallorum m.',\n        germanTranslation: 'die Gallier (= Kelten)',\n        relatedForeignWords: 'frz. Gaulois',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'flumen',\n        inflections: 'fluminis n.',\n        germanTranslation: 'Fluss',\n        relatedForeignWords: 'ital. fiume',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'miles',\n        inflections: 'militis m.',\n        germanTranslation: 'Soldat',\n        relatedForeignWords: \"vgl. Milit\\xe4r\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'fugere (+ Akk.)',\n        inflections: 'fugio M, fugi, -',\n        germanTranslation: \"fl\\xfcchten (vor), fliehen\",\n        relatedForeignWords: \"vgl. Zentrifuge, Refugium (= R\\xfcckzugsort)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'occupare',\n        inflections: 'occupo 1, -avi, -atum',\n        germanTranslation: 'besetzen',\n        relatedForeignWords: 'frz. occuper, ital. occupare; vgl. okkupieren',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'delere',\n        inflections: 'deleo 2, delevi, deletum',\n        germanTranslation: \"zerst\\xf6ren\",\n        relatedForeignWords: 'vgl. engl. to delete = \"l\\xf6schen\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'oppugnare',\n        inflections: 'oppugno 1, -avi, -atum',\n        germanTranslation: \"best\\xfcrmen, belagern\",\n        relatedForeignWords: 'w\\xf6rtlich: \"dagegenk\\xe4mpfen\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'expugnare',\n        inflections: 'expugno 1, -avi, -atum',\n        germanTranslation: 'erobern',\n        relatedForeignWords: 'w\\xf6rtlich: \"herausk\\xe4mpfen\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nox',\n        inflections: 'noctis f. (2. F. Pl. -ium)',\n        germanTranslation: 'Nacht',\n        relatedForeignWords: 'frz. nuit, ital. notte, span. noche',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'constituere',\n        inflections: 'constituo 3, constitui, constitutum',\n        germanTranslation: \"beschlie\\xdfen, festsetzen\",\n        relatedForeignWords: 'vgl. Konstitution (= Verfassung)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'clam (Adv.)',\n        inflections: '',\n        germanTranslation: 'heimlich',\n        relatedForeignWords: 'vgl. klammheimlich (= ganz heimlich)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ascendere',\n        inflections: 'ascendo 3, ascendi, ascensum',\n        germanTranslation: 'hinaufsteigen, besteigen',\n        relatedForeignWords: 'vgl. Aszendent; vgl. frz. ascenseur, ital. ascensore, span. ascensor',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'homo',\n        inflections: 'hominis m.',\n        germanTranslation: 'Mensch',\n        relatedForeignWords: 'frz. homme; Homo sapiens =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'canis',\n        inflections: 'canis m.',\n        germanTranslation: 'Hund',\n        relatedForeignWords: 'frz. chien, ital. cane; Cave canem (siehe unten)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Iuno',\n        inflections: 'Iunonis f.',\n        germanTranslation: 'Juno (griech. Hera)',\n        relatedForeignWords: 'Gattin des Jupiter (griech. Hera -> S. 9)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'sacer/cra/crum',\n        inflections: '',\n        germanTranslation: '1) heilig; 2) geweiht',\n        relatedForeignWords: 'vgl. Sakristei, Sakrament, sakral',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quamquam',\n        inflections: '',\n        germanTranslation: 'obwohl',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'carere (+ Abl.)',\n        inflections: 'careo 2, carui, -',\n        germanTranslation: 'frei sein (von ...), nicht haben',\n        relatedForeignWords: \"z. B. dico careo = (ich bin frei von Freizeit \\u2794 ich habe keine Freizeit); vgl. Karenz\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vox',\n        inflections: 'vocis f.',\n        germanTranslation: 'Stimme',\n        relatedForeignWords: 'engl. voice, frz. voix, ital. voce, span. voz',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'clamor',\n        inflections: 'clamoris m.',\n        germanTranslation: \"Geschrei, L\\xe4rm\",\n        relatedForeignWords: 'frz. clameur, ital. clamore; vgl. clamare =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'statim (Adv.)',\n        inflections: '',\n        germanTranslation: 'sofort, sogleich',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ceteri/ae/a (Pl.)',\n        inflections: '',\n        germanTranslation: \"die \\xfcbrigen\",\n        relatedForeignWords: 'etc. (et cetera) = \"und das \\xdcbrige\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'servare',\n        inflections: 'servo 1, -avi, -atum',\n        germanTranslation: '1) retten; 2) bewahren',\n        relatedForeignWords: 'vgl. konservieren',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'gloria',\n        inflections: 'gloriae f.',\n        germanTranslation: 'Ruhm, Ehre',\n        relatedForeignWords: 'vgl. Gloria; glorreich (= ruhmreich)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nomen',\n        inflections: 'nominis n.',\n        germanTranslation: 'Name',\n        relatedForeignWords: 'vgl. Nomen est omen = \"Der Name ist Vorzeichen\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'accipere',\n        inflections: 'accipio M, accepi, acceptum',\n        germanTranslation: '1) erhalten, 2) aufnehmen, 3) annehmen',\n        relatedForeignWords: 'vgl. akzeptieren (= etwas annehmen)',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 10 ---\n    {\n        latinWord: '^con^Lektion 10: De Hannibale',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'imperator',\n        inflections: 'imperatoris m.',\n        germanTranslation: '1) Feldherr; 2) Kaiser',\n        relatedForeignWords: 'eigntl.: \"Befehlshaber\" (vgl. imperare!)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'virtus',\n        inflections: 'virtutis f.',\n        germanTranslation: '1) Tapferkeit; 2) Tugend',\n        relatedForeignWords: 'eigntl.: \"Mannhaftigkeit\" (vgl. vir = Mann)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'copiae (Pl.)',\n        inflections: 'copiarum f.',\n        germanTranslation: 'Truppen',\n        relatedForeignWords: '<-> copia, -ae (Sg.) =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ducere',\n        inflections: 'duco 3, duxi, ductum',\n        germanTranslation: \"f\\xfchren\",\n        relatedForeignWords: 'vgl. reduzieren',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'navis',\n        inflections: 'navis f.',\n        germanTranslation: 'Schiff',\n        relatedForeignWords: 'Navigation = Steuerung des Schiffs); vgl. engl. navy',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'mare',\n        inflections: 'maris n.',\n        germanTranslation: 'Meer',\n        relatedForeignWords: 'frz. mer, ital. mare, vgl. Marine =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'audere',\n        inflections: 'audeo 2, ausus sum',\n        germanTranslation: 'wagen',\n        relatedForeignWords: 'frz. oser, ital. osare, span. osar',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'amittere',\n        inflections: 'amitto 3, amisi, amissum',\n        germanTranslation: 'verlieren',\n        relatedForeignWords: 'w\\xf6rt.: \"wegschicken\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'pugna',\n        inflections: 'pugnae f.',\n        germanTranslation: 'Kampf',\n        relatedForeignWords: 'vgl. pugnare =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vincere',\n        inflections: 'vinco 3, vici, victum',\n        germanTranslation: 'siegen, besiegen',\n        relatedForeignWords: 'frz. vaincre, ital. vincere, span. vencer',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'pars',\n        inflections: 'partis f.',\n        germanTranslation: 'Teil',\n        relatedForeignWords: 'engl. part; vgl. partiell (= teilweise)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'timor',\n        inflections: 'timoris m.',\n        germanTranslation: 'Furcht, Angst',\n        relatedForeignWords: 'ital. timore, span. temor; vgl. timere =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ne ... quidem',\n        inflections: '',\n        germanTranslation: 'nicht einmal ...',\n        relatedForeignWords: 'z.B. ne tu quidem =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'prohibere',\n        inflections: 'prohibeo 2, -ui, -itum',\n        germanTranslation: '1) ab-, fernhalten; 2) hindern, verhindern',\n        relatedForeignWords: 'ital. proibire, span. prohibir; vgl. engl. to prohibit (\"verbieten\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'occidere',\n        inflections: 'occido 3, occidi, occisum',\n        germanTranslation: \"t\\xf6ten\",\n        relatedForeignWords: 'ital. uccidere',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'porta',\n        inflections: 'portae f.',\n        germanTranslation: \"Tor, T\\xfcr\",\n        relatedForeignWords: 'frz. porte, ital. porta; vgl. Portal, Portier',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'urbs',\n        inflections: 'urbis f.',\n        germanTranslation: 'Stadt',\n        relatedForeignWords: \"vgl. engl. suburb; urban (= st\\xe4dtisch)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'summus/a/um',\n        inflections: '',\n        germanTranslation: \"der h\\xf6chste; sehr hoch\",\n        relatedForeignWords: \"vgl. Summe; engl. summit (= H\\xf6hepunkt)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'honor',\n        inflections: 'honoris m.',\n        germanTranslation: 'Ehre, Ansehen',\n        relatedForeignWords: 'vgl. honorieren (= belohnen); engl. honour',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'facere',\n        inflections: '(mit doppeltem Akk.)',\n        germanTranslation: 'zu etwas machen',\n        relatedForeignWords: 'z. B. te amicam meam facio =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'patria',\n        inflections: 'patriae f.',\n        germanTranslation: 'Heimat',\n        relatedForeignWords: 'ital. + span. patria; vgl. Patriot =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'pax',\n        inflections: 'pacis f.',\n        germanTranslation: 'Friede',\n        relatedForeignWords: 'engl. peace; vgl. Pazifist (= Kriegsgegner), Pazifik',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'hostis',\n        inflections: 'hostis m.',\n        germanTranslation: 'Feind',\n        relatedForeignWords: 'vgl. engl. hostile (= feindlich)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'liberare (+ Abl.)',\n        inflections: 'libero 1, -avi, -atum',\n        germanTranslation: 'befreien (von)',\n        relatedForeignWords: 'vgl. liberalisieren (= von Regelungen befreien)',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 11 ---\n    {\n        latinWord: '^con^Lektion 11: Quis Iovem non amat?',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'Iuppiter',\n        inflections: 'Iovis m.',\n        germanTranslation: 'Jupiter',\n        relatedForeignWords: 'griech. Zeus (S. 9)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'scire',\n        inflections: 'scio 4, scivi, scitum',\n        germanTranslation: 'wissen',\n        relatedForeignWords: 'vgl. engl. science =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'is, ea, id',\n        inflections: '',\n        germanTranslation: '1) dieser/e/es 2) er, sie, es',\n        relatedForeignWords: \"hinweisendes F\\xfcrwort (siehe Grammatica)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vocare',\n        inflections: 'voco 1, -avi, -atum',\n        germanTranslation: '1) rufen; 2) nennen',\n        relatedForeignWords: 'vgl. vox, vocis; vgl. Vokativ (= Ruf-Fall), Advokat',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'imperare',\n        inflections: 'impero 1, -avi, -atum',\n        germanTranslation: 'befehlen',\n        relatedForeignWords: 'vgl. Imperator, Imperativ =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'mons',\n        inflections: 'montis m.',\n        germanTranslation: 'Berg',\n        relatedForeignWords: 'engl. mount, frz. mont, ital. + span. monte',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'rex',\n        inflections: 'regis m.',\n        germanTranslation: \"K\\xf6nig\",\n        relatedForeignWords: 'frz. roi, ital. re, span. rey',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'litus',\n        inflections: 'litoris n.',\n        germanTranslation: \"K\\xfcste, Strand\",\n        relatedForeignWords: 'ital. lido, span. litoral',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'eius',\n        inflections: '(2.F. Sg.)',\n        germanTranslation: 'dessen/deren',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'eorum/earum',\n        inflections: '(2.F. Pl.)',\n        germanTranslation: 'deren',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iussum',\n        inflections: 'iussi n.',\n        germanTranslation: 'Befehl',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'conficere',\n        inflections: 'conficio M, confeci, confectum',\n        germanTranslation: \"1) ausf\\xfchren, anfertigen 2) beenden\",\n        relatedForeignWords: 'vgl. facere M =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'solere',\n        inflections: 'soleo 2, solitus sum',\n        germanTranslation: 'gewohnt sein, pflegen',\n        relatedForeignWords: 'span. soler',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'idem, eadem, idem',\n        inflections: '',\n        germanTranslation: 'der-, die-, dasselbe',\n        relatedForeignWords: 'siehe Grammatica; vgl. ident, identisch',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'locus',\n        inflections: 'loci m.',\n        germanTranslation: 'Ort, Stelle, Platz',\n        relatedForeignWords: 'vgl. Lokal, lokalisieren; der Lokus (= WC)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'virgo',\n        inflections: 'virginis f.',\n        germanTranslation: \"M\\xe4dchen, Jungfrau\",\n        relatedForeignWords: 'engl. virgin, frz. vierge, ital. vergine, span. virgen',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ludere',\n        inflections: 'ludo 3, lusi, lusum',\n        germanTranslation: 'spielen',\n        relatedForeignWords: \"vgl. Pr\\xe4ludium (= Vorspiel)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'taurus',\n        inflections: 'tauri m.',\n        germanTranslation: 'Stier',\n        relatedForeignWords: \"ital. + span. toro, vgl. Torero (= Stierk\\xe4mpfer)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'multitudo',\n        inflections: 'multitudinis f.',\n        germanTranslation: 'Menge',\n        relatedForeignWords: 'vgl. multi/ae/a =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'conspicere',\n        inflections: 'conspicio M, conspexi, conspectum',\n        germanTranslation: 'erblicken',\n        relatedForeignWords: 'vgl. in-spezieren (= genau untersuchen)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'pulchritudo',\n        inflections: 'pulchritudinis f.',\n        germanTranslation: \"Sch\\xf6nheit\",\n        relatedForeignWords: 'vgl. pulcher/a/um',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'primo (Adv.)',\n        inflections: '',\n        germanTranslation: 'zuerst',\n        relatedForeignWords: 'vgl. Prime!; <-> primus/a/um (Adj.) =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'tangere',\n        inflections: 'tango 3, tetigi, tactum',\n        germanTranslation: \"ber\\xfchren\",\n        relatedForeignWords: 'vgl. Tangente, tangieren, Tangens; engl. contact',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'corpus',\n        inflections: 'corporis n.',\n        germanTranslation: \"K\\xf6rper\",\n        relatedForeignWords: \"vgl. der Korpus; das Corpus delicti (= Beweisst\\xfcck)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'mox (Adv.)',\n        inflections: '',\n        germanTranslation: 'bald',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'insula',\n        inflections: 'insulae f.',\n        germanTranslation: 'Insel',\n        relatedForeignWords: \"engl. island, frz. \\xeele, ital. isola, span. isla\",\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 12 ---\n    {\n        latinWord: '^con^Lektion 12: De Minotauro',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'pater',\n        inflections: 'patris m.',\n        germanTranslation: 'Vater',\n        relatedForeignWords: 'vgl. Patriarch (= Familienoberhaupt); <-> patria, -ae = \"Vaterland\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quaerere',\n        inflections: 'quaero 3, quaesivi, quaesitum',\n        germanTranslation: '1) suchen (+ Akk.) 2) fragen (+ ab/ex)',\n        relatedForeignWords: 'quaero amicam = ich suche die Freundin; quaero ab amica = ich frage die Freundin',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'parentes (Pl.)',\n        inflections: 'parentum m.',\n        germanTranslation: 'Eltern',\n        relatedForeignWords: 'engl. + franz. parents',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'qui, quae, quod',\n        inflections: '',\n        germanTranslation: '1) welcher/e/s; 2) der/die/das',\n        relatedForeignWords: 'Relativpronomen, siehe Grammatica',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nihil',\n        inflections: '',\n        germanTranslation: 'nichts',\n        relatedForeignWords: 'vgl. Nihilist (= einer, der an nichts glaubt)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nihil nisi',\n        inflections: '',\n        germanTranslation: \"nichts au\\xdfer; nur\",\n        relatedForeignWords: 'w\\xf6rtl.: \"nichts, wenn nicht\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'debere (+ Inf.)',\n        inflections: 'debeo 2, -ui, -itum',\n        germanTranslation: \"m\\xfcssen\",\n        relatedForeignWords: 'frz. devoir, ital. dovere, span. deber',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'caput',\n        inflections: 'capitis n.',\n        germanTranslation: 'Kopf, Haupt',\n        relatedForeignWords: \"vgl. engl. capital; vgl. Kapuze, Kapit\\xe4n\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'periculum',\n        inflections: 'periculi n.',\n        germanTranslation: 'Gefahr',\n        relatedForeignWords: 'vgl. ital. pericoloso',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'interficere',\n        inflections: 'interficio M, interfeci, interfectum',\n        germanTranslation: \"t\\xf6ten\",\n        relatedForeignWords: '= necare, occidere',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'miser/era/erum',\n        inflections: '',\n        germanTranslation: \"1) arm, elend; 2) ungl\\xfccklich\",\n        relatedForeignWords: 'vgl. miserable; die Misere (= Notlage)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'navigare',\n        inflections: 'navigo 1, -avi, -atum',\n        germanTranslation: 'segeln, mit dem Schiff fahren',\n        relatedForeignWords: 'vgl. navis, -is = navigieren (= \"steuern\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'adulescens',\n        inflections: 'adulescentis m.',\n        germanTranslation: 'junger Mann',\n        relatedForeignWords: 'vgl. die Adoleszenz (= Jugendalter)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iuvare',\n        inflections: 'iuvo 1, iuvi, iutum',\n        germanTranslation: \"unterst\\xfctzen, helfen\",\n        relatedForeignWords: '= adiuvare (Lec. 7)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nemo',\n        inflections: '',\n        germanTranslation: 'niemand',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'invenire',\n        inflections: 'invenio 4, inveni, inventum',\n        germanTranslation: '1) finden; 2) erfinden',\n        relatedForeignWords: 'w\\xf6rtl.: \"daraufkommen\"; engl. invention, to invent',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'cura',\n        inflections: 'curae f.',\n        germanTranslation: 'Sorge',\n        relatedForeignWords: 'vgl. Kur',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quomodo',\n        inflections: '',\n        germanTranslation: 'wie',\n        relatedForeignWords: 'W\\xf6rtlich: \"auf welche Weise?\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'modus',\n        inflections: 'modi m.',\n        germanTranslation: 'Art, Weise',\n        relatedForeignWords: 'vgl. Mode = Art, sich anzuziehen',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dare',\n        inflections: 'do 1, dedi, datum',\n        germanTranslation: 'geben',\n        relatedForeignWords: 'ital. dare, dar; vgl. Dativ (Gib-Fall)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'medius/a/um',\n        inflections: '',\n        germanTranslation: 'der mittlere; in der Mitte',\n        relatedForeignWords: \"vgl. engl. medium (z. B. Kleidergr\\xf6\\xdfe, Steak), meditieren\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'medio in labyrintho',\n        inflections: '',\n        germanTranslation: 'mitten im Labyrinth',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'paratus/a/um',\n        inflections: '',\n        germanTranslation: 'bereit',\n        relatedForeignWords: 'vgl. parare (Lec. 7); vgl. \"etwas parat haben\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'atque (= ac)',\n        inflections: '',\n        germanTranslation: 'und',\n        relatedForeignWords: '= et, -que',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 13 ---\n    {\n        latinWord: '^con^Lektion 13: De Daedalo et Icaro',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'amor',\n        inflections: 'amoris m.',\n        germanTranslation: 'Liebe',\n        relatedForeignWords: 'frz. amour, ital. amore, span. amor; vgl. Amor',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'cupere',\n        inflections: 'cupio M, cupivi, -itum',\n        germanTranslation: \"w\\xfcnschen, begehren\",\n        relatedForeignWords: '<-> capere M =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'petere a/ab',\n        inflections: 'peto 3, petivi, petitum (+ Abl.)',\n        germanTranslation: 'bitten, erbitten',\n        relatedForeignWords: 'peto a te auxilium = \"ich bitte dich um Hilfe\"; \"ich erbitte Hilfe von dir\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'manus',\n        inflections: 'manus f.',\n        germanTranslation: 'Hand',\n        relatedForeignWords: \"vgl. manuell, Manufaktur, Manik\\xfcre\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'artificium',\n        inflections: 'artificii n.',\n        germanTranslation: 'Kunstwerk',\n        relatedForeignWords: 'zusammengesetzt aus: ars + facere',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'res',\n        inflections: 'rei f.',\n        germanTranslation: 'Sache',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ars',\n        inflections: 'artis f.',\n        germanTranslation: '1) Kunst; 2) Technik',\n        relatedForeignWords: 'engl. + frz. art, ital. + span. arte; vgl. Artist',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'casus',\n        inflections: 'casus m.',\n        germanTranslation: \"1) Fall; 2) Zufall; 3) Ungl\\xfccksfall\",\n        relatedForeignWords: 'engl. case (= Fall), frz. cas, ital. + span. caso',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'coniungere',\n        inflections: 'coniunxo 3, coniunxi, coniunctum',\n        germanTranslation: '1) verbinden; 2) vereinigen',\n        relatedForeignWords: 'vgl. Konjunktion (= Bindewort)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dies',\n        inflections: 'diei m.',\n        germanTranslation: 'Tag',\n        relatedForeignWords: \"span. d\\xeda; vgl. engl. diary (= Tagebuch)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'opus',\n        inflections: 'operis n.',\n        germanTranslation: 'Werk',\n        relatedForeignWords: 'ital. opera; vgl. das Opus (= Musikwerk)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'meridies',\n        inflections: 'meridiei m.',\n        germanTranslation: 'Mittag',\n        relatedForeignWords: 'vgl. Meridian (= \"Mittagslinie\"), a. m. (siehe unten)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'sol',\n        inflections: 'solis m.',\n        germanTranslation: 'Sonne',\n        relatedForeignWords: 'frz. soleil, ital. sole, span. sol; vgl. Solanum',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'caelum',\n        inflections: 'caeli n.',\n        germanTranslation: 'Himmel',\n        relatedForeignWords: 'engl. ceiling, frz. ciel, ital. + span. cielo',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'metus',\n        inflections: 'metus m.',\n        germanTranslation: 'Furcht, Angst',\n        relatedForeignWords: '= timor, -oris',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'denique (Adv.)',\n        inflections: '',\n        germanTranslation: \"schlie\\xdflich, endlich\",\n        relatedForeignWords: '= postremo',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'negligere',\n        inflections: 'neglego 3, neglexi, neglectum',\n        germanTranslation: 'missachten, ignorieren',\n        relatedForeignWords: \"engl. to neglect, frz. n\\xe9gliger\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'solvere',\n        inflections: 'solvo 3, solvi, solutum',\n        germanTranslation: \"aufl\\xf6sen, l\\xf6sen\",\n        relatedForeignWords: \"engl. to solve (a problem); solution (= L\\xf6sung)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'cadere',\n        inflections: 'cado 3, cecidi, -',\n        germanTranslation: 'fallen',\n        relatedForeignWords: 'de-kadent (= verfallen, entartet); vgl. casus, -us (s. oben)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'mortuus/a/um',\n        inflections: '',\n        germanTranslation: 'tot, gestorben',\n        relatedForeignWords: \"frz. mort; vgl. Mortalit\\xe4t (= Sterblichkeit)\",\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 14 ---\n    {\n        latinWord: '^con^Lektion 14: De Tartaro',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'fuit',\n        inflections: '',\n        germanTranslation: 'Perfekt von est',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'hic, haec, hoc',\n        inflections: '',\n        germanTranslation: 'dieser/e/es',\n        relatedForeignWords: \"hinweisendes F\\xfcrwort (siehe Grammatica)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'cena',\n        inflections: 'cenae f.',\n        germanTranslation: 'Mahlzeit, Mahl',\n        relatedForeignWords: \"frz. c\\xe8ne, ital. + span. cena (= Abendessen)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'invitare',\n        inflections: 'invito 1, -avi, invitatus',\n        germanTranslation: 'einladen',\n        relatedForeignWords: 'engl. to invite, frz. inviter, ital. invitare',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quidam, quaedam, quoddam',\n        inflections: '2.F. cuiusdam, 3.F. cuidam',\n        germanTranslation: 'Sg.: ein (gewisser); Pl.: einige',\n        relatedForeignWords: 'Deklination wie qui/quae/quod + -dam',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'facinus',\n        inflections: 'facinoris n.',\n        germanTranslation: '1) Tat; 2) Untat',\n        relatedForeignWords: 'abgeleitet vom Verbum facere = tun',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'prudentia',\n        inflections: 'prudentiae f.',\n        germanTranslation: 'Klugheit',\n        relatedForeignWords: 'engl. + frz. prudence, ital. prudenza, span. prudencia',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'intellegere',\n        inflections: 'intellego 3, intellexi, intellectum',\n        germanTranslation: 'erkennen, einsehen',\n        relatedForeignWords: 'vgl. Intelligenz, intelligent',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'reddere',\n        inflections: 'reddo 3, reddidi, redditum',\n        germanTranslation: \"zur\\xfcckgeben\",\n        relatedForeignWords: \"aus: re- (zur\\xfcck-) + dare\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'poena',\n        inflections: 'poenae f.',\n        germanTranslation: 'Strafe',\n        relatedForeignWords: \"vgl. P\\xf6nale (= Strafgeld), Penalty (= Strafsto\\xdf)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'poenas solvere',\n        inflections: '',\n        germanTranslation: \"eine Strafe verb\\xfc\\xdfen\",\n        relatedForeignWords: 'w\\xf6rtlich: \"Strafgeld zahlen\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'stare',\n        inflections: 'sto 1, steti, statum',\n        germanTranslation: 'stehen',\n        relatedForeignWords: 'vgl. Station, Statue; statisch (= stillstehend)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'arbor',\n        inflections: 'arboris f.',\n        germanTranslation: 'Baum',\n        relatedForeignWords: \"Nota bene: B\\xe4ume galten als weiblich!\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'sitis',\n        inflections: 'sitis f. (i-Stamm)',\n        germanTranslation: 'Durst',\n        relatedForeignWords: 'ital. sete, span. sed',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'fames',\n        inflections: 'famis f.',\n        germanTranslation: 'Hunger',\n        relatedForeignWords: 'frz. faim, ital. fame',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'cum (Konjunktion)',\n        inflections: '',\n        germanTranslation: '1) wenn, sooft; 2) als',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'bibere',\n        inflections: 'bibo 3, bibi, -',\n        germanTranslation: 'trinken',\n        relatedForeignWords: 'frz. boire, ital. bere, span. beber',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'improbus/a/um',\n        inflections: '',\n        germanTranslation: \"schlecht, b\\xf6se\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'scelus',\n        inflections: 'sceleris n.',\n        germanTranslation: 'Verbrechen',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'mors',\n        inflections: 'mortis f.',\n        germanTranslation: 'Tod',\n        relatedForeignWords: 'frz. mort, ital. morte, span. muerte',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'contra (+ Akk.)',\n        inflections: '',\n        germanTranslation: 'gegen',\n        relatedForeignWords: \"vgl. Kontrast; Pro und Kontra (= F\\xfcr und Wider)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'natura',\n        inflections: 'naturae f.',\n        germanTranslation: 'Natur',\n        relatedForeignWords: 'engl. + frz. nature, ital. natura',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'genus',\n        inflections: 'generis n.',\n        germanTranslation: '1) Art; 2) Geschlecht',\n        relatedForeignWords: 'engl. gender, frz. genre, ital. genere',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'punire',\n        inflections: 'punio 4, punivi, -itum',\n        germanTranslation: 'bestrafen',\n        relatedForeignWords: 'frz. punir, ital. punire; vgl. poena =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'saxum',\n        inflections: 'saxi n.',\n        germanTranslation: 'Fels',\n        relatedForeignWords: 'ital. sasso',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vis (Sg.)',\n        inflections: 'vim (4.F.), vi (6.F.) f.',\n        germanTranslation: '1) Kraft; 2) Gewalt',\n        relatedForeignWords: 'vgl. vis, viri (= Mann)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vires (Pl.)',\n        inflections: 'virium f.',\n        germanTranslation: \"die Kr\\xe4fte\",\n        relatedForeignWords: 'Viribus unitis (siehe links)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'paene (Adv.)',\n        inflections: '',\n        germanTranslation: 'fast, beinahe',\n        relatedForeignWords: 'engl. quasi, pen-insula (\"Fast-Insel\" = Halbinsel)',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 15 ---\n    {\n        latinWord: '^con^Lektion 15: De Orpheo et Eurydice',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'ille, illa, illud',\n        inflections: '',\n        germanTranslation: 'jener/e/es',\n        relatedForeignWords: 'vgl. die Artikel: frz. le/la, ital. il/la, span. el/la',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'et ... et',\n        inflections: '',\n        germanTranslation: 'sowohl ... als auch',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'animal (i-Stamm)',\n        inflections: 'animalis n.',\n        germanTranslation: '1) Tier; 2) Lebewesen',\n        relatedForeignWords: 'engl. + frz. + span. animal, ital. animale',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'carmen',\n        inflections: 'carminis n.',\n        germanTranslation: 'Lied',\n        relatedForeignWords: 'vgl. Carmina Burana (Carl Orff)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'canere',\n        inflections: 'cano 3, cecini, -',\n        germanTranslation: 'singen, besingen',\n        relatedForeignWords: 'frz. chanter, ital. cantare, span. cantar',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'olim (Adv.)',\n        inflections: '',\n        germanTranslation: 'einst',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'matrimonium',\n        inflections: 'matrimonii n.',\n        germanTranslation: 'Ehe',\n        relatedForeignWords: 'ital. + span. matrimonio, engl. matrimony',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'in matrimonium ducere',\n        inflections: '',\n        germanTranslation: 'heiraten (vom Mann aus)',\n        relatedForeignWords: 'w\\xf6rtl.: \"die Frau in die Ehe f\\xfchren\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dolor',\n        inflections: 'doloris m.',\n        germanTranslation: 'Schmerz',\n        relatedForeignWords: 'frz. douleur, ital. dolore, span. dolor',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'flere',\n        inflections: 'fleo 2, flevi, fletum',\n        germanTranslation: 'weinen',\n        relatedForeignWords: 'vgl. flennen',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dolere',\n        inflections: 'doleo 2, dolui, -',\n        germanTranslation: 'trauern, Schmerz empfinden',\n        relatedForeignWords: 'vgl. dolor =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ipse, ipsa, ipsum',\n        inflections: '',\n        germanTranslation: 'selbst',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'regina',\n        inflections: 'reginae f.',\n        germanTranslation: \"K\\xf6nigin\",\n        relatedForeignWords: 'ital. regina',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'movere',\n        inflections: 'moveo 2, movi, motum',\n        germanTranslation: 'bewegen; beeindrucken',\n        relatedForeignWords: 'engl. to move, movie; vgl. motivieren, Motor',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'postquam',\n        inflections: '',\n        germanTranslation: 'nachdem',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'cuncti/ae/a (Pl.)',\n        inflections: '',\n        germanTranslation: 'alle; alles (n.)',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'frustra (Adv.)',\n        inflections: '',\n        germanTranslation: 'vergeblich',\n        relatedForeignWords: \"vgl. Frustration (= entt\\xe4uschte Erwartung)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'desinere',\n        inflections: 'desino 3, desii, -',\n        germanTranslation: \"aufh\\xf6ren, ablassen\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'considerere',\n        inflections: 'consido 3, consedi, -',\n        germanTranslation: 'sich niedersetzen',\n        relatedForeignWords: '<-> sedere 2 =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ignotus/a/um',\n        inflections: '',\n        germanTranslation: 'unbekannt',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'eram, eras, ... (etc.)',\n        inflections: '',\n        germanTranslation: 'ich war, du warst ... (etc.)',\n        relatedForeignWords: '(Imperfekt von esse, siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'condicio',\n        inflections: 'condicionis f.',\n        germanTranslation: 'Bedingung',\n        relatedForeignWords: 'vgl. Konditionalsatz (= Bedingungssatz)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'uxor',\n        inflections: 'uxoris f.',\n        germanTranslation: 'Gattin, Ehefrau',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iter',\n        inflections: 'itineris n.',\n        germanTranslation: '1) Weg; 2) Reise',\n        relatedForeignWords: 'ital. + span. itinerario',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iter facere',\n        inflections: '',\n        germanTranslation: 'reisen, marschieren',\n        relatedForeignWords: 'w\\xf6rtl.: \"eine Reise machen\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vertere',\n        inflections: 'verto 3, verti, versum',\n        germanTranslation: 'wenden, drehen',\n        relatedForeignWords: 'vgl. konvertieren (= die Religion wechseln)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'domus',\n        inflections: 'domus f.',\n        germanTranslation: 'Haus',\n        relatedForeignWords: 'vgl. Dom, Domizil (= Wohnsitz)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'longus/a/um',\n        inflections: '',\n        germanTranslation: 'lang',\n        relatedForeignWords: \"engl. long; vgl. Longinus (= gro\\xdfer Mensch)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'lux',\n        inflections: 'lucis f.',\n        germanTranslation: 'Licht',\n        relatedForeignWords: 'engl. luce, span. luz; vgl. Luzifer (\"Lichtbringer\")',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 16 ---\n    {\n        latinWord: '^con^Lektion 16: De Spartaco',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'natio',\n        inflections: 'nationis f.',\n        germanTranslation: 'Volk',\n        relatedForeignWords: 'vgl. inter-national, Nation, Nationalismus',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nobilis/e',\n        inflections: '',\n        germanTranslation: '1) vornehm; 2) adelig',\n        relatedForeignWords: 'frz. noble, ital. nobile, span. noble; vgl. nobel',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'natus/a/um',\n        inflections: '',\n        germanTranslation: '1) geboren; 2) abstammend',\n        relatedForeignWords: 'vgl. engl. native speaker',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'fortis/e',\n        inflections: '',\n        germanTranslation: 'tapfer',\n        relatedForeignWords: '<-> frz. fort + ital. forte (\"stark\")!',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'gladiator',\n        inflections: 'gladiatoris m.',\n        germanTranslation: 'Gladiator',\n        relatedForeignWords: 'w\\xf6rtl.: \"Schwertk\\xe4mpfer\" (vgl. gladius)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'crudelis/e',\n        inflections: '',\n        germanTranslation: 'grausam',\n        relatedForeignWords: 'engl. + frz. + span. cruel, ital. crudele',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'varius/a/um',\n        inflections: '',\n        germanTranslation: 'verschieden',\n        relatedForeignWords: 'vgl. variieren (= abwechseln), Variante, Variation',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'discere',\n        inflections: 'disco 3, didici, -',\n        germanTranslation: 'lernen',\n        relatedForeignWords: 'vgl. discipulus =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'difficilis/e',\n        inflections: '',\n        germanTranslation: 'schwierig',\n        relatedForeignWords: \"engl. difficult, frz. + ital. difficile, span. dif\\xedcil\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'exercitus',\n        inflections: 'exercitus m.',\n        germanTranslation: 'Heer',\n        relatedForeignWords: 'ital. esercito, span. ejercito; vgl. exercere (s.u.)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'brevis/e',\n        inflections: '',\n        germanTranslation: 'kurz',\n        relatedForeignWords: 'engl. brief, frz. bref, ital. + span. breve',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'tempus',\n        inflections: 'temporis n.',\n        germanTranslation: 'Zeit',\n        relatedForeignWords: \"frz. temps, ital. tempo; vgl. Temporalzsatz, tempor\\xe4r\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'agere',\n        inflections: 'ago 3, egi, actum',\n        germanTranslation: '1) tun; 2) verbringen',\n        relatedForeignWords: 'vgl. agieren, reagieren; agil (= beweglich, flink)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vitam agere',\n        inflections: '',\n        germanTranslation: 'das Leben verbringen',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'exercere',\n        inflections: 'exerceo 2, -ui, -itum',\n        germanTranslation: \"trainieren, \\xfcben\",\n        relatedForeignWords: 'engl. exercise; vgl. exerzieren =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'celer/eris/ere',\n        inflections: '',\n        germanTranslation: 'schnell',\n        relatedForeignWords: 'ital. celere; vgl. engl. celerity',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ager',\n        inflections: 'agri m.',\n        germanTranslation: 'Feld; Pl.: Gebiet(e)',\n        relatedForeignWords: 'vgl. Aqar; vgl. engl. agriculture =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'latus/a/um',\n        inflections: '',\n        germanTranslation: 'weit, breit',\n        relatedForeignWords: \"vgl. Latifundien (= gro\\xdfe Landg\\xfcter)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'recipere',\n        inflections: 'recipio M, recepi, receptum',\n        germanTranslation: 'aufnehmen',\n        relatedForeignWords: 'vgl. Rezept, Rezept',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'se recipere',\n        inflections: '',\n        germanTranslation: \"sich zur\\xfcckziehen\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'continere',\n        inflections: 'contineo 2, continui, -',\n        germanTranslation: '1) zusammenhalten; 2) enthalten',\n        relatedForeignWords: 'vgl. Kontinent; Container',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'cupiditas',\n        inflections: 'cupiditatis f.',\n        germanTranslation: 'Gier',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'adductus/a/um',\n        inflections: '',\n        germanTranslation: 'veranlasst',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'senatus',\n        inflections: 'senatus m.',\n        germanTranslation: 'Senat',\n        relatedForeignWords: 'eig.: \"\\xc4ltestenrat\" (vgl. senex = \"alter Mann\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'cognoscere',\n        inflections: 'cognosco 3, cognovi, cognitum',\n        germanTranslation: 'erkennen; erfahren',\n        relatedForeignWords: 'vgl. engl. to recognize; incognito (= unerkannt)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'atrox (m./f./n.)',\n        inflections: 'atrocis (2.F.)',\n        germanTranslation: 'grausam, wild',\n        relatedForeignWords: 'ital. atroce, span. atroz',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'crux',\n        inflections: 'crucis f.',\n        germanTranslation: 'Kreuz',\n        relatedForeignWords: 'ital. croce, span. cruz; vgl. Kreuzigung',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 17 ---\n    {\n        latinWord: '^con^Lektion 17: De Cicerone',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'littera',\n        inflections: 'litterae f.',\n        germanTranslation: 'Buchstabe',\n        relatedForeignWords: \"vgl. die Lettern (= gro\\xdfe Buchstaben)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'litterae (Pl.)',\n        inflections: 'litterarum f.',\n        germanTranslation: '1) Wissenschaft; 2) Brief',\n        relatedForeignWords: 'engl. letter; vgl. Literatur',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iuvenis',\n        inflections: 'iuvenis m.',\n        germanTranslation: 'junger Mann (30-45 Jahre)',\n        relatedForeignWords: 'ital. giovane; <-> adulescens (ca. 18-30 Jahre)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'orator',\n        inflections: 'oratoris m.',\n        germanTranslation: 'Redner',\n        relatedForeignWords: 'vgl. orare =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'res publica',\n        inflections: 'rei publicae f.',\n        germanTranslation: 'Staat',\n        relatedForeignWords: 'w\\xf6rtl.: \"\\xf6ffentliche Sache\"; vgl. Republik',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iustitia',\n        inflections: 'iustitiae f.',\n        germanTranslation: 'Gerechtigkeit',\n        relatedForeignWords: 'vgl. Justiz (= staatliche Rechtspflege)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'incola',\n        inflections: 'incolae m.',\n        germanTranslation: 'Bewohner, Einwohner',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'provincia',\n        inflections: 'provinciae f.',\n        germanTranslation: 'Provinz',\n        relatedForeignWords: 'vgl. die Provence (Region in S-Frankreich)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'divitiae (Pl.)',\n        inflections: 'divitiarum f.',\n        germanTranslation: 'Reichtum',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'antiquus/a/um',\n        inflections: '',\n        germanTranslation: 'alt',\n        relatedForeignWords: \"antik; vgl. Antiquit\\xe4ten (= alte Kunstgegenst\\xe4nde)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ferre',\n        inflections: 'fero, fers, tuli, latum',\n        germanTranslation: 'tragen, bringen; ertragen',\n        relatedForeignWords: '(siehe Grammatica); vgl. Transfer',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nobilitas',\n        inflections: 'nobilitatis f.',\n        germanTranslation: 'Adel',\n        relatedForeignWords: 'vgl. Snob (= sine nobilitate); nobilis/e =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ius',\n        inflections: 'iuris n.',\n        germanTranslation: 'Recht',\n        relatedForeignWords: 'Jus, Jura, Jurisdiktion = Rechtsprechung',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'oratio',\n        inflections: 'orationis f.',\n        germanTranslation: 'Rede',\n        relatedForeignWords: 'vgl. orator (siehe oben) =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iudicium',\n        inflections: 'iudicii n.',\n        germanTranslation: 'Urteil',\n        relatedForeignWords: 'ital. giudizio, span. juicio',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'sponte sua',\n        inflections: '',\n        germanTranslation: 'freiwillig',\n        relatedForeignWords: 'vgl. spontan (= aus eigenem Antrieb)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'exilium',\n        inflections: 'exilii n.',\n        germanTranslation: 'Exil, Verbannung',\n        relatedForeignWords: 'vgl. S. 82); vgl. Semperit = \"Es geht immer\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ire',\n        inflections: 'eo, is, ii, itum',\n        germanTranslation: 'gehen',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Romae',\n        inflections: '(Lokativ)',\n        germanTranslation: 'in Rom',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'studere (+ Dat.)',\n        inflections: 'studeo 2, studui, -',\n        germanTranslation: \"sich bem\\xfchen (um), streben (nach)\",\n        relatedForeignWords: 'studieren, Student',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'cogere',\n        inflections: 'cogo 3, coegi, coactum',\n        germanTranslation: '1) sammeln; 2) zwingen',\n        relatedForeignWords: 'aus: co-agere = w\\xf6rtl.: \"zusammentreiben\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'consul',\n        inflections: 'consulis m.',\n        germanTranslation: 'Konsul',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'convocare',\n        inflections: 'convoco 1, -avi, -atum',\n        germanTranslation: 'zusammenrufen',\n        relatedForeignWords: 'con- = \"zusammen-\" (vgl. S. 118)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'senator',\n        inflections: 'senatoris m.',\n        germanTranslation: 'Senator',\n        relatedForeignWords: 'vgl. senatus (Lec. 16) =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ferre',\n        inflections: \"1) ungef\\xe4hr; 2) fast\",\n        germanTranslation: '<-> ferre = \"tragen\"',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'exire',\n        inflections: 'exeo, exis, exii, exitum',\n        germanTranslation: 'hinausgehen',\n        relatedForeignWords: 'vgl. engl. exit; vgl. Exitus (= Tod)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iubere (+ Akk.)',\n        inflections: 'iubeo 2, iussi, iussum',\n        germanTranslation: 'befehlen; lassen (+ Inf.)',\n        relatedForeignWords: 'iubeo te (Akk.) = ich befehle dir (Dativ)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'socius',\n        inflections: 'socii m.',\n        germanTranslation: \"Gef\\xe4hrte\",\n        relatedForeignWords: 'vgl. sozial, Sozialismus; Sozius (= Beifahrersitz)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'comprehendere',\n        inflections: 'comprehendo 3, comprehendi, -prehensum',\n        germanTranslation: '1) ergreifen; 2) erfassen (auch geistig)',\n        relatedForeignWords: 'vgl. engl. listening comprehension',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'afficere',\n        inflections: 'afficio M, affeci, affectum',\n        germanTranslation: \"erf\\xfcllen, versehen (mit)\",\n        relatedForeignWords: \"vgl. Affekt (= Gef\\xfchlsregung)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'priusquam',\n        inflections: '',\n        germanTranslation: 'bevor',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'adire',\n        inflections: 'adeo, adis, adii, aditum',\n        germanTranslation: '1) hingehen; 2) sich wenden (an); 3) angreifen',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 18 ---\n    {\n        latinWord: '^con^Lektion 18: Caesar Gallos superat',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'C. Iulius Caesar',\n        inflections: 'Iulii Caesaris',\n        germanTranslation: \"Gaius Julius C\\xe4sar\",\n        relatedForeignWords: \"vgl. Kaiser, Zar; C. = altlateinisch f\\xfcr Gaius\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'prudens (m./f./n.)',\n        inflections: 'prudentis (2.F.)',\n        germanTranslation: 'klug',\n        relatedForeignWords: 'frz. prudent, ital. + span. prudente',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quam',\n        inflections: '',\n        germanTranslation: 'als (nach Komparativ)',\n        relatedForeignWords: 'vgl. Plusquamperfekt (= mehr als vergangen?)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'civitas',\n        inflections: 'civitatis f.',\n        germanTranslation: '1) Stamm; 2) Gemeinde; 3) Staat',\n        relatedForeignWords: \"vgl. engl. city, frz. cit\\xe9, ital. citt\\xe0, span. ciudad\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Gallia',\n        inflections: 'Galliae f.',\n        germanTranslation: 'Gallien',\n        relatedForeignWords: '-> das heutige Frankreich; frz. Gaule',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'tradere',\n        inflections: 'trado 3, tradidi, traditum',\n        germanTranslation: \"1) ausliefern; 2) \\xfcberliefern\",\n        relatedForeignWords: \"vgl. Tradition (= \\xdcberlieferung)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'se tradere',\n        inflections: '',\n        germanTranslation: 'sich ergeben',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'amicitia',\n        inflections: 'amicitiae f.',\n        germanTranslation: 'Freundschaft',\n        relatedForeignWords: 'ital. amicizia; vgl. amicus, amica',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'legio',\n        inflections: 'legionis f.',\n        germanTranslation: 'Legion',\n        relatedForeignWords: 'ca. 4000-6000 Mann',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'pauci/ae/a',\n        inflections: '',\n        germanTranslation: 'wenige',\n        relatedForeignWords: 'frz. peu, ital. tutto; vgl. total',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'totus/a/um',\n        inflections: '2.F. totius, 3.F. toti',\n        germanTranslation: 'ganz',\n        relatedForeignWords: 'frz. tout, ital. tutto; vgl. total',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'at',\n        inflections: '',\n        germanTranslation: 'aber',\n        relatedForeignWords: '= autem, sed; <-> atque (ac) = \"und\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'auctoritas',\n        inflections: 'auctoritatis f.',\n        germanTranslation: 'Ansehen, Einfluss',\n        relatedForeignWords: \"vgl. Autorit\\xe4t\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'omnis/e (Sg.)',\n        inflections: '',\n        germanTranslation: '1) jeder; 2) ganz',\n        relatedForeignWords: \"ital. ogni; vgl. omnipr\\xe4sent\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'omnes (Pl. m./f.)',\n        inflections: '2.F. omnium',\n        germanTranslation: 'alle (Pl. m./f.)',\n        relatedForeignWords: 'vgl. Omnibus (wortl. = \"f\\xfcr alle\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'omnia (Pl. neutrum)',\n        inflections: '',\n        germanTranslation: 'alles (Sg. neutrum!)',\n        relatedForeignWords: 'z. B. omnia scio = \"ich wei\\xdf alles\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'proelium',\n        inflections: 'proelii n.',\n        germanTranslation: 'Schlacht',\n        relatedForeignWords: 'z. B. proelium committere =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'qui, quae, quod',\n        inflections: '(am Satzanfang)',\n        germanTranslation: 'dieser, diese, dieses',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'circumvenire',\n        inflections: 'circumvenio 4, circumveni, -ventum',\n        germanTranslation: 'umzingeln',\n        relatedForeignWords: 'circum (\"herum-\") + venire',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'advenire',\n        inflections: 'advenio 4, -veni, -ventum',\n        germanTranslation: 'hinkommen, ankommen',\n        relatedForeignWords: 'vgl. Advent (= Ankunft Christi)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'frumentum',\n        inflections: 'frumenti n.',\n        germanTranslation: 'Getreide',\n        relatedForeignWords: 'ital. frumento',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'concilium',\n        inflections: 'concilii n.',\n        germanTranslation: 'Versammlung',\n        relatedForeignWords: 'vgl. Konzil; <-> consilium =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'honestus/a/um',\n        inflections: '',\n        germanTranslation: 'ehrenhaft, ehrenvoll',\n        relatedForeignWords: 'engl. honest = \"anst\\xe4ndig\", \"ehrlich\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'servitus',\n        inflections: 'servitutis f.',\n        germanTranslation: 'Sklaverei',\n        relatedForeignWords: 'vgl. servus =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'aetas',\n        inflections: 'aetatis f.',\n        germanTranslation: '1) Alter; 2) Zeitalter, Zeit',\n        relatedForeignWords: 'engl. span. edad',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'aut',\n        inflections: '',\n        germanTranslation: 'oder',\n        relatedForeignWords: 'sobald',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ubi (+ Perfekt)',\n        inflections: '',\n        germanTranslation: 'sobald',\n        relatedForeignWords: 'wird als Fragewort =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'prior (m./f.), prius (n.)',\n        inflections: '',\n        germanTranslation: \"der/die/das fr\\xfchere\",\n        relatedForeignWords: \"vgl. Priorit\\xe4t (= Vorrang, Vorzug)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'acer/acris/acre',\n        inflections: '',\n        germanTranslation: '1) heftig; 2) spitz, scharf',\n        relatedForeignWords: '<-> cepi (von capere M) = \"ich habe gefangen\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'incipere',\n        inflections: 'incipio M, coepi, coeptum',\n        germanTranslation: 'beginnen, anfangen',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 19 ---\n    {\n        latinWord: '^con^Lektion 19: De Caesaris morte',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'maximus/a/um',\n        inflections: '',\n        germanTranslation: \"der gr\\xf6\\xdfte, sehr gro\\xdf\",\n        relatedForeignWords: 'vgl. maximal, maximieren, Maximum',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'potestas',\n        inflections: 'potestatis f.',\n        germanTranslation: 'Macht',\n        relatedForeignWords: 'vgl. posse =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dictator',\n        inflections: 'dictatoris m.',\n        germanTranslation: 'Diktator',\n        relatedForeignWords: \"Oberbefehlshaber in Kriegszeiten f\\xfcr max. 6 Monate\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'perpetuus/a/um',\n        inflections: '',\n        germanTranslation: 'ununterbrochen, ewig',\n        relatedForeignWords: 'dictator perpetuus = \"Diktator auf Lebenszeit\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'civis',\n        inflections: 'civis m.',\n        germanTranslation: \"B\\xfcrger\",\n        relatedForeignWords: 'vgl. Zivilist; civis =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'persuadere',\n        inflections: 'persuadeo 2, persuasi, persuasum',\n        germanTranslation: \"1) \\xfcberreden; 2) \\xfcberzeugen\",\n        relatedForeignWords: 'engl. to persuade, frz. persuader, ital. persuadere',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'persuadeo tibi',\n        inflections: '',\n        germanTranslation: \"ich \\xfcberrede dich (Akk.!)\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'mos',\n        inflections: 'moris m.',\n        germanTranslation: 'Sitte, Brauch',\n        relatedForeignWords: 'vgl. Moral (Sittenlehre); mos, mortis =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'lex',\n        inflections: 'legis f.',\n        germanTranslation: 'Gesetz',\n        relatedForeignWords: 'frz. loi, ital. legge, span. ley; vgl. legal, Legislative (= gesetzgebende Gewalt im Staat)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'libertas',\n        inflections: 'libertatis f.',\n        germanTranslation: 'Freiheit',\n        relatedForeignWords: \"engl. liberty, frz. libert\\xe9, span. libertad; vgl. liberare =\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'melior (m./f.)',\n        inflections: 'melius (n.)',\n        germanTranslation: 'besser',\n        relatedForeignWords: 'frz. meilleur, ital. miglior, span. mejor',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'caedes',\n        inflections: 'caedis f.',\n        germanTranslation: 'Ermordung, Mord',\n        relatedForeignWords: 'frz. homicide, ital. omicidio; engl. homicide',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vivere',\n        inflections: 'vivo 3, vixi, -',\n        germanTranslation: 'leben',\n        relatedForeignWords: 'frz. vivre, ital. vivere, span. vivir; engl. to survive',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'facilis/e',\n        inflections: '',\n        germanTranslation: 'leicht',\n        relatedForeignWords: 'frz. facile, ital. facile, span. facil; <-> difficilis =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'plurimi/ae/a',\n        inflections: '',\n        germanTranslation: 'die meisten',\n        relatedForeignWords: 'Superlativ zu multi/ae/a, siehe Lec. 17',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'statuere',\n        inflections: 'statuto 3, statui, statutum',\n        germanTranslation: \"1) beschlie\\xdfen; 2) aufstellen\",\n        relatedForeignWords: 'vgl. constituere; vgl. Statuten (= beschlossene Richtlinien)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'futurus/a/um',\n        inflections: '',\n        germanTranslation: \"zuk\\xfcnftig\",\n        relatedForeignWords: 'vgl. engl. future, frz. futur, ital. + span. futuro',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'adesse',\n        inflections: 'adsum, ades, adfui, -',\n        germanTranslation: 'da sein, anwesend sein',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quidem',\n        inflections: '',\n        germanTranslation: 'zwar, freilich',\n        relatedForeignWords: '<-> ne ... quidem =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iste, ista, istud',\n        inflections: '',\n        germanTranslation: 'dieser/es (da)',\n        relatedForeignWords: \"absch\\xe4tzig gemeint! (Deklination wie ille/illa/illud, S. 72)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'defendere',\n        inflections: 'defendo 3, defendi, defensum',\n        germanTranslation: 'verteidigen',\n        relatedForeignWords: \"frz. d\\xe9fendre, ital. difendere, span. defender; vgl. defensiv\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vulnus',\n        inflections: 'vulneris n.',\n        germanTranslation: 'Wunde',\n        relatedForeignWords: 'engl. vulnerable (= verletzlich, verwundbar)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ultimus/a/um',\n        inflections: '',\n        germanTranslation: 'der/die/das letzte',\n        relatedForeignWords: 'vgl. Ultimatum (= letzte Aufforderung)',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 20 ---\n    {\n        latinWord: '^con^Lektion 20: De Cleopatra',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'convenire',\n        inflections: 'convenio 4, conveni, conventum',\n        germanTranslation: 'zusammenkommen',\n        relatedForeignWords: 'vgl. Konvent (= Klostergemeinde; Zusammenkunft)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'mulier',\n        inflections: 'mulieris f.',\n        germanTranslation: 'Frau',\n        relatedForeignWords: 'span. mujer, vgl. ital. moglie (= \"Ehefrau\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'finis (Sg.)',\n        inflections: 'finis m.',\n        germanTranslation: '1) Grenze; 2) Ende',\n        relatedForeignWords: 'vgl. Finale (= Endspiel)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'fines (Pl.)',\n        inflections: 'finium m.',\n        germanTranslation: 'Gebiet(e)',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'regnum',\n        inflections: 'regni n.',\n        germanTranslation: \"1) K\\xf6nigreich, Reich; 2) Herrschaft\",\n        relatedForeignWords: 'vgl. engl. reign (\"Herrschaft\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'augere',\n        inflections: 'augeo 2, auxi, auctum',\n        germanTranslation: \"vergr\\xf6\\xdfern, steigern, vermehren\",\n        relatedForeignWords: 'vgl. Auktion (= Versteigerung)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'donum',\n        inflections: 'doni n.',\n        germanTranslation: 'Geschenk',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'mihi gaudio est',\n        inflections: '',\n        germanTranslation: 'es bereitet mir Freude',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ingens (m./f./n.)',\n        inflections: 'ingentis (2.F.)',\n        germanTranslation: 'riesig, gewaltig',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ante (Adv.)',\n        inflections: '',\n        germanTranslation: \"vorher, fr\\xfcher\",\n        relatedForeignWords: \"span. antes; <-> ante (Pr\\xe4p.)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'clades',\n        inflections: 'cladis f.',\n        germanTranslation: 'Niederlage',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'classis',\n        inflections: 'classis f.',\n        germanTranslation: 'Flotte',\n        relatedForeignWords: 'auch: \"Abteilung\" (davon \"Klasse\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'animadvertere',\n        inflections: 'animadverto 3, animadverti, -versum',\n        germanTranslation: 'bemerken, wahrnehmen',\n        relatedForeignWords: 'aus: animum ad ... vertere (w\\xf6rtl.: \"den Geist hinwenden zu ...\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'cedere',\n        inflections: 'cedo 3, cessi, cessum',\n        germanTranslation: 'weggehen, weichen',\n        relatedForeignWords: \"vgl. Rezession (= R\\xfcckgang der Wirtschaft)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'claudere',\n        inflections: 'claudo 3, clausi, clausum',\n        germanTranslation: \"einschlie\\xdfen; schlie\\xdfen\",\n        relatedForeignWords: 'ital. chiudere; vgl. Klausur, Numerus clausus',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'custos',\n        inflections: 'custodis m.',\n        germanTranslation: \"W\\xe4chter\",\n        relatedForeignWords: \"ital. custode; vgl. K\\xfcster (= Kirchendiener)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ponere',\n        inflections: 'pono 3, posui, positum',\n        germanTranslation: 'stellen, legen',\n        relatedForeignWords: 'engl. to put, span. poner; vgl. Position (= Lage)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'enim',\n        inflections: '(nachgestellt!)',\n        germanTranslation: \"denn, n\\xe4mlich\",\n        relatedForeignWords: 'z. B. tu enim = nam tu (\"denn du\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'auferre',\n        inflections: 'aufero, aufers, abstuli, ablatum',\n        germanTranslation: 'wegtragen, wegnehmen',\n        relatedForeignWords: 'aus: ab + ferre (= davontragen) vgl. \"Ablativ\" (dr\\xfcckt eine Trennung aus)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'serva',\n        inflections: 'servae f.',\n        germanTranslation: 'Sklavin',\n        relatedForeignWords: 'vgl. servus, -i =',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 21 ---\n    {\n        latinWord: '^con^Lektion 21: De Paridis iudicio',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'praeter (+ Akk.)',\n        inflections: '',\n        germanTranslation: \"au\\xdfer\",\n        relatedForeignWords: 'ital. + span. discordia; <=> concordia =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'discordia',\n        inflections: 'discordiae f.',\n        germanTranslation: 'Zwietracht, Streit',\n        relatedForeignWords: 'ital. + span. discordia; <=> concordia =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'controversia',\n        inflections: 'controversiae f.',\n        germanTranslation: 'Auseinandersetzung',\n        relatedForeignWords: 'vgl. Kontroverse; aus: contra + verterel',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iacere',\n        inflections: 'iacio M, ieci, iactum',\n        germanTranslation: 'werfen, schleudern',\n        relatedForeignWords: 'vgl. projizieren, Projektor',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Venus',\n        inflections: 'Veneris f.',\n        germanTranslation: \"G\\xf6ttin der Liebe (griech.: Aphrodite)\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'certare',\n        inflections: 'certo 1, -avi, -atum',\n        germanTranslation: '1) streiten; 2) wetteifern',\n        relatedForeignWords: 'vgl. Kon-zert',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iudicare',\n        inflections: 'iudico 1, -avi, -atum',\n        germanTranslation: '1) urteilen, beurteilen; 2) richten',\n        relatedForeignWords: 'vgl. iudicium, -i =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'deligere',\n        inflections: 'deligo 3, -legi, -lectum',\n        germanTranslation: \"ausw\\xe4hlen\",\n        relatedForeignWords: 'engl. election (= Wahl)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'praemium',\n        inflections: 'praemii n.',\n        germanTranslation: 'Belohnung, Preis',\n        relatedForeignWords: \"Pr\\xe4mie, pr\\xe4mieren\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'praeterea (Adv.)',\n        inflections: '',\n        germanTranslation: \"au\\xdferdem\",\n        relatedForeignWords: 'aus: praeter + ea (w\\xf6rtl.: \"au\\xdfer diesem\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dives (m./f./n.)',\n        inflections: 'divitis (2.F.)',\n        germanTranslation: 'reich',\n        relatedForeignWords: 'vgl. divitate, -arum =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'fortitudo',\n        inflections: 'fortitudinis f.',\n        germanTranslation: 'Tapferkeit',\n        relatedForeignWords: 'vgl. fortis/e =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quia',\n        inflections: '',\n        germanTranslation: 'weil',\n        relatedForeignWords: '= quod (Einleitung eines Kausalsatzes)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Graecia',\n        inflections: 'Graeciae f.',\n        germanTranslation: 'Griechenland',\n        relatedForeignWords: '<=> Graeci, -orum =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'decernere',\n        inflections: 'decerno 3, decrevi, decretum',\n        germanTranslation: \"beschlie\\xdfen\",\n        relatedForeignWords: 'vgl. Dekret (= amtlicher Beschluss)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'eo (Adv.)',\n        inflections: '',\n        germanTranslation: 'dorthin',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'fides',\n        inflections: 'fidei f.',\n        germanTranslation: 'Treue, Vertrauen (hier: Schutz)',\n        relatedForeignWords: 'ital. fede',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'mandare',\n        inflections: 'mando 1, -avi, -atum',\n        germanTranslation: 'anvertrauen',\n        relatedForeignWords: 'vgl. Mandant; eigentl.: in manum dare',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'occasio',\n        inflections: 'occasionis f.',\n        germanTranslation: 'Gelegenheit',\n        relatedForeignWords: \"engl. occasion, frz. occasion, span. ocasi\\xf3n\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iungere',\n        inflections: 'iungo 3, iunxi, iunctum',\n        germanTranslation: 'verbinden',\n        relatedForeignWords: 'vgl. con-iungere =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'maritus',\n        inflections: 'mariti m.',\n        germanTranslation: 'Gatte, Ehemann',\n        relatedForeignWords: 'frz. mari, ital. marito, span. marido',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'aut ... aut',\n        inflections: '',\n        germanTranslation: 'entweder ... oder',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'eiusmodi',\n        inflections: '(= huiusmodi)',\n        germanTranslation: 'derartig',\n        relatedForeignWords: 'w\\xf6rtl.: \"dieser Art\"; vgl. modus, Lec. 12',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Troia',\n        inflections: 'Troiae f.',\n        germanTranslation: 'Troja',\n        relatedForeignWords: '(siehe De Graecis S. 106)',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 22 ---\n    {\n        latinWord: '^con^Lektion 22: De ira Achillis',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'ira',\n        inflections: 'irae f.',\n        germanTranslation: 'Zorn',\n        relatedForeignWords: 'ital. + span. ira; vgl. iratus/a/um =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'moenia (Pl.)',\n        inflections: 'moenium n. (3. Dekl.)',\n        germanTranslation: '(Stadt-)Mauern',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'altus/a/um',\n        inflections: '',\n        germanTranslation: '1) hoch; 2) tief',\n        relatedForeignWords: 'ital. alto; vgl. Altstimme (tiefe Frauenstimme)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ut (+ Konj.)',\n        inflections: '',\n        germanTranslation: 'dass; damit; sodass',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Troiani (Pl.)',\n        inflections: 'Troianorum m.',\n        germanTranslation: 'die Trojaner',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'tenere',\n        inflections: 'teneo 2, tenui, -',\n        germanTranslation: 'halten',\n        relatedForeignWords: 'ital. tenere, span. tener',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'abstinere',\n        inflections: 'abstineo 2, abstinui, -',\n        germanTranslation: '(sich) fernhalten (von)',\n        relatedForeignWords: 'vgl. abstinent (= enthaltsam)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'imperium',\n        inflections: 'imperii n.',\n        germanTranslation: '1) Befehl; 2) Herrschaft; 3) Reich',\n        relatedForeignWords: 'engl. empire, frz. empire, vgl. Imperativ, Imperialismus',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'obtinere',\n        inflections: 'obtineo 2, obtinui, -',\n        germanTranslation: 'innehalten, besitzen',\n        relatedForeignWords: 'engl. to obtain',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'incendere',\n        inflections: 'incendo 3, incendi, incensum',\n        germanTranslation: \"anz\\xfcnden\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ne (+ Konj.)',\n        inflections: '',\n        germanTranslation: 'dass nicht; damit nicht',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'putare',\n        inflections: 'puto 1, putavi, putatum',\n        germanTranslation: \"1) glauben; 2) halten f\\xfcr\",\n        relatedForeignWords: 'puto te amicum = \"ich halte dich f\\xfcr einen Freund\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'interesse (+ Dat.)',\n        inflections: 'intersum, interfui, -',\n        germanTranslation: 'bewohnen, teilnehmen (an)',\n        relatedForeignWords: 'Interesse (geistig bei etwas dabei sein)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'complures (m./f.), complura (n.)',\n        inflections: '',\n        germanTranslation: 'mehrere',\n        relatedForeignWords: '<-> plurimi/ae/a = \"die meisten\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'caedere',\n        inflections: 'caedo 3, cecidi, caesum',\n        germanTranslation: \"(f\\xe4llen =) t\\xf6ten\",\n        relatedForeignWords: 'vgl. caedes, -is =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'deponere',\n        inflections: 'depono 3, deposui, depositum',\n        germanTranslation: 'ablegen, weglegen',\n        relatedForeignWords: 'vgl. deponieren, Deponie',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'equus',\n        inflections: 'equi m.',\n        germanTranslation: 'Pferd',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'trahere',\n        inflections: 'traho 3, traxi, tractum',\n        germanTranslation: 'ziehen',\n        relatedForeignWords: 'vgl. Traktor, subtrahieren (\"ab-ziehen\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'magis (Adv.)',\n        inflections: '',\n        germanTranslation: 'mehr',\n        relatedForeignWords: 'vgl. magister (w\\xf6rt.: einer, der \"mehr\" ist)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'preces (Pl.)',\n        inflections: 'precum f. (3. Dekl.)',\n        germanTranslation: 'die Bitten',\n        relatedForeignWords: 'vgl. ital. pregare',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'aurum',\n        inflections: 'auri n.',\n        germanTranslation: 'Gold',\n        relatedForeignWords: \"chem. Zeichen f\\xfcr Gold = Au\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'frater',\n        inflections: 'fratris m.',\n        germanTranslation: 'Bruder',\n        relatedForeignWords: \"frz. fr\\xe8re, ital. fratello\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Apollo',\n        inflections: 'Apollinis m.',\n        germanTranslation: 'Apoll',\n        relatedForeignWords: \"griech.-r\\xf6m. Gott der Weissagungskunst\",\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 23 ---\n    {\n        latinWord: '^con^Lektion 23: De equo Troiano',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'Troianus/a/um',\n        inflections: '',\n        germanTranslation: 'trojanisch',\n        relatedForeignWords: '<-> Troiani, -orum =',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'Ulixes',\n        inflections: \"Uli\\u0445is m.\",\n        germanTranslation: 'Odysseus',\n        relatedForeignWords: 'vgl. James Joyces Roman \"Ulysses\"',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'etsi',\n        inflections: '',\n        germanTranslation: 'wenn auch, obwohl',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'firmus/a/um',\n        inflections: '',\n        germanTranslation: 'stark',\n        relatedForeignWords: 'vgl. Firmung (= \"St\\xe4rkung\" im Glauben)',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'numquam (Adv.)',\n        inflections: '',\n        germanTranslation: 'niemals',\n        relatedForeignWords: 'span. nunca',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'includere',\n        inflections: 'includo 3, inclusi, inclusum',\n        germanTranslation: \"einschlie\\xdfen\",\n        relatedForeignWords: 'vgl. Inkludieren; inklusive',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'cum (+ Konj.)',\n        inflections: '',\n        germanTranslation: '1) als; 2) weil; 3) obwohl',\n        relatedForeignWords: '(siehe Grammatica)',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'apparere',\n        inflections: 'appareo 2, apparui, -',\n        germanTranslation: 'erscheinen',\n        relatedForeignWords: 'engl. to appear, ital. apparire, span. aparecer',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'intra (+ Akk.)',\n        inflections: '',\n        germanTranslation: 'innerhalb',\n        relatedForeignWords: \"vgl. internus, intramuskul\\xe4r etc.\",\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'favere (+ Dat.)',\n        inflections: 'faveo 2, favi, fautum',\n        germanTranslation: \"beg\\xfcnstigen, bevorzugen\",\n        relatedForeignWords: 'vgl. favorisieren',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'arx',\n        inflections: 'arcis f.',\n        germanTranslation: 'Burg',\n        relatedForeignWords: 'ars, artis =',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'victoria',\n        inflections: 'victoriae f.',\n        germanTranslation: 'Sieg',\n        relatedForeignWords: 'frz. victoire, ital. vittoria, span. victoria',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'vinum',\n        inflections: 'vini n.',\n        germanTranslation: 'Wein',\n        relatedForeignWords: 'frz. vin, ital. + span. vino',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'celebrare',\n        inflections: 'celebro 1, -avi, -atum',\n        germanTranslation: 'feiern',\n        relatedForeignWords: 'vgl. zelebrieren, engl. celebrities',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'universus/a/um',\n        inflections: '',\n        germanTranslation: 'alle (gemeinsam)',\n        relatedForeignWords: 'ital. universale; vgl. universal',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'interea (Adv.)',\n        inflections: '',\n        germanTranslation: 'inzwischen',\n        relatedForeignWords: 'aus: inter + ea = \"zwischen diesen (Dingen)\"',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'redire',\n        inflections: 'redeo, redii, reditum',\n        germanTranslation: \"zur\\xfcckkehren\",\n        relatedForeignWords: '-> reddere 3, reddidi, redditum =',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'aperire',\n        inflections: 'aperio 4, aperui, apertum',\n        germanTranslation: \"\\xf6ffnen\",\n        relatedForeignWords: 'frz. ouvrir, ital. aprire, span. abrir, vgl. Aperitif',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'flamma',\n        inflections: 'flammae f.',\n        germanTranslation: 'Flamme',\n        relatedForeignWords: 'ital. fiamma (fiammifero = Streichholz)',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'consumere',\n        inflections: 'consumo 3, consumpsi, consumptum',\n        germanTranslation: '1) vernichten; 2) verbrauchen',\n        relatedForeignWords: 'vgl. konsumieren, Konsument, Konsum',\n        probability: 0,\n        selected: false\n    },\n    // --- Unit 24 ---\n    {\n        latinWord: '^con^Lektion 24: De Cassandra',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'velle',\n        inflections: 'volo, vis, volui, -',\n        germanTranslation: 'wollen',\n        relatedForeignWords: '(siehe Grammatica); frz. vouloir, ital. volere',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nolle',\n        inflections: 'nolo, non vis, nolui, -',\n        germanTranslation: 'nicht wollen',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Noli me tangere!',\n        inflections: '(Verbot mit noli)',\n        germanTranslation: \"Ber\\xfchr mich nicht!\",\n        relatedForeignWords: 'Das sagte Jesus nach seiner Auferstehung zu Maria Magdalena.',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'verus/a/um',\n        inflections: '',\n        germanTranslation: 'wahr, echt',\n        relatedForeignWords: 'frz. vrai, ital. vero, span. verdadero',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'promittere',\n        inflections: 'promitto 3, promisi, promissum',\n        germanTranslation: 'versprechen',\n        relatedForeignWords: 'engl. to promise, frz. promettre, ital. promettere, span. prometer',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'sperare',\n        inflections: 'spero 1, -avi, -atum',\n        germanTranslation: 'hoffen, erhoffen',\n        relatedForeignWords: \"frz. esp\\xe9rer, ital. sperare, span. esperar\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'praebere',\n        inflections: 'praebeo 2, -ui, -itum',\n        germanTranslation: 'bieten, anbieten, geben',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'scientia',\n        inflections: 'scientiae f.',\n        germanTranslation: 'Wissen, Kenntnis',\n        relatedForeignWords: 'vgl. scire; engl. science, frz. science, ital. scienza, span. ciencia',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'usus',\n        inflections: 'usus m.',\n        germanTranslation: '1) Nutzen; 2) Gebrauch',\n        relatedForeignWords: 'engl. use, frz. utilit\\xe9; vgl. \"es ist Usus\" =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'usui esse',\n        inflections: '(Zweckdativ)',\n        germanTranslation: \"n\\xfctzlich sein\",\n        relatedForeignWords: 'w\\xf6rtl. = \"zum Nutzen sein\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'veritas',\n        inflections: 'veritatis f.',\n        germanTranslation: 'Wahrheit',\n        relatedForeignWords: \"frz. v\\xe9rit\\xe9, ital. verit\\xe0, span. verdad\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'credere',\n        inflections: 'credo 3, credidi, creditum',\n        germanTranslation: 'glauben',\n        relatedForeignWords: \"ital. credere; vgl. Credo, Kredit (Gl\\xe4ubiger)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'inde (Adv.)',\n        inflections: '',\n        germanTranslation: '1) von da an; 2) von dort',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ardere',\n        inflections: 'ardeo 2, arsi, -',\n        germanTranslation: 'brennen',\n        relatedForeignWords: 'vgl. ital. ardente, span. ardiente = brennend',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'tacere',\n        inflections: 'taceo 2, -ui, -',\n        germanTranslation: 'schweigen',\n        relatedForeignWords: 'frz. taire, ital. tacere',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'interire',\n        inflections: 'intereo, interii, interitum',\n        germanTranslation: 'sterben, untergehen',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'errare',\n        inflections: 'erro 1, -avi, -atum',\n        germanTranslation: 'irren, sich irren',\n        relatedForeignWords: 'ital. errare; vgl. engl. error',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'tollere',\n        inflections: 'tollo 3, sustuli, sublatum',\n        germanTranslation: 'aufheben, (er)heben',\n        relatedForeignWords: '<-> tolerare 1 = ertragen',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'orare',\n        inflections: 'oro 1, -avi, -atum',\n        germanTranslation: '1) (er)bitten; 2) beten',\n        relatedForeignWords: 'ital. orare, span. orar; vgl. Oratorium',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 25 ---\n    {\n        latinWord: '^con^Lektion 25: De Ulixe',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'poeta',\n        inflections: 'poetae m.',\n        germanTranslation: 'Dichter',\n        relatedForeignWords: \"Poet; frz. po\\xe8te, ital. + span. poeta\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'pervenire',\n        inflections: 'pervenio 4, perveni, perventum',\n        germanTranslation: 'kommen, gelangen',\n        relatedForeignWords: 'w\\xf6rtl.: \"durchkommen\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'inire',\n        inflections: 'ineo, inii, initum',\n        germanTranslation: 'hineingehen, betreten',\n        relatedForeignWords: 'vgl. etwas initiieren (= in Angriff nehmen), Initiative, Initialen (= Anfangsbuchstaben)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'exitus',\n        inflections: 'exitus m.',\n        germanTranslation: '1) Ausgang; 2) Ende, Tod',\n        relatedForeignWords: 'engl. exit',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dulcis/e',\n        inflections: '',\n        germanTranslation: \"s\\xfc\\xdf\",\n        relatedForeignWords: 'frz. doux/douce, ital. dolce (= Nachspeise)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'forte (Adv.)',\n        inflections: '',\n        germanTranslation: \"zuf\\xe4llig\",\n        relatedForeignWords: '<=> fortis/e =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'postulare',\n        inflections: 'postulo 1, -avi, -atum',\n        germanTranslation: 'fordern',\n        relatedForeignWords: 'vgl. postulieren, Postulat (= Forderung)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'gratia',\n        inflections: 'gratiae f.',\n        germanTranslation: 'Dank',\n        relatedForeignWords: 'ital. grazie, span. gracias; vgl. gratis (Abl.): \"um den (blo\\xdfen) Dank\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'gratias agere',\n        inflections: '',\n        germanTranslation: 'danken, Dank sagen',\n        relatedForeignWords: 'w\\xf6rtl.: \"Dank tun\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'tandem',\n        inflections: '',\n        germanTranslation: \"endlich, schlie\\xdflich\",\n        relatedForeignWords: '= postremo, denique; <=> tamen =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'plenus/a/um',\n        inflections: '(+ Gen.)',\n        germanTranslation: 'voll (mit/von)',\n        relatedForeignWords: 'frz. plein, ital. pieno, span. lleno; vgl. das Plenum (= die Vollversammlung)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ignis',\n        inflections: 'ignis m.',\n        germanTranslation: 'Feuer',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'sumere',\n        inflections: 'sumo 3, sumpsi, sumptum',\n        germanTranslation: 'nehmen',\n        relatedForeignWords: 'vgl. consumere =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'frons',\n        inflections: 'frontis f.',\n        germanTranslation: 'Stirn',\n        relatedForeignWords: 'ital. fronte, span. frente; vgl. Front, frontal',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'laedere',\n        inflections: 'laedo 3, laesi, laesum',\n        germanTranslation: 'verletzen',\n        relatedForeignWords: \"vgl. l\\xe4diert =\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vero',\n        inflections: '',\n        germanTranslation: 'aber',\n        relatedForeignWords: 'versus/a/um (Adjektiv) =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'constat',\n        inflections: 'constitit, -',\n        germanTranslation: 'es steht fest (+ ACI: dass)',\n        relatedForeignWords: \"vgl. konstant, Konstante (= unver\\xe4nderbarer Wert)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'posterus/a/um',\n        inflections: '',\n        germanTranslation: 'folgend, nachfolgend',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'postero die',\n        inflections: '(Zeitablativ)',\n        germanTranslation: 'am folgenden Tag',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'diligens (m./f./n.)',\n        inflections: 'diligentis (2.F.)',\n        germanTranslation: \"sorgf\\xe4ltig, genau\",\n        relatedForeignWords: 'engl. diligent, ital. + span. diligente',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'prodesse',\n        inflections: 'prosum, prodes, profui, -',\n        germanTranslation: \"n\\xfctzen\",\n        relatedForeignWords: 'vgl. Prosit! (= \"Es soll dir n\\xfctzen!\")',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 26 ---\n    {\n        latinWord: '^con^Lektion 26: De incendio Romae',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'incendium',\n        inflections: 'incendii n.',\n        germanTranslation: 'Brand',\n        relatedForeignWords: 'ital. + span. incendio; vgl. incendere =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'princeps',\n        inflections: 'principis m.',\n        germanTranslation: '1) der Erste; 2) Prinzeps, Kaiser',\n        relatedForeignWords: \"vgl. Prinz, der Prinzipat (= r\\xf6mische Kaiserzeit)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'gravis/e',\n        inflections: '',\n        germanTranslation: 'schwer; schwerwiegend',\n        relatedForeignWords: 'gravierend, frz. grave, ital. + span. grave',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'existere',\n        inflections: 'existo 3, exstiti, -',\n        germanTranslation: 'entstehen',\n        relatedForeignWords: 'engl. to exist, ital. esistere, span. existir; vgl. existieren, Existenz',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'auctor',\n        inflections: 'auctoris m.',\n        germanTranslation: '1) Autor; 2) Urheber, Anstifter',\n        relatedForeignWords: '(> S. 141); frz. auteur, ital. autore, span. autor; vgl. auctoritas, -atis =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vastare',\n        inflections: 'vasto 1, -avi, -atum',\n        germanTranslation: \"verw\\xfcsten\",\n        relatedForeignWords: \"vgl. devastieren (= v\\xf6llig zerst\\xf6ren)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'numerus',\n        inflections: 'numeri m.',\n        germanTranslation: 'Zahl, Anzahl',\n        relatedForeignWords: 'Nummer; vgl. Numerus clausus',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'privatus/a/um',\n        inflections: '',\n        germanTranslation: 'privat',\n        relatedForeignWords: \"frz. priv\\xe9, ital. privato, span. privado\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'publicus/a/um',\n        inflections: '',\n        germanTranslation: \"\\xf6ffentlich\",\n        relatedForeignWords: \"engl. public; vgl. publizieren (= ver\\xf6ffentlichen)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'fama',\n        inflections: 'famae f.',\n        germanTranslation: \"1) Ger\\xfccht; 2) Ruf\",\n        relatedForeignWords: \"ital. + span. fama; vgl. famos (= gro\\xdfartig)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'fama erat',\n        inflections: '',\n        germanTranslation: \"es gab das Ger\\xfccht\",\n        relatedForeignWords: 'est sunt kann auch \"es gibt\" bedeuten!',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'magnitudo',\n        inflections: 'magnitudinis f.',\n        germanTranslation: \"Gr\\xf6\\xdfe\",\n        relatedForeignWords: 'frz. magnitude',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ornare',\n        inflections: 'orno 1, -avi, -atum',\n        germanTranslation: \"schm\\xfccken\",\n        relatedForeignWords: 'ital. ornare, vgl. Ornament (= Verzierung)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'postea (Adv.)',\n        inflections: '',\n        germanTranslation: \"sp\\xe4ter\",\n        relatedForeignWords: '<=> post (+ Akk.) =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'appellare',\n        inflections: 'appello 1, -avi, -atum (+ Gen.)',\n        germanTranslation: '1) nennen; 2) rufen',\n        relatedForeignWords: 'frz. appeler, vgl. Appell (= Aufruf)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'cupidus/a/um',\n        inflections: '',\n        germanTranslation: 'gierig (nach)',\n        relatedForeignWords: 'vgl. cupiditas, -atis =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'cupidus gloriae',\n        inflections: '',\n        germanTranslation: 'gierig nach Ruhm',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'condere',\n        inflections: 'condo 3, condidi, conditum',\n        germanTranslation: \"gr\\xfcnden\",\n        relatedForeignWords: 'vgl. urbe condita (a. u. c., siehe unten)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'usque ad (+ Akk.)',\n        inflections: '',\n        germanTranslation: 'bis zu',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'iussu',\n        inflections: '',\n        germanTranslation: 'auf Befehl',\n        relatedForeignWords: 'vgl. iubere, iussi, iussum =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'Christianus/i',\n        inflections: 'Christianorum m.',\n        germanTranslation: 'die Christen',\n        relatedForeignWords: \"frz. chr\\xe9tiens, ital. cristiani, span. cristianos\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'crimen',\n        inflections: 'criminis n.',\n        germanTranslation: '1) Verbrechen; 2) Vorwurf',\n        relatedForeignWords: \"frz. crime, ital. crimine, span. crimen, engl. crime; vgl. Kriminalit\\xe4t, kriminell\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'accusare',\n        inflections: 'accuso 1, -avi, -atum',\n        germanTranslation: 'anklagen',\n        relatedForeignWords: 'engl. to accuse, frz. accuser, ital. accusare',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quasi',\n        inflections: '',\n        germanTranslation: 'gleichsam (als), wie',\n        relatedForeignWords: '<=> ital. quasi, span. casi = \"fast\"!',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 27 ---\n    {\n        latinWord: '^con^Lektion 27: De martyrio sancti Petri',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'sanctus/a/um',\n        inflections: '',\n        germanTranslation: 'heilig',\n        relatedForeignWords: 'engl. saint, frz. saint; vgl. Sankt Stefan (etc.)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'cultus',\n        inflections: 'cultus m.',\n        germanTranslation: 'Verehrung',\n        relatedForeignWords: \"vgl. Kult (= religi\\xf6se Verehrung)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dubitare',\n        inflections: 'dubito 1, -avi, -atum',\n        germanTranslation: \"1) z\\xf6gern; 2) zweifeln\",\n        relatedForeignWords: 'engl. to doubt, ital. dubitare, span. dudar',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'commovere',\n        inflections: 'commoveo 2, commovi, commotum',\n        germanTranslation: '1) (heftig) bewegen; 2) veranlassen',\n        relatedForeignWords: 'vgl. movere =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'fuga',\n        inflections: 'fugae f.',\n        germanTranslation: 'Flucht',\n        relatedForeignWords: 'vgl. fugere; Refugium (= Zufluchtsort), Zentrifuge',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'proximus/a/um',\n        inflections: '',\n        germanTranslation: \"der n\\xe4chste\",\n        relatedForeignWords: \"frz. prochain, ital. prossimo, span. pr\\xf3ximo\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'repente (Adv.)',\n        inflections: '',\n        germanTranslation: \"pl\\xf6tzlich\",\n        relatedForeignWords: '= subito; span. de repente',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'obviam (Adv.)',\n        inflections: '',\n        germanTranslation: 'entgegen',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'videtur (+ Inf.)',\n        inflections: '',\n        germanTranslation: 'er/sie/es scheint',\n        relatedForeignWords: '(NCI, siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dominus',\n        inflections: 'domini m.',\n        germanTranslation: 'Herr',\n        relatedForeignWords: 'vgl. dominieren =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quo',\n        inflections: '',\n        germanTranslation: 'wohin',\n        relatedForeignWords: '<=> eo =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vadere',\n        inflections: 'vado 3, -',\n        germanTranslation: 'gehen',\n        relatedForeignWords: 'vgl. Invasion (= kriegerischer Einmarsch)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dicitur (+ Inf.)',\n        inflections: '',\n        germanTranslation: 'er/sie/es soll (angeblich)',\n        relatedForeignWords: '(NCI, siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'lacrima',\n        inflections: 'lacrimae f.',\n        germanTranslation: \"Tr\\xe4ne\",\n        relatedForeignWords: 'frz. larme, ital. lacrima',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'referre',\n        inflections: 'refero, rettuli, relatum',\n        germanTranslation: \"1) zur\\xfcckbringen; 2) berichten\",\n        relatedForeignWords: 'vgl. referieren, Referent',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'sic',\n        inflections: '',\n        germanTranslation: 'so',\n        relatedForeignWords: '= ita, tam',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'salus',\n        inflections: 'salutis f.',\n        germanTranslation: \"1) Heil, Rettung; 2) Gru\\xdf\",\n        relatedForeignWords: 'vgl. salutieren; Salut!',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'mundus',\n        inflections: 'mundi m.',\n        germanTranslation: 'Welt',\n        relatedForeignWords: 'frz. monde, ital. mondo, span. mundo; vgl. Minimmundus',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'dignus/a/um',\n        inflections: '(+ Abl.)',\n        germanTranslation: \"w\\xfcrdig (+ Gen.)\",\n        relatedForeignWords: 'ital. degno, frz. digne, span. digno; vgl. engl. dignity =',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 28 ---\n    {\n        latinWord: '^con^Lektion 28: De Marco Aurelio',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'dividere',\n        inflections: 'divido 3, divisi, divisum',\n        germanTranslation: 'trennen, teilen',\n        relatedForeignWords: 'engl. to divide; vgl. dividieren, Division',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'transire',\n        inflections: 'transeo, transii, transitum',\n        germanTranslation: \"\\xfcberqueren, hin\\xfcbergehen\",\n        relatedForeignWords: 'aus: trans + ire; vgl. Transitverkehr',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'gens',\n        inflections: 'gentis f.',\n        germanTranslation: 'Volk',\n        relatedForeignWords: 'frz. gens, ital. + span. gente (= Leute) -> genus, -eris n.',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'traducere',\n        inflections: 'traduco 3, traduxi, traductum',\n        germanTranslation: \"hin\\xfcberf\\xfchren\",\n        relatedForeignWords: 'aus: trans + ducere',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'adhuc (Adv.)',\n        inflections: '',\n        germanTranslation: 'bis jetzt; bisher',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'felix (m./f./n.)',\n        inflections: 'felicis (2.F.)',\n        germanTranslation: \"gl\\xfccklich, erfolgreich\",\n        relatedForeignWords: \"ital. felice, span. feliz; vgl. frz. f\\xe9licit\\xe9\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'fortuna',\n        inflections: 'fortunae f.',\n        germanTranslation: \"1) Gl\\xfcck; 2) Schicksal\",\n        relatedForeignWords: 'engl. + frz. fortune, ital. + span. fortuna',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'eques',\n        inflections: 'equitis m.',\n        germanTranslation: 'Reiter; Ritter',\n        relatedForeignWords: '<=> equus, -i',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'campus',\n        inflections: 'campi m.',\n        germanTranslation: 'Feld',\n        relatedForeignWords: 'frz. champ, vgl. Camping, der Uni-Campus',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'aestas',\n        inflections: 'aestatis f.',\n        germanTranslation: 'Sommer',\n        relatedForeignWords: \"frz. \\xe9t\\xe9, ital. estate; <=> aetas, -atis f. =\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'deesse',\n        inflections: 'desum, dees, defui, -',\n        germanTranslation: 'fehlen',\n        relatedForeignWords: 'w\\xf6rtl.: \"weg sein\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'fessus/a/um',\n        inflections: '',\n        germanTranslation: \"ersch\\xf6pft, m\\xfcde\",\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vix (Adv.)',\n        inflections: '',\n        germanTranslation: 'kaum',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ullus/a/um',\n        inflections: 'ullius (2.F.), ulli (3.F.)',\n        germanTranslation: 'irgend ein(e)',\n        relatedForeignWords: '<=> nullus =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'spes',\n        inflections: 'spei f.',\n        germanTranslation: 'Hoffnung',\n        relatedForeignWords: 'frz. espoir, ital. speranza, span. esperanza; vgl. sperare =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'rogare',\n        inflections: 'rogo 1, -avi, -atum',\n        germanTranslation: '1) bitten; 2) fragen',\n        relatedForeignWords: 'vgl. interrogare =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'divinus/a/um',\n        inflections: '',\n        germanTranslation: \"g\\xf6ttlich\",\n        relatedForeignWords: 'engl. divine, frz. divin, ital. + span. divino; vgl. Diva',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'ecce!',\n        inflections: '',\n        germanTranslation: 'siehe!',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'miraculum',\n        inflections: 'miraculi n.',\n        germanTranslation: 'Wunder',\n        relatedForeignWords: 'engl. miracle; vgl. Mirakel, Miraculus (Zauberei!)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'accidere',\n        inflections: 'accido 3, accidi, -',\n        germanTranslation: 'geschehen',\n        relatedForeignWords: 'vgl. engl. accident =',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 29 ---\n    {\n        latinWord: '^con^Lektion 29: De Constantino victore',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'victor',\n        inflections: 'victoris m.',\n        germanTranslation: 'siegreich; Sieger',\n        relatedForeignWords: 'vgl. Viktor; <=> victoria, -ae =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'civilis/e',\n        inflections: '',\n        germanTranslation: \"b\\xfcrgerlich; B\\xfcrger-\",\n        relatedForeignWords: 'vgl. zivil, engl. + frz. civil, ital. civile, span. civil',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'metuere',\n        inflections: 'metuo 3, metui, -',\n        germanTranslation: \"f\\xfcrchten\",\n        relatedForeignWords: 'ital. temere, span. temer',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'oraculum',\n        inflections: 'oraculi n.',\n        germanTranslation: 'Orakel(spruch)',\n        relatedForeignWords: 'frz. oracle, ital. oracolo, span. oraculo',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'extra (+ Akk.)',\n        inflections: '',\n        germanTranslation: \"au\\xdferhalb\",\n        relatedForeignWords: 'vgl. E.T. = Extraterrestris, das Extra, extravagant Pronominale Deklination (S. 72)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'uterque, utraque, utrumque',\n        inflections: 'utriusque (2.F.), utrique (3.F.)',\n        germanTranslation: 'jeder von beiden, beide',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'notus/a/um',\n        inflections: '',\n        germanTranslation: 'bekannt',\n        relatedForeignWords: '<=> ignotus/a/um =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'signum',\n        inflections: 'signi n.',\n        germanTranslation: 'Zeichen',\n        relatedForeignWords: \"engl. sign, frz. signe, ital. segno, span. se\\xf1al\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'scribere',\n        inflections: 'scribo 3, scripsi, scriptum',\n        germanTranslation: 'schreiben',\n        relatedForeignWords: \"frz. \\xe9crire, ital. scrivere, span. escribir; vgl. Skriptum, Manuskript\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'prope (+ Akk.)',\n        inflections: '',\n        germanTranslation: 'nahe bei',\n        relatedForeignWords: 'vgl. app-propinquare =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'pons',\n        inflections: 'pontis m.',\n        germanTranslation: \"Br\\xfccke\",\n        relatedForeignWords: 'vgl. Pontifex maximus (= der Papst)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'plebs',\n        inflections: 'plebis f.',\n        germanTranslation: '(niedriges) Volk',\n        relatedForeignWords: 'vgl. Plebiszit (= Volksabstimmung)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'causa',\n        inflections: 'causae f.',\n        germanTranslation: 'Grund, Ursache',\n        relatedForeignWords: \"vgl. Kausalsatz (= Begr\\xfcndungssatz)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'qua de causa',\n        inflections: '',\n        germanTranslation: '1) deshalb; 2) weshalb',\n        relatedForeignWords: 'w\\xf6rtl.: \"aus welchem Grund\"',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'consulere',\n        inflections: 'consulo 3, consului, consultum',\n        germanTranslation: 'befragen, um Rat fragen',\n        relatedForeignWords: 'vgl. konsultieren, Konsul (= \"Berater\")',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nuntiare',\n        inflections: 'nuntio 1, -avi, -atum',\n        germanTranslation: 'melden',\n        relatedForeignWords: 'vgl. nuntius, -i =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'hodie (Adv.)',\n        inflections: '',\n        germanTranslation: 'heute',\n        relatedForeignWords: 'aus: hoc + die =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'adducere',\n        inflections: 'adduco 3, adduxi, adductum',\n        germanTranslation: \"1) hinf\\xfchren; 2) veranlassen\",\n        relatedForeignWords: 'vgl. adductus/a/um =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'studium',\n        inflections: 'studii n.',\n        germanTranslation: 'Eifer, Begeisterung',\n        relatedForeignWords: 'vgl. Studium; vgl. studere =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'premere',\n        inflections: 'premo 3, pressi, pressum',\n        germanTranslation: \"1) dr\\xfccken; 2) bedr\\xe4ngen\",\n        relatedForeignWords: 'vgl. pressen; frz. presser; vgl. engl. pressure',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'pellere',\n        inflections: 'pello 3, pepuli, pulsum',\n        germanTranslation: \"schlagen, sto\\xdfen\",\n        relatedForeignWords: 'vgl. Puls; vgl. expellere =',\n        selected: true,\n        probability: 1\n    },\n    // --- Unit 30 ---\n    {\n        latinWord: '^con^Lektion 30: De beneficio sancti Martini',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        probability: 0,\n        selected: false\n    },\n    {\n        latinWord: 'beneficium',\n        inflections: 'beneficii n.',\n        germanTranslation: 'Wohltat',\n        relatedForeignWords: 'vgl. Benefizveranstaltung; aus: bene + facere',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'hiems',\n        inflections: 'hiemis f.',\n        germanTranslation: 'Winter',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'pauper (m./f./n.)',\n        inflections: 'pauperis (2.F.)',\n        germanTranslation: 'arm',\n        relatedForeignWords: 'frz. pauvre, ital. povero, span. pobre',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vestis',\n        inflections: 'vestis f.',\n        germanTranslation: 'Gewand',\n        relatedForeignWords: 'ital. vestiti; vgl. Weste, Transvestit, Investitur',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'pati (D)',\n        inflections: 'patior M, passus sum',\n        germanTranslation: '1) ertragen; 2) erleiden',\n        relatedForeignWords: 'vgl. passiv, Patient, Passion (= Leidensgeschichte)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'misericordia',\n        inflections: 'misericordiae f.',\n        germanTranslation: 'Mitleid',\n        relatedForeignWords: 'ital. misericordia; vgl. miser =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'nudus/a/um',\n        inflections: '',\n        germanTranslation: 'nackt',\n        relatedForeignWords: 'frz. nu, ital. nudo, span. desnudo; vgl. Nudist',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'reliquus/a/um',\n        inflections: '',\n        germanTranslation: \"\\xfcbrig\",\n        relatedForeignWords: '<=> relictus (PPP von relinquere) =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'similis/e',\n        inflections: '',\n        germanTranslation: \"\\xe4hnlich\",\n        relatedForeignWords: 'engl. similar, ital. simile, frz. similaire, span. similar; vgl. As-similation (\"Anpassung\", S. 119)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'militaris/e',\n        inflections: '',\n        germanTranslation: \"milit\\xe4risch, Milit\\xe4r-\",\n        relatedForeignWords: '<=> miles, -itis =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'alter/era/erum',\n        inflections: 'alterius (2.F.), alteri (3.F.)',\n        germanTranslation: 'der andere (von zweien)',\n        relatedForeignWords: 'vgl. Alternative, das Alter Ego (= zweites Ich), Altruismus (= Selbstlosigkeit)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'alter - alter',\n        inflections: '',\n        germanTranslation: 'der eine - der andere',\n        relatedForeignWords: '(siehe Grammatica)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'mens',\n        inflections: 'mentis f.',\n        germanTranslation: 'Geist, Verstand, Sinn',\n        relatedForeignWords: \"vgl. mental, Mentalit\\xe4t (= Geisteshaltung)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'sanus/a/um',\n        inflections: '',\n        germanTranslation: \"gesund; vern\\xfcnftig\",\n        relatedForeignWords: \"<=> sanare; vgl. Sanit\\xe4ter; SPA (siehe S. 27)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'queri (D)',\n        inflections: 'queror 3, questus sum',\n        germanTranslation: 'klagen',\n        relatedForeignWords: '<=> quaerere, quaesivi, quaesitum =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'humanus/a/um',\n        inflections: '',\n        germanTranslation: 'menschlich',\n        relatedForeignWords: 'engl. human, frz. humain; vgl. Humanbiologie',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'possidere',\n        inflections: 'possideo 2, possedi, possessum',\n        germanTranslation: 'besitzen',\n        relatedForeignWords: 'engl. to possess, vgl. Possessivpronomen (= besitzanzeigendes F\\xfcrwort, z.B. \"mein\" etc.)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'sequi (D)',\n        inflections: 'sequor 3, secutus sum',\n        germanTranslation: 'folgen',\n        relatedForeignWords: 'vgl. Sequenz (= Abfolge); Con-secutio temporum',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'sequi te (Akk.!)',\n        inflections: '',\n        germanTranslation: 'ich folge dir (Dativ!)',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'tegere',\n        inflections: 'tego 3, texi, tectum',\n        germanTranslation: 'bedecken',\n        relatedForeignWords: \"vgl. Toga (= K\\xf6rperbedeckung)\",\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'loqui (D)',\n        inflections: 'loquor 3, locutus sum',\n        germanTranslation: 'sprechen',\n        relatedForeignWords: 'vgl. eloquent (= redegewandt)',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'vereri (D)',\n        inflections: 'vereor 2, veritus sum',\n        germanTranslation: \"1) f\\xfcrchten; 2) sich scheuen\",\n        relatedForeignWords: 'vereri = timere / metuere',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'quidquid',\n        inflections: '',\n        germanTranslation: 'was auch immer; alles was',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'hortari (D)',\n        inflections: 'hortor 1, hortatus sum',\n        germanTranslation: 'auffordern, ermuntern',\n        relatedForeignWords: '',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: 'servire',\n        inflections: 'servio 4, -ivi, -itum',\n        germanTranslation: 'dienen',\n        relatedForeignWords: 'frz. + span. servir, vgl. servieren; <=> servare =',\n        selected: true,\n        probability: 1\n    },\n    {\n        latinWord: '^con^Eigene Vokabeln:',\n        inflections: '',\n        germanTranslation: '',\n        relatedForeignWords: '',\n        selected: false,\n        probability: 0\n    }\n];\n\n\nclass $4d277e047e39cff6$export$69a62912f7243a04 {\n    constructor(){\n        this.vocabulary = [];\n        this.wordIndex = 0;\n        this.enterMode = false;\n        this.commandMode = false;\n        this.automaticPaddingAdjustment = false;\n        this.command = '';\n        this.padding = [\n            undefined,\n            undefined,\n            undefined,\n            undefined\n        ];\n        this.inputIndex = 0;\n        this.keys = 0;\n        this.currentWord = {\n            latinWord: '',\n            inflections: '',\n            germanTranslation: '',\n            relatedForeignWords: '',\n            selected: true,\n            probability: 1\n        };\n        this.animatedBorderWidth = 0;\n        this.upgradeNeeded = false;\n        const request = window.indexedDB.open('Vocabulary', 2);\n        request.addEventListener('error', (_)=>{\n            console.error('There is an error. Have fun fixing it. Details:' + request.error);\n        });\n        request.addEventListener('upgradeneeded', ()=>{\n            const db = request.result;\n            if (!db.objectStoreNames.contains('vocabulary')) {\n                const objectStore = db.createObjectStore(`vocabulary`, {\n                    autoIncrement: true\n                });\n                objectStore.createIndex(\"latinWord\", \"latinWord\", {\n                    unique: false\n                });\n                objectStore.createIndex(\"inflections\", \"inflections\", {\n                    unique: false\n                });\n                objectStore.createIndex(\"germanTranslation\", \"germanTranslation\", {\n                    unique: false\n                });\n                objectStore.createIndex(\"relatedForeignWords\", \"relatedForeignWords\", {\n                    unique: false\n                });\n                objectStore.createIndex(\"selected\", \"selected\", {\n                    unique: false\n                });\n                objectStore.createIndex(\"probability\", \"probability\", {\n                    unique: false\n                });\n            }\n            if (!db.objectStoreNames.contains('inflected vocabulary')) {\n                const objectStore2 = db.createObjectStore(`inflected vocabulary`, {\n                    autoIncrement: true\n                });\n                objectStore2.createIndex(\"singular\", \"singular\", {\n                    unique: false\n                });\n                objectStore2.createIndex(\"plural\", \"plural\", {\n                    unique: false\n                });\n                objectStore2.createIndex(\"verb\", \"verb\", {\n                    unique: false\n                });\n                objectStore2.createIndex(\"probability\", \"probability\", {\n                    unique: false\n                });\n            }\n            this.database = request.result;\n            this.upgradeNeeded = true;\n        });\n        request.addEventListener('success', (_)=>{\n            this.database = request.result;\n            const transaction = this.database.transaction('vocabulary', 'readonly');\n            transaction.onerror = ()=>console.error(transaction.error);\n            const objectStore = transaction.objectStore('vocabulary');\n            const req = objectStore.getAll();\n            req.onerror = ()=>console.error(req.error);\n            req.onsuccess = ()=>{\n                this.vocabulary = req.result;\n                this.wordIndex = this.vocabulary.length;\n                if (this.upgradeNeeded) {\n                    this.vocabulary = (0, $5510b14661877595$export$acdc19bbe942e978).concat(this.vocabulary);\n                    const writeTransaction = this.database.transaction('vocabulary', 'readwrite');\n                    writeTransaction.onerror = ()=>console.error(writeTransaction.error);\n                    const objSt = writeTransaction.objectStore('vocabulary');\n                    this.vocabulary.forEach((word, index)=>{\n                        const req = objSt.put(word, index + 1);\n                        req.onerror = ()=>console.error(req.error);\n                    });\n                }\n            };\n        });\n        const notImportantRequest_____yet = window.indexedDB.open('player data', 2);\n        notImportantRequest_____yet.addEventListener('upgradeneeded', (event)=>{\n            const db = notImportantRequest_____yet.result;\n            if (!db.objectStoreNames.contains('versions played')) db.createObjectStore('versions played', {\n                autoIncrement: true\n            });\n            notImportantRequest_____yet.addEventListener('success', (event)=>{\n                const db = notImportantRequest_____yet.result;\n                const transaction = db.transaction('versions played', 'readwrite');\n                const objectStore = transaction.objectStore('versions played');\n                objectStore.add('Beta Reversion');\n                transaction.oncomplete = ()=>{\n                    console.log('Data added successfully');\n                };\n                transaction.onerror = (event)=>{\n                    console.error('Transaction error:', notImportantRequest_____yet.error);\n                };\n            });\n            notImportantRequest_____yet.addEventListener('error', (event)=>{\n                console.error('Database error:', notImportantRequest_____yet.error);\n            });\n        });\n    }\n    modifyDocument() {\n        const request = window.indexedDB.open('Vocabulary', 2);\n        request.addEventListener('error', (_)=>{\n            console.error('There is an error. Have fun fixing it. Details:' + request.error);\n        });\n        request.addEventListener('success', (_)=>{\n            this.database = request.result;\n            const transaction = this.database.transaction('vocabulary', 'readonly');\n            transaction.onerror = ()=>console.error(transaction.error);\n            const objectStore = transaction.objectStore('vocabulary');\n            const req = objectStore.getAll();\n            req.onerror = ()=>console.error(req.error);\n            req.onsuccess = ()=>{\n                this.vocabulary = req.result;\n                this.wordIndex = this.vocabulary.length;\n                this.container = document.querySelector('#container');\n                this.iconPlaceholder = document.querySelector('#icon-placeholder');\n                this.navbar = document.querySelector('#navbar');\n                this.container.style.padding = '0';\n                document.body.style.backgroundImage = 'none';\n                document.body.setAttribute('class', '');\n                this.container.setAttribute('class', '');\n                this.iconPlaceholder.setAttribute('class', '');\n                this.navbar.setAttribute('class', '');\n                this.container.innerHTML = '';\n                this.iconPlaceholder.innerHTML = '';\n                this.navbar.innerHTML = '';\n                document.querySelector('body').classList.add('addVocabularyBody');\n                this.iconPlaceholder.classList.add('addVocabularyIconPlaceholder');\n                let addVocabularyIcon = document.createElement('object');\n                addVocabularyIcon.data = './add_vocabulary.svg';\n                addVocabularyIcon.id = 'addVocabularyIcon';\n                this.iconPlaceholder.insertAdjacentElement('beforeend', addVocabularyIcon);\n                this.container.classList.add('addVocabularyContainer');\n                for(let i = 0; i < 4; i++){\n                    let div = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`div${i}`, 'addVocabularyInput');\n                    this.container.appendChild(div);\n                    this.padding[i] = 0.05 * div.offsetHeight;\n                    div.style.padding = `${0.05 * div.offsetHeight}px 0.5vw`;\n                }\n                this.navbar.classList.add('addVocabularyNavbar');\n                this.buttonLeft = document.createElement('button');\n                this.buttonLeft.classList.add('navButton');\n                this.buttonLeft.innerHTML = '<';\n                this.navbar.appendChild(this.buttonLeft);\n                this.homeButton = document.createElement('button');\n                this.homeButton.classList.add('navButton');\n                let icon = document.createElement('object');\n                icon.classList.add('homeIcon');\n                icon.data = './home.svg';\n                icon.style.height = '9vh';\n                icon.addEventListener('load', (_)=>{\n                    icon.contentDocument.addEventListener('click', (_)=>{\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n                    });\n                });\n                this.homeButton.insertAdjacentElement('beforeend', icon);\n                this.navbar.appendChild(this.homeButton);\n                this.buttonRight = document.createElement('button');\n                this.buttonRight.classList.add('navButton');\n                this.buttonRight.innerHTML = '>';\n                this.navbar.appendChild(this.buttonRight);\n                this.type();\n            };\n        });\n        let animation = null;\n        this.resizeFunction = ()=>{\n            if (animation !== null) {\n                clearTimeout(animation);\n                animation = null;\n            }\n            for(let i = 0; i < this.container.children.length; i++){\n                let div = this.container.children[i];\n                let value = Object.values(this.currentWord)[i];\n                this.adjustInputWidth(div, value, false);\n            }\n            animation = setTimeout(()=>{\n                for(let i = 0; i < this.container.childElementCount; i++)if (this.automaticPaddingAdjustment) this.automaticPaddingAnimation(this.container.children[i], false, false);\n                else this.paddingAnimation(this.container.children[i]);\n            }, 200);\n        };\n        window.addEventListener(\"resize\", this.resizeFunction);\n    }\n    type() {\n        for(let i = 0; i < this.container.childElementCount; i++)this.container.children[i].addEventListener('click', (_)=>{\n            if (this.commandMode) {\n                this.command.split('').forEach((_)=>{\n                    this.selectedInput.lastElementChild.remove();\n                    this.keys--;\n                });\n                this.command = '';\n                this.commandMode = false;\n            }\n            this.inputIndex = i;\n            this.changeSelectedInput();\n            this.enterMode = false;\n        });\n        this.container.children[this.inputIndex].classList.add('selected');\n        this.selectedInput = this.container.children[this.inputIndex];\n        this.changeSelectedInput();\n        this.homeButton.addEventListener('click', (_)=>{\n            (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n            (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n        });\n        this.buttonLeft.addEventListener('mousedown', (_)=>{\n            for(let i = 0; i < this.container.childElementCount; i++){\n                this.container.children[i].classList.add('shadow');\n                this.buttonLeft.classList.add('clicked');\n            }\n        });\n        this.buttonRight.addEventListener('mousedown', (_)=>{\n            for(let i = 0; i < this.container.childElementCount; i++){\n                this.container.children[i].classList.add('shadow');\n                this.buttonRight.classList.add('clicked');\n            }\n        });\n        this.buttonLeft.addEventListener('mouseout', (_)=>{\n            for(let i = 0; i < this.container.childElementCount; i++){\n                this.container.children[i].classList.remove('shadow');\n                this.buttonLeft.classList.remove('clicked');\n            }\n        });\n        this.buttonRight.addEventListener('mouseout', (_)=>{\n            for(let i = 0; i < this.container.childElementCount; i++){\n                this.container.children[i].classList.remove('shadow');\n                this.buttonRight.classList.remove('clicked');\n            }\n        });\n        this.buttonLeftFunction = ()=>{\n            if (this.vocabulary[this.wordIndex - 1]) {\n                if (Object.values(this.currentWord).filter((value)=>value === '').length === 4 && this.wordIndex === this.vocabulary.length) {\n                    for(let i = 0; i < this.container.childElementCount; i++)this.container.children[i].classList.remove('shadow');\n                    this.wordIndex--;\n                    if (this.vocabulary[this.wordIndex].latinWord.includes('^con^') && this.vocabulary[this.wordIndex - 1]) this.wordIndex--;\n                    else if (this.vocabulary[this.wordIndex].latinWord.includes('^con^') && !this.vocabulary[this.wordIndex - 1]) this.wordIndex++;\n                    this.currentWord = this.vocabulary[this.wordIndex];\n                    for(let i = 0; i < this.container.childElementCount; i++){\n                        let value = Object.values(this.currentWord)[i];\n                        value = value.replaceAll(\"^ign^\", \"\");\n                        this.container.children[i].innerHTML = '';\n                        for(let ii = 0; ii < value.length; ii++){\n                            let object = document.createElement('object');\n                            object.data = './keys/Reversion_T.svg';\n                            object.id = `key${ii}-inp${i}`;\n                            object.style.height = `100%`;\n                            this.container.children[i].insertAdjacentElement('beforeend', object);\n                            object.hidden = true;\n                            object.addEventListener('load', (_)=>{\n                                let svg = object.contentDocument;\n                                if (value.charAt(ii) === '<') svg.querySelector('#tspan7').innerHTML = '&lt;';\n                                else if (value.charAt(ii) === '&') svg.querySelector('#tspan7').innerHTML = '&amp;';\n                                else svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\n                            });\n                        }\n                    }\n                    let objects = this.container.querySelectorAll('object');\n                    if (objects.length > 0) objects[objects.length - 1].addEventListener('load', (_)=>{\n                        objects.forEach((obj)=>obj.hidden = false);\n                        for(let i = 0; i < this.container.childElementCount; i++){\n                            let value = Object.values(this.currentWord)[i];\n                            this.adjustInputWidth(this.container.children[i], value, true);\n                        }\n                    });\n                } else {\n                    this.vocabulary[this.wordIndex] = this.currentWord;\n                    const transaction = this.database.transaction(`vocabulary`, 'readwrite');\n                    transaction.onerror = ()=>console.error(transaction.error);\n                    const objectStore = transaction.objectStore(`vocabulary`);\n                    const req = objectStore.get(this.wordIndex);\n                    req.onerror = ()=>console.error(req.error);\n                    req.onsuccess = ()=>{\n                        for(let i = 0; i < this.container.childElementCount; i++)this.container.children[i].classList.remove('shadow');\n                        const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\n                        idontcare.onerror = ()=>console.error(idontcare.error);\n                        this.wordIndex--;\n                        if (this.vocabulary[this.wordIndex].latinWord.includes('^con^') && this.vocabulary[this.wordIndex - 1]) this.wordIndex--;\n                        else if (this.vocabulary[this.wordIndex].latinWord.includes('^con^') && !this.vocabulary[this.wordIndex - 1]) this.wordIndex++;\n                        this.currentWord = this.vocabulary[this.wordIndex];\n                        for(let i = 0; i < this.container.childElementCount; i++){\n                            let value = Object.values(this.currentWord)[i];\n                            value = value.replaceAll(\"^ign^\", \"\");\n                            this.container.children[i].innerHTML = '';\n                            for(let ii = 0; ii < value.length; ii++){\n                                let object = document.createElement('object');\n                                object.data = './keys/Reversion_T.svg';\n                                object.id = `key${ii}-inp${i}`;\n                                object.style.height = `100%`;\n                                this.container.children[i].insertAdjacentElement('beforeend', object);\n                                object.hidden = true;\n                                object.addEventListener('load', (_)=>{\n                                    let svg = object.contentDocument;\n                                    if (value.charAt(ii) === '<') svg.querySelector('#tspan7').innerHTML = '&lt;';\n                                    else if (value.charAt(ii) === '&') svg.querySelector('#tspan7').innerHTML = '&amp;';\n                                    else svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\n                                });\n                            }\n                        }\n                        let objects = this.container.querySelectorAll('object');\n                        if (objects.length > 0) objects[objects.length - 1].addEventListener('load', (_)=>{\n                            objects.forEach((obj)=>obj.hidden = false);\n                            for(let i = 0; i < this.container.childElementCount; i++){\n                                let value = Object.values(this.currentWord)[i];\n                                this.adjustInputWidth(this.container.children[i], value);\n                            }\n                        });\n                    };\n                }\n            }\n        };\n        this.buttonLeft.addEventListener('mouseup', this.buttonLeftFunction);\n        this.buttonRightFunction = ()=>{\n            this.buttonRight.classList.remove('clicked');\n            if (!this.vocabulary[this.wordIndex + 1] || this.vocabulary[this.wordIndex + 1].latinWord.includes('^con^') && !this.vocabulary[this.wordIndex + 2]) {\n                this.vocabulary[this.wordIndex] = this.currentWord;\n                const transaction = this.database.transaction(`vocabulary`, 'readwrite');\n                transaction.onerror = ()=>console.error(transaction.error);\n                const objectStore = transaction.objectStore(`vocabulary`);\n                const req = objectStore.put(this.currentWord, this.wordIndex + 1);\n                req.onerror = ()=>console.error(req.error);\n                transaction.oncomplete = ()=>{\n                    for(let i = 0; i < this.container.childElementCount; i++)this.container.children[i].classList.remove('shadow');\n                    this.wordIndex++;\n                    if (this.vocabulary[this.wordIndex] && this.vocabulary[this.wordIndex].latinWord.includes('^con^')) this.wordIndex++;\n                    this.keys = 0;\n                    this.currentWord = {\n                        latinWord: '',\n                        inflections: '',\n                        germanTranslation: '',\n                        relatedForeignWords: '',\n                        selected: true,\n                        probability: 1\n                    };\n                    for(let i = 0; i < this.container.childElementCount; i++){\n                        this.container.children[i].innerHTML = '';\n                        this.inputIndex = 0;\n                        this.changeSelectedInput();\n                        if (i != 0) {\n                            let div = this.container.children[i];\n                            div.classList.remove('selected');\n                            div.style.padding = `${this.padding[i]}px 0.5vw`;\n                        }\n                    }\n                };\n                for(let i = 0; i < this.container.childElementCount; i++){\n                    let value = Object.values(this.currentWord)[i];\n                    this.adjustInputWidth(this.container.children[i], value);\n                }\n            } else {\n                this.vocabulary[this.wordIndex] = this.currentWord;\n                for(let i = 0; i < this.container.childElementCount; i++)this.container.children[i].classList.remove('shadow');\n                const transaction = this.database.transaction(`vocabulary`, 'readwrite');\n                transaction.onerror = ()=>console.error(transaction.error);\n                const objectStore = transaction.objectStore(`vocabulary`);\n                const req = objectStore.get(this.wordIndex);\n                req.onerror = ()=>console.error(req.error);\n                req.onsuccess = ()=>{\n                    const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\n                    idontcare.onerror = ()=>console.error(idontcare.error);\n                    this.wordIndex++;\n                    if (this.vocabulary[this.wordIndex].latinWord.includes('^con^')) this.wordIndex++;\n                    this.currentWord = this.vocabulary[this.wordIndex];\n                    for(let i = 0; i < this.container.childElementCount; i++){\n                        let value = Object.values(this.currentWord)[i];\n                        value = value.replaceAll(\"^ign^\", \"\");\n                        this.container.children[i].innerHTML = '';\n                        for(let ii = 0; ii < value.length; ii++){\n                            let object = document.createElement('object');\n                            object.data = './keys/Reversion_T.svg';\n                            object.id = `key${ii}-inp${i}`;\n                            object.style.height = `100%`;\n                            this.container.children[i].insertAdjacentElement('beforeend', object);\n                            object.hidden = true;\n                            object.addEventListener('load', (_)=>{\n                                let svg = object.contentDocument;\n                                if (value.charAt(ii) === '<') svg.querySelector('#tspan7').innerHTML = '&lt;';\n                                else if (value.charAt(ii) === '&') svg.querySelector('#tspan7').innerHTML = '&amp;';\n                                else svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\n                            });\n                        }\n                    }\n                    let objects = this.container.querySelectorAll('object');\n                    if (objects.length > 0) objects[objects.length - 1].addEventListener('load', (_)=>{\n                        objects.forEach((obj)=>obj.hidden = false);\n                        for(let i = 0; i < this.container.childElementCount; i++){\n                            let value = Object.values(this.currentWord)[i];\n                            this.adjustInputWidth(this.container.children[i], value);\n                        }\n                    });\n                };\n            }\n        };\n        this.buttonRight.addEventListener('mouseup', this.buttonRightFunction);\n        this.keyDownFunction = (event)=>{\n            let forbiddenCharacters = [\n                \"\\xb4\",\n                '`',\n                '^'\n            ];\n            if (this.commandMode) {\n                if (event.key === 'Enter') {\n                    if (this.command.endsWith('%')) {\n                        if (this.command.startsWith('#p-')) {\n                            let percentage = parseInt(this.command.slice(3, this.command.length - 1));\n                            if (percentage >= 0 && percentage <= 100) {\n                                this.padding[this.inputIndex] = Math.round(Math.max(Math.min(this.padding[this.inputIndex] * (1 - percentage / 100), this.selectedInput.clientHeight / 2 * 0.85), 1));\n                                this.paddingAnimation(this.selectedInput);\n                                this.command.split('').forEach((_)=>{\n                                    this.selectedInput.lastElementChild.remove();\n                                    this.keys--;\n                                });\n                                this.command = '';\n                                this.commandMode = false;\n                                return;\n                            }\n                        } else if (this.command.startsWith('#p+')) {\n                            let percentage = parseInt(this.command.slice(3, this.command.length - 1));\n                            if (percentage >= 0) {\n                                this.padding[this.inputIndex] = Math.round(Math.max(Math.min(this.padding[this.inputIndex] * (1 + percentage / 100), this.selectedInput.clientHeight / 2 * 0.85), 1));\n                                this.paddingAnimation(this.selectedInput);\n                                this.command.split('').forEach((_)=>{\n                                    this.selectedInput.lastElementChild.remove();\n                                    this.keys--;\n                                });\n                                this.command = '';\n                                this.commandMode = false;\n                                return;\n                            }\n                        }\n                    }\n                    switch(this.command.toLowerCase()){\n                        case '#<':\n                        case '#<-':\n                        case '#previous':\n                        case '#prvs':\n                        case '#vorheriges':\n                        case '#voriges':\n                        case '#prev':\n                            this.command = '';\n                            this.commandMode = false;\n                            this.buttonLeftFunction(event);\n                            return;\n                        case '#>':\n                        case '#->':\n                        case '#next':\n                        case '#nxt':\n                        case \"#n\\xe4chstes\":\n                            this.command = '';\n                            this.commandMode = false;\n                            this.buttonRightFunction(event);\n                            return;\n                        case '#exit':\n                        case '#quit':\n                        case '#stop':\n                        case '#home':\n                        case '#stopp':\n                        case '#beenden':\n                        case \"#hauptmen\\xfc\":\n                        case '#home menu':\n                        case '#h':\n                            this.command = '';\n                            this.commandMode = false;\n                            (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                            (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n                            return;\n                        case '#automaticpaddingadjustment':\n                        case '#auto':\n                        case '#automatic-padding-adjustment':\n                        case '#automatische padding-anpassung':\n                        case '#automatischepaddinganpassung':\n                        case '#automatische-padding-anpassung':\n                        case '#apa':\n                            this.automaticPaddingAdjustment = true;\n                            this.command.split('').forEach((_)=>{\n                                this.selectedInput.lastElementChild.remove();\n                                this.keys--;\n                            });\n                            this.command = '';\n                            this.commandMode = false;\n                            let value = Object.values(this.currentWord)[this.inputIndex];\n                            this.adjustInputWidth(this.selectedInput, value, true);\n                            return;\n                        case '#manualpaddingadjustment':\n                        case '#manual':\n                        case '#normalpaddingadjustment':\n                        case '#normal':\n                        case '#manual-padding-adjustment':\n                        case '#mpa':\n                        case '#npa':\n                            this.automaticPaddingAdjustment = false;\n                        default:\n                            this.paddingAnimation(this.selectedInput);\n                            this.command.split('').forEach((_)=>{\n                                this.selectedInput.lastElementChild.remove();\n                                this.keys--;\n                            });\n                    }\n                    this.command = '';\n                    this.commandMode = false;\n                    return;\n                } else if (event.key === 'ArrowUp') {\n                    this.command.split('').forEach((_)=>{\n                        this.selectedInput.lastElementChild.remove();\n                        this.keys--;\n                    });\n                    this.command = '';\n                    this.commandMode = false;\n                    if (this.inputIndex > 0) {\n                        this.inputIndex--;\n                        this.changeSelectedInput();\n                    }\n                    this.selectedInput.classList.add('selected');\n                    return;\n                } else if (event.key === 'ArrowDown') {\n                    this.command.split('').forEach((_)=>{\n                        this.selectedInput.lastElementChild.remove();\n                        this.keys--;\n                    });\n                    this.command = '';\n                    this.commandMode = false;\n                    if (this.inputIndex + 1 < 4) {\n                        this.inputIndex++;\n                        this.changeSelectedInput();\n                    }\n                    return;\n                } else if (event.key === 'Backspace') {\n                    if (this.selectedInput.lastElementChild) {\n                        this.selectedInput.lastElementChild.remove();\n                        this.command = this.command.slice(0, this.command.length - 1);\n                        this.keys--;\n                        if (this.command === '') this.commandMode = false;\n                        if (this.automaticPaddingAdjustment && this.padding[this.inputIndex] > this.selectedInput.offsetHeight * 0.05) {\n                            let object = this.selectedInput.lastElementChild;\n                            let w = Math.round((this.selectedInput.getBoundingClientRect().width - parseFloat(window.getComputedStyle(this.selectedInput).paddingLeft) - parseFloat(window.getComputedStyle(this.selectedInput).paddingRight)) * 100) / 100;\n                            let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n                            let h = w / this.keys * aspectRatio;\n                            let padding = Math.max((this.selectedInput.getBoundingClientRect().height - h) / 2, this.selectedInput.offsetHeight * 0.05);\n                            this.padding[this.inputIndex] = Math.max(padding, 1);\n                            this.selectedInput.style.padding = `${this.padding[this.inputIndex]}px 0.25vw`;\n                        }\n                    }\n                    return;\n                }\n                if (this.commandMode && (forbiddenCharacters.includes(event.key) || event.key.length > 1)) return;\n            }\n            if (!this.commandMode) {\n                if (event.key === 'Backspace') {\n                    if (this.selectedInput.lastElementChild) {\n                        this.selectedInput.lastElementChild.remove();\n                        Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex], {\n                            value: Object.values(this.currentWord)[this.inputIndex].slice(0, this.keys - 1)\n                        });\n                        this.keys--;\n                        if (this.automaticPaddingAdjustment && this.padding[this.inputIndex] > this.selectedInput.offsetHeight * 0.05) {\n                            let object = this.selectedInput.lastElementChild;\n                            let w = Math.round((this.selectedInput.getBoundingClientRect().width - parseFloat(window.getComputedStyle(this.selectedInput).paddingLeft) - parseFloat(window.getComputedStyle(this.selectedInput).paddingRight) - parseFloat(window.getComputedStyle(this.selectedInput).borderLeftWidth) - parseFloat(window.getComputedStyle(this.selectedInput).borderRightWidth)) * 100) / 100;\n                            let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n                            let h = w / this.keys * aspectRatio;\n                            let padding = Math.max((this.selectedInput.getBoundingClientRect().height - h) / 2, this.selectedInput.offsetHeight * 0.05);\n                            this.padding[this.inputIndex] = Math.max(padding, 1);\n                            this.selectedInput.style.padding = `${this.padding[this.inputIndex]}px 0.25vw`;\n                        }\n                    }\n                    return;\n                } else if (event.key === 'Enter' || event.key === 'ArrowDown') {\n                    if (this.inputIndex + 1 < 4) {\n                        this.inputIndex++;\n                        this.changeSelectedInput();\n                    } else {\n                        for(let i = 0; i < this.container.childElementCount; i++)this.container.children[i].classList.add('shadow');\n                        if (this.enterMode) {\n                            if (!this.vocabulary[this.wordIndex + 1] || this.vocabulary[this.wordIndex + 1].latinWord.includes('^con^') && !this.vocabulary[this.wordIndex + 2]) {\n                                this.vocabulary[this.wordIndex] = this.currentWord;\n                                const transaction = this.database.transaction(`vocabulary`, 'readwrite');\n                                transaction.onerror = ()=>console.error(transaction.error);\n                                const objectStore = transaction.objectStore(`vocabulary`);\n                                const req = objectStore.put(this.currentWord, this.wordIndex + 1);\n                                req.onerror = ()=>console.error(req.error);\n                                transaction.oncomplete = ()=>{\n                                    for(let i = 0; i < this.container.childElementCount; i++)this.container.children[i].classList.remove('shadow');\n                                    this.wordIndex++;\n                                    if (this.vocabulary[this.wordIndex] && this.vocabulary[this.wordIndex].latinWord.includes('^con^')) this.wordIndex++;\n                                    this.keys = 0;\n                                    this.currentWord = {\n                                        latinWord: '',\n                                        inflections: '',\n                                        germanTranslation: '',\n                                        relatedForeignWords: '',\n                                        selected: true,\n                                        probability: 1\n                                    };\n                                    for(let i = 0; i < this.container.childElementCount; i++){\n                                        this.container.children[i].innerHTML = '';\n                                        this.inputIndex = 0;\n                                        this.changeSelectedInput();\n                                        if (i != 0) {\n                                            let div = this.container.children[i];\n                                            div.classList.remove('selected');\n                                            div.style.padding = `${this.padding[i]}px 0.5vw`;\n                                        }\n                                    }\n                                };\n                                for(let i = 0; i < this.container.childElementCount; i++){\n                                    let value = Object.values(this.currentWord)[i];\n                                    this.adjustInputWidth(this.container.children[i], value);\n                                }\n                            } else {\n                                this.vocabulary[this.wordIndex] = this.currentWord;\n                                for(let i = 0; i < this.container.childElementCount; i++)this.container.children[i].classList.remove('shadow');\n                                const transaction = this.database.transaction(`vocabulary`, 'readwrite');\n                                transaction.onerror = ()=>console.error(transaction.error);\n                                const objectStore = transaction.objectStore(`vocabulary`);\n                                const req = objectStore.get(this.wordIndex);\n                                req.onerror = ()=>console.error(req.error);\n                                req.onsuccess = ()=>{\n                                    const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\n                                    idontcare.onerror = ()=>console.error(idontcare.error);\n                                    this.wordIndex++;\n                                    if (this.vocabulary[this.wordIndex].latinWord.includes('^con^')) this.wordIndex++;\n                                    this.currentWord = this.vocabulary[this.wordIndex];\n                                    for(let i = 0; i < this.container.childElementCount; i++){\n                                        let value = Object.values(this.currentWord)[i];\n                                        value = value.replaceAll(\"^ign^\", \"\");\n                                        this.container.children[i].innerHTML = '';\n                                        for(let ii = 0; ii < value.length; ii++){\n                                            let object = document.createElement('object');\n                                            object.data = './keys/Reversion_T.svg';\n                                            object.id = `key${ii}-inp${i}`;\n                                            object.style.height = `100%`;\n                                            this.container.children[i].insertAdjacentElement('beforeend', object);\n                                            object.hidden = true;\n                                            object.addEventListener('load', (_)=>{\n                                                let svg = object.contentDocument;\n                                                if (value.charAt(ii) === '<') svg.querySelector('#tspan7').innerHTML = '&lt;';\n                                                else if (value.charAt(ii) === '&') svg.querySelector('#tspan7').innerHTML = '&amp;';\n                                                else svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\n                                            });\n                                        }\n                                    }\n                                    let objects = this.container.querySelectorAll('object');\n                                    if (objects.length > 0) objects[objects.length - 1].addEventListener('load', (_)=>{\n                                        objects.forEach((obj)=>obj.hidden = false);\n                                        for(let i = 0; i < this.container.childElementCount; i++){\n                                            let value = Object.values(this.currentWord)[i];\n                                            this.adjustInputWidth(this.container.children[i], value);\n                                        }\n                                    });\n                                };\n                            }\n                            this.enterMode = false;\n                        } else this.enterMode = true;\n                        const transaction = this.database.transaction(`vocabulary`, 'readwrite');\n                        transaction.onerror = ()=>console.error(transaction.error);\n                        const objectStore = transaction.objectStore(`vocabulary`);\n                        const req = objectStore.put(this.currentWord, this.wordIndex + 1);\n                        req.onerror = ()=>console.error(req.error);\n                        setTimeout((_)=>{\n                            for(let i = 0; i < this.container.childElementCount; i++)this.container.children[i].classList.remove('shadow');\n                        }, 250);\n                    }\n                    return;\n                } else if (event.key === 'ArrowUp') {\n                    if (this.inputIndex > 0) this.inputIndex--;\n                    this.changeSelectedInput();\n                    this.enterMode = false;\n                    return;\n                } else if (event.key === '#') {\n                    this.command = '';\n                    this.commandMode = true;\n                } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) return;\n            }\n            let object = document.createElement('object');\n            object.data = './keys/Reversion_T.svg';\n            object.id = `key${this.keys}-inp${this.inputIndex}`;\n            object.style.height = `100%`;\n            this.selectedInput.insertAdjacentElement('beforeend', object);\n            object.hidden = true;\n            object.addEventListener('load', (_)=>{\n                object.hidden = false;\n                let width = Math.round(object.getBoundingClientRect().width * 100) / 100;\n                object.hidden = true;\n                let w = Math.round((this.selectedInput.getBoundingClientRect().width - parseFloat(window.getComputedStyle(this.selectedInput).paddingLeft) - parseFloat(window.getComputedStyle(this.selectedInput).paddingRight) - parseFloat(window.getComputedStyle(this.selectedInput).borderLeftWidth) - parseFloat(window.getComputedStyle(this.selectedInput).borderRightWidth)) * 100) / 100;\n                if (this.keys + 1 > w / width) {\n                    if (!this.automaticPaddingAdjustment) {\n                        object.remove();\n                        for(let i = 0; i < this.keys; i++)this.failureAnimation(this.selectedInput.children[i]);\n                        return;\n                    } else {\n                        object.hidden = false;\n                        let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n                        object.hidden = true;\n                        let h = w / (this.keys + 1) * aspectRatio;\n                        let padding = (this.selectedInput.getBoundingClientRect().height - h) / 2;\n                        if (padding > this.selectedInput.getBoundingClientRect().height / 2 * 0.85) {\n                            object.remove();\n                            for(let i = 0; i < this.keys; i++)this.failureAnimation(this.selectedInput.children[i]);\n                            return;\n                        } else {\n                            this.padding[this.inputIndex] = Math.max(padding, 1);\n                            this.animatedBorderWidth = parseFloat(window.getComputedStyle(this.selectedInput).borderTopWidth);\n                            this.automaticPaddingAnimation(this.selectedInput, true);\n                        }\n                    }\n                }\n                setTimeout((_)=>{\n                    object.hidden = false;\n                }, 10);\n                let svg = object.contentDocument;\n                if (event.key === '<') svg.querySelector('#tspan7').innerHTML = '&lt;';\n                else if (event.key === '&') svg.querySelector('#tspan7').innerHTML = '&amp;';\n                else svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\n                if (!this.commandMode) {\n                    Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex], {\n                        value: Object.values(this.currentWord)[this.inputIndex] + event.key.charAt(0)\n                    });\n                    this.idleAnimation(object);\n                } else {\n                    this.command += event.key;\n                    (0, $543d6d2a56ed7d8d$export$e73a7799776ae73d).commandAnimation(object);\n                }\n                this.keys++;\n            });\n        };\n        document.addEventListener('keydown', this.keyDownFunction);\n    }\n    changeSelectedInput() {\n        if (this.secondTimeout) clearTimeout(this.secondTimeout);\n        document.querySelectorAll('.selected').forEach((elem)=>{\n            elem.classList.remove('selected');\n            elem.style.padding = `${this.padding[parseInt(elem.id.charAt(3))]}px 0.5vw`;\n            elem.style.border = 'none';\n            elem.style.transition = 'none';\n        });\n        this.selectedInput = this.container.children[this.inputIndex];\n        this.selectedInput.classList.add('selected');\n        this.keys = this.selectedInput.childElementCount;\n        this.selectedInput.style.padding = `${this.padding[this.inputIndex]}px 0.25vw`;\n        if (this.automaticPaddingAdjustment) this.automaticPaddingAnimation(this.selectedInput);\n        else this.paddingAnimation(this.selectedInput);\n    }\n    failureAnimation(object) {\n        if (!object || object.classList.contains(\"animationActive\")) return;\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = [\n            {\n                stroke: \"rgb(186, 2, 70)\",\n                offset: 0.025\n            },\n            {\n                rotate: \"10deg z\",\n                offset: 0.25\n            },\n            {\n                rotate: \"0deg z\",\n                offset: 0.5\n            },\n            {\n                rotate: \"-10deg z\",\n                offset: 0.75,\n                stroke: \"rgb(186, 2, 70)\"\n            },\n            {\n                stroke: \"#eeeeeeff\",\n                offset: 0.925\n            },\n            {\n                rotate: \"0deg z\",\n                offset: 1\n            }\n        ];\n        object.classList.add(\"animationActive\");\n        let animationOptions = {\n            duration: 500\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n        setTimeout((_)=>{\n            object.classList.remove(\"animationActive\");\n        }, 500);\n    }\n    idleAnimation(object) {\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#8f8f8f',\n                '#fff',\n                '#eeeeeeff'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 250\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    paddingAnimation(input) {\n        let id = parseInt(input.id.charAt(3));\n        let marginLeft = parseInt(window.getComputedStyle(input).marginLeft.slice(0, -2));\n        let borderLeft = 0.005 * window.innerWidth - marginLeft;\n        input.style.padding = '0';\n        input.style.willChange = 'border-width';\n        input.style.borderTopWidth = `calc(${this.padding[id]}px)`;\n        input.style.borderRightWidth = `${borderLeft}px`;\n        input.style.borderBottomWidth = `calc(${this.padding[id]}px)`;\n        input.style.borderLeftWidth = `${borderLeft}px`;\n        input.style.borderStyle = 'solid';\n        input.style.borderColor = '#12dada';\n        input.style.transition = 'none';\n        input.style.paddingLeft = 0.005 * window.innerWidth - (parseInt(window.getComputedStyle(input).marginLeft.slice(0, -2)) + parseFloat(window.getComputedStyle(input).borderLeftWidth.slice(0, -2))) + 'px';\n        input.style.paddingTop = this.padding[id] - parseFloat(window.getComputedStyle(input).borderTopWidth.slice(0, -2)) + 'px';\n        input.style.paddingRight = 0.005 * window.innerWidth - (parseInt(window.getComputedStyle(input).marginLeft.slice(0, -2)) + parseFloat(window.getComputedStyle(input).borderLeftWidth.slice(0, -2))) + 'px';\n        input.style.paddingBottom = this.padding[id] - parseFloat(window.getComputedStyle(input).borderBottomWidth.slice(0, -2)) + 'px';\n        setTimeout((_)=>{\n            input.style.borderColor = '#06011b';\n            input.style.transition = 'none';\n            input.style.transition = \"border-color 1.5s\";\n            this.secondTimeout = setTimeout((_)=>{\n                if (input.classList.contains('selected')) input.style.padding = `${this.padding[id]}px 0.25vw`;\n                else input.style.padding = `${this.padding[id]}px 0.5vw`;\n                input.style.border = 'none';\n            }, 1500);\n        }, 1);\n    }\n    automaticPaddingAnimation(input, adjustment, cancelable) {\n        cancelable = cancelable === undefined || cancelable === true;\n        this.clearIntervals(adjustment == undefined);\n        let id = parseInt(input.id.charAt(3));\n        let marginLeft = parseInt(window.getComputedStyle(input).marginLeft.slice(0, -2));\n        let borderLeft = 0.005 * window.innerWidth - marginLeft;\n        let newPadding = this.padding[id];\n        let borderWidth = adjustment ? this.animatedBorderWidth : 0;\n        let $tepSize = (newPadding - borderWidth) / 20;\n        let stepSize = newPadding / 20;\n        let step = 0;\n        let timeout1 = adjustment ? 1 : 12.5;\n        let timeout2 = 12.5;\n        let timeout;\n        let interval1;\n        let interval2;\n        if (cancelable) this.firstInterval = setInterval(intervalFunction1.bind(this), timeout1);\n        else interval1 = setInterval(intervalFunction1.bind(this), timeout1);\n        window.addEventListener('resize', resizeHandler.bind(this), {\n            passive: true\n        });\n        if (!cancelable) {\n            this.buttonLeft.addEventListener('mouseup', removeAll.bind(this));\n            this.buttonRight.addEventListener('mouseup', removeAll.bind(this));\n        }\n        function intervalFunction1() {\n            for(let i = 0; i < (adjustment ? 4 : 1); i++){\n                this.animatedInputIndex = id;\n                borderWidth += $tepSize;\n                this.animatedBorderWidth = borderWidth;\n                input.style.borderWidth = `${borderWidth}px ${borderLeft / (20 - step)}px`;\n                input.style.borderStyle = 'solid';\n                input.style.borderColor = 'orange';\n                input.style.transition = 'none';\n                let paddingLeft = borderLeft - parseFloat(window.getComputedStyle(input).borderLeft);\n                let paddingTop = newPadding - parseFloat(window.getComputedStyle(input).borderTop);\n                input.style.padding = `${paddingTop}px ${paddingLeft}px`;\n                step++;\n                if (step === 20) {\n                    if (cancelable) {\n                        clearInterval(this.firstInterval);\n                        this.firstTimeout = setTimeout(timeoutFunction.bind(this), timeout1 * 20);\n                    } else {\n                        clearInterval(interval1);\n                        timeout = setTimeout(timeoutFunction.bind(this), timeout1 * 20);\n                    }\n                    break;\n                }\n            }\n        }\n        function removeAll() {\n            clearInterval(interval1);\n            clearInterval(interval2);\n            clearTimeout(timeout);\n        }\n        function timeoutFunction() {\n            if (cancelable) this.secondInterval = setInterval(intervalFunction2.bind(this), timeout2);\n            else interval2 = setInterval(intervalFunction2.bind(this), timeout2);\n        }\n        function intervalFunction2() {\n            borderWidth -= stepSize;\n            this.animatedBorderWidth = borderWidth;\n            input.style.borderWidth = `${borderWidth}px ${borderLeft / (20 - step)}px`;\n            input.style.borderStyle = 'solid';\n            input.style.borderColor = 'orange';\n            let paddingLeft = borderLeft - parseFloat(window.getComputedStyle(input).borderLeft);\n            let paddingTop = newPadding - parseFloat(window.getComputedStyle(input).borderTop);\n            input.style.padding = `${paddingTop}px ${paddingLeft}px`;\n            step--;\n            if (step === 0) {\n                input.style.border = 'none';\n                input.style.padding = `${newPadding}px ${borderLeft}px`;\n                clearInterval(cancelable ? this.secondInterval : interval2);\n                if (!cancelable) {\n                    this.buttonLeft.removeEventListener('mouseup', removeAll.bind(this));\n                    this.buttonRight.removeEventListener('mouseup', removeAll.bind(this));\n                }\n            }\n        }\n        function resizeHandler() {\n            clearInterval(interval1);\n            clearInterval(interval2);\n            clearTimeout(timeout);\n            let paddingLeft = borderLeft - parseFloat(window.getComputedStyle(input).borderLeft);\n            let paddingTop = newPadding - parseFloat(window.getComputedStyle(input).borderTop);\n            input.style.padding = `${paddingTop}px ${paddingLeft}px`;\n            input.style.border = 'none';\n            input.style.paddingTop = `${newPadding}px`;\n            input.style.paddingRight = `${borderLeft}px`;\n            input.style.paddingBottom = `${newPadding}px`;\n            input.style.paddingLeft = `${borderLeft}px`;\n        }\n    }\n    adjustInputWidth(input, value, animation) {\n        animation = animation === undefined || animation === true;\n        let v = value.replaceAll(\"^ign^\", \"\");\n        if (!input.hasChildNodes() && value.length == 0) {\n            if (this.automaticPaddingAdjustment) {\n                if (input.classList.contains('selected')) input.style.padding = 0.05 * input.offsetHeight + 'px 0.25vw';\n                else input.style.padding = 0.05 * input.offsetHeight + 'px 0.5vw';\n                input.style.border = 'none';\n                this.padding[parseInt(input.id.charAt(3))] = 0.05 * input.offsetHeight;\n                if (animation) this.automaticPaddingAnimation(input, false, false);\n                return value;\n            }\n            if (animation) this.paddingAnimation(input);\n            return value;\n        }\n        let padding;\n        let w = Math.round((window.innerWidth - parseFloat(window.getComputedStyle(input).paddingLeft) - parseFloat(window.getComputedStyle(input).paddingRight) - parseFloat(window.getComputedStyle(input).borderLeftWidth) - parseFloat(window.getComputedStyle(input).borderRightWidth) - parseFloat(window.getComputedStyle(input).marginLeft) - parseFloat(window.getComputedStyle(input).marginRight)) * 100) / 100;\n        let object = input.firstElementChild;\n        let id = parseInt(input.id.charAt(3));\n        if (!object) {\n            this.padding[id] = 0.05 * input.offsetHeight;\n            return;\n        }\n        let width = object.getBoundingClientRect().width;\n        if (w / width < v.length || this.automaticPaddingAdjustment) {\n            w = Math.round((window.innerWidth - parseFloat(window.getComputedStyle(input).paddingLeft) - parseFloat(window.getComputedStyle(input).paddingRight) - parseFloat(window.getComputedStyle(input).borderLeftWidth) - parseFloat(window.getComputedStyle(input).borderRightWidth) - parseFloat(window.getComputedStyle(input).marginLeft) - parseFloat(window.getComputedStyle(input).marginRight)) * 100) / 100;\n            object = input.lastElementChild;\n            let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n            let h = w / v.length * aspectRatio;\n            padding = Math.max((input.getBoundingClientRect().height - h) / 2, input.offsetHeight * 0.05);\n            this.padding[id] = padding;\n            this.animatedBorderWidth = parseFloat(window.getComputedStyle(input).borderTopWidth);\n        }\n        if (this.automaticPaddingAdjustment && animation) this.automaticPaddingAnimation(input, false, false);\n        else if (animation) this.paddingAnimation(input);\n        return value;\n    }\n    clearIntervals(param) {\n        clearInterval(this.firstInterval);\n        clearInterval(this.secondInterval);\n        clearTimeout(this.firstTimeout);\n        if (this.animatedInputIndex != undefined && param) {\n            let input = document.querySelector(`#div${this.animatedInputIndex}`);\n            let marginLeft = parseInt(window.getComputedStyle(input).marginLeft.slice(0, -2));\n            let paddingLeft = 0.005 * window.innerWidth - marginLeft;\n            let paddingTop = this.padding[this.animatedInputIndex];\n            input.style.padding = `${paddingTop}px ${paddingLeft}px`;\n            input.style.border = 'none';\n        }\n    }\n}\n\n\n\nclass $0605b9bc60daa790$export$70f2439247e54615 {\n    constructor(){\n        this.loaded = false;\n        this.padding = 0;\n        this.command = '';\n        this.modifyDocument();\n    }\n    modifyDocument() {\n        this.resizeFunction = ()=>{\n            let object = this.input.lastElementChild;\n            if (!object) return;\n            let w = window.innerWidth;\n            let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n            let h = w / (this.input.childElementCount + 1) * aspectRatio;\n            let padding = (this.input.getBoundingClientRect().height - h) / 2;\n            this.padding = Math.max(padding, 1);\n            this.movementAnimation();\n            this.movementAnimation();\n        };\n        window.addEventListener('resize', this.resizeFunction);\n        this.input = document.querySelector('#container');\n        this.iconPlaceholder = document.querySelector('#icon-placeholder');\n        this.navbar = document.querySelector('#navbar');\n        if (document.querySelector('.homeDiv')) {\n            let homeDiv = document.querySelector('.homeDiv');\n            homeDiv.remove();\n        }\n        document.body.style.backgroundImage = 'none';\n        document.body.style.backgroundImage = 'linear-gradient(180deg, #140063 0%, #06011b 65%, #06011b 77%, #140063 100%)';\n        document.body.setAttribute('class', '');\n        this.input.setAttribute('class', '');\n        this.iconPlaceholder.setAttribute('class', '');\n        this.navbar.setAttribute('class', '');\n        this.input.innerHTML = '';\n        this.iconPlaceholder.innerHTML = '';\n        this.navbar.innerHTML = '';\n        document.body.classList.add('homeBody');\n        this.input.classList.add('homeInput');\n        this.iconPlaceholder.classList.add('homeIconPlaceholder');\n        this.navbar.classList.add('homeNavbar');\n        if (this.loaded) {\n            this.loaded = true;\n            let icon = document.createElement('object');\n            icon.data = './icon.svg';\n            icon.id = 'icon';\n            this.iconPlaceholder.insertAdjacentElement('beforeend', icon);\n            let version = document.createElement('object');\n            version.data = './version.svg';\n            version.id = 'version';\n            this.iconPlaceholder.insertAdjacentElement('beforeend', version);\n            this.type();\n        }\n        window.addEventListener('load', ()=>{\n            console.log(\"servas\");\n            this.loaded = true;\n            let icon = document.createElement('object');\n            icon.data = './icon.svg';\n            icon.id = 'icon';\n            this.iconPlaceholder.insertAdjacentElement('beforeend', icon);\n            icon.addEventListener('load', ()=>{\n                const svgDoc = icon.contentDocument;\n                if (!svgDoc) return;\n                // Animation was created by COPILOT (GPT-5)\n                // collect groups l1..l13\n                const groups = [];\n                for(let i = 1; i <= 13; i++){\n                    const g = svgDoc.querySelector(`#l${i}`);\n                    if (!g) continue;\n                    // We'll wrap the original group in a new <g> so we can scale around the group's visual center\n                    // without disturbing its original transform (including any matrix(...) attributes).\n                    const wrapper = svgDoc.createElementNS('http://www.w3.org/2000/svg', 'g');\n                    // move the original group into the wrapper\n                    const parent = g.parentNode;\n                    if (parent) {\n                        parent.replaceChild(wrapper, g);\n                        wrapper.appendChild(g);\n                    }\n                    // ensure transforms are applied around the element center\n                    // use transform-box + transform-origin in pixels (viewport coords)\n                    wrapper.style.transformBox = 'fill-box';\n                    wrapper.style.transformOrigin = `50% 50%`;\n                    // start invisible and twice the final size\n                    wrapper.style.opacity = '0';\n                    wrapper.style.transform = 'scale(3)';\n                    groups.push(wrapper);\n                }\n                // stamp animation: scale from 2 -> 1 without moving the element\n                groups.forEach((g, idx)=>{\n                    const delay = idx * 250 + 100; // stagger each letter slightly\n                    const anim = g.animate([\n                        {\n                            transform: 'scale(3)',\n                            opacity: 1\n                        },\n                        {\n                            transform: 'scale(1)',\n                            opacity: 1\n                        }\n                    ], {\n                        duration: 250,\n                        delay: delay,\n                        fill: 'forwards'\n                    });\n                    // ensure final styles are applied after the animation completes\n                    if (anim && anim.finished && typeof anim.finished.then === 'function') anim.finished.then(()=>{\n                        g.style.transform = 'scale(1)';\n                        g.style.opacity = '1';\n                    }).catch(()=>{\n                        // ignore cancellation errors but still set the final state\n                        g.style.transform = 'scale(1)';\n                        g.style.opacity = '1';\n                    });\n                    else {\n                        // fallback if finished promise isn't available\n                        g.style.transform = 'scale(1)';\n                        g.style.opacity = '1';\n                    }\n                });\n                let version = document.createElement('object');\n                version.data = './version.svg';\n                version.id = 'version';\n                version.style.opacity = '0';\n                this.iconPlaceholder.insertAdjacentElement('beforeend', version);\n                // Call this once your <object> (or <embed>) holding the SVG is ready.\n                // `version` is the <object type=\"image/svg+xml\"> element.\n                // Assumes `version` is your <object type=\"image/svg+xml\" id=\"version\"> element.\n                version.addEventListener('load', ()=>{\n                    setTimeout(()=>{\n                        const reduceMotion = window.matchMedia?.('(prefers-reduced-motion: reduce)')?.matches ?? false;\n                        // Access the embedded SVG document (must be same-origin)\n                        const svgDoc = version.contentDocument;\n                        if (!svgDoc) {\n                            version.style.opacity = '1';\n                            console.warn('[fade-l5-l6] No contentDocument. Is the object same-origin?');\n                            return;\n                        }\n                        // Helper: get the <g id=\"...\"> or nearest <g> ancestor (if the id is on a child)\n                        const getGroup = (id)=>{\n                            const el = svgDoc.getElementById(id);\n                            if (!el) return null;\n                            if (el.nodeName.toLowerCase() === 'g') return el;\n                            let p = el.parentElement;\n                            while(p && p.nodeName.toLowerCase() !== 'g')p = p.parentElement;\n                            return p && p.nodeName.toLowerCase() === 'g' ? p : null;\n                        };\n                        const l5 = getGroup('l5');\n                        const l6 = getGroup('l6');\n                        if (!l5 || !l6) {\n                            console.warn('[fade-l5-l6] Missing l5 and/or l6 in the SVG.', {\n                                l5: !!l5,\n                                l6: !!l6\n                            });\n                            if (l5) l5.style.opacity = '1';\n                            if (l6) l6.style.opacity = '1';\n                            version.style.opacity = '1';\n                            return;\n                        }\n                        // Ensure l5/l6 are present but transparent (no layout impact in SVG anyway)\n                        const prep = (el)=>{\n                            el.style.transition = 'none';\n                            // Don’t touch display/visibility/transform to avoid surprises\n                            el.style.opacity = '0';\n                        };\n                        prep(l5);\n                        prep(l6);\n                        // ⬅️ NEW: Build a wrapper <g id=\"tail\"> around l7..l13 so we can move them together\n                        const SVG_NS = 'http://www.w3.org/2000/svg'; // ⬅️ NEW\n                        const tailIds = [\n                            'l7',\n                            'l8',\n                            'l9',\n                            'l10',\n                            'l11',\n                            'l12',\n                            'l13'\n                        ]; // ⬅️ NEW\n                        const tailChildren = tailIds.map(getGroup).filter((x)=>!!x); // ⬅️ NEW\n                        let tail = null; // ⬅️ NEW\n                        let tileWidth = 0; // ⬅️ NEW\n                        if (tailChildren.length) {\n                            // Estimate one tile width from any tile (they're identical squares)\n                            const l1 = getGroup('l1'); // use l1 if present, else any of tail children // ⬅️ NEW\n                            const ref = l1 ?? tailChildren[0]; // ⬅️ NEW\n                            try {\n                                tileWidth = ref.getBBox().width; // SVG user units // ⬅️ NEW\n                            } catch  {\n                                // Fallback: try l5\n                                try {\n                                    tileWidth = l5.getBBox().width;\n                                } catch  {\n                                    tileWidth = 0;\n                                }\n                            }\n                            // Only proceed if we could measure something sensible // ⬅️ NEW\n                            if (tileWidth > 0) {\n                                // Create wrapper\n                                tail = svgDoc.createElementNS(SVG_NS, 'g'); // ⬅️ NEW\n                                tail.setAttribute('id', 'tail'); // ⬅️ NEW\n                                const parent = tailChildren[0].parentNode; // ⬅️ NEW\n                                // Insert wrapper right before l7 (to preserve z-order) // ⬅️ NEW\n                                parent.insertBefore(tail, tailChildren[0]); // ⬅️ NEW\n                                // Move l7..l13 into the wrapper (preserves their own transforms) // ⬅️ NEW\n                                tailChildren.forEach((child)=>tail.appendChild(child)); // ⬅️ NEW\n                                // Initial shift: exactly two tile widths to the left // ⬅️ NEW\n                                const offset = -2 * tileWidth; // ⬅️ NEW\n                                tail.setAttribute('transform', `translate(${offset},0)`); // ⬅️ NEW\n                            } else console.warn('[fade-l5-l6] Could not determine tile width; skipping tail shift.'); // ⬅️ NEW\n                        } else console.warn('[fade-l5-l6] Could not find l7..l13; skipping tail shift.'); // ⬅️ NEW\n                        version.animate([\n                            {\n                                opacity: '0'\n                            },\n                            {\n                                opacity: '.25'\n                            },\n                            {\n                                opacity: '1'\n                            }\n                        ], {\n                            duration: 2500,\n                            fill: \"forwards\"\n                        }).finished.then(()=>{\n                            this.type();\n                        });\n                        // Small utility: cubic-bezier evaluator for JS fallback // ⬅️ NEW\n                        const cubicBezier = (p0, p1, p2, p3)=>{\n                            // x = t; y = bezier(t)\n                            const cx = 3 * p0, bx = 3 * (p2 - p0) - cx, ax = 1 - cx - bx;\n                            const cy = 3 * p1, by = 3 * (p3 - p1) - cy, ay = 1 - cy - by;\n                            return (t)=>{\n                                const y = ((ay * t + by) * t + cy) * t; // we just use y(t) with t as time fraction\n                                return y;\n                            };\n                        };\n                        const ease = cubicBezier(0.25, 0.1, 0.25, 1); // ⬅️ NEW\n                        // JS fallback for animateTransform (in user units) // ⬅️ NEW\n                        const animateTranslateAttr = (el, fromX, toX, duration, delay)=>{\n                            setTimeout(()=>{\n                                const start = performance.now();\n                                const step = (now)=>{\n                                    const t = Math.min(1, (now - start) / duration);\n                                    const x = fromX + (toX - fromX) * ease(t);\n                                    el.setAttribute('transform', `translate(${x},0)`);\n                                    if (t < 1) requestAnimationFrame(step);\n                                    else el.setAttribute('transform', 'translate(0,0)'); // snap-final\n                                };\n                                requestAnimationFrame(step);\n                            }, delay);\n                        };\n                        // Paint the initial frame (so you first see l1..l4 [gap] l7..l13)\n                        requestAnimationFrame(()=>{\n                            version.style.opacity = '1'; // ensure host visible\n                            // Reduced motion: show immediately (no animation, no shift)\n                            if (reduceMotion) {\n                                l5.style.opacity = '1';\n                                l6.style.opacity = '1';\n                                if (tail) tail.setAttribute('transform', 'translate(0,0)'); // reset instantly // ⬅️ NEW\n                                return;\n                            }\n                            const fadeDuration = 800; // ms\n                            const fadeDelay = 400; // ms\n                            const moveDuration = fadeDuration; // keep in sync with fade // ⬅️ NEW\n                            const moveDelay = fadeDelay; // ⬅️ NEW\n                            // Try Web Animations API first (most reliable on SVG opacity)\n                            const fade = (el)=>{\n                                let usedWAAPI = false;\n                                try {\n                                    const anim = el.animate?.([\n                                        {\n                                            opacity: 0\n                                        },\n                                        {\n                                            opacity: 1\n                                        }\n                                    ], {\n                                        duration: fadeDuration,\n                                        delay: fadeDelay,\n                                        easing: 'ease',\n                                        fill: 'forwards'\n                                    });\n                                    if (anim) {\n                                        usedWAAPI = true;\n                                        anim.finished.then(()=>{\n                                            el.style.opacity = '1';\n                                        }).catch(()=>{\n                                            el.style.opacity = '1';\n                                        });\n                                    }\n                                } catch  {\n                                // ignore and fall back\n                                }\n                                if (!usedWAAPI) {\n                                    // Fallback: CSS transition\n                                    el.style.transition = `opacity ${fadeDuration}ms ease ${fadeDelay}ms`;\n                                    // Trigger transition next tick to ensure transition is applied\n                                    requestAnimationFrame(()=>{\n                                        el.style.opacity = '1';\n                                    });\n                                    // Last-resort safeguard: force final state after duration+delay+buffer\n                                    setTimeout(()=>{\n                                        el.style.opacity = '1';\n                                    }, fadeDelay + fadeDuration + 50);\n                                }\n                            };\n                            fade(l5);\n                            fade(l6);\n                            // ⬅️ NEW: Animate the tail wrapper from -2w → 0 in SVG user units\n                            if (tail && tileWidth > 0) {\n                                const fromX = -2 * tileWidth;\n                                const toX = 0;\n                                // Prefer SMIL animateTransform (works in all modern browsers)\n                                try {\n                                    const anim = svgDoc.createElementNS(SVG_NS, 'animateTransform');\n                                    anim.setAttribute('attributeName', 'transform');\n                                    anim.setAttribute('type', 'translate');\n                                    anim.setAttribute('from', `${fromX} 0`);\n                                    anim.setAttribute('to', `${toX} 0`);\n                                    anim.setAttribute('dur', `${moveDuration}ms`);\n                                    anim.setAttribute('begin', 'indefinite'); // we’ll trigger it after the delay\n                                    anim.setAttribute('fill', 'freeze');\n                                    anim.setAttribute('calcMode', 'spline');\n                                    anim.setAttribute('keySplines', '.25 .1 .25 1');\n                                    anim.setAttribute('keyTimes', '0;1');\n                                    tail.appendChild(anim);\n                                    setTimeout(()=>{\n                                        try {\n                                            // Start the animation\n                                            anim.beginElement?.();\n                                        } catch  {\n                                            // If beginElement fails, fallback to JS tween\n                                            animateTranslateAttr(tail, fromX, toX, moveDuration, 0);\n                                        }\n                                    }, moveDelay);\n                                } catch  {\n                                    // As a safety net, JS tween (no SMIL)\n                                    animateTranslateAttr(tail, fromX, toX, moveDuration, moveDelay);\n                                }\n                            }\n                        });\n                    }, 3200);\n                }, {\n                    once: true\n                });\n            });\n        });\n    }\n    type() {\n        let keys = 0;\n        this.keyDownFunction = (event)=>{\n            let forbiddenCharacters = [\n                '<',\n                \"\\xb4\",\n                '`',\n                '^'\n            ];\n            if (event.key === 'Backspace' && this.input.lastElementChild) {\n                this.input.lastElementChild.remove();\n                this.command = this.command.slice(0, this.command.length - 1);\n                keys--;\n                let object = this.input.lastElementChild;\n                if (!object) return;\n                let w = window.innerWidth;\n                let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n                let h = w / (keys + 1) * aspectRatio;\n                let padding = (this.input.getBoundingClientRect().height - h) / 2;\n                this.padding = Math.max(padding, 1);\n                this.movementAnimation();\n                return;\n            } else if (event.key === 'Enter') {\n                switch(this.command){\n                    case 'add vocabulary':\n                    case 'add':\n                    case 'add vocabulary':\n                    case 'neu':\n                    case \"hinzuf\\xfcgen\":\n                    case 'neues wort':\n                    case 'neues Wort':\n                    case \"Vokabeln hinzuf\\xfcgen\":\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).modifyDocument();\n                        break;\n                    case 'show vocabulary':\n                    case 'show':\n                    case 'tabelle':\n                    case 'Tabelle':\n                    case 'Vokabeln anzeigen':\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$927980128d33596b).modifyDocument();\n                        break;\n                    case 'training':\n                    case 'Training':\n                    case 'trainer':\n                    case 'Training':\n                    case \"\\xfcben\":\n                    case \"\\xdcben\":\n                    case 'vocabuary training':\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$e73a7799776ae73d).modifyDocument();\n                        break;\n                    case 'declinations':\n                    case 'deklinationen':\n                    case 'Deklinationen':\n                    case 'conj':\n                    case 'add declinations':\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$82d34e6fb29a1ab3).modifyDocument('add nouns');\n                        break;\n                    case 'deklinieren':\n                    case 'deklinationstraining':\n                    case 'Deklinationstraining':\n                    case 'decline nouns':\n                    case 'decline':\n                    case 'ct':\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$82d34e6fb29a1ab3).modifyDocument('nouns');\n                        break;\n                    case 'v':\n                    case 'conjugations':\n                    case 'konjugationen':\n                    case 'Konjugationen':\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$82d34e6fb29a1ab3).modifyDocument('add verbs');\n                        break;\n                    case 'conjugate':\n                    case 'konjugieren':\n                    case 'konjugationstraining':\n                    case 'Konjugationstraining':\n                    case 'vt':\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$82d34e6fb29a1ab3).modifyDocument('verbs');\n                        break;\n                    default:\n                        break;\n                }\n                keys = 0;\n                this.command = '';\n                this.padding = 0;\n                this.input.innerHTML = '';\n                return;\n            } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) return;\n            let object = document.createElement('object');\n            object.data = './keys/Reversion_T.svg';\n            object.id = `key${keys}`;\n            object.style.height = `100%`;\n            this.input.insertAdjacentElement('beforeend', object);\n            object.hidden = true;\n            object.addEventListener('load', (_)=>{\n                object.hidden = false;\n                let width = Math.floor(object.getBoundingClientRect().width * 100) / 100;\n                let w = window.innerWidth;\n                object.hidden = true;\n                if (keys + 2 > Math.floor(w / width)) {\n                    object.hidden = false;\n                    let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n                    object.hidden = true;\n                    let h = w / (keys + 2) * aspectRatio;\n                    let padding = (this.input.getBoundingClientRect().height - h) / 2;\n                    if (padding > this.input.getBoundingClientRect().height / 2 * 0.85) {\n                        object.remove();\n                        for(let i = 0; i < keys; i++)(0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).failureAnimation(this.input.children[i]);\n                        return;\n                    } else this.padding = Math.max(padding, 1);\n                }\n                object.hidden = false;\n                let svg = object.contentDocument;\n                svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\n                this.command += event.key;\n                keys++;\n                this.idleAnimation(object);\n                this.movementAnimation();\n            });\n        };\n        document.addEventListener('keydown', this.keyDownFunction);\n    }\n    idleAnimation(object) {\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#8f8f8f',\n                '#fff',\n                '#eeeeeeff'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 250\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    failureAnimation(object) {\n        if (!object) return;\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = [\n            {\n                stroke: \"rgb(186, 2, 70)\",\n                offset: 0.025\n            },\n            {\n                rotate: \"10deg z\",\n                offset: 0.25\n            },\n            {\n                rotate: \"0deg z\",\n                offset: 0.5\n            },\n            {\n                rotate: \"-10deg z\",\n                offset: 0.75,\n                stroke: \"rgb(186, 2, 70)\"\n            },\n            {\n                stroke: \"#eeeeeeff\",\n                offset: 0.925\n            },\n            {\n                rotate: \"0deg z\",\n                offset: 1\n            }\n        ];\n        let animationOptions = {\n            duration: 500\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    movementAnimation() {\n        if (!this.input) return;\n        let object = this.input.firstChild;\n        let inp = this.input;\n        if (object) {\n            if (inp.childElementCount > 1) inp.style.transition = 'padding 250ms';\n            inp.style.paddingTop = `${this.padding}px`;\n            inp.style.paddingBottom = `${this.padding}px`;\n            let height = inp.getBoundingClientRect().height - 2 * this.padding;\n            inp.style.paddingRight = `${(window.innerWidth - inp.childElementCount * height) / 2}px`;\n            inp.style.paddingLeft = `${(window.innerWidth - inp.childElementCount * height) / 2}px`;\n        }\n    }\n}\n\n\n\nclass $5e3b93ee4c6a7549$export$d5e53f8bbb738c78 {\n    constructor(){\n        this.containers = [];\n    }\n    modifyDocument() {\n        const request = window.indexedDB.open('Vocabulary', 2);\n        request.addEventListener('error', (_)=>{\n            this.vocabulary = [];\n            this.modifyDocument();\n            console.error(request.error);\n        });\n        request.addEventListener('success', (_)=>{\n            this.database = request.result;\n            const transaction = this.database.transaction('vocabulary', 'readonly');\n            transaction.onerror = (_)=>console.error(transaction.error);\n            const objectStore = transaction.objectStore('vocabulary');\n            const req = objectStore.getAll();\n            req.onerror = (_)=>console.error(req.error);\n            req.onsuccess = (_)=>{\n                this.vocabulary = req.result;\n                this.container = document.querySelector('#container');\n                this.iconPlaceholder = document.querySelector('#icon-placeholder');\n                this.navbar = document.querySelector('#navbar');\n                this.container.style.padding = '0';\n                document.body.style.backgroundImage = 'none';\n                document.body.setAttribute('class', '');\n                this.container.setAttribute('class', '');\n                this.iconPlaceholder.setAttribute('class', '');\n                this.navbar.setAttribute('class', '');\n                this.container.innerHTML = '';\n                this.iconPlaceholder.innerHTML = '';\n                this.navbar.innerHTML = '';\n                let showVocabularyIcon = document.createElement('object');\n                showVocabularyIcon.data = './show_vocabulary.svg';\n                showVocabularyIcon.id = 'showVocabularyIcon';\n                this.iconPlaceholder.insertAdjacentElement('beforeend', showVocabularyIcon);\n                for(let i = 0, str = 'HOME MENU'; i < str.length; i++){\n                    let span = document.createElement('span');\n                    span.innerText = str[i];\n                    this.navbar.insertAdjacentElement('beforeend', span);\n                }\n                let navbarClickFunction = (_)=>{\n                    (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                    this.navbar.removeEventListener('click', navbarClickFunction);\n                    (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n                };\n                this.navbar.addEventListener('click', navbarClickFunction);\n                document.body.classList.add('showVocabularyBody');\n                this.container.classList.add('showVocabularyContainer');\n                this.iconPlaceholder.classList.add('showVocabularyIconPlaceholder');\n                this.navbar.classList.add('showVocabularyNavbar');\n                this.renderVocabulary();\n            };\n        });\n    }\n    renderVocabulary() {\n        const ignFunction = (event)=>{\n            event.preventDefault();\n            event.stopPropagation();\n            let element = event.target;\n            let attribute;\n            let id;\n            if (element.id.includes('latinWord')) {\n                attribute = 0;\n                id = parseInt(element.id.replaceAll('latinWord', ''));\n            } else if (element.id.includes('inflections')) {\n                attribute = 1;\n                id = parseInt(element.id.replaceAll('inflections', ''));\n            } else if (element.id.includes('germanTranslation')) {\n                attribute = 2;\n                id = parseInt(element.id.replaceAll('germanTranslation', ''));\n            } else if (element.id.includes('relatedForeignWords')) {\n                attribute = 3;\n                id = parseInt(element.id.replaceAll('relatedForeignWords', ''));\n            } else if (element.tagName === 'INPUT' && element.parentElement.classList.contains('word')) {\n                attribute = parseInt(element.id.split('-')[0]);\n                id = parseInt(element.id.split('-')[1]);\n                element.blur();\n                element = element.parentElement;\n            }\n            if (id != undefined && attribute != undefined && this.vocabulary[id]) {\n                let value = Object.values(this.vocabulary[id])[attribute];\n                if (value.includes('^ign^')) {\n                    value = value.replaceAll('^ign^', '');\n                    element.classList.remove('ign');\n                } else {\n                    value = '^ign^' + value;\n                    element.classList.add('ign');\n                }\n                this.vocabulary[id][Object.keys(this.vocabulary[id])[attribute]] = value;\n                const transaction = this.database.transaction('vocabulary', 'readwrite');\n                transaction.onerror = (_)=>console.error(transaction.error);\n                const objectStore = transaction.objectStore('vocabulary');\n                const request = objectStore.get(id + 1);\n                request.onerror = (_)=>console.error(request.error);\n                request.onsuccess = (_)=>{\n                    const data = request.result;\n                    if (!data) return;\n                    Object.defineProperty(data, Object.keys(data)[attribute], {\n                        value: value\n                    });\n                    let cdiv = document.getElementById(`checkboxDiv${id}`);\n                    let ignWords = Object.values(data).slice(0, 4).filter((w)=>w.includes('^ign^')).length;\n                    if (ignWords === 4) {\n                        data.selected = false;\n                        this.vocabulary[id].selected = false;\n                        let cdiv = this.container.querySelector(\"#checkboxDiv\" + id);\n                        cdiv.classList.add('ign');\n                        cdiv.innerHTML = \"\";\n                        let img = document.createElement('img');\n                        img.src = './ign.svg';\n                        cdiv.append(img);\n                    } else if (ignWords === 3) {\n                        let cdiv = this.container.querySelector(\"#checkboxDiv\" + id);\n                        cdiv.innerHTML = \"\";\n                        cdiv.classList.remove(\"ign\");\n                        let img = document.createElement('img');\n                        img.src = './ign.svg';\n                        img.classList.add(\"white\");\n                        cdiv.append(img);\n                    } else if (ignWords === 0) {\n                        data.selected = true;\n                        this.vocabulary[id].selected = true;\n                        let cdiv = this.container.querySelector(\"#checkboxDiv\" + id);\n                        cdiv.innerHTML = \"\";\n                        cdiv.classList.remove(\"ign\");\n                        let img = document.createElement('img');\n                        img.src = './fully-selected.svg';\n                        cdiv.append(img);\n                    } else {\n                        let cdiv = this.container.querySelector(\"#checkboxDiv\" + id);\n                        cdiv.innerHTML = \"\";\n                        cdiv.classList.remove(\"ign\");\n                        let img = document.createElement('img');\n                        img.src = './selected.svg';\n                        cdiv.append(img);\n                    }\n                    const req = objectStore.put(data, id + 1);\n                    req.onerror = (_)=>console.error(req.error);\n                };\n            }\n        };\n        const selectFunction = (event)=>{\n            event.preventDefault();\n            event.stopPropagation();\n            let element = event.target;\n            if (element.classList.contains('cdiv')) {\n                let id = parseInt(element.id.replaceAll('checkboxDiv', ''));\n                if (this.vocabulary[id]) {\n                    let value = !this.vocabulary[id].selected;\n                    this.vocabulary[id].selected = value;\n                    if (!value) for(let i = 0; i < 4; i++){\n                        if (!Object.values(this.vocabulary[id])[i].includes('^ign^')) this.vocabulary[id][Object.keys(this.vocabulary[id])[i]] = '^ign^' + this.vocabulary[id][Object.keys(this.vocabulary[id])[i]];\n                        let word = document.getElementById(Object.keys(this.vocabulary[id])[i] + id);\n                        if (word && !word.classList.contains('ign')) word.classList.add('ign');\n                        element.classList.add('ign');\n                        element.innerHTML = \"\";\n                        let img = document.createElement('img');\n                        img.src = './ign.svg';\n                        element.append(img);\n                    }\n                    else for(let i = 0; i < 4; i++){\n                        if (Object.values(this.vocabulary[id])[i].includes('^ign^')) this.vocabulary[id][Object.keys(this.vocabulary[id])[i]] = Object.values(this.vocabulary[id])[i].replaceAll('^ign^', '');\n                        let word = document.getElementById(Object.keys(this.vocabulary[id])[i] + id);\n                        if (word && word.classList.contains('ign')) word.classList.remove('ign');\n                        element.classList.remove('ign');\n                        element.innerHTML = \"\";\n                        let img = document.createElement('img');\n                        img.src = './fully-selected.svg';\n                        element.append(img);\n                    }\n                    const transaction = this.database.transaction('vocabulary', 'readwrite');\n                    transaction.onerror = (_)=>console.error(transaction.error);\n                    const objectStore = transaction.objectStore('vocabulary');\n                    const request = objectStore.get(id + 1);\n                    request.onerror = (_)=>console.error(request.error);\n                    request.onsuccess = (_)=>{\n                        const data = request.result;\n                        if (data) {\n                            this.vocabulary[id].probability = data.probability;\n                            const req = objectStore.put(this.vocabulary[id], id + 1);\n                            req.onerror = (_)=>console.error(req.error);\n                        }\n                    };\n                }\n            }\n        };\n        const headerFunction = (event)=>{\n            event.preventDefault();\n            event.stopPropagation();\n            let element = event.target;\n            if (element.classList.contains('header')) {\n                let header = element;\n                let key;\n                switch(header.id){\n                    case 'latin-word':\n                        key = 'latinWord';\n                        break;\n                    case 'inflections':\n                        key = 'inflections';\n                        break;\n                    case 'german-translation':\n                        key = 'germanTranslation';\n                        break;\n                    case 'related-foreign-words':\n                        key = 'relatedForeignWords';\n                        break;\n                    default:\n                        return;\n                }\n                const transaction = this.database.transaction('vocabulary', 'readwrite');\n                transaction.onerror = (_)=>console.error(transaction.error);\n                const objectStore = transaction.objectStore('vocabulary');\n                const request = objectStore.openCursor();\n                request.onerror = (_)=>console.error(request.error);\n                request.onsuccess = (_)=>{\n                    const cursor = request.result;\n                    if (cursor) {\n                        let k = cursor.key;\n                        const updatedData = cursor.value;\n                        if (updatedData.latinWord.includes('^con^')) cursor.continue();\n                        else {\n                            if (header.classList.contains('ign')) {\n                                if (updatedData.selected) {\n                                    updatedData[key] = updatedData[key].replaceAll('^ign^', '');\n                                    this.vocabulary[k - 1][key] = updatedData[key];\n                                    let div = document.querySelector(`#${key}${k - 1}`);\n                                    if (div) div.classList.remove('ign');\n                                }\n                            } else {\n                                if (!updatedData[key].includes('^ign^')) updatedData[key] = '^ign^' + updatedData[key];\n                                this.vocabulary[k - 1][key] = updatedData[key];\n                                let div = document.querySelector(`#${key}${k - 1}`);\n                                if (!div.classList.contains('ign')) div.classList.add('ign');\n                            }\n                            let ignWords = Object.values(updatedData).slice(0, 4).filter((w)=>w.includes('^ign^')).length;\n                            if (ignWords === 4) {\n                                updatedData.selected = false;\n                                this.vocabulary[k - 1].selected = false;\n                                let cdiv = this.container.querySelector(\"#checkboxDiv\" + (k - 1));\n                                cdiv.classList.add('ign');\n                                cdiv.innerHTML = \"\";\n                                let img = document.createElement('img');\n                                img.src = './ign.svg';\n                                cdiv.append(img);\n                            } else if (ignWords === 3) {\n                                let cdiv = this.container.querySelector(\"#checkboxDiv\" + (k - 1));\n                                cdiv.classList.remove('ign');\n                                cdiv.innerHTML = \"\";\n                                let img = document.createElement('img');\n                                img.src = './ign.svg';\n                                img.classList.remove(\"white\");\n                                cdiv.append(img);\n                            } else if (ignWords === 0) {\n                                let cdiv = this.container.querySelector(\"#checkboxDiv\" + (k - 1));\n                                cdiv.classList.remove('ign');\n                                cdiv.innerHTML = \"\";\n                                let img = document.createElement('img');\n                                img.src = './fully-selected.svg';\n                                cdiv.append(img);\n                            } else {\n                                let cdiv = this.container.querySelector(\"#checkboxDiv\" + (k - 1));\n                                cdiv.classList.remove('ign');\n                                cdiv.innerHTML = \"\";\n                                let img = document.createElement('img');\n                                img.src = './selected.svg';\n                                cdiv.append(img);\n                            }\n                            cursor.update(updatedData);\n                            cursor.continue();\n                        }\n                    }\n                };\n                transaction.oncomplete = (_)=>{\n                    if (header.classList.contains('ign')) header.classList.remove('ign');\n                    else header.classList.add('ign');\n                };\n            }\n        };\n        const conFunction = (event)=>{\n            event.preventDefault();\n            event.stopPropagation();\n            let element = event.target;\n            if (element.parentElement.classList.contains('unit') && element.tagName != \"IMG\") element = element.parentElement;\n            if (element.classList.contains('unit')) {\n                let unit = element;\n                let id = parseInt(unit.id.replaceAll('unit', '')) - 1;\n                let index = this.containers[id];\n                let nextIndex = index === this.containers[this.containers.length - 1] ? this.vocabulary.length : this.containers[id + 1];\n                const transaction = this.database.transaction('vocabulary', 'readwrite');\n                transaction.onerror = (_)=>console.error(transaction.error);\n                const objectStore = transaction.objectStore('vocabulary');\n                const request = objectStore.openCursor();\n                request.onerror = (_)=>console.error(request.error);\n                request.onsuccess = (_)=>{\n                    const cursor = request.result;\n                    if (cursor) {\n                        let k = cursor.key - 1;\n                        if (k === index) {\n                            const updatedData = cursor.value;\n                            let l = updatedData.latinWord;\n                            if (l.includes('^ign^')) {\n                                l = l.replaceAll('^ign^', '');\n                                updatedData.latinWord = l;\n                            } else if (!l.includes('^ign^')) {\n                                l = '^ign^' + l;\n                                updatedData.latinWord = l;\n                            }\n                            cursor.update(updatedData);\n                        }\n                        if (k > index && k < nextIndex) {\n                            const updatedData = cursor.value;\n                            if (!unit.classList.contains('ign')) {\n                                for(let a = 0; a < 4; a++){\n                                    if (!Object.values(this.vocabulary[k])[a].includes('^ign^')) {\n                                        Object.defineProperty(this.vocabulary[k], Object.keys(this.vocabulary[k])[a], {\n                                            value: '^ign^' + this.vocabulary[k][Object.keys(this.vocabulary[k])[a]]\n                                        });\n                                        Object.defineProperty(updatedData, Object.keys(updatedData)[a], {\n                                            value: '^ign^' + updatedData[Object.keys(updatedData)[a]]\n                                        });\n                                    }\n                                    let div = document.getElementById(Object.keys(this.vocabulary[k])[a] + k);\n                                    if (div && !div.classList.contains('ign')) div.classList.add('ign');\n                                }\n                                this.vocabulary[k].selected = false;\n                                updatedData.selected = false;\n                                let cdiv = document.getElementById(`checkboxDiv${k}`);\n                                if (cdiv && !cdiv.classList.contains('ign')) {\n                                    cdiv.classList.add('ign');\n                                    cdiv.innerHTML = \"\";\n                                    let img = document.createElement('img');\n                                    img.src = './ign.svg';\n                                    cdiv.append(img);\n                                }\n                            } else {\n                                for(let a = 0; a < 4; a++){\n                                    if (Object.values(this.vocabulary[k])[a].includes('^ign^')) {\n                                        Object.defineProperty(this.vocabulary[k], Object.keys(this.vocabulary[k])[a], {\n                                            value: Object.values(this.vocabulary[k])[a].replaceAll('^ign^', '')\n                                        });\n                                        Object.defineProperty(updatedData, Object.keys(updatedData)[a], {\n                                            value: this.vocabulary[k][Object.keys(this.vocabulary[k])[a]]\n                                        });\n                                    }\n                                    let div = document.getElementById(Object.keys(this.vocabulary[k])[a] + k);\n                                    if (div && div.classList.contains('ign')) div.classList.remove('ign');\n                                }\n                                this.vocabulary[k].selected = true;\n                                updatedData.selected = true;\n                                let cdiv = document.getElementById(`checkboxDiv${k}`);\n                                if (cdiv && cdiv.classList.contains('ign')) {\n                                    cdiv.classList.remove('ign');\n                                    cdiv.innerHTML = \"\";\n                                    let img = document.createElement('img');\n                                    img.src = './fully-selected.svg';\n                                    cdiv.append(img);\n                                }\n                            }\n                            cursor.update(updatedData);\n                        }\n                        cursor.continue();\n                    }\n                };\n                transaction.oncomplete = (_)=>{\n                    if (unit.classList.contains('ign')) unit.classList.remove('ign');\n                    else unit.classList.add('ign');\n                };\n            }\n        };\n        let str = '';\n        let decoration = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)('decoration', 'header');\n        let latinWord = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)('latin-word', 'header');\n        latinWord.innerHTML = 'Latein';\n        let inflections = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)('inflections', 'header');\n        inflections.innerHTML = 'Formen';\n        let germanTranslation = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)('german-translation', 'header');\n        germanTranslation.innerHTML = 'Deutsch';\n        let relatedForeignWords = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)('related-foreign-words', 'header');\n        relatedForeignWords.innerHTML = \"Fremdw\\xf6rter\";\n        [\n            decoration,\n            latinWord,\n            inflections,\n            germanTranslation,\n            relatedForeignWords\n        ].forEach((header)=>{\n            header.addEventListener('contextmenu', headerFunction);\n            this.container.append(header);\n        });\n        let unit = 1;\n        this.vocabulary.forEach((word, i)=>{\n            if (word.latinWord.includes('^con^')) {\n                let n_unit = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`unit${unit}`, 'unit');\n                this.container.append(n_unit);\n                n_unit.innerHTML = `<div></div><span>${word.latinWord.replaceAll('^con^', '').replaceAll('^ign^', '')}</span>`;\n                let img = document.createElement('img');\n                img.src = './arrow_down.svg';\n                img.id = 'arrowDown';\n                img.style.cursor = 'pointer';\n                n_unit.append(img);\n                n_unit.classList.add('down');\n                n_unit.addEventListener('contextmenu', conFunction);\n                if (word.latinWord.includes('^ign^')) n_unit.classList.add(\"ign\");\n                unit++;\n                this.containers.push(i);\n                img.addEventListener('click', (_)=>{\n                    if (img.classList.contains('rotated')) {\n                        img.style.transform = 'rotate(0deg)';\n                        img.classList.remove('rotated');\n                    } else {\n                        img.style.transform = 'rotate(90deg)';\n                        img.classList.add('rotated');\n                    }\n                    this.clickUnit(n_unit, i);\n                });\n            } else {\n                str += 'auto ';\n                let Cdiv = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`checkboxDiv${i}`, 'word');\n                let div1 = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`latinWord${i}`, 'word');\n                let div2 = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`inflections${i}`, 'word');\n                let div3 = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`germanTranslation${i}`, 'word');\n                let div4 = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`relatedForeignWords${i}`, 'word');\n                Cdiv.classList.add('cdiv');\n                div1.innerHTML = `<input type=\"text\" id=\"0-${i}\" class=\"edit\" value=\"${word.latinWord === '' ? ' ' : word.latinWord.replaceAll('\"', \"&QUOT;\")}\"></input>`;\n                div2.innerHTML = `<input type=\"text\" id=\"1-${i}\" class=\"edit\" value=\"${word.inflections === '' ? ' ' : word.inflections.replaceAll('\"', \"&QUOT;\")}\"></input>`;\n                div3.innerHTML = `<input type=\"text\" id=\"2-${i}\" class=\"edit\" value=\"${word.germanTranslation === '' ? ' ' : word.germanTranslation.replaceAll('\"', \"&QUOT;\")}\"></input>`;\n                div4.innerHTML = `<input type=\"text\" id=\"3-${i}\" class=\"edit\" value=\"${word.relatedForeignWords === '' ? ' ' : word.relatedForeignWords.replaceAll('\"', \"&QUOT;\")}\"></input>`;\n                [\n                    div1,\n                    div2,\n                    div3,\n                    div4\n                ].forEach((div)=>{\n                    if (div.querySelector('input')?.value.includes('^ign^')) {\n                        div.classList.add('ign');\n                        div.querySelector('input').value = div.querySelector('input')?.value.replaceAll('^ign^', '');\n                    }\n                });\n                let ignWords = Object.values(word).slice(0, 4).filter((w)=>w.includes('^ign^')).length;\n                if (!word.selected || ignWords === 4) {\n                    [\n                        Cdiv,\n                        div1,\n                        div2,\n                        div3,\n                        div4\n                    ].forEach((div)=>div.classList.add('ign'));\n                    let img = document.createElement('img');\n                    img.src = './ign.svg';\n                    Cdiv.append(img);\n                } else if (ignWords === 3) {\n                    let img = document.createElement('img');\n                    img.src = './ign.svg';\n                    img.classList.add('white');\n                    Cdiv.append(img);\n                } else if (ignWords === 0) {\n                    Cdiv.innerHTML = \"\";\n                    let img = document.createElement('img');\n                    img.src = './fully-selected.svg';\n                    Cdiv.append(img);\n                } else {\n                    Cdiv.innerHTML = \"\";\n                    let img = document.createElement('img');\n                    img.src = './selected.svg';\n                    Cdiv.append(img);\n                }\n                Cdiv.addEventListener('contextmenu', selectFunction);\n                // COPILOT\n                const autoScaleInput = (input)=>{\n                    const parentWidth = window.innerWidth * 0.22;\n                    const maxFontSize = 0.015 * window.innerHeight;\n                    let fontSize = maxFontSize;\n                    const ctx = document.createElement('canvas').getContext('2d');\n                    if (!ctx) return;\n                    const style = window.getComputedStyle(input);\n                    const fontProps = [\n                        style.fontStyle || 'normal',\n                        style.fontVariant || 'normal',\n                        style.fontWeight || 'normal',\n                        `${fontSize}px`,\n                        style.fontFamily || 'inherit'\n                    ].join(' ');\n                    ctx.font = fontProps;\n                    const text = input.value.replaceAll('\"', \"&QUOT;\") || input.placeholder || '';\n                    while(ctx.measureText(text).width > parentWidth && fontSize > 1){\n                        fontSize--;\n                        ctx.font = [\n                            style.fontStyle || 'normal',\n                            style.fontVariant || 'normal',\n                            style.fontWeight || 'normal',\n                            `${fontSize}px`,\n                            style.fontFamily || 'inherit'\n                        ].join(' ');\n                    }\n                    while(ctx.measureText(text).width < parentWidth - 10 && fontSize < maxFontSize){\n                        fontSize++;\n                        ctx.font = [\n                            style.fontStyle || 'normal',\n                            style.fontVariant || 'normal',\n                            style.fontWeight || 'normal',\n                            `${fontSize}px`,\n                            style.fontFamily || 'inherit'\n                        ].join(' ');\n                        if (ctx.measureText(text).width > parentWidth) {\n                            fontSize--;\n                            ctx.font = [\n                                style.fontStyle || 'normal',\n                                style.fontVariant || 'normal',\n                                style.fontWeight || 'normal',\n                                `${fontSize}px`,\n                                style.fontFamily || 'inherit'\n                            ].join(' ');\n                            break;\n                        }\n                    }\n                    input.style.fontSize = `${fontSize}px`;\n                };\n                const inputs = [\n                    div1,\n                    div2,\n                    div3,\n                    div4\n                ].map((div)=>div.querySelector('input')).filter(Boolean);\n                this.resizeFunction = ()=>{\n                    inputs.forEach((input)=>autoScaleInput(input));\n                };\n                inputs.forEach((input)=>{\n                    input.style.width = '22vw';\n                    input.addEventListener('input', ()=>autoScaleInput(input));\n                });\n                window.addEventListener(\"resize\", this.resizeFunction);\n                this.container.append(Cdiv, div1, div2, div3, div4);\n                inputs.forEach((input)=>autoScaleInput(input));\n            }\n        });\n        for(let i = 1; i < unit; i++){\n            let i_unit = this.container.querySelector('#unit' + i);\n            let img = i_unit.querySelector(\"#arrowDown\");\n            if (img.classList.contains('rotated')) {\n                img.style.transform = 'rotate(0deg)';\n                img.classList.remove('rotated');\n            } else {\n                img.style.transform = 'rotate(90deg)';\n                img.classList.add('rotated');\n            }\n            this.clickUnit(i_unit, this.containers[i - 1]);\n        }\n        this.container.style.gridTemplateRows = str;\n        let wordList = document.querySelectorAll('.word');\n        wordList.forEach((div)=>{\n            div.addEventListener('contextmenu', ignFunction);\n        });\n        let inputList = document.getElementsByClassName('edit');\n        for(let i = 0; i < inputList.length; i++){\n            let input = inputList.item(i);\n            input.addEventListener('contextmenu', ignFunction);\n            input.onblur = (_)=>{\n                const transaction = this.database.transaction('vocabulary', 'readwrite');\n                transaction.onerror = (_)=>console.error(transaction.error);\n                const objectStore = transaction.objectStore('vocabulary');\n                const request = objectStore.get(parseInt(input.id.split('-')[1]) + 1);\n                request.onerror = (_)=>console.error(request.error);\n                request.onsuccess = (_)=>{\n                    const data = request.result;\n                    Object.defineProperty(data, Object.keys(data)[parseInt(input.id.split('-')[0])], {\n                        value: input.value.replaceAll(\"&QUOT;\", '\"').trim()\n                    });\n                    const req = objectStore.put(data, parseInt(input.id.split('-')[1]) + 1);\n                    req.onerror = (_)=>console.error(req.error);\n                };\n            };\n            input.onkeydown = (event)=>{\n                if (event.key === 'Enter') input.blur();\n            };\n            input.onkeyup = (_)=>{\n                if (input.value.includes('^')) {\n                    let str = '';\n                    input.value.split('').forEach((letter)=>{\n                        if (letter != '^') str += letter;\n                    });\n                    input.value = str;\n                }\n            };\n        }\n        let checkboxDivList = document.getElementsByClassName('cdiv');\n        for(let i = 0; i < checkboxDivList.length; i++){\n            let element = checkboxDivList[i];\n            let id = element.id.slice(11);\n            let mouseover = false;\n            let saved;\n            let clickFunction = (event)=>{\n                let cdiv = event.target;\n                let index = parseInt(cdiv.id.slice(11));\n                this.deleteWord(index);\n            };\n            let indicator;\n            element.addEventListener('mousemove', (event)=>{\n                if (event.target === element.querySelector('input')) {\n                    mouseover = false;\n                    element.classList.remove('mouseon');\n                    clearTimeout(indicator);\n                    element.removeEventListener('click', clickFunction);\n                    document.querySelectorAll('.danger').forEach((e)=>e.classList.remove('danger'));\n                } else if (!mouseover) {\n                    mouseover = true;\n                    saved = element.innerHTML;\n                    setTimeout((_)=>{\n                        if (mouseover) {\n                            element.classList.add('mouseon');\n                            indicator = setTimeout((_)=>{\n                                if (mouseover) {\n                                    element.innerHTML = \"\";\n                                    let img = document.createElement('img');\n                                    img.src = './delete.svg';\n                                    element.append(img);\n                                    element.addEventListener('click', clickFunction);\n                                    document.querySelector(`#latinWord${id}`).classList.add('danger');\n                                    document.querySelector(`#inflections${id}`).classList.add('danger');\n                                    document.querySelector(`#germanTranslation${id}`).classList.add('danger');\n                                    document.querySelector(`#relatedForeignWords${id}`).classList.add('danger');\n                                }\n                            }, 1500);\n                        }\n                    }, 1500);\n                }\n            });\n            element.addEventListener('mouseleave', (_)=>{\n                mouseover = false;\n                element.classList.remove('mouseon');\n                clearTimeout(indicator);\n                document.querySelectorAll('.danger').forEach((e)=>e.classList.remove('danger'));\n                element.removeEventListener('click', clickFunction);\n                let ignWords = Object.values(this.vocabulary[id]).slice(0, 4).filter((w)=>w.includes('^ign^')).length;\n                if (ignWords === 4) {\n                    let cdiv = element;\n                    cdiv.innerHTML = \"\";\n                    let img = document.createElement('img');\n                    img.src = './ign.svg';\n                    cdiv.append(img);\n                } else if (ignWords === 3) {\n                    let cdiv = element;\n                    cdiv.innerHTML = \"\";\n                    let img = document.createElement('img');\n                    img.src = './ign.svg';\n                    img.classList.add(\"white\");\n                    cdiv.append(img);\n                } else if (ignWords === 0) {\n                    let cdiv = element;\n                    cdiv.innerHTML = \"\";\n                    let img = document.createElement('img');\n                    img.src = './fully-selected.svg';\n                    cdiv.append(img);\n                } else {\n                    let cdiv = element;\n                    cdiv.innerHTML = \"\";\n                    let img = document.createElement('img');\n                    img.src = './selected.svg';\n                    cdiv.append(img);\n                }\n            });\n        }\n    }\n    clickUnit(unit, index) {\n        if (unit.classList.contains('down')) {\n            unit.classList.remove('down');\n            unit.classList.add('up');\n            let nextIndex = index === this.containers[this.containers.length - 1] ? undefined : this.containers[this.containers.indexOf(index) + 1];\n            let hiddenWords = nextIndex ? this.vocabulary.slice(index + 1, nextIndex) : this.vocabulary.slice(index + 1);\n            hiddenWords.forEach((hWord, i)=>{\n                let Cdiv = document.querySelector(`#checkboxDiv${index + 1 + i}`);\n                let div1 = document.querySelector(`#latinWord${index + 1 + i}`);\n                let div2 = document.querySelector(`#inflections${index + 1 + i}`);\n                let div3 = document.querySelector(`#germanTranslation${index + 1 + i}`);\n                let div4 = document.querySelector(`#relatedForeignWords${index + 1 + i}`);\n                [\n                    Cdiv,\n                    div1,\n                    div2,\n                    div3,\n                    div4\n                ].forEach((div)=>{\n                    if (div) div.style.display = 'none';\n                });\n            });\n        } else if (unit.classList.contains('up')) {\n            unit.classList.remove('up');\n            unit.classList.add('down');\n            let nextIndex = index === this.containers[this.containers.length - 1] ? undefined : this.containers[this.containers.indexOf(index) + 1];\n            let shownWords = nextIndex ? this.vocabulary.slice(index + 1, nextIndex) : this.vocabulary.slice(index + 1);\n            shownWords.forEach((sWord, i)=>{\n                let Cdiv = document.querySelector(`#checkboxDiv${index + 1 + i}`);\n                let div1 = document.querySelector(`#latinWord${index + 1 + i}`);\n                let div2 = document.querySelector(`#inflections${index + 1 + i}`);\n                let div3 = document.querySelector(`#germanTranslation${index + 1 + i}`);\n                let div4 = document.querySelector(`#relatedForeignWords${index + 1 + i}`);\n                [\n                    Cdiv,\n                    div1,\n                    div2,\n                    div3,\n                    div4\n                ].forEach((div)=>{\n                    if (div) div.style.display = 'flex';\n                });\n            });\n        }\n    }\n    deleteWord(key) {\n        this.vocabulary.splice(key, 1);\n        const transaction = this.database.transaction('vocabulary', 'readwrite');\n        const objectStore = transaction.objectStore('vocabulary');\n        const request = objectStore.openCursor();\n        request.onsuccess = (_)=>{\n            let cursor = request.result;\n            if (cursor) {\n                let k = cursor.key;\n                let word = this.vocabulary[k - 1];\n                if (word) {\n                    const updatedData = cursor.value;\n                    updatedData.latinWord = word.latinWord;\n                    updatedData.inflections = word.inflections;\n                    updatedData.germanTranslation = word.germanTranslation;\n                    updatedData.relatedForeignWords = word.relatedForeignWords;\n                    updatedData.selected = word.selected;\n                    updatedData.probability = word.probability;\n                    cursor.update(updatedData);\n                    cursor.continue();\n                } else {\n                    cursor.delete();\n                    (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                    this.modifyDocument();\n                }\n            }\n        };\n    }\n}\n\n\n\nclass $b6fe10105ad30798$export$564a2d2b8c542ee9 {\n    constructor(){\n        this.totalAttempts = 0;\n        this.totalPoints = 0;\n        this.commandMode = false;\n        this.command = '';\n        this.padding = [\n            0,\n            0,\n            0,\n            0\n        ];\n        this.inputIndex = 0;\n        this.time = 0;\n        this.round = 0;\n        this.keys = 0;\n        this.backgroundColor = '#140063';\n        this.resizeFunction = ()=>{\n            let inputs = document.querySelectorAll('.inp');\n            inputs.forEach((inp)=>{\n                if (inp.firstChild && !inp.classList.contains('not-editable')) {\n                    let object = inp.lastElementChild;\n                    if (!object || !object.contentDocument) return;\n                    let w = window.innerWidth;\n                    let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n                    let h = w / (inp.childElementCount + 1) * aspectRatio;\n                    let padding = (inp.getBoundingClientRect().height - h) / 2;\n                    this.padding[inp.id.charAt(3)] = Math.max(padding, 0.1);\n                    this.movementAnimation(inp);\n                } else if (inp.classList.contains('not-editable') && inp.querySelector(\"span\")) {\n                    let max = inp.clientHeight * 0.6;\n                    let fontSize;\n                    let span = document.querySelector(`#${inp.id} span`);\n                    span.style.whiteSpace = 'nowrap';\n                    span.style.display = 'inline-block';\n                    span.style.width = 'auto';\n                    span.style.fontSize = max + 'px';\n                    while(span.scrollWidth > inp.clientWidth * 0.95 || span.clientHeight > max){\n                        fontSize = parseInt(span.style.fontSize.slice(0, -2));\n                        if (fontSize <= 1) break;\n                        span.style.fontSize = fontSize - 1 + 'px';\n                    }\n                }\n            });\n        };\n    }\n    modifyDocument() {\n        window.addEventListener('resize', this.resizeFunction);\n        const request = window.indexedDB.open('Vocabulary', 2);\n        request.addEventListener('error', (_)=>{\n            this.vocabulary = [];\n            this.modifyDocument();\n            console.error(request.error);\n        });\n        request.addEventListener('success', (_)=>{\n            this.database = request.result;\n            const transaction = this.database.transaction('vocabulary', 'readonly');\n            transaction.onerror = ()=>console.error(transaction.error);\n            const objectStore = transaction.objectStore('vocabulary');\n            const req = objectStore.getAll();\n            req.onerror = ()=>console.error(req.error);\n            req.onsuccess = ()=>{\n                this.vocabulary = req.result;\n                this.backgroundColor = '#140063';\n                this.container = document.querySelector('#container');\n                this.iconPlaceholder = document.querySelector('#icon-placeholder');\n                this.navbar = document.querySelector('#navbar');\n                this.container.style.padding = '0';\n                document.body.style.backgroundImage = 'none';\n                document.body.setAttribute('class', '');\n                this.container.setAttribute('class', '');\n                this.iconPlaceholder.setAttribute('class', '');\n                this.navbar.setAttribute('class', '');\n                this.container.innerHTML = '';\n                this.iconPlaceholder.innerHTML = '';\n                this.navbar.innerHTML = '';\n                let trainingIcon = document.createElement('object');\n                trainingIcon.data = './training.svg';\n                trainingIcon.id = 'trainingIcon';\n                this.iconPlaceholder.insertAdjacentElement('beforeend', trainingIcon);\n                document.body.classList.add(\"trainingBody\");\n                this.container.classList.add(\"trainingContainer\");\n                this.iconPlaceholder.classList.add(\"trainingIconPlaceholder\");\n                this.navbar.classList.add(\"trainingNavbar\");\n                let classes = 'inp bg inp bg inp bg inp'.split(' ');\n                for(let i = 0; i < classes.length; i++){\n                    let div = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`div${i}`, `${classes[i]}`, `100%`, `${100 / classes.length}%`);\n                    div.classList.add('t');\n                    this.container.appendChild(div);\n                    div.style.padding = `${0.05 * div.offsetHeight}px`;\n                }\n                this.mouseOverFunction = (event)=>{\n                    let homeDiv = document.querySelector('.homeDiv');\n                    if (homeDiv && homeDiv != event.target && event.target != this.navbar && !(document.querySelector('.homeButton') && event.target === document.querySelector('.homeButton')) && event.target != document.querySelector('.homeIcon')) {\n                        homeDiv.classList.remove('moveUp');\n                        setTimeout((_)=>homeDiv.classList.add('moveDown'), 0);\n                    } else if (!(event.target != this.navbar && !(document.querySelector('.homeButton') && event.target === document.querySelector('.homeButton')) && event.target != document.querySelector('.homeIcon'))) {\n                        if (!homeDiv.classList.contains('moveUp')) {\n                            homeDiv.classList.remove('moveDown');\n                            homeDiv.classList.add('moveUp');\n                        }\n                    }\n                    if (!homeDiv) {\n                        let hd = document.createElement('div');\n                        hd.setAttribute('class', 'homeDiv');\n                        this.navbar.insertAdjacentElement('afterend', hd);\n                        let button = document.createElement('div');\n                        button.classList.add('homeButton');\n                        let icon = document.createElement('object');\n                        icon.classList.add('homeIcon');\n                        icon.data = './home.svg';\n                        icon.style.height = '6vh';\n                        hd.insertAdjacentElement('beforeend', button);\n                        button.insertAdjacentElement('beforeend', icon);\n                        let clickFunction = ()=>{\n                            (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                            (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n                            return;\n                        };\n                        button.addEventListener('click', clickFunction);\n                        icon.addEventListener('load', (_)=>{\n                            icon.contentDocument.addEventListener('click', clickFunction);\n                        });\n                    }\n                };\n                document.addEventListener('mouseover', this.mouseOverFunction);\n                this.type();\n            };\n        });\n    }\n    type() {\n        let inputs = [\n            0,\n            2,\n            4,\n            6\n        ];\n        for(let i = 0; i < this.container.childElementCount; i += 2)this.container.children[i].addEventListener('click', (_)=>{\n            this.inputIndex = i / 2;\n            this.selectedInput = this.container.children[i];\n            this.inputStyling();\n            this.keys = this.selectedInput.childElementCount;\n        });\n        for(let i = 1; i < this.container.childElementCount; i += 2)this.container.children[i].addEventListener('click', (event)=>{\n            if (event.offsetY > this.container.children[i].clientHeight / 2) {\n                this.inputIndex = (i + 1) / 2;\n                this.selectedInput = this.container.children[i + 1];\n                this.inputStyling();\n                this.keys = this.selectedInput.childElementCount;\n            } else {\n                this.inputIndex = (i - 1) / 2;\n                this.selectedInput = this.container.children[i - 1];\n                this.inputStyling();\n                this.keys = this.selectedInput.childElementCount;\n            }\n        });\n        this.selectedInput = this.container.children[inputs[this.inputIndex]];\n        this.inputStyling();\n        this.keyDownFunction = (event)=>{\n            let mode = this.commandMode;\n            let forbiddenCharacters = [\n                '<',\n                \"\\xb4\",\n                '`',\n                '^'\n            ];\n            if (this.commandMode) {\n                if (event.key === 'Enter') {\n                    switch(this.command.toLowerCase()){\n                        case '#hint':\n                        case '#t':\n                        case '#tip':\n                        case '#tipp':\n                            this.command.split('').forEach((_)=>{\n                                this.returnLastElement(this.selectedInput).remove();\n                                this.keys--;\n                                if (this.selectedInput.firstChild) this.movementAnimation(this.selectedInput);\n                            });\n                            let object = document.createElement('object');\n                            object.data = './keys/Reversion_T.svg';\n                            object.id = `key${this.keys}-inp${this.inputIndex}`;\n                            object.style.height = `100%`;\n                            let width = object.clientHeight;\n                            let index = 0;\n                            let word = Object.values(this.currentWord)[this.inputIndex];\n                            let str = '';\n                            let maxLength;\n                            let changeMade = false;\n                            for(let i = 0; i < word.length; i++)if (word[i] != Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex][i] && !changeMade) {\n                                index = i;\n                                if (this.vocabulary[this.currentWordIndex][Object.keys(this.vocabulary[this.currentWordIndex])[this.inputIndex]][index]) str += this.vocabulary[this.currentWordIndex][Object.keys(this.vocabulary[this.currentWordIndex])[this.inputIndex]][index];\n                                else maxLength = word.length - 1;\n                                changeMade = true;\n                            } else str += word[i];\n                            this.currentWord[Object.keys(this.currentWord)[this.inputIndex]] = maxLength ? str.slice(0, maxLength) : str;\n                            word = maxLength ? str.slice(0, maxLength) : str;\n                            if (maxLength) {\n                                this.returnLastElement(this.selectedInput).remove();\n                                this.movementAnimation(this.selectedInput);\n                                this.keys--;\n                                mode = false;\n                                this.commandMode = false;\n                                break;\n                            }\n                            if (!changeMade) {\n                                index = word.length;\n                                if (word.length < Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex].length) this.currentWord[Object.keys(this.currentWord)[this.inputIndex]] += Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex][index];\n                                else {\n                                    mode = false;\n                                    this.commandMode = false;\n                                    break;\n                                }\n                            }\n                            if (word.length > 0 && index < word.length) {\n                                this.selectedInput.children[index].replaceWith(object);\n                                this.keys--;\n                                object.hidden = true;\n                            } else {\n                                this.selectedInput.insertAdjacentElement('beforeend', object);\n                                object.hidden = true;\n                            }\n                            object.addEventListener('load', (_)=>{\n                                if (this.keys >= Math.floor(window.innerWidth / width)) {\n                                    object.remove();\n                                    for(let i = 0; i < this.keys; i++)(0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).failureAnimation(this.selectedInput.children[i]);\n                                    return;\n                                }\n                                object.hidden = false;\n                                this.keys++;\n                                let svg = object.contentDocument;\n                                svg.querySelector('#tspan7').innerHTML = Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex][index];\n                                this.fixedAnimation(object);\n                                this.movementAnimation(this.selectedInput);\n                            });\n                            break;\n                        case '#pensionistenmodus':\n                            this.backgroundColor = '#7a4aff';\n                            this.inputStyling();\n                            this.command.split('').forEach((_)=>{\n                                this.returnLastElement(this.selectedInput).remove();\n                                this.keys--;\n                                if (this.selectedInput.firstChild) this.movementAnimation(this.selectedInput);\n                            });\n                            break;\n                        case '#exit':\n                        case '#quit':\n                        case '#stop':\n                        case '#home':\n                        case '#stopp':\n                        case '#beenden':\n                        case \"#hauptmen\\xfc\":\n                        case '#home menu':\n                        case '#h':\n                            this.command = '';\n                            this.commandMode = false;\n                            (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                            (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n                            return;\n                        default:\n                            this.command.split('').forEach((_)=>{\n                                this.returnLastElement(this.selectedInput).remove();\n                                this.keys--;\n                                if (this.selectedInput.firstChild) this.movementAnimation(this.selectedInput);\n                            });\n                            if (this.inputIndex + 1 < 4) {\n                                this.inputIndex++;\n                                this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                                if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\n                                    this.inputIndex += 1;\n                                    this.selectedInput = this.container.children[this.inputIndex];\n                                }\n                                this.keys = this.selectedInput.childElementCount;\n                                this.inputStyling();\n                            }\n                    }\n                    this.command = '';\n                    this.commandMode = false;\n                } else if (event.key === 'ArrowUp') {\n                    this.command.split('').forEach((_)=>{\n                        this.returnLastElement(this.selectedInput).remove();\n                        this.keys--;\n                        if (this.selectedInput.firstChild) this.movementAnimation(this.selectedInput);\n                    });\n                    this.command = '';\n                    this.commandMode = false;\n                } else if (event.key === 'ArrowDown') {\n                    this.command.split('').forEach((_)=>{\n                        this.returnLastElement(this.selectedInput).remove();\n                        this.keys--;\n                        if (this.selectedInput.firstChild) this.movementAnimation(this.selectedInput);\n                    });\n                    this.command = '';\n                    this.commandMode = false;\n                    if (this.inputIndex + 1 < 4) {\n                        this.inputIndex++;\n                        this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                        if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\n                            this.inputIndex += 1;\n                            this.selectedInput = this.container.children[this.inputIndex];\n                        }\n                        this.keys = this.selectedInput.childElementCount;\n                        this.inputStyling();\n                    }\n                } else if (event.key === 'Backspace') {\n                    if (this.returnLastElement(this.selectedInput)) {\n                        this.returnLastElement(this.selectedInput).remove();\n                        this.command = this.command.slice(0, this.command.length - 1);\n                        this.keys--;\n                        if (this.selectedInput.firstChild) this.movementAnimation(this.selectedInput);\n                        if (this.command === '') this.commandMode = false;\n                    }\n                }\n                if (this.commandMode && (this.selectedInput.classList.contains('not-editable') || forbiddenCharacters.includes(event.key) || event.key.length > 1)) return;\n            }\n            if (!this.commandMode) {\n                if ((event.key === 'Enter' || event.key === 'ArrowDown') && !mode) {\n                    if (this.currentWord && !isNaN(this.currentWordIndex) && event.key === 'Enter') {\n                        if (Object.values(this.currentWord)[this.inputIndex] === Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex] || Object.values(this.currentWord)[this.inputIndex] === '') {\n                            for(let i = 0; i < this.keys; i++)if (this.selectedInput.children[i] && !this.selectedInput.classList.contains('not-editable')) this.successAnimation(this.selectedInput.children[i]);\n                            if (!this.selectedInput.classList.contains('not-editable')) {\n                                if (this.result[this.inputIndex] === undefined) this.result[this.inputIndex] = true;\n                            }\n                            if (this.inputIndex + 1 < 4) {\n                                this.inputIndex++;\n                                this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                                while(this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')){\n                                    this.inputIndex += 1;\n                                    this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                                }\n                                this.keys = this.selectedInput.childElementCount;\n                                this.inputStyling();\n                            } else if (this.inputIndex + 1 === 4) {\n                                let emptyLines = [\n                                    undefined,\n                                    undefined,\n                                    undefined,\n                                    undefined\n                                ];\n                                Object.values(this.currentWord).slice(0, 4).forEach((value, i)=>{\n                                    if (!document.querySelector(`#div${inputs[i]}`).classList.contains('not-editable')) {\n                                        if (value === Object.values(this.vocabulary[this.currentWordIndex])[i]) {\n                                            let inp = document.querySelector(`#div${inputs[i]}`);\n                                            for(let ii = 0; ii < inp.childElementCount; ii++){\n                                                let obj = inp.children[ii];\n                                                this.successAnimation(obj);\n                                            }\n                                            if (value === '') emptyLines[i] = true;\n                                            if (this.result[i] === undefined) this.result[i] = true;\n                                        } else {\n                                            let inp = document.querySelector(`#div${inputs[i]}`);\n                                            for(let ii = 0; ii < inp.childElementCount; ii++){\n                                                let obj = inp.children[ii];\n                                                (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).failureAnimation(obj);\n                                            }\n                                            if (value === '') emptyLines[i] = false;\n                                            if (this.result[i] === undefined) this.result[i] = false;\n                                        }\n                                    } else if (Object.values(this.vocabulary[this.currentWordIndex])[i].includes(\"^ign^\")) {\n                                        this.currentWord[Object.keys(this.currentWord)[i]] = Object.values(this.vocabulary[this.currentWordIndex])[i];\n                                        let div = document.querySelector(`#div${inputs[i]}`);\n                                        if (div && Object.values(this.vocabulary[this.currentWordIndex])[i].replaceAll(\"^ign^\", '').trim() != \"\") {\n                                            div.innerHTML = \"\";\n                                            let span = div.appendChild(document.createElement('span'));\n                                            span.innerHTML = Object.values(this.currentWord)[i].replaceAll(\"^ign^\", \"\");\n                                            span.classList.add(\"reveal\");\n                                            let max = div.clientHeight * 0.6;\n                                            let fontSize;\n                                            span.style.fontSize = max + 'px';\n                                            span.style.whiteSpace = 'nowrap';\n                                            span.style.display = 'inline-block';\n                                            span.style.width = 'auto';\n                                            span.style.fontSize = max + 'px';\n                                            while(span.scrollWidth > div.clientWidth * 0.95 || span.clientHeight > max){\n                                                fontSize = parseInt(span.style.fontSize.slice(0, -2));\n                                                if (fontSize <= 1) break;\n                                                span.style.fontSize = fontSize - 1 + 'px';\n                                            }\n                                            while(span.clientHeight > max){\n                                                fontSize = parseInt(span.style.fontSize.slice(0, -2));\n                                                span.style.fontSize = fontSize - 1 + 'px';\n                                            }\n                                        } else emptyLines[i] = true;\n                                    }\n                                });\n                                this.resultStyling(emptyLines);\n                                if (Object.values(this.currentWord).toLocaleString() === Object.values(this.vocabulary[this.currentWordIndex]).toLocaleString()) {\n                                    let addition = this.result.filter((w)=>w === true).length;\n                                    this.totalAttempts += 3;\n                                    this.totalPoints += addition;\n                                    if (addition === 3) this.vocabulary[this.currentWordIndex].probability *= 0.8;\n                                    else this.vocabulary[this.currentWordIndex].probability *= 1.2;\n                                    const transaction = this.database.transaction('vocabulary', 'readwrite');\n                                    transaction.onerror = ()=>console.error(transaction.error);\n                                    const objectStore = transaction.objectStore('vocabulary');\n                                    const request = objectStore.get(this.currentWordIndex + 1);\n                                    request.onerror = ()=>console.error(request.error);\n                                    request.onsuccess = ()=>{\n                                        const req = objectStore.put(this.vocabulary[this.currentWordIndex], this.currentWordIndex + 1);\n                                        req.onerror = ()=>console.error(req.error);\n                                    };\n                                    setTimeout((_)=>{\n                                        this.inputIndex = 0;\n                                        this.selectedInput = document.querySelector(`#div${inputs[this.inputIndex]}`);\n                                        this.keys = 0;\n                                        this.inputStyling();\n                                        this.startNewTrainingRound();\n                                    }, 500);\n                                } else setTimeout((_)=>this.inputStyling(), 500);\n                            }\n                        } else if (this.selectedInput.classList.contains('not-editable')) {\n                            if (this.inputIndex + 1 < 4) {\n                                this.inputIndex++;\n                                this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                                if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\n                                    this.inputIndex += 1;\n                                    this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                                }\n                                this.keys = this.selectedInput.childElementCount;\n                                this.inputStyling();\n                            }\n                            return;\n                        } else {\n                            if (this.inputIndex === 3) {\n                                let emptyLines = [\n                                    undefined,\n                                    undefined,\n                                    undefined,\n                                    undefined\n                                ];\n                                Object.values(this.currentWord).slice(0, 4).forEach((value, i)=>{\n                                    if (!document.querySelector(`#div${inputs[i]}`).classList.contains('not-editable')) {\n                                        if (value === Object.values(this.vocabulary[this.currentWordIndex])[i]) {\n                                            let inp = document.querySelector(`#div${inputs[i]}`);\n                                            for(let ii = 0; ii < inp.childElementCount; ii++){\n                                                let obj = inp.children[ii];\n                                                this.successAnimation(obj);\n                                            }\n                                            if (value === '') emptyLines[i] = true;\n                                            if (this.result[i] === undefined) this.result[i] = true;\n                                        } else {\n                                            let inp = document.querySelector(`#div${inputs[i]}`);\n                                            for(let ii = 0; ii < inp.childElementCount; ii++){\n                                                let obj = inp.children[ii];\n                                                (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).failureAnimation(obj);\n                                            }\n                                            if (value === '') emptyLines[i] = false;\n                                            if (this.result[i] === undefined) this.result[i] = false;\n                                        }\n                                    }\n                                });\n                                this.resultStyling(emptyLines);\n                                setTimeout((_)=>this.inputStyling(), 500);\n                            } else for(let i = 0; i < this.selectedInput.childElementCount; i++)(0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).failureAnimation(this.selectedInput.children[i]);\n                            if (this.result[this.inputIndex] === undefined) this.result[this.inputIndex] = true;\n                            this.result[this.inputIndex] = false;\n                        }\n                    } else if (event.key === 'ArrowDown') {\n                        if (this.inputIndex + 1 < 4) {\n                            this.inputIndex++;\n                            this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                            if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\n                                this.inputIndex += 1;\n                                this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                            }\n                            this.keys = this.selectedInput.childElementCount;\n                            this.inputStyling();\n                        }\n                        return;\n                    }\n                    return;\n                } else if (event.key === 'ArrowUp') {\n                    if (this.inputIndex > 0) this.inputIndex--;\n                    this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                    this.keys = this.selectedInput.childElementCount;\n                    this.inputStyling();\n                    return;\n                } else if (this.selectedInput.classList.contains('not-editable')) return;\n                else if (event.key === 'Backspace' && !mode) {\n                    if (this.returnLastElement(this.selectedInput)) {\n                        this.returnLastElement(this.selectedInput).remove();\n                        this.keys--;\n                        if (this.selectedInput.firstChild) this.movementAnimation(this.selectedInput);\n                        if (this.currentWord && !isNaN(this.currentWordIndex) && !this.commandMode) Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex], {\n                            value: Object.values(this.currentWord)[this.inputIndex].slice(0, this.keys)\n                        });\n                        let object = this.selectedInput.lastElementChild;\n                        if (!object || !object.contentDocument) return;\n                        let w = window.innerWidth;\n                        let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n                        let h = w / (this.keys + 1) * aspectRatio;\n                        let padding = (this.selectedInput.getBoundingClientRect().height - h) / 2;\n                        this.padding[this.inputIndex] = Math.max(padding, 0.1);\n                    }\n                    return;\n                } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) return;\n                else if (event.key === '#') this.commandMode = true;\n            }\n            let object = document.createElement('object');\n            object.data = './keys/Reversion_T.svg';\n            object.id = `key${this.keys}-inp${this.inputIndex}`;\n            object.style.height = `100%`;\n            this.selectedInput.insertAdjacentElement('beforeend', object);\n            let w = window.innerWidth;\n            object.hidden = true;\n            object.addEventListener('load', (_)=>{\n                object.hidden = false;\n                let width = Math.floor(object.getBoundingClientRect().width * 100) / 100;\n                object.hidden = true;\n                if (this.keys + 2 > Math.floor(w / width)) {\n                    object.hidden = false;\n                    let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n                    object.hidden = true;\n                    let h = w / (this.keys + 2) * aspectRatio;\n                    let padding = (this.selectedInput.getBoundingClientRect().height - h) / 2;\n                    if (padding > this.selectedInput.getBoundingClientRect().height / 2 * 0.85) {\n                        object.remove();\n                        for(let i = 0; i < this.keys; i++)(0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).failureAnimation(this.selectedInput.children[i]);\n                        return;\n                    } else this.padding[this.inputIndex] = Math.max(padding, 1);\n                }\n                object.hidden = false;\n                let svg = object.contentDocument;\n                if (event.key === '<') svg.querySelector('#tspan7').innerHTML = '&lt;';\n                else if (event.key === '&') svg.querySelector('#tspan7').innerHTML = '&amp;';\n                else {\n                    if (event.key === '/') event.preventDefault();\n                    svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\n                }\n                if (this.currentWord && !isNaN(this.currentWordIndex) && !this.commandMode) Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex], {\n                    value: Object.values(this.currentWord)[this.inputIndex] + event.key.charAt(0)\n                });\n                this.keys++;\n                this.movementAnimation(this.selectedInput);\n                (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).idleAnimation(object);\n                if (this.commandMode) {\n                    this.commandAnimation(object);\n                    this.command += event.key;\n                }\n            });\n        };\n        document.addEventListener('keydown', this.keyDownFunction);\n        this.startNewTrainingRound();\n    }\n    startNewTrainingRound() {\n        const isEmpty = (word)=>{\n            if (Object.values(word).slice(0, 4).filter((w)=>w.trim() === \"\").length >= 3 || word.latinWord.includes('^con^') || !word.selected || Object.values(word).slice(0, 4).filter((w)=>w.includes(\"^ign^\")).length >= 3) return true;\n            else return false;\n        };\n        if (this.vocabulary.length === 0) {\n            setTimeout((_)=>alert('Keine Vokabeln!'), 50);\n            return;\n        }\n        this.round++;\n        this.result = [\n            undefined,\n            undefined,\n            undefined,\n            undefined\n        ];\n        let overallProbabilty = 0;\n        this.vocabulary.forEach((word)=>{\n            if (!isEmpty(word)) overallProbabilty += word.probability;\n        });\n        if (overallProbabilty === 0) {\n            setTimeout((_)=>alert('Keine Vokabeln!'), 50);\n            return;\n        }\n        let randomNumber = Math.floor(Math.random() * overallProbabilty * 10) / 10;\n        let lowestDifference;\n        let lastProbability = 0;\n        this.vocabulary.forEach((word, i)=>{\n            if (!isEmpty(word)) {\n                if (lowestDifference === undefined) {\n                    lowestDifference = Math.abs(randomNumber - (lastProbability + word.probability));\n                    this.currentWord = word;\n                    this.currentWordIndex = i;\n                } else if (Math.abs(randomNumber - (lastProbability + word.probability)) < lowestDifference) {\n                    lowestDifference = Math.abs(randomNumber - (lastProbability + word.probability));\n                    this.currentWordIndex = i;\n                    if (Object.values(word).toLocaleString().slice(0, 4) === Object.values(this.currentWord).toLocaleString().slice(0, 4)) word.probability = Math.max(0, word.probability - 1);\n                    this.currentWord = word;\n                }\n                lastProbability += word.probability;\n            }\n        });\n        let savedProperty;\n        do {\n            let rn = Math.random();\n            if (rn <= 0.5) savedProperty = [\n                'latinWord',\n                {\n                    value: this.currentWord.latinWord\n                }\n            ];\n            else if (rn <= 0.7) savedProperty = [\n                'inflections',\n                {\n                    value: this.currentWord.inflections\n                }\n            ];\n            else if (rn <= 0.95) savedProperty = [\n                'germanTranslation',\n                {\n                    value: this.currentWord.germanTranslation\n                }\n            ];\n            else savedProperty = [\n                'relatedForeignWords',\n                {\n                    value: this.currentWord.relatedForeignWords\n                }\n            ];\n        }while (savedProperty[1].value.trim() === '' || savedProperty[1].value.includes('^ign^'));\n        this.currentWord = {\n            latinWord: '',\n            inflections: '',\n            germanTranslation: '',\n            relatedForeignWords: '',\n            selected: true,\n            probability: this.currentWord.probability\n        };\n        Object.defineProperty(this.currentWord, savedProperty[0], savedProperty[1]);\n        document.querySelectorAll('.t').forEach((t)=>t.innerHTML = '');\n        document.querySelectorAll(\".not-editable\").forEach((div)=>div.classList.remove(\"not-editable\"));\n        Object.values(this.vocabulary[this.currentWordIndex]).slice(0, 4).forEach((w, i)=>{\n            let div = document.getElementById(\"div\" + i * 2);\n            if (Object.keys(this.vocabulary[this.currentWordIndex])[i] != savedProperty[0]) {\n                if (w.includes(\"^ign^\")) div.classList.add(\"not-editable\");\n            } else {\n                div.classList.add(\"not-editable\");\n                let max = div.clientHeight * 0.6;\n                let fontSize;\n                let span = document.createElement('span');\n                span.style.fontSize = max + 'px';\n                span.innerHTML = savedProperty[1].value;\n                div.appendChild(span);\n                span.style.whiteSpace = 'nowrap';\n                span.style.display = 'inline-block';\n                span.style.width = 'auto';\n                span.style.fontSize = max + 'px';\n                while(span.scrollWidth > div.clientWidth * 0.95 || span.clientHeight > max){\n                    fontSize = parseInt(span.style.fontSize.slice(0, -2));\n                    if (fontSize <= 1) break;\n                    span.style.fontSize = fontSize - 1 + 'px';\n                }\n                while(span.clientHeight > max){\n                    fontSize = parseInt(span.style.fontSize.slice(0, -2));\n                    span.style.fontSize = fontSize - 1 + 'px';\n                }\n                this.result[i] = true;\n            }\n        });\n        let i = 0;\n        while(this.container.querySelector(\"#div\" + i * 2).classList.contains(\"not-editable\"))i++;\n        this.inputIndex = i;\n        this.selectedInput = this.container.querySelector(\"#div\" + i * 2);\n        this.inputStyling();\n    }\n    movementAnimation(inp) {\n        let object = inp.firstChild;\n        let id = parseInt(inp.id[3]);\n        if (inp.firstChild) {\n            if (inp.childElementCount > 1) inp.style.transition = 'padding 250ms';\n            inp.style.paddingTop = `${this.padding[id / 2]}px`;\n            inp.style.paddingBottom = `${this.padding[id / 2]}px`;\n            let height = inp.getBoundingClientRect().height - 2 * this.padding[id / 2];\n            inp.style.paddingLeft = `${(window.innerWidth - inp.childElementCount * height) / 2}px`;\n            inp.style.paddingRight = `${(window.innerWidth - inp.childElementCount * height) / 2}px`;\n        }\n    }\n    commandAnimation(object) {\n        if (!object) return;\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#eeeeeeff',\n                '#ffa500'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 500,\n            fill: 'forwards'\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    fixedAnimation(object) {\n        if (!object) return;\n        object.classList.add('fixed');\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#eeeeeeff',\n                '#ffff00'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 500,\n            fill: 'forwards'\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    successAnimation(object) {\n        if (!object) return;\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#eeeeeeff',\n                '#08a000',\n                '#eeeeeeff'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 500\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    returnLastElement(input) {\n        if (input.childElementCount > 0) {\n            if (!input.lastElementChild.classList.contains('fixed')) return input.lastElementChild;\n        }\n        return undefined;\n    }\n    inputStyling() {\n        document.body.style.backgroundImage = `\n            linear-gradient(180deg, \n                ${this.backgroundColor} 0%, \n                #06011b ${20 + this.inputIndex * 2 * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%,\n                #06011b ${20 + (this.inputIndex * 2 + 1) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%, \n                ${this.backgroundColor} ${window.innerHeight / document.body.scrollHeight * 100}%\n            )\n        `;\n    //#0d0043\n    //#440075\n    }\n    resultStyling(result) {\n        document.body.style.transition = 'background-image 250ms';\n        let str = `linear-gradient(180deg,`;\n        result.forEach((value, i)=>{\n            let color;\n            if (value === true) color = '#2be231';\n            else if (value === false) color = '#e80000';\n            else color = '#140063';\n            str += `#140063 ${20 + i * 2 * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%,\n                ${color} ${20 + (i * 2 + 0.5) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%, \n                #140063 ${20 + (i * 2 + 1) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%, `;\n        });\n        document.body.style.backgroundImage = str.slice(0, str.length - 2) + ')';\n    }\n}\n\n\n\nclass $b9cb672cfbcff24a$export$b0b374fde95c381e {\n    constructor(){\n        this.enterMode = false;\n        this.tabMode = false;\n        this.commandMode = false;\n        this.automaticPaddingAdjustment = false;\n        this.splitMode = false;\n        this.command = \"\";\n        this.tabulator = \"\";\n        this.tabCount = 0;\n        this.v = 1;\n        this.padding = [];\n        this.splitPadding = new Array(3).fill(new Array(3).fill(0));\n        this.animatedBorderWidth = 0;\n        this.borderColor = '#12dada';\n        this.round = 0;\n        this.failures = 0;\n        this.totalAttempts = 0;\n        this.totalPoints = 0;\n        this.badColor = 'rgb(186, 2, 70)';\n    }\n    modifyDocument(param) {\n        this.container = document.querySelector('#container');\n        this.iconPlaceholder = document.querySelector('#icon-placeholder');\n        this.navbar = document.querySelector('#navbar');\n        this.container.setAttribute('style', '');\n        document.body.style.backgroundImage = 'none';\n        document.body.setAttribute('class', '');\n        this.container.setAttribute('class', '');\n        this.iconPlaceholder.setAttribute('class', '');\n        this.navbar.setAttribute('class', '');\n        this.container.innerHTML = '';\n        this.iconPlaceholder.innerHTML = '';\n        this.navbar.innerHTML = '';\n        if (!param) param = 'add nouns';\n        let inflectVocabularyIcon;\n        inflectVocabularyIcon = document.createElement('object');\n        inflectVocabularyIcon.id = 'inflectVocabularyIcon';\n        this.v = 0;\n        this.badColor = 'rgb(186, 2, 70)';\n        switch(param){\n            case 'add verbs':\n            case 'verbs':\n                this.v = 9;\n                this.badColor = '#ff00d4';\n                if (param === 'add verbs') inflectVocabularyIcon.data = './conjugations.svg';\n                else inflectVocabularyIcon.data = './conjugate_verbs.svg';\n            case 'add nouns':\n            case 'nouns':\n            default:\n                const request = window.indexedDB.open('Vocabulary', 2);\n                request.onerror = ()=>console.error(request.error);\n                request.onsuccess = ()=>{\n                    this.database = request.result;\n                    this.tabulator = '';\n                    const transaction = this.database.transaction('inflected vocabulary', 'readonly');\n                    transaction.onerror = ()=>console.error(transaction.error);\n                    const objectStore = transaction.objectStore('inflected vocabulary');\n                    const req = objectStore.getAll();\n                    req.onerror = ()=>console.error(req.error);\n                    req.onsuccess = ()=>{\n                        this.vocabulary = req.result;\n                        document.body.classList.add('inflectVocabularyBody');\n                        this.iconPlaceholder.classList.add('inflectVocabularyIconPlaceholder');\n                        if (param === 'add nouns') inflectVocabularyIcon.data = './declinations.svg';\n                        else if (param === 'nouns') inflectVocabularyIcon.data = './decline_nouns.svg';\n                        this.iconPlaceholder.insertAdjacentElement('beforeend', inflectVocabularyIcon);\n                        if (param === 'add verbs' || param === 'verbs') this.container.classList.add('inflectVocabularyContainer', 'verbs');\n                        else this.container.classList.add('inflectVocabularyContainer', 'nouns');\n                        this.navbar.classList.add('inflectVocabularyNavbar');\n                        this.container.tabIndex = 0;\n                        this.padding = [];\n                        for(let i = 0; i < 21 - this.v; i++){\n                            let div = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`div${i}`, 'editable');\n                            this.container.insertAdjacentElement('beforeend', div);\n                            if (i < 3) {\n                                div.classList.add('firstrow');\n                                div.classList.remove('editable');\n                                div.style.fontSize = `${div.offsetHeight * 0.75}px`;\n                                if (i === 1) div.innerHTML = 'Singular';\n                                else if (i === 2) div.innerHTML = 'Plural';\n                            }\n                            if (i % 3 === 0) {\n                                div.classList.add('firstcolumn');\n                                div.classList.remove('editable');\n                                div.style.fontSize = `${0.25 * div.offsetHeight}px`;\n                                if (i > 0) div.innerHTML = `${i / 3}. ${param.includes('verb') ? 'P' : 'F'}.`;\n                            }\n                            if (!(i < 3 || i % 3 === 0)) {\n                                div.style.padding = `${Math.round(0.05 * div.offsetHeight)}px`;\n                                if (!param.includes('add')) div.classList.add('shadowDesign');\n                                this.padding.push(Math.round(div.offsetHeight * 0.05));\n                            } else this.padding.push(0);\n                            if (param.includes('verb')) div.classList.add('v');\n                        }\n                        if (param.startsWith('add')) {\n                            this.buttonLeft = document.createElement('button');\n                            this.buttonLeft.classList.add('roundButton', 'c');\n                            this.buttonLeft.innerHTML = '<';\n                            this.navbar.appendChild(this.buttonLeft);\n                        }\n                        this.homeButton = document.createElement('button');\n                        this.homeButton.classList.add('roundButton');\n                        this.homeButton.tabIndex = -1;\n                        let icon = document.createElement('object');\n                        icon.classList.add('homeIcon');\n                        icon.data = './home.svg';\n                        icon.style.height = '7.5vh';\n                        const homeFunction = ()=>{\n                            (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                            if (this.tabMode) this.cancelTabMode();\n                            if (param.includes('add') && !(this.currentWord.singular.filter((value)=>value === '').length === (param.includes('verb') ? 3 : 6) && this.currentWord.plural.filter((value)=>value === '').length === (param.includes('verb') ? 3 : 6))) {\n                                const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\n                                transaction.onerror = ()=>console.error(transaction.error);\n                                const objectStore = transaction.objectStore(`inflected vocabulary`);\n                                const req = objectStore.put(this.currentWord, this.wordIndex + 1);\n                                req.onerror = ()=>console.error(req.error);\n                                document.querySelectorAll('.editable').forEach((el)=>el.classList.add('savedElement'));\n                                setTimeout(()=>{\n                                    document.querySelectorAll('.editable').forEach((el)=>el.classList.remove('savedElement'));\n                                    this.splitMode = false;\n                                    this.tabulator = '';\n                                    (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n                                    this.commandMode = false;\n                                }, 200);\n                                return;\n                            }\n                            this.splitMode = false;\n                            this.tabulator = '';\n                            (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n                            this.commandMode = false;\n                        };\n                        icon.addEventListener('load', (_)=>{\n                            icon.contentDocument.addEventListener('click', homeFunction);\n                        });\n                        this.homeButton.addEventListener('click', homeFunction);\n                        this.homeButton.insertAdjacentElement('beforeend', icon);\n                        this.navbar.appendChild(this.homeButton);\n                        if (param.startsWith('add')) {\n                            this.deletionButton = document.createElement('button');\n                            this.deletionButton.classList.add('roundButton', 'deletionButton');\n                            this.deletionButton.innerHTML = 'X';\n                            this.deletionButton.tabIndex = -1;\n                            if (param.includes('verb')) this.deletionButton.classList.add('v');\n                            this.navbar.appendChild(this.deletionButton);\n                            if (param == 'add nouns') {\n                                this.genderSplitButton = document.createElement('button');\n                                this.genderSplitButton.classList.add('roundButton', 'genderSplitButton');\n                                let svg = document.createElement('img');\n                                svg.src = '/split-genders.svg';\n                                this.genderSplitButton.append(svg);\n                                this.navbar.appendChild(this.genderSplitButton);\n                                [\n                                    svg,\n                                    this.genderSplitButton\n                                ].forEach((el)=>el.addEventListener('click', ()=>this.splitGenders(this.currentWord)));\n                            }\n                            this.buttonRight = document.createElement('button');\n                            this.buttonRight.classList.add('roundButton', 'c');\n                            this.buttonRight.innerHTML = '>';\n                            this.buttonRight.tabIndex = -1;\n                            this.navbar.appendChild(this.buttonRight);\n                        }\n                        if (param) this.type(param);\n                        else this.type();\n                    };\n                };\n                break;\n        }\n        let animation = null;\n        this.resizeFunction = ()=>{\n            if (animation !== null) {\n                clearTimeout(animation);\n                animation = null;\n            }\n            for(let i = 4; i < this.container.children.length; i++)if (i % 3 > 0) {\n                if (!this.splitMode) {\n                    let div = this.container.children[i];\n                    let array = Object.values(this.currentWord)[i % 3 - 1];\n                    let n = Math.floor(i / 3) - 1;\n                    this.adjustInputWidth(div, array[n], false);\n                } else for(let ii = 0; ii < 3; ii++){\n                    let div = this.container.children[i].children[ii];\n                    let array = Object.values(this.currentWord)[i % 3 - 1];\n                    let n = Math.floor(i / 3 - 1);\n                    this.adjustInputWidth(div, array[n].split($b9cb672cfbcff24a$var$mfORn)[ii + 1], false);\n                }\n            }\n            animation = setTimeout(()=>{\n                for(let j = 4; j < this.container.childElementCount; j++)if (j % 3 > 0) {\n                    if (this.automaticPaddingAdjustment) {\n                        if (this.splitMode) for(let k = 0; k < 3; k++){\n                            let input = this.container.children[j].children[k];\n                            let array = Object.values(this.currentWord)[j % 3 - 1];\n                            let n = Math.floor(j / 3) - 1;\n                            let splitto = array[n].split($b9cb672cfbcff24a$var$mfORn).slice(1);\n                            this.adjustInputWidth(input, splitto[k], false);\n                            this.automaticPaddingAnimation(input, false, false);\n                        }\n                        this.automaticPaddingAnimation(this.container.children[j], false, false);\n                    } else this.paddingAnimation(this.container.children[j]);\n                }\n            }, 200);\n        };\n        window.addEventListener(\"resize\", this.resizeFunction);\n    }\n    type(param) {\n        switch(param){\n            case 'verbs':\n            case 'nouns':\n                this.keys = 0;\n                this.borderColor = param.includes('verb') ? '#ff5e01' : 'rgba(138, 43, 226, 1)';\n                document.querySelectorAll('.editable').forEach((element)=>{\n                    element.addEventListener('click', (event)=>{\n                        if (this.splitMode) {\n                            let source = event.target;\n                            if (source === element) return;\n                            let count;\n                            for(let q = 0; q < element.childElementCount; q++)if (element.children[q] === source) {\n                                count = q;\n                                break;\n                            }\n                            this.inputSubIndex = count;\n                        }\n                        this.inputIndex = parseInt(element.id.slice(3));\n                        this.changeSelectedInput();\n                    });\n                });\n                this.selectedInput = document.getElementById('div4');\n                this.selectedInput.classList.add('selectedElement');\n                this.inputIndex = 4;\n                this.wordIndex = this.vocabulary.length;\n                this.currentWord = {\n                    singular: this.empty(param),\n                    plural: this.empty(param),\n                    verb: param.includes('verb'),\n                    probability: 1\n                };\n                this.keydownFunction = (event)=>{\n                    let forbiddenCharacters = [\n                        \"\\xb4\",\n                        '`',\n                        '^'\n                    ];\n                    let inp = this.splitMode ? this.selectedInput.children[this.inputSubIndex] : this.selectedInput;\n                    if (this.commandMode) {\n                        forbiddenCharacters.push('#');\n                        if (event.key === 'Enter') {\n                            if (this.command.endsWith('%') && !this.automaticPaddingAdjustment) {\n                                if (this.command.startsWith('#p-')) {\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\n                                    if (percentage >= 0 && percentage <= 100) {\n                                        this.padding[this.inputIndex] = Math.round(Math.max(Math.min(this.padding[this.inputIndex] * (1 - percentage / 100), this.selectedInput.clientHeight / 2 * 0.7), 1));\n                                        this.paddingAnimation(this.selectedInput);\n                                        this.command.split('').forEach((_)=>{\n                                            this.selectedInput.lastElementChild.remove();\n                                            this.keys--;\n                                        });\n                                        this.command = '';\n                                        this.commandMode = false;\n                                        return;\n                                    }\n                                } else if (this.command.startsWith('#p+')) {\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\n                                    if (percentage >= 0) {\n                                        this.padding[this.inputIndex] = Math.round(Math.max(Math.min(this.padding[this.inputIndex] * (1 + percentage / 100), this.selectedInput.clientHeight / 2 * 0.7), 1));\n                                        this.paddingAnimation(this.selectedInput);\n                                        this.command.split('').forEach((_)=>{\n                                            this.selectedInput.lastElementChild.remove();\n                                            this.keys--;\n                                        });\n                                        this.command = '';\n                                        this.commandMode = false;\n                                        return;\n                                    }\n                                } else if (this.command.startsWith('#P+')) {\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\n                                    if (percentage >= 0) {\n                                        this.padding.forEach((p, i)=>{\n                                            let div = document.querySelector(`#div${i}`);\n                                            if (div && i > 3 && i % 3 != 0) {\n                                                this.padding[i] = Math.round(Math.max(Math.min(this.padding[i] * (1 + percentage / 100), div.clientHeight / 2 * 0.7), 1));\n                                                this.paddingAnimation(div);\n                                            }\n                                        });\n                                        this.command.split('').forEach((_)=>{\n                                            this.selectedInput.lastElementChild.remove();\n                                            this.keys--;\n                                        });\n                                        this.command = '';\n                                        this.commandMode = false;\n                                        return;\n                                    }\n                                } else if (this.command.startsWith('#P-')) {\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\n                                    if (percentage >= 0) {\n                                        this.padding.forEach((p, i)=>{\n                                            let div = document.querySelector(`#div${i}`);\n                                            if (div && i > 3 && i % 3 != 0) {\n                                                this.padding[i] = Math.round(Math.max(Math.min(this.padding[i] * (1 - percentage / 100), div.clientHeight / 2 * 0.7), 1));\n                                                this.paddingAnimation(document.querySelector(`#div${i}`));\n                                            }\n                                        });\n                                        this.command.split('').forEach((_)=>{\n                                            this.selectedInput.lastElementChild.remove();\n                                            this.keys--;\n                                        });\n                                        this.command = '';\n                                        this.commandMode = false;\n                                        return;\n                                    }\n                                }\n                            }\n                            switch(this.command.toLowerCase()){\n                                case '#exit':\n                                case '#quit':\n                                case '#stop':\n                                case '#home':\n                                case '#stopp':\n                                case '#beenden':\n                                case \"#hauptmen\\xfc\":\n                                case '#home menu':\n                                case '#h':\n                                    this.command = '';\n                                    this.commandMode = false;\n                                    (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                                    this.splitMode = false;\n                                    this.tabulator = '';\n                                    (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n                                    return;\n                                case '#automaticpaddingadjustment':\n                                case '#auto':\n                                case '#automatic-padding-adjustment':\n                                case '#automatische padding-anpassung':\n                                case '#automatischepaddinganpassung':\n                                case '#automatische-padding-anpassung':\n                                case '#apa':\n                                    this.automaticPaddingAdjustment = true;\n                                    this.command.split('').forEach((_)=>{\n                                        this.selectedInput.lastElementChild.remove();\n                                        this.keys--;\n                                    });\n                                    this.command = '';\n                                    this.commandMode = false;\n                                    this.adjustInputWidth(this.selectedInput, Object.values(this.currentWord)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1], true);\n                                    this.borderColor = 'orange';\n                                    if (!param.includes('add')) this.borderColor = param.includes('verb') ? '#ff5e01' : 'rgba(138, 43, 226, 1)';\n                                    return;\n                                case '#manualpaddingadjustment':\n                                case '#manual':\n                                case '#normalpaddingadjustment':\n                                case '#normal':\n                                case '#manual-padding-adjustment':\n                                case '#mpa':\n                                case '#npa':\n                                    if (!this.splitMode) {\n                                        this.automaticPaddingAdjustment = false;\n                                        this.command.split('').forEach((_)=>{\n                                            this.selectedInput.lastElementChild.remove();\n                                            this.keys--;\n                                        });\n                                        this.command = '';\n                                        this.commandMode = false;\n                                        this.borderColor = '#12dada';\n                                        if (!param.includes('add')) this.borderColor = param.includes('verb') ? '#ff5e01' : 'rgba(138, 43, 226, 1)';\n                                        return;\n                                    }\n                                default:\n                                    this.command.split('').forEach((_)=>{\n                                        inp.lastElementChild.remove();\n                                        this.keys--;\n                                    });\n                                    this.commandMode = false;\n                                    this.changeSelectedInput();\n                                    break;\n                            }\n                            return;\n                        } else if (event.key === 'ArrowUp') {\n                            this.command.split('').forEach((_)=>{\n                                inp.removeChild(inp.lastElementChild);\n                                this.keys--;\n                            });\n                            if (this.inputIndex > 6) this.inputIndex -= 3;\n                            this.changeSelectedInput();\n                            this.command = '';\n                            this.commandMode = false;\n                            return;\n                        } else if (event.key === 'ArrowDown') {\n                            this.command.split('').forEach((_)=>{\n                                inp.removeChild(inp.lastElementChild);\n                                this.keys--;\n                            });\n                            this.command = '';\n                            this.commandMode = false;\n                            if (this.inputIndex < 18 - this.v) this.inputIndex += 3;\n                            this.changeSelectedInput();\n                            return;\n                        } else if (event.key === 'ArrowLeft') {\n                            this.command.split('').forEach((_)=>{\n                                inp.removeChild(inp.lastElementChild);\n                                this.keys--;\n                            });\n                            this.command = '';\n                            this.commandMode = false;\n                            if (this.inputIndex > 4) {\n                                if (this.splitMode && this.inputSubIndex > 0) this.inputSubIndex--;\n                                else {\n                                    this.inputIndex--;\n                                    if (this.inputIndex % 3 === 0) this.inputIndex--;\n                                    if (this.splitMode && this.inputSubIndex === 0) this.inputSubIndex = 2;\n                                }\n                                this.changeSelectedInput();\n                            } else if (this.inputIndex == 4 && this.inputSubIndex > 0 && this.splitMode) {\n                                this.inputSubIndex--;\n                                this.changeSelectedInput();\n                            }\n                            return;\n                        } else if (event.key === 'ArrowRight') {\n                            this.command.split('').forEach((_)=>{\n                                inp.removeChild(inp.lastElementChild);\n                                this.keys--;\n                            });\n                            this.command = '';\n                            this.commandMode = false;\n                            if (this.inputIndex < 20 - this.v) {\n                                if (this.splitMode && this.inputSubIndex < 2) this.inputSubIndex++;\n                                else {\n                                    this.inputIndex++;\n                                    if (this.inputIndex % 3 === 0) this.inputIndex++;\n                                    if (this.splitMode && this.inputSubIndex === 2) this.inputSubIndex = 0;\n                                }\n                                this.changeSelectedInput();\n                            } else if (this.splitMode && this.inputIndex == 20 - this.v && this.inputSubIndex < 2) {\n                                this.inputSubIndex++;\n                                this.changeSelectedInput();\n                            }\n                            return;\n                        } else if (event.key === 'Backspace') {\n                            if (inp.lastElementChild) {\n                                inp.lastElementChild.remove();\n                                this.command = this.command.slice(0, this.command.length - 1);\n                                this.keys--;\n                                if (this.command === '') {\n                                    this.commandMode = false;\n                                    return;\n                                }\n                            }\n                            if (this.automaticPaddingAdjustment && this.padding[this.inputIndex] > inp.offsetHeight * 0.05) {\n                                let object = inp.lastElementChild;\n                                let w = Math.round((inp.getBoundingClientRect().width - parseFloat(window.getComputedStyle(inp).paddingLeft) - parseFloat(window.getComputedStyle(inp).paddingRight)) * 100) / 100;\n                                let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n                                let h = w / this.keys * aspectRatio;\n                                let padding = Math.max((inp.getBoundingClientRect().height - h) / 2, inp.offsetHeight * 0.05);\n                                if (!this.splitMode) {\n                                    this.padding[this.inputIndex] = Math.max(padding, 1);\n                                    inp.style.padding = `${this.padding[this.inputIndex]}px 0.25vw`;\n                                } else {\n                                    this.splitPadding[this.inputIndex][this.inputSubIndex] = Math.max(padding, 1);\n                                    inp.style.padding = `${this.splitPadding[this.inputIndex][this.inputSubIndex]}px 0.25vw`;\n                                }\n                            }\n                        }\n                        if (this.commandMode && (inp.classList.contains('known-case') || forbiddenCharacters.includes(event.key) || event.key.length > 1)) return;\n                    }\n                    if (!this.commandMode) {\n                        if (event.key === 'ArrowRight') {\n                            if (this.inputIndex < 20 - this.v) {\n                                if (this.splitMode && this.inputSubIndex < 2) this.inputSubIndex++;\n                                else {\n                                    this.inputIndex++;\n                                    if (this.inputIndex % 3 === 0) this.inputIndex++;\n                                    if (this.splitMode && this.inputSubIndex === 2) this.inputSubIndex = 0;\n                                }\n                                this.changeSelectedInput();\n                            } else if (this.splitMode && this.inputIndex == 20 - this.v && this.inputSubIndex < 2) {\n                                this.inputSubIndex++;\n                                this.changeSelectedInput();\n                            }\n                            return;\n                        } else if (event.key === 'ArrowLeft') {\n                            if (this.inputIndex > 4) {\n                                if (this.splitMode && this.inputSubIndex > 0) this.inputSubIndex--;\n                                else {\n                                    this.inputIndex--;\n                                    if (this.inputIndex % 3 === 0) this.inputIndex--;\n                                    if (this.splitMode && this.inputSubIndex === 0) this.inputSubIndex = 2;\n                                }\n                                this.changeSelectedInput();\n                            } else if (this.inputIndex == 4 && this.inputSubIndex > 0 && this.splitMode) {\n                                this.inputSubIndex--;\n                                this.changeSelectedInput();\n                            }\n                            return;\n                        } else if (event.key === 'ArrowDown' || event.key === 'Enter') {\n                            const enter = event.key === 'Enter';\n                            const sub = this.inputSubIndex;\n                            let delay = false;\n                            if (this.splitMode && enter && Object.values(this.currentWord)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1].split($b9cb672cfbcff24a$var$mfORn)[this.inputSubIndex + 1] === '' && this.inputSubIndex > 0) {\n                                delay = true;\n                                let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                let n = Math.floor(this.inputIndex / 3) - 1;\n                                let splitto = array[n].split($b9cb672cfbcff24a$var$mfORn).slice(1);\n                                splitto[this.inputSubIndex] = splitto[this.inputSubIndex - 1];\n                                array[n] = `^^m^^${splitto[0]}^^f^^${splitto[1]}^^n^^${splitto[2]}`;\n                                Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                    value: array\n                                });\n                                let phrase = splitto[this.inputSubIndex];\n                                let tabulatorStyle = false;\n                                let inp = this.selectedInput.children[this.inputSubIndex];\n                                let objectCount = 0;\n                                let objectsLoaded = 0;\n                                const id = this.inputIndex;\n                                const count = this.inputSubIndex;\n                                for(let ii = 0; ii < phrase.length; ii++){\n                                    let object = document.createElement('object');\n                                    this.keys++;\n                                    object.addEventListener('load', (_)=>{\n                                        let svg = object.contentDocument;\n                                        svg.querySelector('#tspan7').innerHTML = phrase.charAt(ii);\n                                        if (object.classList.contains('tabulator')) this.tabulatorAnimation(object);\n                                        objectsLoaded++;\n                                        if (objectsLoaded === objectCount) {\n                                            this.adjustInputWidth(inp, phrase, false);\n                                            let pad = this.splitPadding[id][count];\n                                            inp.style.padding = `${pad}px 0.25vw`;\n                                        }\n                                    });\n                                    object.data = './keys/Reversion_T.svg';\n                                    object.id = `key${this.keys}-inp${this.inputIndex}-sub${this.inputSubIndex}`;\n                                    object.style.height = `100%`;\n                                    objectCount++;\n                                    inp.insertAdjacentElement('beforeend', object);\n                                    if (this.selectedInput.children[id - 1]) object.classList.add('tabulator');\n                                }\n                            }\n                            if (this.inputIndex < 20 - this.v || this.inputSubIndex != 2) {\n                                if (event.key === 'Enter' && !inp.classList.contains('known-case')) {\n                                    let attemptList = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                    let solutionList = Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex % 3 - 1];\n                                    let result = Object.values(this.result)[this.inputIndex % 3 - 1];\n                                    let n = Math.floor(this.inputIndex / 3) - 1;\n                                    let attempt = this.splitMode ? attemptList[n].split($b9cb672cfbcff24a$var$mfORn)[sub + 1] : attemptList[n];\n                                    let solution = this.splitMode ? solutionList[n].split($b9cb672cfbcff24a$var$mfORn)[sub + 1] : solutionList[n];\n                                    if (this.compare(attempt, solution)) {\n                                        for(let i = 0; i < inp.childElementCount; i++){\n                                            let object = inp.children[i];\n                                            object.addEventListener('load', (_)=>{\n                                                this.successAnimation(object);\n                                            });\n                                            if (object.contentDocument) this.successAnimation(object);\n                                        }\n                                        if ((!this.splitMode ? result[n] : result[n][sub]) === undefined) {\n                                            if (this.splitMode) result[n][this.inputSubIndex] = true;\n                                            else result[n] = true;\n                                            Object.defineProperty(this.result, Object.keys(this.result)[this.inputIndex % 3 - 1], {\n                                                value: result\n                                            });\n                                            setTimeout((_)=>{\n                                                inp.classList.remove('shadowDesign');\n                                                inp.classList.add('greenShadowDesign');\n                                            }, 120);\n                                        }\n                                    } else if (attempt.replace('^tab^', '') != '') {\n                                        for(let i = 0; i < inp.childElementCount; i++){\n                                            let object = inp.children[i];\n                                            object.addEventListener('load', (_)=>this.failureAnimation(object));\n                                            if (object.contentDocument) this.failureAnimation(object);\n                                        }\n                                        if ((!this.splitMode ? result[n] : result[n][sub]) === undefined) {\n                                            if (this.splitMode) result[n][sub] = false;\n                                            else result[n] = false;\n                                            Object.defineProperty(this.result, Object.keys(this.result)[this.inputIndex % 3 - 1], {\n                                                value: result\n                                            });\n                                            setTimeout((_)=>{\n                                                inp.classList.remove('shadowDesign');\n                                                inp.classList.add('redShadowDesign');\n                                            }, 120);\n                                        }\n                                        return;\n                                    }\n                                }\n                            }\n                            do {\n                                if (this.inputIndex < 18 - this.v) {\n                                    if (this.splitMode && this.inputSubIndex < 2 && enter) this.inputSubIndex++;\n                                    else {\n                                        this.inputIndex += 3;\n                                        if (this.splitMode && this.inputSubIndex === 2 && enter) this.inputSubIndex = 0;\n                                    }\n                                    this.changeSelectedInput();\n                                } else if (enter && this.inputIndex === 19 - this.v) {\n                                    if (this.splitMode && this.inputSubIndex < 2) this.inputSubIndex++;\n                                    else {\n                                        this.inputIndex = 5;\n                                        if (this.splitMode && this.inputSubIndex === 2) this.inputSubIndex = 0;\n                                    }\n                                    this.changeSelectedInput();\n                                } else if (enter && this.inputIndex === 20 - this.v) {\n                                    if (this.splitMode && this.inputSubIndex < 2) {\n                                        this.inputSubIndex++;\n                                        this.changeSelectedInput();\n                                    } else {\n                                        this.currentWord.singular.forEach((word, i)=>{\n                                            let index = 1 + (i + 1) * 3;\n                                            for(let ii = 0; ii < (this.splitMode ? 3 : 1); ii++){\n                                                let m = index % 3 - 1;\n                                                let n = Math.floor(index / 3) - 1;\n                                                let wrd = this.splitMode ? word.split($b9cb672cfbcff24a$var$mfORn)[ii + 1] : word;\n                                                let sol = this.splitMode ? Object.values(this.vocabulary[this.currentWordIndex])[m][n].split($b9cb672cfbcff24a$var$mfORn)[ii + 1] : Object.values(this.vocabulary[this.currentWordIndex])[m][n];\n                                                if (this.compare(wrd, sol)) {\n                                                    for(let iii = 0; iii < (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).childElementCount; iii++)if (index % 3 != 0 && !(this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.contains('known-case')) {\n                                                        let object = (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).children[iii];\n                                                        this.successAnimation(object);\n                                                    }\n                                                    if ((this.splitMode ? Object.values(this.result)[m][n][ii] : Object.values(this.result)[m][n]) === undefined) {\n                                                        let array = Object.values(this.result)[m];\n                                                        if (this.splitMode) array[n][ii] = true;\n                                                        else array[n] = true;\n                                                        Object.defineProperty(this.result, Object.keys(this.result)[m], {\n                                                            value: array\n                                                        });\n                                                        setTimeout((_)=>{\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.remove('shadowDesign');\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.add('greenShadowDesign');\n                                                        }, 120);\n                                                    }\n                                                } else {\n                                                    for(let iii = 0; iii < (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).childElementCount; iii++)if (index % 3 != 0 && !(this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.contains('known-case')) {\n                                                        let object = (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).children[iii];\n                                                        this.failureAnimation(object);\n                                                    }\n                                                    if ((this.splitMode ? Object.values(this.result)[m][n][ii] : Object.values(this.result)[m][n]) === undefined) {\n                                                        let array = Object.values(this.result)[m];\n                                                        if (this.splitMode) array[n][ii] = false;\n                                                        else array[n] = false;\n                                                        Object.defineProperty(this.result, Object.keys(this.result)[m], {\n                                                            value: array\n                                                        });\n                                                        setTimeout((_)=>{\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.remove('shadowDesign');\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.add('redShadowDesign');\n                                                        }, 120);\n                                                    }\n                                                }\n                                            }\n                                        });\n                                        this.currentWord.plural.forEach((word, i)=>{\n                                            let index = 2 + (i + 1) * 3;\n                                            for(let ii = 0; ii < (this.splitMode ? 3 : 1); ii++){\n                                                let m = index % 3 - 1;\n                                                let n = Math.floor(index / 3) - 1;\n                                                let wrd = this.splitMode ? word.split($b9cb672cfbcff24a$var$mfORn)[ii + 1] : word;\n                                                let sol = this.splitMode ? Object.values(this.vocabulary[this.currentWordIndex])[m][n].split($b9cb672cfbcff24a$var$mfORn)[ii + 1] : Object.values(this.vocabulary[this.currentWordIndex])[m][n];\n                                                if (this.compare(wrd, sol)) {\n                                                    for(let iii = 0; iii < (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).childElementCount; iii++)if (index % 3 != 0 && !(this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.contains('known-case')) {\n                                                        let object = (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).children[iii];\n                                                        object.addEventListener('load', ()=>this.successAnimation(object));\n                                                        if (object.contentDocument) this.successAnimation(object);\n                                                    }\n                                                    if ((this.splitMode ? Object.values(this.result)[m][n][ii] : Object.values(this.result)[m][n]) === undefined) {\n                                                        let array = Object.values(this.result)[m];\n                                                        if (this.splitMode) array[n][ii] = true;\n                                                        else array[n] = true;\n                                                        Object.defineProperty(this.result, Object.keys(this.result)[m], {\n                                                            value: array\n                                                        });\n                                                        setTimeout((_)=>{\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.remove('shadowDesign');\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.add('greenShadowDesign');\n                                                        }, 120);\n                                                    }\n                                                } else {\n                                                    for(let iii = 0; iii < (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).childElementCount; iii++)if (index % 3 != 0 && !(this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.contains('known-case')) {\n                                                        let object = (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).children[iii];\n                                                        this.failureAnimation(object);\n                                                    }\n                                                    if ((this.splitMode ? Object.values(this.result)[m][n][ii] : Object.values(this.result)[m][n]) === undefined) {\n                                                        let array = Object.values(this.result)[m];\n                                                        if (this.splitMode) array[n][ii] = false;\n                                                        else array[n] = false;\n                                                        Object.defineProperty(this.result, Object.keys(this.result)[m], {\n                                                            value: array\n                                                        });\n                                                        setTimeout((_)=>{\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.remove('shadowDesign');\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.add('redShadowDesign');\n                                                        }, 120);\n                                                    }\n                                                }\n                                            }\n                                        });\n                                        if (this.compareObjects(this.currentWord, this.vocabulary[this.currentWordIndex])) {\n                                            this.totalAttempts += 11 - this.v / 3 * 2;\n                                            let addition = this.result.singular.filter((w)=>this.splitMode ? Array.isArray(w) && w.every((v)=>v === true) : w === true).length + this.result.plural.filter((w)=>this.splitMode ? Array.isArray(w) && w.every((v)=>v === true) : w === true).length;\n                                            this.totalPoints += addition;\n                                            if (addition != 12 - this.v / 3 * 2) this.vocabulary[this.currentWordIndex].probability *= 1.2;\n                                            else this.vocabulary[this.currentWordIndex].probability *= 0.8;\n                                            const transaction = this.database.transaction('inflected vocabulary', 'readwrite');\n                                            const objectStore = transaction.objectStore('inflected vocabulary');\n                                            const request = objectStore.put(this.vocabulary[this.currentWordIndex], this.currentWordIndex + 1);\n                                            request.onerror = ()=>console.error(request.error);\n                                            setTimeout((_)=>{\n                                                document.querySelectorAll('.selectedElement').forEach((div)=>{\n                                                    div.classList.remove('selectedElement');\n                                                });\n                                                this.keys = 0;\n                                                this.inputIndex = 4;\n                                                this.selectedInput = document.querySelector('#div4');\n                                                this.selectedInput.classList.add('selectedElement');\n                                                this.startNewTrainingRound(param || 'nouns');\n                                            }, 500);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }while (enter && (this.splitMode ? this.selectedInput.children[this.inputSubIndex] : this.selectedInput).classList.contains('known-case'));\n                            return;\n                        } else if (event.key === 'ArrowUp') {\n                            if (this.inputIndex > 6) {\n                                this.inputIndex -= 3;\n                                this.changeSelectedInput();\n                            }\n                            return;\n                        } else if (event.key === 'Backspace') {\n                            if (inp.lastElementChild) {\n                                inp.lastElementChild.remove();\n                                let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                let n = Math.floor(this.inputIndex / 3) - 1;\n                                let index;\n                                if (this.splitMode) {\n                                    if (this.inputSubIndex == 0) index = array[n].search($b9cb672cfbcff24a$var$F);\n                                    else if (this.inputSubIndex == 1) index = array[n].search($b9cb672cfbcff24a$var$N);\n                                    else index = array[n].length;\n                                }\n                                if (!this.splitMode && array[n].slice(-5) === '^tab^') {\n                                    array[n] = array[n].slice(0, array[n].length - 6);\n                                    if (this.tabCount > 1) this.tabCount--;\n                                    this.tabMode = !this.tabMode;\n                                    inp.classList.add('tab');\n                                    if (!this.tabMode) inp.classList.remove('tab');\n                                } else if (this.splitMode && index != -1 && index !== undefined) {\n                                    if (array[n].slice(index - 5, index) === '^tab^') {\n                                        array[n] = array[n].slice(0, index - 6) + array[n].slice(index);\n                                        if (this.tabCount > 1) this.tabCount--;\n                                        this.tabMode = !this.tabMode;\n                                        inp.classList.add('tab');\n                                        if (!this.tabMode) inp.classList.remove('tab');\n                                    }\n                                    array[n] = array[n].slice(0, index - 1) + array[n].slice(index);\n                                } else array[n] = array[n].slice(0, array[n].length - 1);\n                                Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                    value: array\n                                });\n                                this.keys--;\n                                if (this.tabMode) this.tabulator = this.tabulator.slice(0, this.tabulator.length - 1);\n                            } else if (this.tabMode) this.cancelTabMode();\n                            let pad = this.splitMode ? this.splitPadding[this.inputIndex][this.inputSubIndex] : this.padding[this.inputIndex];\n                            if (this.automaticPaddingAdjustment && pad > inp.offsetHeight * 0.05) {\n                                let object = inp.lastElementChild;\n                                if (!object) return;\n                                let w = Math.round((inp.getBoundingClientRect().width - parseFloat(window.getComputedStyle(inp).paddingLeft) - parseFloat(window.getComputedStyle(inp).paddingRight)) * 100) / 100;\n                                let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n                                let h = w / this.keys * aspectRatio;\n                                let padding = Math.max((inp.getBoundingClientRect().height - h) / 2, inp.offsetHeight * 0.05);\n                                if (this.splitMode) {\n                                    this.splitPadding[this.inputIndex][this.inputSubIndex] = Math.max(padding, 1);\n                                    inp.style.padding = `${this.splitPadding[this.inputIndex][this.inputSubIndex]}px 0.25vw`;\n                                } else {\n                                    this.padding[this.inputIndex] = Math.max(padding, 1);\n                                    inp.style.padding = `${this.padding[this.inputIndex]}px 0.25vw`;\n                                }\n                            }\n                            return;\n                        } else if (inp.classList.contains('known-case')) return;\n                        else if (event.key === '#') {\n                            this.command = '';\n                            this.commandMode = true;\n                        } else if (event.key === 'Tab') {\n                            if (this.tabulator) {\n                                if (this.keys + this.tabulator.length >= this.selectedInput.clientWidth / (this.selectedInput.clientHeight - parseFloat(this.selectedInput.style.padding)) && !this.automaticPaddingAdjustment) this.selectedInput.childNodes.forEach((v, i)=>{\n                                    this.failureAnimation(this.selectedInput.children[i]);\n                                });\n                                else {\n                                    let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                    let n = Math.floor(this.inputIndex / 3) - 1;\n                                    let index;\n                                    if (this.splitMode) {\n                                        if (this.inputSubIndex == 0) index = array[n].search($b9cb672cfbcff24a$var$F);\n                                        else if (this.inputSubIndex == 1) index = array[n].search($b9cb672cfbcff24a$var$N);\n                                        else index = array[n].length;\n                                    }\n                                    if (this.splitMode) array[n] = array[n].slice(0, index) + this.tabulator + array[n].slice(index);\n                                    else array[n] += this.tabulator;\n                                    Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                        value: array\n                                    });\n                                    let objectsLoaded = 0;\n                                    let objectCount = 0;\n                                    this.tabulator.split('').forEach((letter)=>{\n                                        let object = document.createElement('object');\n                                        object.data = './keys/Reversion_T.svg';\n                                        object.id = `key${this.keys}-inp${this.inputIndex}`;\n                                        object.style.height = `100%`;\n                                        this.selectedInput.insertAdjacentElement('beforeend', object);\n                                        object.hidden = true;\n                                        objectCount++;\n                                        object.addEventListener('load', (_)=>{\n                                            object.hidden = false;\n                                            objectsLoaded++;\n                                            let svg = object.contentDocument;\n                                            svg.querySelector('#tspan7').innerHTML = letter;\n                                            this.keys++;\n                                            this.tabulatorAnimation(object);\n                                            if (objectsLoaded === objectCount) this.adjustInputWidth(inp, array[n]);\n                                        });\n                                    });\n                                }\n                            }\n                            return;\n                        } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) return;\n                    }\n                    let object = document.createElement('object');\n                    object.data = './keys/Reversion_T.svg';\n                    object.id = `key${this.keys}-inp${this.inputIndex}`;\n                    object.style.height = `100%`;\n                    inp.insertAdjacentElement('beforeend', object);\n                    object.hidden = true;\n                    object.addEventListener('load', (_)=>{\n                        object.hidden = false;\n                        let width = Math.round(object.getBoundingClientRect().width * 100) / 100;\n                        object.hidden = true;\n                        let w = Math.round((inp.getBoundingClientRect().width - parseFloat(window.getComputedStyle(inp).paddingLeft) - parseFloat(window.getComputedStyle(inp).paddingRight) - parseFloat(window.getComputedStyle(inp).borderLeftWidth) - parseFloat(window.getComputedStyle(inp).borderRightWidth)) * 100) / 100;\n                        if (!this.automaticPaddingAdjustment && this.keys + 1 > w / width) {\n                            object.remove();\n                            for(let i = 0; i < this.keys; i++)this.failureAnimation(this.selectedInput.children[i]);\n                            return;\n                        } else if (this.automaticPaddingAdjustment) {\n                            object.hidden = false;\n                            let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n                            object.hidden = true;\n                            let h = w / (this.keys + 1) * aspectRatio;\n                            let padding = (inp.getBoundingClientRect().height - h) / 2;\n                            if (padding > inp.getBoundingClientRect().height / 2 * 0.85) {\n                                object.remove();\n                                for(let i = 0; i < this.keys; i++)this.failureAnimation(inp.children[i]);\n                                return;\n                            } else {\n                                const prev = this.splitMode ? this.splitPadding[this.inputIndex][this.inputSubIndex] : this.padding[this.inputIndex];\n                                if (this.splitMode && this.inputSubIndex != undefined) this.splitPadding[this.inputIndex][this.inputSubIndex] = Math.max(padding, inp.offsetHeight * 0.05);\n                                else this.padding[this.inputIndex] = Math.max(padding, inp.offsetHeight * 0.05);\n                                this.animatedBorderWidth = parseFloat(window.getComputedStyle(inp).borderTopWidth);\n                                let now = this.splitMode ? this.splitPadding[this.inputIndex][this.inputSubIndex] : this.padding[this.inputIndex];\n                                if (prev !== now) this.automaticPaddingAnimation(inp, true, true);\n                            }\n                        }\n                        setTimeout((_)=>{\n                            object.hidden = false;\n                        }, 10);\n                        let svg = object.contentDocument;\n                        if (event.key === '<') svg.querySelector('#tspan7').innerHTML = '&lt;';\n                        else if (event.key === '&') svg.querySelector('#tspan7').innerHTML = '&amp;';\n                        else svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\n                        if (!this.commandMode) {\n                            let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                            let n = Math.floor(this.inputIndex / 3) - 1;\n                            let index;\n                            if (this.splitMode) {\n                                if (this.inputSubIndex == 0) index = array[n].search($b9cb672cfbcff24a$var$F);\n                                else if (this.inputSubIndex == 1) index = array[n].search($b9cb672cfbcff24a$var$N);\n                                else index = array[n].length;\n                                array[n] = array[n].slice(0, index) + event.key + array[n].slice(index);\n                            } else array[n] += event.key;\n                            Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                value: array\n                            });\n                        } else {\n                            this.command += event.key;\n                            (0, $543d6d2a56ed7d8d$export$e73a7799776ae73d).commandAnimation(object);\n                        }\n                        this.keys++;\n                        this.idleAnimation(object);\n                    });\n                };\n                document.addEventListener('keydown', this.keydownFunction);\n                window.addEventListener('keydown', (event)=>{\n                    if (event.key === 'Tab') {\n                        event.preventDefault();\n                        this.container.focus();\n                    }\n                });\n                this.startNewTrainingRound(param ? param : 'nouns');\n                break;\n            case 'add verbs':\n            case 'add nouns':\n                this.keys = 0;\n                this.borderColor = '#12dada';\n                document.querySelectorAll('.editable').forEach((element)=>{\n                    element.addEventListener('click', (event)=>{\n                        if (this.tabMode) this.cancelTabMode();\n                        if (this.splitMode) {\n                            let source = event.target;\n                            if (source === element) return;\n                            let count;\n                            for(let q = 0; q < element.childElementCount; q++)if (element.children[q] === source) {\n                                count = q;\n                                break;\n                            }\n                            this.inputSubIndex = count;\n                        }\n                        this.inputIndex = parseInt(element.id.slice(3));\n                        this.changeSelectedInput();\n                    });\n                });\n                this.selectedInput = document.getElementById('div4');\n                this.selectedInput.classList.add('selectedElement');\n                this.inputIndex = 4;\n                this.wordIndex = this.vocabulary.length;\n                this.currentWord = {\n                    singular: this.empty(param),\n                    plural: this.empty(param),\n                    verb: param.includes('verb'),\n                    probability: 1\n                };\n                let deletionMode = false;\n                let indicator;\n                let deletionFunction = ()=>{\n                    this.vocabulary.splice(this.wordIndex, 1);\n                    const transaction = this.database.transaction('inflected vocabulary', 'readwrite');\n                    const objectStore = transaction.objectStore('inflected vocabulary');\n                    const request = objectStore.openCursor();\n                    request.onsuccess = ()=>{\n                        let cursor = request.result;\n                        if (cursor) {\n                            let k = cursor.key;\n                            let word = this.vocabulary[k - 1];\n                            if (word) {\n                                const updatedData = cursor.value;\n                                updatedData.singular = word.singular;\n                                updatedData.plural = word.plural;\n                                updatedData.verb = word.verb;\n                                updatedData.probability = word.probability;\n                                cursor.update(updatedData);\n                                cursor.continue();\n                            } else {\n                                cursor.delete();\n                                let vocab1 = this.vocabulary.slice(0, this.wordIndex);\n                                let vocab2 = this.vocabulary.slice(this.wordIndex);\n                                let wi1 = vocab1.findLastIndex((w)=>w.verb === param.includes('verb'));\n                                let wi2 = vocab2.findIndex((w)=>w.verb === param.includes('verb')) + this.wordIndex;\n                                if (this.vocabulary[wi1]) {\n                                    this.wordIndex = wi1;\n                                    this.currentWord = this.vocabulary[wi1];\n                                    if (this.splitMode) {\n                                        this.splitMode = false;\n                                        document.querySelectorAll('.split').forEach((split)=>{\n                                            split.innerHTML = '';\n                                            split.classList.remove('split');\n                                        });\n                                    }\n                                    if (this.genderSplitButton) this.genderSplitButton.style.display = 'block';\n                                    if (this.currentWord.singular[0].search($b9cb672cfbcff24a$var$mfANDn) != -1) {\n                                        this.splitGenders(this.currentWord);\n                                        return;\n                                    }\n                                    let overallIndexes = [];\n                                    let tabulatorStyle = false;\n                                    for(let i = 3; i < this.container.childElementCount; i++){\n                                        let tabulatorIndexes = [];\n                                        let n = Math.floor(i / 3) - 1;\n                                        let singular = this.currentWord.singular;\n                                        let plural = this.currentWord.plural;\n                                        if (i % 3 === 1) {\n                                            this.container.children[i].innerHTML = '';\n                                            for(let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++)if (singular[n].slice(ii, ii + 5) === '^tab^') {\n                                                tabulatorStyle = !tabulatorStyle;\n                                                ii += 4;\n                                            } else {\n                                                let object = document.createElement('object');\n                                                object.data = './keys/Reversion_T.svg';\n                                                object.id = `key${ii}-inp${i}`;\n                                                object.style.height = `100%`;\n                                                this.container.children[i].insertAdjacentElement('beforeend', object);\n                                                if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                                object.addEventListener('load', (_)=>{\n                                                    let svg = object.contentDocument;\n                                                    svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\n                                                    if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                        this.tabulatorAnimation(object);\n                                                        object.classList.add('tabulator');\n                                                    }\n                                                });\n                                            }\n                                            overallIndexes.push([\n                                                i,\n                                                tabulatorIndexes\n                                            ]);\n                                        } else if (i % 3 === 2) {\n                                            this.container.children[i].innerHTML = '';\n                                            for(let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++)if (plural[n].slice(ii, ii + 5) === '^tab^') {\n                                                tabulatorStyle = !tabulatorStyle;\n                                                ii += 4;\n                                            } else {\n                                                let object = document.createElement('object');\n                                                object.data = './keys/Reversion_T.svg';\n                                                object.id = `key${ii}-inp${i}`;\n                                                object.style.height = `100%`;\n                                                this.container.children[i].insertAdjacentElement('beforeend', object);\n                                                if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                                object.addEventListener('load', (_)=>{\n                                                    let svg = object.contentDocument;\n                                                    svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\n                                                    if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                        this.tabulatorAnimation(object);\n                                                        object.classList.add('tabulator');\n                                                    }\n                                                });\n                                            }\n                                        }\n                                        overallIndexes.push([\n                                            i,\n                                            tabulatorIndexes\n                                        ]);\n                                    }\n                                    this.changeSelectedInput();\n                                } else if (this.vocabulary[wi2]) {\n                                    this.currentWord = this.vocabulary[wi2];\n                                    if (this.splitMode) {\n                                        this.splitMode = false;\n                                        document.querySelectorAll('.split').forEach((split)=>{\n                                            split.innerHTML = '';\n                                            split.classList.remove('split');\n                                        });\n                                    }\n                                    if (this.genderSplitButton) this.genderSplitButton.style.display = 'block';\n                                    if (this.currentWord.singular[0].search($b9cb672cfbcff24a$var$mfANDn) != -1) {\n                                        this.splitGenders(this.currentWord);\n                                        return;\n                                    }\n                                    let overallIndexes = [];\n                                    let tabulatorStyle = false;\n                                    for(let i = 3; i < this.container.childElementCount; i++){\n                                        let tabulatorIndexes = [];\n                                        let n = Math.floor(i / 3) - 1;\n                                        let singular = this.currentWord.singular;\n                                        let plural = this.currentWord.plural;\n                                        if (i % 3 === 1) {\n                                            this.container.children[i].innerHTML = '';\n                                            for(let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++)if (singular[n].slice(ii, ii + 5) === '^tab^') {\n                                                tabulatorStyle = !tabulatorStyle;\n                                                ii += 4;\n                                            } else {\n                                                let object = document.createElement('object');\n                                                object.data = './keys/Reversion_T.svg';\n                                                object.id = `key${ii}-inp${i}`;\n                                                object.style.height = `100%`;\n                                                this.container.children[i].insertAdjacentElement('beforeend', object);\n                                                if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                                object.addEventListener('load', (_)=>{\n                                                    let svg = object.contentDocument;\n                                                    svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\n                                                    if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                        this.tabulatorAnimation(object);\n                                                        object.classList.add('tabulator');\n                                                    }\n                                                });\n                                            }\n                                            overallIndexes.push([\n                                                i,\n                                                tabulatorIndexes\n                                            ]);\n                                        } else if (i % 3 === 2) {\n                                            this.container.children[i].innerHTML = '';\n                                            for(let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++)if (plural[n].slice(ii, ii + 5) === '^tab^') {\n                                                tabulatorStyle = !tabulatorStyle;\n                                                ii += 4;\n                                            } else {\n                                                let object = document.createElement('object');\n                                                object.data = './keys/Reversion_T.svg';\n                                                object.id = `key${ii}-inp${i}`;\n                                                object.style.height = `100%`;\n                                                this.container.children[i].insertAdjacentElement('beforeend', object);\n                                                if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                                object.addEventListener('load', (_)=>{\n                                                    let svg = object.contentDocument;\n                                                    svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\n                                                    if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                        this.tabulatorAnimation(object);\n                                                        object.classList.add('tabulator');\n                                                    }\n                                                });\n                                            }\n                                            overallIndexes.push([\n                                                i,\n                                                tabulatorIndexes\n                                            ]);\n                                        }\n                                    }\n                                    this.changeSelectedInput();\n                                } else {\n                                    this.keys = 0;\n                                    this.currentWord = {\n                                        singular: this.empty(param),\n                                        plural: this.empty(param),\n                                        verb: param.includes('verb'),\n                                        probability: 1\n                                    };\n                                    for(let i = 0; i < this.container.childElementCount; i++){\n                                        if (i % 3 != 0) {\n                                            this.container.children[i].innerHTML = '';\n                                            this.container.children[i].classList.remove('split');\n                                        }\n                                        this.container.children[i].classList.remove('selectedElement');\n                                    }\n                                    this.inputIndex = 4;\n                                    this.selectedInput = this.container.children[4];\n                                    this.tabCount = 0;\n                                    this.selectedInput.classList.add('selectedElement');\n                                }\n                            }\n                        }\n                    };\n                    deletionMode = false;\n                    this.deletionButton.removeEventListener('click', deletionFunction);\n                    this.deletionButton.classList.remove('click');\n                    document.querySelectorAll('object').forEach((object)=>{\n                        if (object.contentDocument.getElementById('tspan7')) this.deletionAnimation(object, 1, 'reverse');\n                    });\n                    Array.from(document.getElementsByClassName('editable')).forEach((div)=>{\n                        div.classList.remove('redShadowDesign');\n                    });\n                };\n                this.deletionButton.addEventListener('mousemove', (_)=>{\n                    if (deletionMode) return;\n                    deletionMode = true;\n                    this.deletionAnimation(this.deletionButton, 2000, 'normal');\n                    let broken = false;\n                    this.container.querySelectorAll('object').forEach((object)=>{\n                        if (!object.contentDocument) return;\n                        this.deletionAnimation(object, 2000, 'normal');\n                        if (object.contentDocument.getElementById('tspan7')) this.deletionAnimation(object, 2000, 'normal');\n                        else {\n                            broken = true;\n                            return;\n                        }\n                    });\n                    if (broken) this.container.querySelectorAll('object').forEach((object)=>{\n                        if (object.contentDocument.getElementById('tspan7')) this.deletionAnimation(object, 1, 'reverse');\n                    });\n                    indicator = setTimeout((_)=>{\n                        if (deletionMode) {\n                            this.deletionButton.addEventListener('click', deletionFunction);\n                            Array.from(document.getElementsByClassName('editable')).forEach((div)=>{\n                                div.classList.add('redShadowDesign');\n                            });\n                        }\n                    }, 2000);\n                });\n                this.deletionButton.addEventListener('mouseleave', (_)=>{\n                    clearTimeout(indicator);\n                    deletionMode = false;\n                    this.deletionAnimation(this.deletionButton, 1, 'reverse');\n                    this.container.querySelectorAll('object').forEach((object)=>{\n                        if (!object.contentDocument) return;\n                        if (object.contentDocument.getElementById('tspan7')) this.deletionAnimation(object, 1, 'reverse');\n                    });\n                    Array.from(document.getElementsByClassName('editable')).forEach((div)=>{\n                        div.classList.remove('redShadowDesign');\n                    });\n                    this.deletionButton.removeEventListener('click', deletionFunction);\n                });\n                document.querySelectorAll('.c').forEach((element)=>{\n                    element.addEventListener('mousedown', (_)=>{\n                        element.classList.add('click');\n                        document.querySelectorAll('.editable').forEach((div)=>{\n                            if (element === this.buttonLeft) {\n                                let vocab = this.vocabulary.slice(0, this.wordIndex);\n                                let wi = vocab.findLastIndex((w)=>w.verb === param.includes('verb'));\n                                if (this.vocabulary[wi]) {\n                                    if (this.currentWord.singular.filter((value)=>value === '').length === (param.includes('verb') ? 3 : 6) && this.currentWord.plural.filter((value)=>value === '').length === (param.includes('verb') ? 3 : 6) && this.wordIndex === this.vocabulary.length) return;\n                                }\n                            }\n                            div.classList.add('savedElement');\n                        });\n                    });\n                    element.addEventListener('mouseout', (_)=>{\n                        element.classList.remove('click');\n                        document.querySelectorAll('.editable').forEach((div)=>{\n                            div.classList.remove('savedElement');\n                        });\n                    });\n                });\n                this.buttonLeftFunction = ()=>{\n                    this.commandMode = false;\n                    this.command = '';\n                    if (this.tabMode) this.cancelTabMode();\n                    let vocab = this.vocabulary.slice(0, this.wordIndex);\n                    let wi = vocab.findLastIndex((w)=>w.verb === param.includes('verb'));\n                    if (this.vocabulary[wi]) {\n                        if (this.currentWord.singular.filter((value)=>value === '').length === (param.includes('verb') ? 3 : 6) && this.currentWord.plural.filter((value)=>value === '').length === (param.includes('verb') ? 3 : 6) && this.wordIndex === this.vocabulary.length) {\n                            for(let i = 0; i < this.container.childElementCount; i++){\n                                this.container.children[i].classList.remove('savedElement');\n                                this.buttonLeft.classList.remove('click');\n                            }\n                            this.wordIndex = wi;\n                            this.currentWord = this.vocabulary[wi];\n                            let overallIndexes = [];\n                            let objectCount = 0;\n                            let objectsLoaded = 0;\n                            if (this.splitMode) {\n                                this.splitMode = false;\n                                document.querySelectorAll('.split').forEach((split)=>{\n                                    split.innerHTML = '';\n                                    split.classList.remove('split');\n                                });\n                            }\n                            if (this.genderSplitButton) this.genderSplitButton.style.display = 'block';\n                            if (this.currentWord.singular[0].search($b9cb672cfbcff24a$var$mfANDn) != -1) {\n                                this.splitGenders(this.currentWord);\n                                return;\n                            }\n                            let tabulatorStyle = false;\n                            for(let i = 3; i < this.container.childElementCount; i++){\n                                let tabulatorIndexes = [];\n                                let n = Math.floor(i / 3) - 1;\n                                let singular = this.currentWord.singular;\n                                let plural = this.currentWord.plural;\n                                if (i % 3 === 1) {\n                                    this.container.children[i].innerHTML = '';\n                                    for(let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++)if (singular[n].slice(ii, ii + 5) === '^tab^') {\n                                        tabulatorStyle = !tabulatorStyle;\n                                        ii += 4;\n                                    } else {\n                                        let object = document.createElement('object');\n                                        object.data = './keys/Reversion_T.svg';\n                                        object.id = `key${ii}-inp${i}`;\n                                        object.style.height = `100%`;\n                                        objectCount++;\n                                        this.container.children[i].insertAdjacentElement('beforeend', object);\n                                        if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                        object.addEventListener('load', (_)=>{\n                                            let svg = object.contentDocument;\n                                            svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\n                                            if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                this.tabulatorAnimation(object);\n                                                object.classList.add('tabulator');\n                                            }\n                                            objectsLoaded++;\n                                            if (objectCount === objectsLoaded) {\n                                                let objects = this.container.querySelectorAll('object');\n                                                objects.forEach((obj)=>obj.hidden = false);\n                                                for(let i = 4; i < this.container.children.length; i++)if (i % 3 > 0) {\n                                                    let div = this.container.children[i];\n                                                    let array = Object.values(this.currentWord)[i % 3 - 1];\n                                                    let n = Math.floor(i / 3) - 1;\n                                                    this.adjustInputWidth(div, array[n]);\n                                                }\n                                            }\n                                        });\n                                    }\n                                    overallIndexes.push([\n                                        i,\n                                        tabulatorIndexes\n                                    ]);\n                                } else if (i % 3 === 2) {\n                                    this.container.children[i].innerHTML = '';\n                                    for(let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++)if (plural[n].slice(ii, ii + 5) === '^tab^') {\n                                        tabulatorStyle = !tabulatorStyle;\n                                        ii += 4;\n                                    } else {\n                                        let object = document.createElement('object');\n                                        object.data = './keys/Reversion_T.svg';\n                                        object.id = `key${ii}-inp${i}`;\n                                        object.style.height = `100%`;\n                                        objectCount++;\n                                        this.container.children[i].insertAdjacentElement('beforeend', object);\n                                        if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                        object.addEventListener('load', (_)=>{\n                                            let svg = object.contentDocument;\n                                            svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\n                                            if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                this.tabulatorAnimation(object);\n                                                object.classList.add('tabulator');\n                                            }\n                                            objectsLoaded++;\n                                            if (objectCount === objectsLoaded) {\n                                                let objects = this.container.querySelectorAll('object');\n                                                objects.forEach((obj)=>obj.hidden = false);\n                                                for(let i = 4; i < this.container.children.length; i++)if (i % 3 > 0) {\n                                                    let div = this.container.children[i];\n                                                    let array = Object.values(this.currentWord)[i % 3 - 1];\n                                                    let n = Math.floor(i / 3) - 1;\n                                                    this.adjustInputWidth(div, array[n]);\n                                                }\n                                            }\n                                        });\n                                    }\n                                }\n                                overallIndexes.push([\n                                    i,\n                                    tabulatorIndexes\n                                ]);\n                            }\n                            this.changeSelectedInput();\n                        } else {\n                            this.vocabulary[this.wordIndex] = this.currentWord;\n                            const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\n                            transaction.onerror = ()=>console.error(transaction.error);\n                            const objectStore = transaction.objectStore(`inflected vocabulary`);\n                            const req = objectStore.get(this.wordIndex);\n                            req.onerror = ()=>console.error(req.error);\n                            req.onsuccess = ()=>{\n                                for(let i = 0; i < this.container.childElementCount; i++){\n                                    this.container.children[i].classList.remove('savedElement');\n                                    this.buttonLeft.classList.remove('click');\n                                }\n                                const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\n                                idontcare.onerror = ()=>console.error(idontcare.error);\n                                this.wordIndex = wi;\n                                let tabulatorStyle = false;\n                                this.currentWord = this.vocabulary[wi];\n                                let overallIndexes = [];\n                                if (this.splitMode) {\n                                    this.splitMode = false;\n                                    document.querySelectorAll('.split').forEach((split)=>{\n                                        split.innerHTML = '';\n                                        split.classList.remove('split');\n                                    });\n                                }\n                                if (this.genderSplitButton) this.genderSplitButton.style.display = 'block';\n                                if (this.currentWord.singular[0].search($b9cb672cfbcff24a$var$mfANDn) != -1) {\n                                    this.splitGenders(this.currentWord);\n                                    return;\n                                }\n                                for(let i = 3; i < this.container.childElementCount; i++){\n                                    let tabulatorIndexes = [];\n                                    let n = Math.floor(i / 3) - 1;\n                                    let singular = this.currentWord.singular;\n                                    let plural = this.currentWord.plural;\n                                    if (i % 3 === 1) {\n                                        this.container.children[i].innerHTML = '';\n                                        for(let ii = 0; ii < singular[n].length; ii++)if (singular[n].slice(ii, ii + 5) === '^tab^') {\n                                            tabulatorStyle = !tabulatorStyle;\n                                            ii += 4;\n                                        } else {\n                                            let object = document.createElement('object');\n                                            object.data = './keys/Reversion_T.svg';\n                                            object.id = `key${ii}-inp${i}`;\n                                            object.style.height = `100%`;\n                                            this.container.children[i].insertAdjacentElement('beforeend', object);\n                                            if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                            object.addEventListener('load', (_)=>{\n                                                let svg = object.contentDocument;\n                                                svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\n                                                if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                    this.tabulatorAnimation(object);\n                                                    object.classList.add('tabulator');\n                                                }\n                                            });\n                                        }\n                                        overallIndexes.push([\n                                            i,\n                                            tabulatorIndexes\n                                        ]);\n                                    } else if (i % 3 === 2) {\n                                        this.container.children[i].innerHTML = '';\n                                        for(let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++)if (plural[n].slice(ii, ii + 5) === '^tab^') {\n                                            tabulatorStyle = !tabulatorStyle;\n                                            ii += 4;\n                                        } else {\n                                            let object = document.createElement('object');\n                                            object.data = './keys/Reversion_T.svg';\n                                            object.id = `key${ii}-inp${i}`;\n                                            object.style.height = `100%`;\n                                            this.container.children[i].insertAdjacentElement('beforeend', object);\n                                            if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                            object.addEventListener('load', (_)=>{\n                                                let svg = object.contentDocument;\n                                                svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\n                                                if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                    this.tabulatorAnimation(object);\n                                                    object.classList.add('tabulator');\n                                                }\n                                            });\n                                        }\n                                        overallIndexes.push([\n                                            i,\n                                            tabulatorIndexes\n                                        ]);\n                                    }\n                                }\n                                let objects = this.container.querySelectorAll('object');\n                                if (objects.length > 0) objects[objects.length - 1].addEventListener('load', (_)=>{\n                                    objects.forEach((obj)=>obj.hidden = false);\n                                    for(let i = 4; i < this.container.children.length; i++)if (i % 3 > 0) {\n                                        let div = this.container.children[i];\n                                        let array = Object.values(this.currentWord)[i % 3 - 1];\n                                        let n = Math.floor(i / 3) - 1;\n                                        this.adjustInputWidth(div, array[n]);\n                                    }\n                                });\n                                else window.resizeBy(0, 0);\n                            };\n                        }\n                    }\n                };\n                this.buttonLeft.addEventListener('mouseup', this.buttonLeftFunction);\n                this.buttonRightFunction = ()=>{\n                    this.commandMode = false;\n                    this.command = '';\n                    if (this.tabMode) this.cancelTabMode();\n                    let vocab = this.vocabulary.slice(this.wordIndex + 1);\n                    let wi = vocab.findIndex((w)=>w.verb === param.includes('verb')) >= 0 ? vocab.findIndex((w)=>w.verb === param.includes('verb')) + this.wordIndex + 1 : -1;\n                    if (!this.vocabulary[wi]) {\n                        this.vocabulary[this.wordIndex] = this.currentWord;\n                        const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\n                        transaction.onerror = ()=>console.error(transaction.error);\n                        const objectStore = transaction.objectStore(`inflected vocabulary`);\n                        const req = objectStore.put(this.currentWord, this.wordIndex + 1);\n                        req.onerror = ()=>console.error(req.error);\n                        transaction.oncomplete = ()=>{\n                            for(let i = 0; i < this.container.childElementCount; i++){\n                                this.container.children[i].classList.remove('savedElement');\n                                this.buttonRight.classList.remove('click');\n                            }\n                            this.wordIndex = this.vocabulary.length;\n                            this.keys = 0;\n                            this.currentWord = {\n                                singular: this.empty(param),\n                                plural: this.empty(param),\n                                verb: param.includes('verb'),\n                                probability: 1\n                            };\n                            for(let i = 3; i < this.container.childElementCount; i++){\n                                if (i % 3 != 0) {\n                                    this.container.children[i].innerHTML = '';\n                                    this.container.children[i].classList.remove('split');\n                                }\n                                this.container.children[i].classList.remove('selectedElement');\n                            }\n                            this.splitMode = false;\n                            if (this.genderSplitButton) this.genderSplitButton.style.display = 'block';\n                            this.inputIndex = 4;\n                            this.selectedInput = this.container.children[4];\n                            this.tabCount = 0;\n                            this.selectedInput.classList.add('selectedElement');\n                        };\n                        window.resizeBy(0, 0);\n                    } else {\n                        this.vocabulary[this.wordIndex] = this.currentWord;\n                        for(let i = 0; i < this.container.childElementCount; i++){\n                            this.container.children[i].classList.remove('savedElement');\n                            this.buttonRight.classList.remove('click');\n                        }\n                        const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\n                        transaction.onerror = ()=>console.error(transaction.error);\n                        const objectStore = transaction.objectStore(`inflected vocabulary`);\n                        const req = objectStore.get(this.wordIndex);\n                        req.onerror = ()=>console.error(req.error);\n                        req.onsuccess = ()=>{\n                            const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\n                            idontcare.onerror = ()=>console.error(idontcare.error);\n                            this.wordIndex = wi;\n                            this.currentWord = this.vocabulary[wi];\n                            if (this.splitMode) {\n                                this.splitMode = false;\n                                document.querySelectorAll('.split').forEach((split)=>{\n                                    split.innerHTML = '';\n                                    split.classList.remove('split');\n                                });\n                            }\n                            if (this.genderSplitButton) this.genderSplitButton.style.display = 'block';\n                            if (this.currentWord.singular[0].search($b9cb672cfbcff24a$var$mfANDn) != -1) {\n                                this.splitGenders(this.currentWord);\n                                return;\n                            }\n                            let overallIndexes = [];\n                            let tabulatorStyle = false;\n                            let objectCount = 0;\n                            let objectsLoaded = 0;\n                            for(let i = 3; i < this.container.childElementCount; i++){\n                                let tabulatorIndexes = [];\n                                let n = Math.floor(i / 3) - 1;\n                                let singular = this.currentWord.singular;\n                                let plural = this.currentWord.plural;\n                                if (i % 3 === 1) {\n                                    this.container.children[i].innerHTML = '';\n                                    for(let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++)if (singular[n].slice(ii, ii + 5) === '^tab^') {\n                                        tabulatorStyle = !tabulatorStyle;\n                                        ii += 4;\n                                    } else {\n                                        let object = document.createElement('object');\n                                        object.data = './keys/Reversion_T.svg';\n                                        object.id = `key${ii}-inp${i}`;\n                                        object.style.height = `100%`;\n                                        this.container.children[i].insertAdjacentElement('beforeend', object);\n                                        if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                        objectCount++;\n                                        object.addEventListener('load', (_)=>{\n                                            let svg = object.contentDocument;\n                                            svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\n                                            if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                this.tabulatorAnimation(object);\n                                                object.classList.add('tabulator');\n                                            }\n                                            objectsLoaded++;\n                                            if (objectCount === objectsLoaded) {\n                                                let objects = this.container.querySelectorAll('object');\n                                                for(let i = 4; i < this.container.children.length; i++)if (i % 3 > 0) {\n                                                    let div = this.container.children[i];\n                                                    let array = Object.values(this.currentWord)[i % 3 - 1];\n                                                    let n = Math.floor(i / 3) - 1;\n                                                    this.adjustInputWidth(div, array[n]);\n                                                }\n                                            }\n                                        });\n                                    }\n                                    overallIndexes.push([\n                                        i,\n                                        tabulatorIndexes\n                                    ]);\n                                } else if (i % 3 === 2) {\n                                    this.container.children[i].innerHTML = '';\n                                    for(let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++){\n                                        if (plural[n].slice(ii, ii + 5) === '^tab^') {\n                                            tabulatorStyle = !tabulatorStyle;\n                                            ii += 4;\n                                        } else {\n                                            let object = document.createElement('object');\n                                            object.data = './keys/Reversion_T.svg';\n                                            object.id = `key${ii}-inp${i}`;\n                                            object.style.height = `100%`;\n                                            this.container.children[i].insertAdjacentElement('beforeend', object);\n                                            if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                            object.addEventListener('load', (_)=>{\n                                                let svg = object.contentDocument;\n                                                svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\n                                                if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                    this.tabulatorAnimation(object);\n                                                    object.classList.add('tabulator');\n                                                }\n                                                objectsLoaded++;\n                                                if (objectCount === objectsLoaded) {\n                                                    for(let i = 4; i < this.container.children.length; i++)if (i % 3 > 0) {\n                                                        let div = this.container.children[i];\n                                                        let array = Object.values(this.currentWord)[i % 3 - 1];\n                                                        let n = Math.floor(i / 3) - 1;\n                                                        this.adjustInputWidth(div, array[n]);\n                                                    }\n                                                }\n                                            });\n                                            objectCount++;\n                                        }\n                                        overallIndexes.push([\n                                            i,\n                                            tabulatorIndexes\n                                        ]);\n                                    }\n                                }\n                                this.changeSelectedInput();\n                            }\n                        };\n                    }\n                };\n                this.buttonRight.addEventListener('mouseup', this.buttonRightFunction);\n                this.keydownFunction = (event)=>{\n                    let forbiddenCharacters = [\n                        \"\\xb4\",\n                        '`',\n                        '^'\n                    ];\n                    if (this.commandMode) {\n                        forbiddenCharacters.push('#');\n                        let inp = this.splitMode ? this.selectedInput.children[this.inputSubIndex] : this.selectedInput;\n                        if (event.key === 'Enter') {\n                            if (this.command.endsWith('%') && !this.automaticPaddingAdjustment) {\n                                if (this.command.startsWith('#p-')) {\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\n                                    if (percentage >= 0 && percentage <= 100) {\n                                        this.padding[this.inputIndex] = Math.round(Math.max(Math.min(this.padding[this.inputIndex] * (1 - percentage / 100), this.selectedInput.clientHeight / 2 * 0.7), 1));\n                                        this.paddingAnimation(this.selectedInput);\n                                        this.command.split('').forEach((_)=>{\n                                            this.selectedInput.lastElementChild.remove();\n                                            this.keys--;\n                                        });\n                                        this.command = '';\n                                        this.commandMode = false;\n                                        return;\n                                    }\n                                } else if (this.command.startsWith('#p+')) {\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\n                                    if (percentage >= 0) {\n                                        this.padding[this.inputIndex] = Math.round(Math.max(Math.min(this.padding[this.inputIndex] * (1 + percentage / 100), this.selectedInput.clientHeight / 2 * 0.7), 1));\n                                        this.paddingAnimation(this.selectedInput);\n                                        this.command.split('').forEach((_)=>{\n                                            this.selectedInput.lastElementChild.remove();\n                                            this.keys--;\n                                        });\n                                        this.command = '';\n                                        this.commandMode = false;\n                                        return;\n                                    }\n                                } else if (this.command.startsWith('#P+')) {\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\n                                    if (percentage >= 0) {\n                                        this.padding.forEach((p, i)=>{\n                                            let div = document.querySelector(`#div${i}`);\n                                            if (i > 3 && i % 3 != 0) {\n                                                this.padding[i] = Math.round(Math.max(Math.min(this.padding[i] * (1 + percentage / 100), div.clientHeight / 2 * 0.7), 1));\n                                                this.paddingAnimation(div);\n                                            }\n                                        });\n                                        this.command.split('').forEach((_)=>{\n                                            this.selectedInput.lastElementChild.remove();\n                                            this.keys--;\n                                        });\n                                        this.command = '';\n                                        this.commandMode = false;\n                                        return;\n                                    }\n                                } else if (this.command.startsWith('#P-')) {\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\n                                    if (percentage >= 0) {\n                                        this.padding.forEach((p, i)=>{\n                                            let div = document.querySelector(`#div${i}`);\n                                            if (i > 3 && i % 3 != 0) {\n                                                this.padding[i] = Math.round(Math.max(Math.min(this.padding[i] * (1 - percentage / 100), div.clientHeight / 2 * 0.7), 1));\n                                                this.paddingAnimation(document.querySelector(`#div${i}`));\n                                            }\n                                        });\n                                        this.command.split('').forEach((_)=>{\n                                            this.selectedInput.lastElementChild.remove();\n                                            this.keys--;\n                                        });\n                                        this.command = '';\n                                        this.commandMode = false;\n                                        return;\n                                    }\n                                }\n                            }\n                            switch(this.command.toLowerCase()){\n                                case '#<':\n                                case '#<-':\n                                case '#previous':\n                                case '#prvs':\n                                case '#vorheriges':\n                                case '#voriges':\n                                case '#prev':\n                                    this.command.split('').forEach((_)=>{\n                                        inp.lastElementChild.remove();\n                                        this.keys--;\n                                    });\n                                    this.command = '';\n                                    this.commandMode = false;\n                                    this.buttonLeftFunction(event);\n                                    return;\n                                case '#>':\n                                case '#->':\n                                case '#next':\n                                case '#nxt':\n                                case \"#n\\xe4chstes\":\n                                    this.command.split('').forEach((_)=>{\n                                        inp.lastElementChild.remove();\n                                        this.keys--;\n                                    });\n                                    this.command = '';\n                                    this.commandMode = false;\n                                    this.buttonRightFunction(event);\n                                    return;\n                                case '#exit':\n                                case '#quit':\n                                case '#stop':\n                                case '#home':\n                                case '#stopp':\n                                case '#beenden':\n                                case \"#hauptmen\\xfc\":\n                                case '#home menu':\n                                case '#h':\n                                    this.command = '';\n                                    this.commandMode = false;\n                                    (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                                    this.splitMode = false;\n                                    this.tabulator = '';\n                                    (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n                                    return;\n                                case '#geschlechtertrennung':\n                                case '#teilen':\n                                case '#splitto':\n                                case '#split':\n                                case '#sp':\n                                    if (!this.splitMode) this.splitGenders(this.currentWord);\n                                    else {\n                                        this.command.split('').forEach((_)=>{\n                                            inp.lastElementChild.remove();\n                                            this.keys--;\n                                        });\n                                        let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                        let n = Math.floor(this.inputIndex / 3) - 1;\n                                        let word = array[n].split($b9cb672cfbcff24a$var$mfORn)[this.inputSubIndex + 1];\n                                        this.adjustInputWidth(inp, word, true);\n                                        this.command = '';\n                                        this.commandMode = false;\n                                    }\n                                    return;\n                                case '#automaticpaddingadjustment':\n                                case '#auto':\n                                case '#automatic-padding-adjustment':\n                                case '#automatische padding-anpassung':\n                                case '#automatischepaddinganpassung':\n                                case '#automatische-padding-anpassung':\n                                case '#apa':\n                                    this.automaticPaddingAdjustment = true;\n                                    this.command.split('').forEach((_)=>{\n                                        inp.lastElementChild.remove();\n                                        this.keys--;\n                                    });\n                                    this.command = '';\n                                    this.commandMode = false;\n                                    this.borderColor = 'orange';\n                                    let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                    let n = Math.floor(this.inputIndex / 3) - 1;\n                                    let word = this.splitMode ? array[n].split($b9cb672cfbcff24a$var$mfORn)[this.inputSubIndex + 1] : array[n];\n                                    this.adjustInputWidth(inp, word, true);\n                                    return;\n                                case '#manualpaddingadjustment':\n                                case '#manual':\n                                case '#normalpaddingadjustment':\n                                case '#normal':\n                                case '#manual-padding-adjustment':\n                                case '#mpa':\n                                case '#npa':\n                                    if (!this.splitMode) this.automaticPaddingAdjustment = false;\n                                    if (!param.includes('add')) this.borderColor = param.includes('verb') ? '#ff5e01' : 'rgba(138, 43, 226, 1)';\n                                default:\n                                    this.command.split('').forEach((_)=>{\n                                        inp.lastElementChild.remove();\n                                        this.keys--;\n                                    });\n                                    if (this.automaticPaddingAdjustment) {\n                                        let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                        let n = Math.floor(this.inputIndex / 3) - 1;\n                                        let word = this.splitMode ? array[n].split($b9cb672cfbcff24a$var$mfORn)[this.inputSubIndex + 1] : array[n];\n                                        this.adjustInputWidth(inp, word, true);\n                                    } else this.paddingAnimation(inp);\n                            }\n                            this.command = '';\n                            this.commandMode = false;\n                            return;\n                        } else if (event.key === 'ArrowUp') {\n                            this.command.split('').forEach((_)=>{\n                                inp.removeChild(inp.lastElementChild);\n                                this.keys--;\n                            });\n                            if (this.inputIndex > 6) this.inputIndex -= 3;\n                            this.changeSelectedInput();\n                            this.command = '';\n                            this.commandMode = false;\n                            return;\n                        } else if (event.key === 'ArrowDown') {\n                            this.command.split('').forEach((_)=>{\n                                inp.removeChild(inp.lastElementChild);\n                                this.keys--;\n                            });\n                            this.command = '';\n                            this.commandMode = false;\n                            if (this.inputIndex < 18 - this.v) this.inputIndex += 3;\n                            this.changeSelectedInput();\n                            return;\n                        } else if (event.key === 'ArrowLeft') {\n                            this.command.split('').forEach((_)=>{\n                                inp.removeChild(inp.lastElementChild);\n                                this.keys--;\n                            });\n                            this.command = '';\n                            this.commandMode = false;\n                            if (this.inputIndex > 4) {\n                                if (this.splitMode && this.inputSubIndex > 0) this.inputSubIndex--;\n                                else {\n                                    this.inputIndex--;\n                                    if (this.inputIndex % 3 === 0) this.inputIndex--;\n                                    if (this.splitMode && this.inputSubIndex === 0) this.inputSubIndex = 2;\n                                }\n                                this.changeSelectedInput();\n                            } else if (this.inputIndex == 4 && this.inputSubIndex > 0 && this.splitMode) {\n                                this.inputSubIndex--;\n                                this.changeSelectedInput();\n                            }\n                            return;\n                        } else if (event.key === 'ArrowRight') {\n                            this.command.split('').forEach((_)=>{\n                                inp.removeChild(inp.lastElementChild);\n                                this.keys--;\n                            });\n                            this.command = '';\n                            this.commandMode = false;\n                            if (this.inputIndex < 20 - this.v) {\n                                if (this.splitMode && this.inputSubIndex < 2) this.inputSubIndex++;\n                                else {\n                                    this.inputIndex++;\n                                    if (this.inputIndex % 3 === 0) this.inputIndex++;\n                                    if (this.splitMode && this.inputSubIndex === 2) this.inputSubIndex = 0;\n                                }\n                                this.changeSelectedInput();\n                            } else if (this.splitMode && this.inputIndex == 20 - this.v && this.inputSubIndex < 2) {\n                                this.inputSubIndex++;\n                                this.changeSelectedInput();\n                            }\n                            return;\n                        } else if (event.key === 'Backspace') {\n                            if (inp.lastElementChild) {\n                                inp.lastElementChild.remove();\n                                this.command = this.command.slice(0, this.command.length - 1);\n                                this.keys--;\n                                if (this.command === '') {\n                                    this.commandMode = false;\n                                    return;\n                                }\n                            }\n                            let pad = this.splitMode ? this.splitPadding[this.inputIndex][this.inputSubIndex] : this.padding[this.inputIndex];\n                            if (this.automaticPaddingAdjustment && pad > inp.offsetHeight * 0.05) {\n                                let object = inp.lastElementChild;\n                                if (!object) return;\n                                let w = Math.round((inp.getBoundingClientRect().width - parseFloat(window.getComputedStyle(inp).paddingLeft) - parseFloat(window.getComputedStyle(inp).paddingRight)) * 100) / 100;\n                                let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n                                let h = w / this.keys * aspectRatio;\n                                let padding = Math.max((inp.getBoundingClientRect().height - h) / 2, inp.offsetHeight * 0.05);\n                                if (this.splitMode) {\n                                    this.splitPadding[this.inputIndex][this.inputSubIndex] = Math.max(padding, 1);\n                                    inp.style.padding = `${this.splitPadding[this.inputIndex][this.inputSubIndex]}px 0.25vw`;\n                                } else {\n                                    this.padding[this.inputIndex] = Math.max(padding, 1);\n                                    inp.style.padding = `${this.padding[this.inputIndex]}px 0.25vw`;\n                                }\n                            }\n                        }\n                        if (this.commandMode && (this.selectedInput.classList.contains('known-case') || forbiddenCharacters.includes(event.key) || event.key.length > 1)) return;\n                    }\n                    if (!this.commandMode) {\n                        if (event.key === 'ArrowRight') {\n                            if (this.tabMode) this.cancelTabMode();\n                            if (this.inputIndex < 20 - this.v) {\n                                if (this.splitMode && this.inputSubIndex < 2) this.inputSubIndex++;\n                                else {\n                                    this.inputIndex++;\n                                    if (this.inputIndex % 3 === 0) this.inputIndex++;\n                                    if (this.splitMode && this.inputSubIndex === 2) this.inputSubIndex = 0;\n                                }\n                                this.changeSelectedInput();\n                            } else if (this.splitMode && this.inputIndex == 20 - this.v && this.inputSubIndex < 2) {\n                                this.inputSubIndex++;\n                                this.changeSelectedInput();\n                            }\n                            return;\n                        } else if (event.key === 'ArrowLeft') {\n                            if (this.tabMode) this.cancelTabMode();\n                            if (this.inputIndex > 4) {\n                                if (this.splitMode && this.inputSubIndex > 0) this.inputSubIndex--;\n                                else {\n                                    this.inputIndex--;\n                                    if (this.inputIndex % 3 === 0) this.inputIndex--;\n                                    if (this.splitMode && this.inputSubIndex === 0) this.inputSubIndex = 2;\n                                }\n                                this.changeSelectedInput();\n                            } else if (this.inputIndex == 4 && this.inputSubIndex > 0 && this.splitMode) {\n                                this.inputSubIndex--;\n                                this.changeSelectedInput();\n                            }\n                            return;\n                        } else if (event.key === 'ArrowDown' || event.key === 'Enter') {\n                            if (this.tabMode) {\n                                this.cancelTabMode();\n                                if (this.inputIndex === 19) return;\n                            }\n                            const enter = event.key === 'Enter';\n                            if (this.splitMode && enter && Object.values(this.currentWord)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1].split($b9cb672cfbcff24a$var$mfORn)[this.inputSubIndex + 1] === '' && this.inputSubIndex > 0) {\n                                let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                let n = Math.floor(this.inputIndex / 3) - 1;\n                                let splitto = array[n].split($b9cb672cfbcff24a$var$mfORn).slice(1);\n                                splitto[this.inputSubIndex] = splitto[this.inputSubIndex - 1];\n                                array[n] = `^^m^^${splitto[0]}^^f^^${splitto[1]}^^n^^${splitto[2]}`;\n                                Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                    value: array\n                                });\n                                let phrase = splitto[this.inputSubIndex];\n                                let tabulatorStyle = false;\n                                let inp = this.selectedInput.children[this.inputSubIndex];\n                                let objectCount = 0;\n                                let objectsLoaded = 0;\n                                const id = this.inputIndex;\n                                const count = this.inputSubIndex;\n                                for(let ii = 0; ii < phrase.length; ii++)if (phrase.slice(ii, ii + 5) === '^tab^') {\n                                    tabulatorStyle = !tabulatorStyle;\n                                    ii += 4;\n                                } else {\n                                    let object = document.createElement('object');\n                                    this.keys++;\n                                    object.addEventListener('load', (_)=>{\n                                        let svg = object.contentDocument;\n                                        svg.querySelector('#tspan7').innerHTML = phrase.charAt(ii);\n                                        if (object.classList.contains('tabulator')) this.tabulatorAnimation(object);\n                                        objectsLoaded++;\n                                        if (objectsLoaded === objectCount) {\n                                            this.adjustInputWidth(inp, phrase, false);\n                                            let pad = this.splitPadding[id][count];\n                                            inp.style.padding = `${pad}px 0.25vw`;\n                                        }\n                                    });\n                                    object.data = './keys/Reversion_T.svg';\n                                    object.id = `key${this.keys}-inp${this.inputIndex}-sub${this.inputSubIndex}`;\n                                    object.style.height = `100%`;\n                                    objectCount++;\n                                    inp.insertAdjacentElement('beforeend', object);\n                                    if (tabulatorStyle) object.classList.add('tabulator');\n                                }\n                            }\n                            if (this.inputIndex < 18 - this.v) {\n                                if (this.splitMode && this.inputSubIndex < 2 && enter) this.inputSubIndex++;\n                                else {\n                                    this.inputIndex += 3;\n                                    if (this.splitMode && this.inputSubIndex === 2 && enter) this.inputSubIndex = 0;\n                                }\n                                this.changeSelectedInput();\n                            } else if (enter && this.inputIndex === 19 - this.v) {\n                                if (this.splitMode && this.inputSubIndex < 2) this.inputSubIndex++;\n                                else {\n                                    this.inputIndex = 5;\n                                    if (this.splitMode && this.inputSubIndex === 2) this.inputSubIndex = 0;\n                                }\n                                this.changeSelectedInput();\n                            } else if (enter && this.inputIndex === 20 - this.v) {\n                                if (this.splitMode && this.inputSubIndex < 2) {\n                                    this.inputSubIndex++;\n                                    this.changeSelectedInput();\n                                    return;\n                                }\n                                document.querySelectorAll('.editable').forEach((element)=>{\n                                    element.classList.add('savedElement');\n                                });\n                                if (this.enterMode) {\n                                    let vocab = this.vocabulary.slice(this.wordIndex + 1);\n                                    let wi = vocab.findIndex((w)=>w.verb === param.includes('verb')) >= 0 ? vocab.findIndex((w)=>w.verb === param.includes('verb')) + this.wordIndex + 1 : -1;\n                                    if (!this.vocabulary[wi]) {\n                                        this.vocabulary[this.wordIndex] = this.currentWord;\n                                        const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\n                                        transaction.onerror = ()=>console.error(transaction.error);\n                                        const objectStore = transaction.objectStore(`inflected vocabulary`);\n                                        const req = objectStore.put(this.currentWord, this.wordIndex + 1);\n                                        req.onerror = ()=>console.error(req.error);\n                                        transaction.oncomplete = ()=>{\n                                            for(let i = 0; i < this.container.childElementCount; i++)this.container.children[i].classList.remove('savedElement');\n                                            this.wordIndex = this.vocabulary.length;\n                                            this.keys = 0;\n                                            this.currentWord = {\n                                                singular: this.empty(param),\n                                                plural: this.empty(param),\n                                                verb: param.includes('verb'),\n                                                probability: 1\n                                            };\n                                            for(let i = 3; i < this.container.childElementCount; i++){\n                                                if (i % 3 != 0) {\n                                                    this.container.children[i].innerHTML = '';\n                                                    this.container.children[i].classList.remove('split');\n                                                }\n                                                this.container.children[i].classList.remove('selectedElement');\n                                            }\n                                            this.inputIndex = 4;\n                                            this.selectedInput = this.container.children[4];\n                                            this.tabCount = 0;\n                                            this.genderSplitButton.style.display = 'block';\n                                            this.selectedInput.classList.add('selectedElement');\n                                        };\n                                    } else {\n                                        this.vocabulary[this.wordIndex] = this.currentWord;\n                                        for(let i = 0; i < this.container.childElementCount; i++)this.container.children[i].classList.remove('savedElement');\n                                        const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\n                                        transaction.onerror = ()=>console.error(transaction.error);\n                                        const objectStore = transaction.objectStore(`inflected vocabulary`);\n                                        const req = objectStore.get(this.wordIndex);\n                                        req.onerror = ()=>console.error(req.error);\n                                        req.onsuccess = ()=>{\n                                            const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\n                                            idontcare.onerror = ()=>console.error(idontcare.error);\n                                            this.wordIndex = wi;\n                                            this.currentWord = this.vocabulary[wi];\n                                            if (this.splitMode) {\n                                                this.splitMode = false;\n                                                document.querySelectorAll('.split').forEach((split)=>{\n                                                    split.innerHTML = '';\n                                                    split.classList.remove('split');\n                                                });\n                                            }\n                                            if (this.genderSplitButton) this.genderSplitButton.style.display = 'block';\n                                            if (this.currentWord.singular[0].search($b9cb672cfbcff24a$var$mfANDn) != -1) {\n                                                this.splitGenders(this.currentWord);\n                                                return;\n                                            }\n                                            let overallIndexes = [];\n                                            let tabulatorStyle = false;\n                                            for(let i = 3; i < this.container.childElementCount; i++){\n                                                let tabulatorIndexes = [];\n                                                let n = Math.floor(i / 3) - 1;\n                                                let singular = this.currentWord.singular;\n                                                let plural = this.currentWord.plural;\n                                                if (i % 3 === 1) {\n                                                    this.container.children[i].innerHTML = '';\n                                                    for(let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++)if (singular[n].slice(ii, ii + 5) === '^tab^') {\n                                                        tabulatorStyle = !tabulatorStyle;\n                                                        ii += 4;\n                                                    } else {\n                                                        let object = document.createElement('object');\n                                                        object.data = './keys/Reversion_T.svg';\n                                                        object.id = `key${ii}-inp${i}`;\n                                                        object.style.height = `100%`;\n                                                        this.container.children[i].insertAdjacentElement('beforeend', object);\n                                                        if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                                        object.addEventListener('load', (_)=>{\n                                                            let svg = object.contentDocument;\n                                                            svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\n                                                            if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                                this.tabulatorAnimation(object);\n                                                                object.classList.add('tabulator');\n                                                            }\n                                                        });\n                                                    }\n                                                    overallIndexes.push([\n                                                        i,\n                                                        tabulatorIndexes\n                                                    ]);\n                                                } else if (i % 3 === 2) {\n                                                    this.container.children[i].innerHTML = '';\n                                                    for(let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++)if (plural[n].slice(ii, ii + 5) === '^tab^') {\n                                                        tabulatorStyle = !tabulatorStyle;\n                                                        ii += 4;\n                                                    } else {\n                                                        let object = document.createElement('object');\n                                                        object.data = './keys/Reversion_T.svg';\n                                                        object.id = `key${ii}-inp${i}`;\n                                                        object.style.height = `100%`;\n                                                        this.container.children[i].insertAdjacentElement('beforeend', object);\n                                                        if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                                        object.addEventListener('load', (_)=>{\n                                                            let svg = object.contentDocument;\n                                                            svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\n                                                            if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                                this.tabulatorAnimation(object);\n                                                                object.classList.add('tabulator');\n                                                            }\n                                                        });\n                                                    }\n                                                    overallIndexes.push([\n                                                        i,\n                                                        tabulatorIndexes\n                                                    ]);\n                                                }\n                                                this.changeSelectedInput();\n                                            }\n                                        };\n                                    }\n                                    this.enterMode = false;\n                                } else this.enterMode = true;\n                                const transaction = this.database.transaction('inflected vocabulary', 'readwrite');\n                                const objectStore = transaction.objectStore('inflected vocabulary');\n                                const req = objectStore.put(this.currentWord, this.wordIndex + 1);\n                                req.onerror = ()=>console.error(req.error);\n                                setTimeout((_)=>{\n                                    for(let i = 0; i < this.container.childElementCount; i++)this.container.children[i].classList.remove('savedElement');\n                                }, 250);\n                            }\n                            return;\n                        } else if (event.key === 'ArrowUp') {\n                            if (this.tabMode) this.cancelTabMode();\n                            if (this.inputIndex > 6) {\n                                this.inputIndex -= 3;\n                                this.changeSelectedInput();\n                            }\n                            return;\n                        } else if (event.key === 'Backspace') {\n                            let inp = this.splitMode && this.inputSubIndex != undefined ? this.selectedInput.children[this.inputSubIndex] : this.selectedInput;\n                            if (inp.lastElementChild) {\n                                inp.lastElementChild.remove();\n                                let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                let n = Math.floor(this.inputIndex / 3) - 1;\n                                let index;\n                                if (this.splitMode) {\n                                    if (this.inputSubIndex == 0) index = array[n].search($b9cb672cfbcff24a$var$F);\n                                    else if (this.inputSubIndex === 1) index = array[n].search($b9cb672cfbcff24a$var$N);\n                                    else index = array[n].length;\n                                }\n                                if (!this.splitMode && array[n].slice(-5) === '^tab^') {\n                                    array[n] = array[n].slice(0, array[n].length - 6);\n                                    if (this.tabCount > 1) this.tabCount--;\n                                    this.tabMode = !this.tabMode;\n                                    inp.classList.add('tab');\n                                    if (!this.tabMode) inp.classList.remove('tab');\n                                } else if (this.splitMode && index != -1 && index !== undefined) {\n                                    if (array[n].slice(index - 5, index) === '^tab^') {\n                                        array[n] = array[n].slice(0, index - 6) + array[n].slice(index);\n                                        if (this.tabCount > 1) this.tabCount--;\n                                        this.tabMode = !this.tabMode;\n                                        inp.classList.add('tab');\n                                        if (!this.tabMode) inp.classList.remove('tab');\n                                    } else array[n] = array[n].slice(0, index - 1) + array[n].slice(index);\n                                } else array[n] = array[n].slice(0, array[n].length - 1);\n                                Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                    value: array\n                                });\n                                this.keys--;\n                                if (this.tabMode) this.tabulator = this.tabulator.slice(0, this.tabulator.length - 1);\n                            } else if (this.tabMode) this.cancelTabMode();\n                            let pad = this.splitMode ? this.splitPadding[this.inputIndex][this.inputSubIndex] : this.padding[this.inputIndex];\n                            if (this.automaticPaddingAdjustment && pad > inp.offsetHeight * 0.05) {\n                                let object = inp.lastElementChild;\n                                if (!object) return;\n                                let w = Math.round((inp.getBoundingClientRect().width - parseFloat(window.getComputedStyle(inp).paddingLeft) - parseFloat(window.getComputedStyle(inp).paddingRight)) * 100) / 100;\n                                let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n                                let h = w / this.keys * aspectRatio;\n                                let padding = Math.max((inp.getBoundingClientRect().height - h) / 2, inp.offsetHeight * 0.05);\n                                if (this.splitMode) {\n                                    this.splitPadding[this.inputIndex][this.inputSubIndex] = Math.max(padding, 1);\n                                    inp.style.padding = `${this.splitPadding[this.inputIndex][this.inputSubIndex]}px 0.25vw`;\n                                } else {\n                                    this.padding[this.inputIndex] = Math.max(padding, 1);\n                                    inp.style.padding = `${this.padding[this.inputIndex]}px 0.25vw`;\n                                }\n                            }\n                            return;\n                        } else if (event.key === '#') {\n                            this.command = '';\n                            this.commandMode = true;\n                        } else if (event.key === 'Tab') {\n                            let inp = this.splitMode ? this.selectedInput.children[this.inputSubIndex] : this.selectedInput;\n                            if (!this.tabMode) {\n                                if (this.tabCount >= 2) {\n                                    let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                    let n = Math.floor(this.inputIndex / 3) - 1;\n                                    let word = this.splitMode ? array[n].split($b9cb672cfbcff24a$var$mfORn)[this.inputSubIndex + 1] : array[n];\n                                    let index;\n                                    while(word.search('\\\\^tab\\\\^') !== -1){\n                                        let c = word.search('\\\\^tab\\\\^');\n                                        if (index === undefined) index = c;\n                                        word = word.slice(0, c) + word.slice(c + 5, word.length);\n                                    }\n                                    word = word.slice(0, index) + '^tab^' + word.slice(index, word.length);\n                                    Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                        value: array\n                                    });\n                                    let tabulatorStyle = false;\n                                    for(let i = 0; i < word.length; i++){\n                                        if (word.slice(i, i + 5) === '^tab^') {\n                                            tabulatorStyle = !tabulatorStyle;\n                                            i += 4;\n                                        } else if (inp.children[i > index ? i - 5 : i]) {\n                                            let object = inp.children[i > index ? i - 5 : i];\n                                            let svg = object.contentDocument;\n                                            svg.querySelector('#tspan7').innerHTML = word.charAt(i);\n                                            if (tabulatorStyle) {\n                                                this.tabulatorAnimation(object);\n                                                object.classList.add('tabulator');\n                                            } else object.classList.remove('tabulator');\n                                        }\n                                    }\n                                    this.tabulator = word.slice(index + 5, word.length);\n                                    this.tabCount = 1;\n                                    this.tabMode = true;\n                                    inp.classList.add('tab');\n                                    let splitto = this.splitMode ? array[n].split($b9cb672cfbcff24a$var$mfORn).slice(1) : undefined;\n                                    if (splitto) splitto[this.inputSubIndex] = word;\n                                    array[n] = !this.splitMode ? word : `^^m^^${splitto[0]}^^f^^${splitto[1]}^^n^^${splitto[2]}`;\n                                } else {\n                                    this.tabMode = true;\n                                    inp.classList.add('tab');\n                                    let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                    let n = Math.floor(this.inputIndex / 3) - 1;\n                                    let index;\n                                    if (this.splitMode) {\n                                        if (this.inputSubIndex == 0) index = array[n].search($b9cb672cfbcff24a$var$F);\n                                        else if (this.inputSubIndex == 1) index = array[n].search($b9cb672cfbcff24a$var$N);\n                                        else index = array[n].length;\n                                    }\n                                    if (index !== -1 && index !== undefined) array[n] = array[n].slice(0, index) + \"^tab^\" + array[n].slice(index);\n                                    else array[n] += \"^tab^\";\n                                    Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                        value: array\n                                    });\n                                    this.tabCount++;\n                                }\n                            } else if (this.tabulator.length > 0) {\n                                let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                let n = Math.floor(this.inputIndex / 3) - 1;\n                                let index;\n                                if (this.splitMode) {\n                                    if (this.inputSubIndex == 0) index = array[n].search($b9cb672cfbcff24a$var$F);\n                                    else if (this.inputSubIndex == 1) index = array[n].search($b9cb672cfbcff24a$var$N);\n                                    else index = array[n].length;\n                                }\n                                let phrase = this.splitMode ? array[n].slice(index - 5, index) : array[n].slice(-5);\n                                if (phrase != '^tab^') {\n                                    this.tabMode = false;\n                                    inp.classList.remove('tab');\n                                    if (this.splitMode && this.inputSubIndex != undefined) array[n] = array[n].slice(0, index) + \"^tab^\" + array[n].slice(index);\n                                    else array[n] += \"^tab^\";\n                                    Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                        value: array\n                                    });\n                                    this.tabCount++;\n                                } else {\n                                    const previous = array[n];\n                                    const ID = this.inputIndex;\n                                    const subID = this.inputSubIndex;\n                                    let objectCount = 0;\n                                    let objectsLoaded = 0;\n                                    if (this.splitMode && this.inputSubIndex != undefined) array[n] = array[n].slice(0, index) + this.tabulator + \"^tab^\" + array[n].slice(index);\n                                    else array[n] += this.tabulator + \"^tab^\";\n                                    const word = this.splitMode ? array[n].split($b9cb672cfbcff24a$var$mfORn).at(this.inputSubIndex + 1) : array[n];\n                                    if (this.keys + this.tabulator.length <= Math.floor(inp.clientWidth / (inp.clientHeight - parseFloat(inp.style.padding))) || this.keys + this.tabulator.length > Math.floor(inp.clientWidth / (inp.clientHeight - parseFloat(inp.style.padding))) && this.automaticPaddingAdjustment) for(let i = 0; i < this.tabulator.length; i++){\n                                        let object = document.createElement('object');\n                                        object.data = './keys/Reversion_T.svg';\n                                        object.id = `key${this.keys}-inp${this.inputIndex}${this.splitMode ? `-sub${this.inputSubIndex}` : ''}`;\n                                        object.style.height = `100%`;\n                                        objectCount++;\n                                        inp.insertAdjacentElement('beforeend', object);\n                                        object.hidden = true;\n                                        object.addEventListener('load', (_)=>{\n                                            object.hidden = false;\n                                            this.tabulatorAnimation(object);\n                                            object.classList.add('tabulator');\n                                            let svg = object.contentDocument;\n                                            svg.querySelector('#tspan7').innerHTML = this.tabulator.charAt(i);\n                                            this.keys++;\n                                            objectsLoaded++;\n                                            if (objectsLoaded === objectCount && this.automaticPaddingAdjustment) {\n                                                this.adjustInputWidth(inp, word, false);\n                                                let pad = this.splitMode ? this.splitPadding[ID][subID] : this.padding[ID];\n                                                inp.style.padding = `${pad}px 0.25vw`;\n                                                inp.style.border = 'none';\n                                            }\n                                        });\n                                    }\n                                    else {\n                                        for(let ii = 0; ii < this.keys; ii++){\n                                            this.failureAnimation(inp.children[ii]);\n                                            array[n] = previous;\n                                        }\n                                        return;\n                                    }\n                                    Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                        value: array\n                                    });\n                                    this.tabMode = false;\n                                    this.tabCount++;\n                                    inp.classList.remove('tab');\n                                }\n                            } else {\n                                this.tabCount = 0;\n                                this.cancelTabMode();\n                            }\n                            return;\n                        } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) return;\n                    }\n                    this.enterMode = false;\n                    let inp = this.splitMode && this.inputSubIndex != undefined ? this.selectedInput.children[this.inputSubIndex] : this.selectedInput;\n                    let object = document.createElement('object');\n                    object.data = './keys/Reversion_T.svg';\n                    object.id = `key${this.keys}-inp${this.inputIndex}${this.splitMode ? `-sub${this.inputSubIndex}` : ''}`;\n                    object.style.height = `100%`;\n                    inp.insertAdjacentElement('beforeend', object);\n                    object.hidden = true;\n                    object.addEventListener('load', (_)=>{\n                        object.hidden = false;\n                        let width = Math.round(object.getBoundingClientRect().width * 100) / 100;\n                        object.hidden = true;\n                        let w = Math.round((inp.getBoundingClientRect().width - parseFloat(window.getComputedStyle(inp).paddingLeft) - parseFloat(window.getComputedStyle(inp).paddingRight) - parseFloat(window.getComputedStyle(inp).borderLeftWidth) - parseFloat(window.getComputedStyle(inp).borderRightWidth)) * 100) / 100;\n                        if (!this.automaticPaddingAdjustment && this.keys + 1 > w / width) {\n                            object.remove();\n                            for(let i = 0; i < this.keys; i++)this.failureAnimation(this.selectedInput.children[i]);\n                            return;\n                        } else if (this.automaticPaddingAdjustment) {\n                            object.hidden = false;\n                            let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n                            object.hidden = true;\n                            let h = w / (this.keys + 1) * aspectRatio;\n                            let padding = (inp.getBoundingClientRect().height - h) / 2;\n                            if (padding > inp.getBoundingClientRect().height / 2 * 0.85) {\n                                object.remove();\n                                for(let i = 0; i < this.keys; i++)this.failureAnimation(inp.children[i]);\n                                return;\n                            } else {\n                                const prev = this.splitMode ? this.splitPadding[this.inputIndex][this.inputSubIndex] : this.padding[this.inputIndex];\n                                if (this.splitMode && this.inputSubIndex != undefined) this.splitPadding[this.inputIndex][this.inputSubIndex] = Math.max(padding, inp.offsetHeight * 0.05);\n                                else this.padding[this.inputIndex] = Math.max(padding, inp.offsetHeight * 0.05);\n                                this.animatedBorderWidth = parseFloat(window.getComputedStyle(inp).borderTopWidth);\n                                let now = this.splitMode ? this.splitPadding[this.inputIndex][this.inputSubIndex] : this.padding[this.inputIndex];\n                                if (prev !== now) this.automaticPaddingAnimation(inp, true, true);\n                            }\n                        }\n                        setTimeout((_)=>{\n                            object.hidden = false;\n                        }, 10);\n                        let svg = object.contentDocument;\n                        if (event.key === '<') svg.querySelector('#tspan7').innerHTML = '&lt;';\n                        else if (event.key === '&') svg.querySelector('#tspan7').innerHTML = '&amp;';\n                        else svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\n                        if (!this.commandMode) {\n                            let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                            let n = Math.floor(this.inputIndex / 3) - 1;\n                            let index;\n                            if (this.splitMode) {\n                                if (this.inputSubIndex == 0) index = array[n].search($b9cb672cfbcff24a$var$F);\n                                else if (this.inputSubIndex == 1) index = array[n].search($b9cb672cfbcff24a$var$N);\n                                else index = array[n].length;\n                            }\n                            if (index !== -1 && index !== undefined) array[n] = array[n].slice(0, index) + event.key + array[n].slice(index);\n                            else array[n] += event.key;\n                            Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                value: array\n                            });\n                            if (this.tabMode) {\n                                if (this.splitMode && this.inputSubIndex != undefined && array[n].split($b9cb672cfbcff24a$var$mfORn)[this.inputSubIndex + 1].slice(-6, -1) === '^tab^' || !this.splitMode && array[n].slice(-6, -1) === '^tab^') this.tabulator = '';\n                                this.tabulator += event.key;\n                                this.tabulatorAnimation(object);\n                                object.classList.add('tabulator');\n                            } else this.idleAnimation(object);\n                        } else {\n                            this.command += event.key;\n                            (0, $543d6d2a56ed7d8d$export$e73a7799776ae73d).commandAnimation(object);\n                        }\n                        this.keys++;\n                    });\n                };\n                document.addEventListener('keydown', this.keydownFunction);\n                window.addEventListener('keydown', (event)=>{\n                    if (event.key === 'Tab') {\n                        event.preventDefault();\n                        this.container.focus();\n                    } else if (event.key === '/') {\n                        event.preventDefault();\n                        this.container.focus();\n                    }\n                });\n                break;\n            default:\n                break;\n        }\n    }\n    empty(param) {\n        let l = param.includes('verb') ? 3 : 6;\n        return new Array(l).fill('');\n    }\n    changeSelectedInput() {\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n            this.selectedInput.style.padding = `${this.padding[parseInt(this.selectedInput.id.slice(3, 5))]}px ${0.05 * this.selectedInput.offsetHeight}px`;\n            this.selectedInput.style.transition = 'none';\n            this.selectedInput.style.border = 'none';\n        }\n        document.querySelectorAll('.selectedElement').forEach((elem)=>elem.classList.remove('selectedElement'));\n        this.selectedInput = document.getElementById(`div${this.inputIndex}`);\n        let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n        let n = Math.floor(this.inputIndex / 3) - 1;\n        let word = this.splitMode ? array[n].split($b9cb672cfbcff24a$var$mfORn)[this.inputSubIndex + 1] : array[n];\n        let regex = new RegExp('\\\\^tab\\\\^', 'g');\n        let matches = word.match(regex);\n        this.tabCount = matches ? matches.length : 0;\n        let inp = this.splitMode ? this.selectedInput.children[this.inputSubIndex] : this.selectedInput;\n        if (!matches ? false : matches.length % 2 === 0) inp.classList.remove('tab');\n        this.selectedInput.classList.add('selectedElement');\n        this.keys = this.selectedInput.childElementCount;\n        if (this.splitMode && this.inputSubIndex != undefined) {\n            inp.classList.add('selectedElement');\n            this.keys = inp.childElementCount;\n        }\n        if (this.automaticPaddingAdjustment) {\n            this.adjustInputWidth(inp, word, false);\n            this.automaticPaddingAnimation(inp);\n        } else this.paddingAnimation(this.selectedInput);\n    }\n    cancelTabMode() {\n        // Simplified using COPILOT\n        let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n        let n = Math.floor(this.inputIndex / 3) - 1;\n        let word = array[n];\n        if (this.splitMode && this.inputSubIndex != undefined) word = word.split($b9cb672cfbcff24a$var$mfORn).at(this.inputSubIndex + 1);\n        if (word.includes('^tab^')) {\n            let start = word.indexOf('^tab^');\n            word = word.slice(0, start) + word.slice(start + 5);\n            let end = word.indexOf('^tab^');\n            if (end != -1) word = word.slice(0, end) + word.slice(end + 5);\n            else end = word.length;\n            let tabbedContent = word.slice(start, end);\n            for(let i = 0; i < tabbedContent.length; i++)if (this.splitMode && this.inputSubIndex != undefined) this.selectedInput.children[this.inputSubIndex].children[start].remove();\n            else this.selectedInput.children[start].remove();\n            // not the problem\n            if (this.splitMode && this.inputSubIndex != undefined) {\n                let splitto = array[n].split($b9cb672cfbcff24a$var$mfORn).slice(1);\n                splitto[this.inputSubIndex] = word.slice(0, start) + word.slice(end + 5);\n                array[n] = `^^m^^${splitto[0]}^^f^^${splitto[1]}^^n^^${splitto[2]}`;\n                if (this.automaticPaddingAdjustment) this.adjustInputWidth(this.selectedInput.children[this.inputSubIndex], splitto[this.inputSubIndex], false);\n            } else {\n                array[n] = word.slice(0, start) + word.slice(end + 5);\n                if (this.automaticPaddingAdjustment) this.adjustInputWidth(this.selectedInput, array[n], false);\n            }\n            this.keys -= tabbedContent.length;\n        }\n        this.tabMode = false;\n        let inp = this.splitMode && this.inputSubIndex != undefined ? this.selectedInput.children[this.inputSubIndex] : this.selectedInput;\n        inp.classList.remove('tab');\n    }\n    findMostUsedTabulator(inflectedWord) {\n        let tabulators = inflectedWord.singular.map((word)=>word.split(/\\^tab\\^/g).filter((v, i)=>i % 2 === 1)).concat(inflectedWord.plural.map((word)=>word.split(/\\^tab\\^/g).filter((v, i)=>i % 2 === 1)));\n        let tabs = [];\n        tabulators.forEach((wordList)=>wordList.forEach((word)=>tabs.push(word)));\n        let checkedTabs = [];\n        tabs.forEach((tab)=>{\n            if (!checkedTabs.map((t)=>t[0]).includes(tab)) checkedTabs.push([\n                tab,\n                1\n            ]);\n            else {\n                let i = checkedTabs.findIndex((t)=>t[0] === tab);\n                checkedTabs[i] = [\n                    tab,\n                    checkedTabs[i][1] + 1\n                ];\n            }\n        });\n        for(let i = 0; i < checkedTabs.length; i++)checkedTabs.sort((a, b)=>b[1] - a[1]);\n        return checkedTabs.length ? checkedTabs[0][0] : undefined;\n    }\n    startNewTrainingRound(param) {\n        this.splitMode = false;\n        document.querySelectorAll('.split').forEach((el)=>el.classList.remove('split'));\n        let vocab = this.vocabulary.filter((w)=>w.verb === param.includes('verb'));\n        if (vocab.length === 0) {\n            setTimeout((_)=>alert(`Keine ${param.includes('verb') ? 'Konjugationen' : 'Deklinationen'}!`), 250);\n            return;\n        } else if (vocab.filter((w)=>!isEmpty(w)).length === 0) {\n            setTimeout((_)=>alert(`Nur leere ${param.includes('verb') ? 'Konjugationen' : 'Deklinationen'}!`), 250);\n            return;\n        }\n        function isEmpty(w) {\n            return w.singular.filter((s)=>s.replaceAll(/\\^\\^m\\^\\^|\\^\\^f\\^\\^|\\^\\^n\\^\\^/g, '').trim() === '').length === (!param.includes('verb') ? 6 : 3) && w.plural.filter((p)=>p.replaceAll(/\\^\\^m\\^\\^|\\^\\^f\\^\\^|\\^\\^n\\^\\^/g, '').trim() === '').length === (!param.includes('verb') ? 6 : 3);\n        }\n        this.round++;\n        // Optimized using COPILOT\n        const validWords = vocab.filter((w)=>!isEmpty(w));\n        const overallProbability = validWords.reduce((sum, word)=>sum + word.probability, 0);\n        const randomNumber = Math.random() * overallProbability;\n        this.failures = 0;\n        let runningSum = 0;\n        for(let i = 0; i < this.vocabulary.length; i++){\n            const word = this.vocabulary[i];\n            if (!isEmpty(word) && word.verb === param.includes('verb')) {\n                runningSum += word.probability;\n                if (runningSum >= randomNumber) {\n                    this.currentWord = word;\n                    this.currentWordIndex = i;\n                    break;\n                }\n            }\n        }\n        this.tabulator = this.findMostUsedTabulator(this.currentWord);\n        document.querySelectorAll('.editable').forEach((div)=>{\n            div.innerHTML = '';\n            div.classList.remove('redShadowDesign');\n            div.classList.remove('greenShadowDesign');\n            div.classList.remove('known-case');\n            div.classList.add('shadowDesign');\n        });\n        // - \n        let knownCase;\n        let rn;\n        let randi;\n        let v = this.v / 3;\n        do {\n            rn = Math.floor(Math.random() * (param.includes('verb') ? 6 : 12));\n            knownCase = Object.values(this.vocabulary[this.currentWordIndex])[rn > 5 - v ? 1 : 0][rn > 5 - v ? rn - 6 + v : rn];\n            if (knownCase.search($b9cb672cfbcff24a$var$mfANDn) != -1) {\n                randi = Math.floor(Math.random() * 2);\n                knownCase = knownCase.split($b9cb672cfbcff24a$var$mfORn)[randi + 1];\n            }\n        }while (knownCase === '');\n        knownCase = knownCase.replaceAll('^tab^', '');\n        let specificationDiv = document.getElementById(`div${rn > 5 - v ? 2 + (rn - 5 + v) * 3 : 1 + (rn + 1) * 3}`);\n        specificationDiv.classList.add('known-case');\n        specificationDiv.innerHTML = `<span>${knownCase}</span>`;\n        if (document.getElementById('div4') === specificationDiv) {\n            this.inputIndex = 7;\n            this.changeSelectedInput();\n        }\n        let array = this.empty(param);\n        array[rn > 5 - v ? rn - 6 + v : rn] = knownCase;\n        this.currentWord = {\n            singular: rn <= 5 - v ? array : this.empty(param),\n            plural: rn > 5 - v ? array : this.empty(param),\n            verb: param.includes('verb'),\n            probability: this.currentWord.probability\n        };\n        this.result = {\n            singular: param.includes('verb') ? [\n                undefined,\n                undefined,\n                undefined\n            ] : [\n                undefined,\n                undefined,\n                undefined,\n                undefined,\n                undefined,\n                undefined\n            ],\n            plural: param.includes('verb') ? [\n                undefined,\n                undefined,\n                undefined\n            ] : [\n                undefined,\n                undefined,\n                undefined,\n                undefined,\n                undefined,\n                undefined\n            ]\n        };\n        if (randi || randi === 0) this.emptySplit(knownCase, randi);\n    }\n    compare(string1, string2) {\n        return string1.replaceAll('^tab^', '') === string2.replaceAll('^tab^', '');\n    }\n    compareObjects(obj1, obj2) {\n        let object1 = JSON.parse(JSON.stringify(obj1));\n        let object2 = JSON.parse(JSON.stringify(obj2));\n        object1.singular.forEach((word, i)=>{\n            object1.singular[i] = word.replaceAll('^tab^', '');\n        });\n        object1.plural.forEach((word, i)=>{\n            object1.plural[i] = word.replaceAll('^tab^', '');\n        });\n        object2.singular.forEach((word, i)=>{\n            object2.singular[i] = word.replaceAll('^tab^', '');\n        });\n        object2.plural.forEach((word, i)=>{\n            object2.plural[i] = word.replaceAll('^tab^', '');\n        });\n        return Object.values(object1).slice(0, 3).toLocaleString() === Object.values(object2).slice(0, 3).toLocaleString();\n    }\n    failureAnimation(object) {\n        if (!object) return;\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = [\n            {\n                stroke: this.badColor,\n                offset: 0.025\n            },\n            {\n                rotate: \"10deg z\",\n                offset: 0.25\n            },\n            {\n                rotate: \"0deg z\",\n                offset: 0.5\n            },\n            {\n                rotate: \"-10deg z\",\n                offset: 0.75,\n                stroke: this.badColor\n            },\n            {\n                stroke: \"#eeeeeeff\",\n                offset: 0.925\n            },\n            {\n                rotate: \"0deg z\",\n                offset: 1\n            }\n        ];\n        let animationOptions = {\n            duration: 500\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    idleAnimation(object) {\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#8f8f8f',\n                '#fff',\n                '#eeeeeeff'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 250\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    tabulatorAnimation(object) {\n        if (!object) return;\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#eeeeeeff',\n                this.badColor === 'rgb(186, 2, 70)' ? '#4400ff' : 'rgb(211, 0, 0)'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 250,\n            fill: 'forwards'\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    successAnimation(object) {\n        if (!object) return;\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#eeeeeeff',\n                '#08a000',\n                '#eeeeeeff'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 500\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    deletionAnimation(element, duration, direction) {\n        if (element.tagName === 'OBJECT') {\n            let object = element;\n            let svg = object.contentDocument;\n            let rect = svg.querySelector('#mainRect');\n            let text = svg.querySelector('#text7');\n            let animationKeyframes = {\n                stroke: [\n                    object.classList.contains('tabulator') ? this.badColor === 'rgb(186, 2, 70)' ? '#4400ff' : 'rgb(211, 0, 0)' : '#eeeeeeff',\n                    this.badColor\n                ],\n                offset: [\n                    0,\n                    1\n                ]\n            };\n            let animationOptions = {\n                duration: duration,\n                fill: 'forwards',\n                direction: direction\n            };\n            rect.animate(animationKeyframes, animationOptions);\n            text.animate(animationKeyframes, animationOptions);\n        } else if (element.tagName === 'BUTTON') {\n            let animationKeyframes = {\n                backgroundColor: [\n                    this.badColor === 'rgb(186, 2, 70)' ? '#ff0000' : this.badColor,\n                    this.badColor === 'rgb(186, 2, 70)' ? '#ba0303' : '#ad0668'\n                ],\n                boxShadow: [\n                    `0 0 0 0 ${this.badColor === 'rgb(186, 2, 70)' ? '#ba0303' : '#ad0668'}`,\n                    `0 0 1vh 1vh ${this.badColor === 'rgb(186, 2, 70)' ? '#ff0000' : this.badColor}`\n                ],\n                color: [\n                    '#ffffff',\n                    '#eeffff'\n                ],\n                border: [\n                    'none',\n                    'none'\n                ],\n                offset: [\n                    0,\n                    1\n                ]\n            };\n            let animationOptions = {\n                duration: duration,\n                fill: 'forwards',\n                direction: direction\n            };\n            element.animate(animationKeyframes, animationOptions);\n        }\n    }\n    paddingAnimation(input) {\n        if (input.classList.contains('known-case')) return;\n        let id = parseInt(input.id.slice(3, 5));\n        let borderLeft = 0.05 * input.offsetHeight;\n        input.style.padding = '0';\n        input.style.willChange = 'border-width';\n        input.style.borderTopWidth = `${this.padding[id]}px`;\n        input.style.borderRightWidth = `${borderLeft}px`;\n        input.style.borderBottomWidth = `${this.padding[id]}px`;\n        input.style.borderLeftWidth = `${borderLeft}px`;\n        input.style.borderStyle = 'solid';\n        input.style.borderColor = this.borderColor;\n        input.style.paddingLeft = `${borderLeft - parseInt(window.getComputedStyle(input).borderLeftWidth.slice(0, -2))}px`;\n        input.style.paddingTop = this.padding[id] - parseFloat(window.getComputedStyle(input).borderTopWidth.slice(0, -2)) + 'px';\n        input.style.paddingRight = borderLeft - parseFloat(window.getComputedStyle(input).borderRightWidth.slice(0, -2)) + 'px';\n        input.style.paddingBottom = this.padding[id] - parseFloat(window.getComputedStyle(input).borderBottomWidth.slice(0, -2)) + 'px';\n        input.style.transition = 'none';\n        input.style.paddingLeft = borderLeft - parseInt(window.getComputedStyle(input).borderLeft.slice(0, -2)) + 'px';\n        setTimeout((_)=>{\n            input.style.borderColor = 'transparent';\n            input.style.transition = \"border-color 1.5s\";\n            this.timeout = setTimeout((_)=>{\n                input.style.padding = `${this.padding[id]}px ${0.05 * input.offsetHeight}px`;\n                input.style.border = 'none';\n                input.style.transition = 'none';\n            }, 1500);\n        }, 1);\n    }\n    automaticPaddingAnimation(input, adjustment, cancelable) {\n        cancelable = cancelable === undefined || cancelable === true;\n        clearInterval(this.firstInterval);\n        clearInterval(this.secondInterval);\n        clearTimeout(this.firstTimeout);\n        if (cancelable && this.animatedInputIndex != undefined && adjustment === undefined) {\n            let inp = document.querySelector(`#div${this.animatedInputIndex}`);\n            inp = this.splitMode && this.animatedInputSubIndex != undefined ? inp.children[this.animatedInputSubIndex] : inp;\n            let paddingLeft = 0.05 * inp.offsetHeight;\n            let paddingTop = this.splitMode ? this.splitPadding[this.animatedInputIndex][this.animatedInputSubIndex] : this.padding[this.animatedInputIndex];\n            inp.style.padding = `${paddingTop}px ${paddingLeft}px`;\n            inp.style.border = 'none';\n        }\n        if (input.classList.contains('known-case')) return;\n        let id;\n        let count;\n        if (this.splitMode) {\n            if (input.parentElement == this.container) return;\n            id = parseInt(input.parentElement?.id.slice(3));\n            for(let q = 0; q < input.parentElement?.childElementCount; q++)if (input.parentElement.children[q] === input) {\n                count = q;\n                break;\n            }\n        } else id = parseInt(input.id.slice(3));\n        let borderLeft = 0.05 * input.offsetHeight;\n        let newPadding = this.splitMode ? this.splitPadding[id][count] : this.padding[id];\n        let borderWidth = adjustment ? this.animatedBorderWidth : 0;\n        let $tepSize = (newPadding - borderWidth) / 20;\n        let stepSize = newPadding / 20;\n        let step = 0;\n        let timeout1 = adjustment ? 1 : 12.5;\n        let timeout2 = 12.5;\n        let timeout;\n        let interval1;\n        let interval2;\n        if (cancelable) this.firstInterval = setInterval(intervalFunction1.bind(this), timeout1);\n        else interval1 = setInterval(intervalFunction1.bind(this), timeout1);\n        window.addEventListener('resize', resizeHandler.bind(this), {\n            passive: true\n        });\n        function intervalFunction1() {\n            for(let i = 0; i < (adjustment ? 4 : 1); i++){\n                this.animatedInputIndex = id;\n                this.animatedInputSubIndex = count;\n                borderWidth += $tepSize;\n                this.animatedBorderWidth = borderWidth;\n                input.style.borderTopWidth = `${borderWidth}px`;\n                input.style.borderRightWidth = `${20 - step === 0 ? borderLeft : borderLeft / (20 - step)}px`;\n                input.style.borderBottomWidth = `${borderWidth}px`;\n                input.style.borderLeftWidth = `${20 - step === 0 ? borderLeft : borderLeft / (20 - step)}px`;\n                input.style.borderStyle = 'solid';\n                input.style.borderColor = this.borderColor;\n                input.style.transition = 'none';\n                let paddingLeft = borderLeft - parseFloat(window.getComputedStyle(input).borderLeftWidth);\n                let paddingTop = newPadding - parseFloat(window.getComputedStyle(input).borderTopWidth);\n                input.style.padding = `${paddingTop}px ${paddingLeft}px`;\n                step++;\n                if (step === 20) {\n                    if (cancelable) {\n                        clearInterval(this.firstInterval);\n                        this.firstTimeout = setTimeout(timeoutFunction.bind(this), timeout1 * 20);\n                    } else {\n                        clearInterval(interval1);\n                        timeout = setTimeout(timeoutFunction.bind(this), timeout1 * 20);\n                    }\n                    break;\n                }\n            }\n        }\n        function timeoutFunction() {\n            if (cancelable) this.secondInterval = setInterval(intervalFunction2.bind(this), timeout2);\n            else interval2 = setInterval(intervalFunction2.bind(this), timeout2);\n        }\n        function intervalFunction2() {\n            borderWidth -= stepSize;\n            this.animatedBorderWidth = borderWidth;\n            input.style.borderTopWidth = `${borderWidth}px`;\n            input.style.borderRightWidth = `${20 - step === 0 ? borderLeft : borderLeft / (20 - step)}px`;\n            input.style.borderBottomWidth = `${borderWidth}px`;\n            input.style.borderLeftWidth = `${20 - step === 0 ? borderLeft : borderLeft / (20 - step)}px`;\n            input.style.borderStyle = 'solid';\n            input.style.borderColor = this.borderColor;\n            let paddingLeft = borderLeft - parseFloat(window.getComputedStyle(input).borderLeft);\n            let paddingTop = newPadding - parseFloat(window.getComputedStyle(input).borderTop);\n            input.style.padding = `${paddingTop}px ${paddingLeft}px`;\n            step--;\n            if (step === 0) {\n                input.style.border = 'none';\n                input.style.paddingTop = `${newPadding}px`;\n                input.style.paddingRight = `${borderLeft}px`;\n                input.style.paddingBottom = `${newPadding}px`;\n                input.style.paddingLeft = `${borderLeft}px`;\n                window.removeEventListener('resize', resizeHandler.bind(this));\n                clearInterval(cancelable ? this.secondInterval : interval2);\n            }\n        }\n        function resizeHandler() {\n            clearInterval(interval1);\n            clearInterval(interval2);\n            clearTimeout(timeout);\n            let paddingLeft = borderLeft - parseFloat(window.getComputedStyle(input).borderLeft);\n            let paddingTop = newPadding - parseFloat(window.getComputedStyle(input).borderTop);\n            input.style.padding = `${paddingTop}px ${paddingLeft}px`;\n            input.style.border = 'none';\n            input.style.paddingTop = `${newPadding}px`;\n            input.style.paddingRight = `${borderLeft}px`;\n            input.style.paddingBottom = `${newPadding}px`;\n            input.style.paddingLeft = `${borderLeft}px`;\n        }\n    }\n    adjustInputWidth(input, value, animation) {\n        animation = animation === undefined || animation === true;\n        if (input.classList.contains('known-case')) return;\n        let v = value.replaceAll('^tab^', '');\n        if (!input.hasChildNodes() && v.length == 0) {\n            if (this.automaticPaddingAdjustment) {\n                if (input.classList.contains('selected')) input.style.padding = 0.05 * input.offsetHeight + 'px';\n                else input.style.padding = 0.05 * input.offsetHeight + 'px';\n                input.style.border = 'none';\n                this.padding[parseInt(input.id.slice(3))] = 0.05 * input.offsetHeight;\n                if (animation) this.automaticPaddingAnimation(input, false, false);\n                return;\n            }\n            if (animation) this.paddingAnimation(input);\n            return;\n        }\n        let padding;\n        let w = Math.round(input.getBoundingClientRect().width - parseFloat(window.getComputedStyle(input).paddingLeft) - parseFloat(window.getComputedStyle(input).paddingRight) - parseFloat(window.getComputedStyle(input).borderLeftWidth) - parseFloat(window.getComputedStyle(input).borderRightWidth)) * 100 / 100;\n        let object = input.lastElementChild;\n        let id;\n        let count;\n        if (this.splitMode) {\n            if (input.parentElement == this.container) return;\n            id = parseInt(input.parentElement?.id.slice(3));\n            for(let q = 0; q < input.parentElement?.childElementCount; q++)if (input.parentElement.children[q] === input) {\n                count = q;\n                break;\n            }\n        } else id = parseInt(input.id.slice(3));\n        if (!object) return;\n        object.hidden = false;\n        let width = object.getBoundingClientRect().width;\n        if (w / width < v.length || this.automaticPaddingAdjustment) {\n            w = Math.round((input.getBoundingClientRect().width - parseFloat(window.getComputedStyle(input).paddingLeft) - parseFloat(window.getComputedStyle(input).paddingRight) - parseFloat(window.getComputedStyle(input).borderLeftWidth) - parseFloat(window.getComputedStyle(input).borderRightWidth)) * 100) / 100;\n            let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\n            let h = w / v.length * aspectRatio;\n            padding = Math.max((input.getBoundingClientRect().height - h) / 2, input.offsetHeight * 0.05);\n            if (!this.splitMode) this.padding[id] = padding;\n            else this.splitPadding[id][count] = padding;\n            this.animatedBorderWidth = parseFloat(window.getComputedStyle(input).borderTopWidth);\n        }\n        if (!animation) {\n            clearInterval(this.firstInterval);\n            clearInterval(this.secondInterval);\n            clearTimeout(this.firstTimeout);\n            return;\n        }\n        if (this.automaticPaddingAdjustment) this.automaticPaddingAnimation(input, false, false);\n        else this.paddingAnimation(input);\n        return;\n    }\n    splitGenders(currentWord) {\n        this.splitMode = true;\n        this.commandMode = false;\n        let container = document.querySelector('#container');\n        this.automaticPaddingAdjustment = true;\n        let objectCount = 0;\n        let objectsLoaded = 0;\n        for(let i = 3; i < container.childElementCount; i++){\n            let div = container.children[i];\n            let singular = this.currentWord.singular;\n            let tabulatorStyle = false;\n            let plural = this.currentWord.plural;\n            let divs = Array.from({\n                length: 3\n            }, ()=>document.createElement('div'));\n            let z = 0;\n            let k = 0;\n            this.splitPadding.push(new Array(3).fill(undefined));\n            if (i % 3 === 1) {\n                div.classList.add('split');\n                let array = Object.values(currentWord)[i % 3 - 1], n = Math.floor(i / 3) - 1;\n                if (array[n].search($b9cb672cfbcff24a$var$mfANDn) === -1) array[n] = `^^m^^${array[n]}^^f^^^^n^^`;\n                let content = array[n].split($b9cb672cfbcff24a$var$mfORn);\n                content.splice(0, 1);\n                if (singular[n].search($b9cb672cfbcff24a$var$mfANDn) != -1) {\n                    divs[z].innerHTML = '';\n                    for(let ii = 5; ii < singular[n].length; ii++){\n                        if (singular[n].slice(ii, ii + 5) === '^tab^') {\n                            tabulatorStyle = !tabulatorStyle;\n                            ii += 4;\n                        } else if (singular[n].slice(ii, ii + 5) == '^^n^^' || singular[n].slice(ii, ii + 5) == '^^f^^') {\n                            z++;\n                            ii += 4;\n                            k = 0;\n                        } else {\n                            let object = document.createElement('object');\n                            object.addEventListener('load', (_)=>{\n                                let svg = object.contentDocument;\n                                svg.querySelector('#tspan7').innerHTML = singular[n].charAt(ii);\n                                if (object.classList.contains('tabulator')) this.tabulatorAnimation(object);\n                                objectsLoaded++;\n                                if (objectsLoaded === objectCount) {\n                                    document.querySelectorAll('object').forEach((o)=>o.hidden = false);\n                                    for(let i = 4; i < this.container.children.length; i++)if (i % 3 > 0) {\n                                        let div = this.container.children[i];\n                                        let array = Object.values(this.currentWord)[i % 3 - 1];\n                                        let n = Math.floor(i / 3) - 1;\n                                        let splitto = array[n].split($b9cb672cfbcff24a$var$mfORn).slice(1);\n                                        splitto.forEach((s, o)=>{\n                                            let input = div.children[o];\n                                            input.style.padding = 0.05 * input.offsetHeight + 'px';\n                                            this.adjustInputWidth(input, s, true);\n                                        });\n                                    }\n                                }\n                            });\n                            object.data = './keys/Reversion_T.svg';\n                            object.id = `key${k}-inp${i}-sub${z}`;\n                            object.style.height = `100%`;\n                            divs[z].insertAdjacentElement('beforeend', object);\n                            if (tabulatorStyle) object.classList.add('tabulator');\n                            objectCount++;\n                            k++;\n                        }\n                    }\n                }\n                div.innerHTML = '';\n                divs.forEach((d)=>div.appendChild(d));\n            } else if (i % 3 === 2) {\n                div.classList.add('split');\n                let array = Object.values(currentWord)[i % 3 - 1], n = Math.floor(i / 3) - 1;\n                if (array[n].search($b9cb672cfbcff24a$var$mfANDn) === -1) array[n] = `^^m^^${array[n]}^^f^^^^n^^`;\n                let content = array[n].split($b9cb672cfbcff24a$var$mfORn);\n                content.splice(0, 1);\n                if (plural[n].search($b9cb672cfbcff24a$var$mfANDn) != 1) {\n                    this.container.children[i].innerHTML = '';\n                    divs[z].innerHTML = '';\n                    for(let ii = 5; ii < plural[n].length; ii++){\n                        if (plural[n].slice(ii, ii + 5) === '^tab^') {\n                            tabulatorStyle = !tabulatorStyle;\n                            ii += 4;\n                        } else if (plural[n].slice(ii, ii + 5) == '^^n^^' || plural[n].slice(ii, ii + 5) == '^^f^^') {\n                            z++;\n                            ii += 4;\n                        } else {\n                            let object = document.createElement('object');\n                            object.addEventListener('load', (_)=>{\n                                let svg = object.contentDocument;\n                                svg.querySelector('#tspan7').innerHTML = plural[n].charAt(ii);\n                                if (object.classList.contains('tabulator')) this.tabulatorAnimation(object);\n                                objectsLoaded++;\n                                if (objectsLoaded === objectCount) {\n                                    document.querySelectorAll('object').forEach((o)=>o.hidden = false);\n                                    for(let i = 4; i < this.container.children.length; i++)if (i % 3 > 0) {\n                                        let div = this.container.children[i];\n                                        let array = Object.values(this.currentWord)[i % 3 - 1];\n                                        let n = Math.floor(i / 3) - 1;\n                                        let splitto = array[n].split($b9cb672cfbcff24a$var$mfORn).slice(1);\n                                        splitto.forEach((s, o)=>{\n                                            let input = div.children[o];\n                                            input.style.padding = 0.05 * input.offsetHeight + 'px';\n                                            this.adjustInputWidth(input, s, true);\n                                        });\n                                    }\n                                }\n                            });\n                            object.data = './keys/Reversion_T.svg';\n                            object.id = `key${ii}-inp${i}`;\n                            object.style.height = `100%`;\n                            divs[z].insertAdjacentElement('beforeend', object);\n                            objectCount++;\n                            if (tabulatorStyle) object.classList.add('tabulator');\n                        }\n                    }\n                }\n                div.innerHTML = '';\n                divs.forEach((d)=>div.appendChild(d));\n            }\n        }\n        let sel = this.selectedInput.firstChild;\n        sel.classList.add('selectedElement');\n        this.inputSubIndex = 0;\n        this.genderSplitButton.style.display = 'none';\n        this.borderColor = 'orange';\n        this.changeSelectedInput();\n    }\n    emptySplit(knownCase, randi) {\n        for(let i = 3; i < this.container.childElementCount; i++){\n            let div = this.container.children[i];\n            this.splitPadding[i] = new Array(3).fill(undefined);\n            if (div.classList.contains('editable')) {\n                div.classList.add('split');\n                div.innerHTML = Array.from({\n                    length: 3\n                }, (v, ii)=>`<div class=\"shadowDesign ${div.classList.contains('known-case') && ii === randi ? 'known-case' : ''}\">${div.classList.contains('known-case') && ii === randi ? '<span>' + knownCase + '</span>' : ''}</div>`).join('');\n                let array = Object.values(this.currentWord)[i % 3 - 1];\n                let n = Math.floor(i / 3) - 1;\n                array[n] = '^^m^^^^f^^^^n^^';\n                if (div.classList.contains('known-case')) {\n                    let splitto = [\n                        '',\n                        '',\n                        ''\n                    ];\n                    splitto[randi] = knownCase;\n                    array[n] = `^^m^^${splitto[0]}^^f^^${splitto[1]}^^n^^${splitto[2]}`;\n                    div.classList.remove('known-case');\n                }\n            }\n        }\n        this.inputSubIndex = 0;\n        this.inputIndex = 4;\n        this.splitMode = true;\n        this.automaticPaddingAdjustment = true;\n        let singleResult = [];\n        let singleResult2 = [];\n        for(let i = 0; i < 6; i++){\n            singleResult[i] = [\n                undefined,\n                undefined,\n                undefined\n            ];\n            singleResult2[i] = [\n                undefined,\n                undefined,\n                undefined\n            ];\n        }\n        let s = singleResult;\n        let s2 = singleResult2;\n        this.result.singular = s;\n        this.result.plural = s2;\n        this.changeSelectedInput();\n    }\n}\nconst $b9cb672cfbcff24a$var$mfORn = /\\^\\^m\\^\\^|\\^\\^f\\^\\^|\\^\\^n\\^\\^/;\nconst $b9cb672cfbcff24a$var$mfANDn = /\\^\\^m\\^\\^.*\\^\\^f\\^\\^.*\\^\\^n\\^\\^/g;\nconst $b9cb672cfbcff24a$var$F = /\\^\\^f\\^\\^/g;\nconst $b9cb672cfbcff24a$var$N = /\\^\\^n\\^\\^/g;\n\n\nfunction $543d6d2a56ed7d8d$export$331ff980f0d45cff(id, c, width, height) {\n    let div = document.createElement('div');\n    if (id) div.id = id;\n    if (c) div.classList.add(c);\n    if (height && width) {\n        div.style.height = height;\n        div.style.width = width;\n    }\n    return div;\n}\nconst $543d6d2a56ed7d8d$export$abeb1bd8b6f9168 = new (0, $4d277e047e39cff6$export$69a62912f7243a04)();\nconst $543d6d2a56ed7d8d$export$927980128d33596b = new (0, $5e3b93ee4c6a7549$export$d5e53f8bbb738c78)();\nconst $543d6d2a56ed7d8d$export$e73a7799776ae73d = new (0, $b6fe10105ad30798$export$564a2d2b8c542ee9)();\nconst $543d6d2a56ed7d8d$export$82d34e6fb29a1ab3 = new (0, $b9cb672cfbcff24a$export$b0b374fde95c381e)();\nconst $543d6d2a56ed7d8d$export$d12a05a2da93ee73 = new (0, $0605b9bc60daa790$export$70f2439247e54615)();\nfunction $543d6d2a56ed7d8d$export$7aa98d28c688390a() {\n    document.removeEventListener('keydown', $543d6d2a56ed7d8d$export$abeb1bd8b6f9168.keyDownFunction);\n    document.removeEventListener('keydown', $543d6d2a56ed7d8d$export$e73a7799776ae73d.keyDownFunction);\n    document.removeEventListener('keydown', $543d6d2a56ed7d8d$export$d12a05a2da93ee73.keyDownFunction);\n    document.removeEventListener('keydown', $543d6d2a56ed7d8d$export$82d34e6fb29a1ab3.keydownFunction);\n    document.removeEventListener('mouseover', $543d6d2a56ed7d8d$export$e73a7799776ae73d.mouseOverFunction);\n    window.removeEventListener('resize', $543d6d2a56ed7d8d$export$d12a05a2da93ee73.resizeFunction);\n    window.removeEventListener('resize', $543d6d2a56ed7d8d$export$e73a7799776ae73d.resizeFunction);\n    window.removeEventListener('resize', $543d6d2a56ed7d8d$export$82d34e6fb29a1ab3.resizeFunction);\n    window.removeEventListener('resize', $543d6d2a56ed7d8d$export$abeb1bd8b6f9168.resizeFunction);\n}\n\n\n//# sourceMappingURL=index.5e43ba58.js.map\n","import { AddVocabulary, WordBundle } from \"./src/add-vocabulary\";\r\nimport { HomeMenu } from \"./src/home-menu\";\r\nimport { ShowVocabulary } from \"./src/show-vocabulary\";\r\nimport { VocabularyTraining } from \"./src/vocabulary-training\";\r\nimport { InflectVocabulary } from \"./src/inflect-vocabulary\"\r\n\r\nexport function createDiv(id?: string, c?: string, width?: string, height?: string): HTMLDivElement {\r\n    let div = document.createElement('div');\r\n    if (id) div.id = id;\r\n    if (c) div.classList.add(c);\r\n    if (height && width) {\r\n        div.style.height = height;\r\n        div.style.width = width;\r\n    }\r\n    return div;\r\n}\r\n\r\nexport const addVocabulary = new AddVocabulary();\r\n\r\nexport const showVocabulary = new ShowVocabulary();\r\n\r\nexport const training = new VocabularyTraining();\r\n\r\nexport const inflectVocabulary = new InflectVocabulary();\r\n\r\nexport const home = new HomeMenu();\r\n\r\nexport function removeAllEventListeners(): void {\r\n    document.removeEventListener('keydown', addVocabulary.keyDownFunction);\r\n    document.removeEventListener('keydown', training.keyDownFunction);\r\n    document.removeEventListener('keydown', home.keyDownFunction);\r\n    document.removeEventListener('keydown', inflectVocabulary.keydownFunction);\r\n    document.removeEventListener('mouseover', training.mouseOverFunction);\r\n    window.removeEventListener('resize', home.resizeFunction);\r\n    window.removeEventListener('resize', training.resizeFunction);\r\n    window.removeEventListener('resize', inflectVocabulary.resizeFunction);\r\n    window.removeEventListener('resize', addVocabulary.resizeFunction);\r\n}","import { createDiv, home, removeAllEventListeners, training } from \"..\";\r\nimport { VOCABULARY } from \"./vocabulary\";\r\n\r\nexport class AddVocabulary {\r\n    container: HTMLDivElement;\r\n    iconPlaceholder: HTMLDivElement;\r\n    navbar: HTMLDivElement;\r\n    buttonLeft: HTMLButtonElement\r\n    buttonRight: HTMLButtonElement;\r\n    homeButton: HTMLButtonElement;\r\n\r\n    vocabulary: WordBundle[] = [];\r\n    wordIndex = 0;\r\n    database: IDBDatabase;\r\n\r\n    enterMode = false;\r\n    commandMode = false;\r\n    automaticPaddingAdjustment = false;\r\n    command = '';\r\n    padding: [number, number, number, number] = [undefined, undefined, undefined, undefined]\r\n\r\n    inputIndex = 0;\r\n    keys = 0;\r\n    selectedInput: HTMLDivElement;\r\n    currentWord: WordBundle = {\r\n        latinWord: '',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    }\r\n\r\n    firstInterval: number;\r\n    secondInterval: number;\r\n    firstTimeout: number;\r\n    animatedInputIndex: number;\r\n    animatedBorderWidth = 0;\r\n    upgradeNeeded = false;\r\n\r\n    keyDownFunction: EventListener;\r\n    maxCharacters: number;\r\n    buttonLeftFunction: (_: any) => void;\r\n    buttonRightFunction: (_: any) => void;\r\n    secondTimeout: number;\r\n    resizeFunction: () => void;\r\n\r\n    constructor() {\r\n        const request = window.indexedDB.open('Vocabulary', 2);\r\n\r\n        request.addEventListener('error', _ => {\r\n            console.error('There is an error. Have fun fixing it. Details:' + request.error);\r\n        })\r\n\r\n        request.addEventListener('upgradeneeded', () => {\r\n            const db = request.result;\r\n            if (!db.objectStoreNames.contains('vocabulary')) {\r\n                const objectStore = db.createObjectStore(`vocabulary`, { autoIncrement: true });\r\n                objectStore.createIndex(\"latinWord\", \"latinWord\", { unique: false });\r\n                objectStore.createIndex(\"inflections\", \"inflections\", { unique: false });\r\n                objectStore.createIndex(\"germanTranslation\", \"germanTranslation\", { unique: false });\r\n                objectStore.createIndex(\"relatedForeignWords\", \"relatedForeignWords\", { unique: false });\r\n                objectStore.createIndex(\"selected\", \"selected\", { unique: false });\r\n                objectStore.createIndex(\"probability\", \"probability\", { unique: false });\r\n            }\r\n            if (!db.objectStoreNames.contains('inflected vocabulary')) {\r\n                const objectStore2 = db.createObjectStore(`inflected vocabulary`, { autoIncrement: true });\r\n                objectStore2.createIndex(\"singular\", \"singular\", { unique: false });\r\n                objectStore2.createIndex(\"plural\", \"plural\", { unique: false });\r\n                objectStore2.createIndex(\"verb\", \"verb\", { unique: false });\r\n                objectStore2.createIndex(\"probability\", \"probability\", { unique: false });\r\n            }\r\n            this.database = request.result;\r\n            this.upgradeNeeded = true;\r\n        });\r\n\r\n        request.addEventListener('success', _ => {\r\n            this.database = request.result;\r\n\r\n            const transaction = this.database.transaction('vocabulary', 'readonly');\r\n            transaction.onerror = () => console.error(transaction.error);\r\n            const objectStore = transaction.objectStore('vocabulary');\r\n            const req = objectStore.getAll();\r\n            req.onerror = () => console.error(req.error);\r\n            req.onsuccess = () => {\r\n                this.vocabulary = req.result;\r\n                this.wordIndex = this.vocabulary.length;\r\n\r\n                if (this.upgradeNeeded) {\r\n                    this.vocabulary = VOCABULARY.concat(this.vocabulary);\r\n                    const writeTransaction = this.database.transaction('vocabulary', 'readwrite');\r\n                    writeTransaction.onerror = () => console.error(writeTransaction.error);\r\n                    const objSt = writeTransaction.objectStore('vocabulary');\r\n                    this.vocabulary.forEach((word, index) => {\r\n                        const req = objSt.put(word, index + 1);\r\n                        req.onerror = () => console.error(req.error);\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        const notImportantRequest_____yet = window.indexedDB.open('player data', 2);\r\n\r\n        notImportantRequest_____yet.addEventListener('upgradeneeded', (event) => {\r\n            const db = notImportantRequest_____yet.result;\r\n            if (!db.objectStoreNames.contains('versions played')) {\r\n                db.createObjectStore('versions played', { autoIncrement: true });\r\n            }\r\n\r\n            notImportantRequest_____yet.addEventListener('success', (event) => {\r\n                const db = notImportantRequest_____yet.result;\r\n                const transaction = db.transaction('versions played', 'readwrite');\r\n                const objectStore = transaction.objectStore('versions played');\r\n                objectStore.add('Beta Reversion');\r\n\r\n                transaction.oncomplete = () => {\r\n                    console.log('Data added successfully');\r\n                };\r\n\r\n                transaction.onerror = (event) => {\r\n                    console.error('Transaction error:', notImportantRequest_____yet.error);\r\n                };\r\n            });\r\n\r\n            notImportantRequest_____yet.addEventListener('error', (event) => {\r\n                console.error('Database error:', notImportantRequest_____yet.error);\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    modifyDocument(): void {\r\n        const request = window.indexedDB.open('Vocabulary', 2);\r\n\r\n        request.addEventListener('error', _ => {\r\n            console.error('There is an error. Have fun fixing it. Details:' + request.error);\r\n        })\r\n\r\n        request.addEventListener('success', _ => {\r\n            this.database = request.result;\r\n\r\n            const transaction = this.database.transaction('vocabulary', 'readonly');\r\n            transaction.onerror = () => console.error(transaction.error);\r\n            const objectStore = transaction.objectStore('vocabulary');\r\n            const req = objectStore.getAll();\r\n            req.onerror = () => console.error(req.error);\r\n            req.onsuccess = () => {\r\n                this.vocabulary = req.result;\r\n                this.wordIndex = this.vocabulary.length;\r\n\r\n                this.container = document.querySelector('#container');\r\n                this.iconPlaceholder = document.querySelector('#icon-placeholder');\r\n                this.navbar = document.querySelector('#navbar');\r\n\r\n                this.container.style.padding = '0';\r\n                document.body.style.backgroundImage = 'none';\r\n\r\n                document.body.setAttribute('class', '');\r\n                this.container.setAttribute('class', '');\r\n                this.iconPlaceholder.setAttribute('class', '');\r\n                this.navbar.setAttribute('class', '');\r\n\r\n                this.container.innerHTML = '';\r\n                this.iconPlaceholder.innerHTML = '';\r\n                this.navbar.innerHTML = '';\r\n\r\n                document.querySelector('body').classList.add('addVocabularyBody');\r\n\r\n                this.iconPlaceholder.classList.add('addVocabularyIconPlaceholder');\r\n                let addVocabularyIcon = document.createElement('object');\r\n                addVocabularyIcon.data = './add_vocabulary.svg';\r\n                addVocabularyIcon.id = 'addVocabularyIcon';\r\n                this.iconPlaceholder.insertAdjacentElement('beforeend', addVocabularyIcon);\r\n\r\n                this.container.classList.add('addVocabularyContainer');\r\n\r\n                for (let i = 0; i < 4; i++) {\r\n                    let div = createDiv(`div${i}`, 'addVocabularyInput');\r\n                    this.container.appendChild(div);\r\n                    this.padding[i] = 0.05 * div.offsetHeight;\r\n                    div.style.padding = `${0.05 * div.offsetHeight}px 0.5vw`;\r\n                }\r\n\r\n                this.navbar.classList.add('addVocabularyNavbar');\r\n\r\n                this.buttonLeft = document.createElement('button');\r\n                this.buttonLeft.classList.add('navButton');\r\n                this.buttonLeft.innerHTML = '<';\r\n                this.navbar.appendChild(this.buttonLeft);\r\n\r\n                this.homeButton = document.createElement('button');\r\n                this.homeButton.classList.add('navButton');\r\n                let icon = document.createElement('object');\r\n                icon.classList.add('homeIcon');\r\n                icon.data = './home.svg';\r\n                icon.style.height = '9vh';\r\n                icon.addEventListener('load', _ => {\r\n                    icon.contentDocument.addEventListener('click', _ => {\r\n                        removeAllEventListeners();\r\n                        home.modifyDocument();\r\n                    })\r\n                })\r\n                this.homeButton.insertAdjacentElement('beforeend', icon);\r\n                this.navbar.appendChild(this.homeButton);\r\n\r\n                this.buttonRight = document.createElement('button');\r\n                this.buttonRight.classList.add('navButton');\r\n                this.buttonRight.innerHTML = '>';\r\n                this.navbar.appendChild(this.buttonRight);\r\n\r\n                this.type();\r\n            }\r\n        })\r\n\r\n        let animation: number | null = null;\r\n        this.resizeFunction = () => {\r\n            if (animation !== null) {\r\n                clearTimeout(animation);\r\n                animation = null;\r\n            }\r\n\r\n            for (let i = 0; i < this.container.children.length; i++) {\r\n                let div = <HTMLDivElement>this.container.children[i];\r\n                let value = Object.values(this.currentWord)[i];\r\n                this.adjustInputWidth(div, value, false);\r\n            }\r\n\r\n            animation = setTimeout((): void => {\r\n                for (let i = 0; i < this.container.childElementCount; i++) {\r\n                    if (this.automaticPaddingAdjustment) {\r\n                        this.automaticPaddingAnimation(<HTMLDivElement>this.container.children[i], false, false);\r\n                    } else {\r\n                        this.paddingAnimation(<HTMLDivElement>this.container.children[i]);\r\n                    }\r\n                }\r\n            }, 200);\r\n        };\r\n\r\n        window.addEventListener(\"resize\", this.resizeFunction);\r\n    }\r\n\r\n    type(): void {\r\n        for (let i = 0; i < this.container.childElementCount; i++) {\r\n            this.container.children[i].addEventListener('click', _ => {\r\n                if (this.commandMode) {\r\n                    this.command.split('').forEach(_ => {\r\n                        this.selectedInput.lastElementChild.remove();\r\n                        this.keys--;\r\n                    });\r\n                    this.command = '';\r\n                    this.commandMode = false;\r\n                }\r\n                this.inputIndex = i;\r\n                this.changeSelectedInput();\r\n                this.enterMode = false;\r\n            });\r\n        };\r\n\r\n        this.container.children[this.inputIndex].classList.add('selected');\r\n        this.selectedInput = <HTMLDivElement>this.container.children[this.inputIndex];\r\n        this.changeSelectedInput();\r\n\r\n        this.homeButton.addEventListener('click', _ => {\r\n            removeAllEventListeners();\r\n            home.modifyDocument();\r\n        });\r\n\r\n        this.buttonLeft.addEventListener('mousedown', _ => {\r\n            for (let i = 0; i < this.container.childElementCount; i++) {\r\n                this.container.children[i].classList.add('shadow');\r\n                this.buttonLeft.classList.add('clicked');\r\n            }\r\n        })\r\n\r\n        this.buttonRight.addEventListener('mousedown', _ => {\r\n            for (let i = 0; i < this.container.childElementCount; i++) {\r\n                this.container.children[i].classList.add('shadow');\r\n                this.buttonRight.classList.add('clicked');\r\n            }\r\n        })\r\n\r\n        this.buttonLeft.addEventListener('mouseout', _ => {\r\n            for (let i = 0; i < this.container.childElementCount; i++) {\r\n                this.container.children[i].classList.remove('shadow');\r\n                this.buttonLeft.classList.remove('clicked');\r\n            }\r\n        })\r\n\r\n        this.buttonRight.addEventListener('mouseout', _ => {\r\n            for (let i = 0; i < this.container.childElementCount; i++) {\r\n                this.container.children[i].classList.remove('shadow');\r\n                this.buttonRight.classList.remove('clicked');\r\n            }\r\n        });\r\n\r\n        this.buttonLeftFunction = () => {\r\n            if (this.vocabulary[this.wordIndex - 1]) {\r\n                if (\r\n                    Object.values(this.currentWord).filter((value) => value === '').length === 4\r\n                    && this.wordIndex === this.vocabulary.length\r\n                ) {\r\n                    for (let i = 0; i < this.container.childElementCount; i++) {\r\n                        this.container.children[i].classList.remove('shadow');\r\n                    }\r\n\r\n                    this.wordIndex--;\r\n                    if (this.vocabulary[this.wordIndex].latinWord.includes('^con^') && this.vocabulary[this.wordIndex - 1]) {\r\n                        this.wordIndex--;\r\n                    } else if (this.vocabulary[this.wordIndex].latinWord.includes('^con^') && !this.vocabulary[this.wordIndex - 1]) {\r\n                        this.wordIndex++;\r\n                    }\r\n                    this.currentWord = this.vocabulary[this.wordIndex];\r\n\r\n                    for (let i = 0; i < this.container.childElementCount; i++) {\r\n                        let value = <string>Object.values(this.currentWord)[i];\r\n                        value = value.replaceAll(\"^ign^\", \"\");\r\n                        this.container.children[i].innerHTML = '';\r\n                        for (let ii = 0; ii < value.length; ii++) {\r\n                            let object = document.createElement('object');\r\n                            object.data = './keys/Reversion_T.svg';\r\n                            object.id = `key${ii}-inp${i}`;\r\n                            object.style.height = `100%`;\r\n                            this.container.children[i].insertAdjacentElement('beforeend', object);\r\n\r\n                            object.hidden = true;\r\n                            object.addEventListener('load', _ => {\r\n                                let svg = object.contentDocument;\r\n                                if (value.charAt(ii) === '<') {\r\n                                    svg.querySelector('#tspan7').innerHTML = '&lt;';\r\n                                } else if (value.charAt(ii) === '&') {\r\n                                    svg.querySelector('#tspan7').innerHTML = '&amp;';\r\n                                } else {\r\n                                    svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n\r\n                    let objects = this.container.querySelectorAll('object');\r\n                    if (objects.length > 0) {\r\n                        objects[objects.length - 1].addEventListener('load', _ => {\r\n                            objects.forEach(obj => obj.hidden = false);\r\n                            for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                let value = Object.values(this.currentWord)[i];\r\n                                this.adjustInputWidth(<HTMLDivElement>this.container.children[i], value, true);\r\n                            }\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.vocabulary[this.wordIndex] = this.currentWord;\r\n\r\n                    const transaction = this.database.transaction(`vocabulary`, 'readwrite');\r\n                    transaction.onerror = () => console.error(transaction.error);\r\n                    const objectStore = transaction.objectStore(`vocabulary`);\r\n                    const req = objectStore.get(this.wordIndex);\r\n                    req.onerror = () => console.error(req.error);\r\n                    req.onsuccess = () => {\r\n                        for (let i = 0; i < this.container.childElementCount; i++) {\r\n                            this.container.children[i].classList.remove('shadow');\r\n                        }\r\n\r\n                        const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                        idontcare.onerror = () => console.error(idontcare.error);\r\n\r\n                        this.wordIndex--;\r\n                        if (this.vocabulary[this.wordIndex].latinWord.includes('^con^') && this.vocabulary[this.wordIndex - 1]) {\r\n                            this.wordIndex--;\r\n                        } else if (this.vocabulary[this.wordIndex].latinWord.includes('^con^') && !this.vocabulary[this.wordIndex - 1]) {\r\n                            this.wordIndex++;\r\n                        }\r\n\r\n                        this.currentWord = this.vocabulary[this.wordIndex];\r\n                        for (let i = 0; i < this.container.childElementCount; i++) {\r\n                            let value = Object.values(this.currentWord)[i];\r\n                            value = value.replaceAll(\"^ign^\", \"\");\r\n                            this.container.children[i].innerHTML = '';\r\n                            for (let ii = 0; ii < value.length; ii++) {\r\n                                let object = document.createElement('object');\r\n                                object.data = './keys/Reversion_T.svg';\r\n                                object.id = `key${ii}-inp${i}`;\r\n                                object.style.height = `100%`;\r\n                                this.container.children[i].insertAdjacentElement('beforeend', object);\r\n\r\n                                object.hidden = true;\r\n                                object.addEventListener('load', _ => {\r\n                                    let svg = object.contentDocument;\r\n                                    if (value.charAt(ii) === '<') {\r\n                                        svg.querySelector('#tspan7').innerHTML = '&lt;';\r\n                                    } else if (value.charAt(ii) === '&') {\r\n                                        svg.querySelector('#tspan7').innerHTML = '&amp;';\r\n                                    } else {\r\n                                        svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n\r\n                        let objects = this.container.querySelectorAll('object');\r\n                        if (objects.length > 0) {\r\n                            objects[objects.length - 1].addEventListener('load', _ => {\r\n                                objects.forEach(obj => obj.hidden = false);\r\n                                for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                    let value = Object.values(this.currentWord)[i];\r\n                                    this.adjustInputWidth(<HTMLDivElement>this.container.children[i], value);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.buttonLeft.addEventListener('mouseup', this.buttonLeftFunction);\r\n\r\n        this.buttonRightFunction = () => {\r\n            this.buttonRight.classList.remove('clicked');\r\n            if (\r\n                !this.vocabulary[this.wordIndex + 1] ||\r\n                (this.vocabulary[this.wordIndex + 1].latinWord.includes('^con^') && !this.vocabulary[this.wordIndex + 2])\r\n            ) {\r\n                this.vocabulary[this.wordIndex] = this.currentWord;\r\n\r\n                const transaction = this.database.transaction(`vocabulary`, 'readwrite');\r\n                transaction.onerror = () => console.error(transaction.error);\r\n                const objectStore = transaction.objectStore(`vocabulary`);\r\n                const req = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                req.onerror = () => console.error(req.error)\r\n                transaction.oncomplete = () => {\r\n                    for (let i = 0; i < this.container.childElementCount; i++) {\r\n                        this.container.children[i].classList.remove('shadow');\r\n                    }\r\n\r\n                    this.wordIndex++;\r\n                    if (this.vocabulary[this.wordIndex] && this.vocabulary[this.wordIndex].latinWord.includes('^con^')) {\r\n                        this.wordIndex++;\r\n                    }\r\n                    this.keys = 0;\r\n                    this.currentWord = {\r\n                        latinWord: '',\r\n                        inflections: '',\r\n                        germanTranslation: '',\r\n                        relatedForeignWords: '',\r\n                        selected: true,\r\n                        probability: 1\r\n                    };\r\n\r\n                    for (let i = 0; i < this.container.childElementCount; i++) {\r\n                        this.container.children[i].innerHTML = '';\r\n\r\n                        this.inputIndex = 0;\r\n                        this.changeSelectedInput();\r\n                        if (i != 0) {\r\n                            let div = <HTMLDivElement>this.container.children[i];\r\n                            div.classList.remove('selected');\r\n                            div.style.padding = `${this.padding[i]}px 0.5vw`;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (let i = 0; i < this.container.childElementCount; i++) {\r\n                    let value = Object.values(this.currentWord)[i];\r\n                    this.adjustInputWidth(<HTMLDivElement>this.container.children[i], value);\r\n                }\r\n\r\n            } else {\r\n                this.vocabulary[this.wordIndex] = this.currentWord;\r\n\r\n                for (let i = 0; i < this.container.childElementCount; i++) {\r\n                    this.container.children[i].classList.remove('shadow');\r\n                }\r\n\r\n                const transaction = this.database.transaction(`vocabulary`, 'readwrite');\r\n                transaction.onerror = () => console.error(transaction.error);\r\n                const objectStore = transaction.objectStore(`vocabulary`);\r\n                const req = objectStore.get(this.wordIndex);\r\n                req.onerror = () => console.error(req.error);\r\n                req.onsuccess = () => {\r\n                    const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                    idontcare.onerror = () => console.error(idontcare.error);\r\n\r\n                    this.wordIndex++;\r\n                    if (this.vocabulary[this.wordIndex].latinWord.includes('^con^')) {\r\n                        this.wordIndex++;\r\n                    }\r\n                    this.currentWord = this.vocabulary[this.wordIndex];\r\n\r\n                    for (let i = 0; i < this.container.childElementCount; i++) {\r\n                        let value = <string>Object.values(this.currentWord)[i];\r\n                        value = value.replaceAll(\"^ign^\", \"\");\r\n                        this.container.children[i].innerHTML = '';\r\n                        for (let ii = 0; ii < value.length; ii++) {\r\n                            let object = document.createElement('object');\r\n                            object.data = './keys/Reversion_T.svg';\r\n                            object.id = `key${ii}-inp${i}`;\r\n                            object.style.height = `100%`;\r\n                            this.container.children[i].insertAdjacentElement('beforeend', object);\r\n\r\n                            object.hidden = true;\r\n                            object.addEventListener('load', _ => {\r\n                                let svg = object.contentDocument;\r\n                                if (value.charAt(ii) === '<') {\r\n                                    svg.querySelector('#tspan7').innerHTML = '&lt;';\r\n                                } else if (value.charAt(ii) === '&') {\r\n                                    svg.querySelector('#tspan7').innerHTML = '&amp;';\r\n                                } else {\r\n                                    svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    let objects = this.container.querySelectorAll('object');\r\n                    if (objects.length > 0) {\r\n                        objects[objects.length - 1].addEventListener('load', _ => {\r\n                            objects.forEach(obj => obj.hidden = false);\r\n                            for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                let value = Object.values(this.currentWord)[i];\r\n                                this.adjustInputWidth(<HTMLDivElement>this.container.children[i], value);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.buttonRight.addEventListener('mouseup', this.buttonRightFunction);\r\n\r\n        this.keyDownFunction = (event: KeyboardEvent) => {\r\n            let forbiddenCharacters = ['´', '`', '^'];\r\n            if (this.commandMode) {\r\n                if (event.key === 'Enter') {\r\n                    if (this.command.endsWith('%')) {\r\n                        if (this.command.startsWith('#p-')) {\r\n                            let percentage = parseInt(this.command.slice(3, this.command.length - 1));\r\n                            if (percentage >= 0 && percentage <= 100) {\r\n                                this.padding[this.inputIndex] = Math.round(Math.max(Math.min(this.padding[this.inputIndex] * (1 - percentage / 100), this.selectedInput.clientHeight / 2 * 0.85), 1));\r\n                                this.paddingAnimation(this.selectedInput);\r\n                                this.command.split('').forEach(_ => {\r\n                                    this.selectedInput.lastElementChild.remove();\r\n                                    this.keys--;\r\n                                });\r\n\r\n                                this.command = '';\r\n                                this.commandMode = false;\r\n                                return;\r\n                            }\r\n                        } else if (this.command.startsWith('#p+')) {\r\n                            let percentage = parseInt(this.command.slice(3, this.command.length - 1));\r\n                            if (percentage >= 0) {\r\n                                this.padding[this.inputIndex] = Math.round(Math.max(Math.min(this.padding[this.inputIndex] * (1 + percentage / 100), this.selectedInput.clientHeight / 2 * 0.85), 1));\r\n                                this.paddingAnimation(this.selectedInput);\r\n                                this.command.split('').forEach(_ => {\r\n                                    this.selectedInput.lastElementChild.remove();\r\n                                    this.keys--;\r\n                                });\r\n                                this.command = '';\r\n                                this.commandMode = false;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    switch (this.command.toLowerCase()) {\r\n                        case '#<':\r\n                        case '#<-':\r\n                        case '#previous':\r\n                        case '#prvs':\r\n                        case '#vorheriges':\r\n                        case '#voriges':\r\n                        case '#prev':\r\n                            this.command = '';\r\n                            this.commandMode = false;\r\n                            this.buttonLeftFunction(event);\r\n                            return;\r\n                        case '#>':\r\n                        case '#->':\r\n                        case '#next':\r\n                        case '#nxt':\r\n                        case '#nächstes':\r\n                            this.command = '';\r\n                            this.commandMode = false;\r\n                            this.buttonRightFunction(event);\r\n                            return;\r\n                        case '#exit':\r\n                        case '#quit':\r\n                        case '#stop':\r\n                        case '#home':\r\n                        case '#stopp':\r\n                        case '#beenden':\r\n                        case '#hauptmenü':\r\n                        case '#home menu':\r\n                        case '#h':\r\n                            this.command = '';\r\n                            this.commandMode = false;\r\n                            removeAllEventListeners();\r\n                            home.modifyDocument();\r\n                            return;\r\n                        case '#automaticpaddingadjustment':\r\n                        case '#auto':\r\n                        case '#automatic-padding-adjustment':\r\n                        case '#automatische padding-anpassung':\r\n                        case '#automatischepaddinganpassung':\r\n                        case '#automatische-padding-anpassung':\r\n                        case '#apa':\r\n                            this.automaticPaddingAdjustment = true;\r\n                            this.command.split('').forEach(_ => {\r\n                                this.selectedInput.lastElementChild.remove();\r\n                                this.keys--;\r\n                            });\r\n                            this.command = '';\r\n                            this.commandMode = false;\r\n                            let value = Object.values(this.currentWord)[this.inputIndex];\r\n                            this.adjustInputWidth(this.selectedInput, value, true);\r\n                            return;\r\n                        case '#manualpaddingadjustment':\r\n                        case '#manual':\r\n                        case '#normalpaddingadjustment':\r\n                        case '#normal':\r\n                        case '#manual-padding-adjustment':\r\n                        case '#mpa':\r\n                        case '#npa':\r\n                            this.automaticPaddingAdjustment = false;\r\n                        default: {\r\n                            this.paddingAnimation(this.selectedInput);\r\n                            this.command.split('').forEach(_ => {\r\n                                this.selectedInput.lastElementChild.remove();\r\n                                this.keys--;\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    this.command = '';\r\n                    this.commandMode = false;\r\n                    return;\r\n                } else if (event.key === 'ArrowUp') {\r\n                    this.command.split('').forEach(_ => {\r\n                        this.selectedInput.lastElementChild.remove();\r\n                        this.keys--;\r\n                    });\r\n\r\n                    this.command = '';\r\n                    this.commandMode = false;\r\n\r\n                    if (this.inputIndex > 0) {\r\n                        this.inputIndex--;\r\n                        this.changeSelectedInput();\r\n                    }\r\n                    this.selectedInput.classList.add('selected');\r\n                    return;\r\n                } else if (event.key === 'ArrowDown') {\r\n                    this.command.split('').forEach(_ => {\r\n                        this.selectedInput.lastElementChild.remove();\r\n                        this.keys--;\r\n                    });\r\n\r\n                    this.command = '';\r\n                    this.commandMode = false;\r\n\r\n                    if (this.inputIndex + 1 < 4) {\r\n                        this.inputIndex++;\r\n                        this.changeSelectedInput();\r\n                    }\r\n                    return;\r\n                } else if (event.key === 'Backspace') {\r\n                    if (this.selectedInput.lastElementChild) {\r\n                        this.selectedInput.lastElementChild.remove();\r\n                        this.command = this.command.slice(0, this.command.length - 1);\r\n                        this.keys--;\r\n\r\n                        if (this.command === '') {\r\n                            this.commandMode = false;\r\n                        }\r\n\r\n                        if (this.automaticPaddingAdjustment && this.padding[this.inputIndex] > this.selectedInput.offsetHeight * 0.05) {\r\n                            let object = this.selectedInput.lastElementChild;\r\n                            let w = Math.round((this.selectedInput.getBoundingClientRect().width -\r\n                                parseFloat(window.getComputedStyle(this.selectedInput).paddingLeft) -\r\n                                parseFloat(window.getComputedStyle(this.selectedInput).paddingRight)) * 100) / 100;\r\n                            let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n                            let h = w / this.keys * aspectRatio;\r\n                            let padding = Math.max((this.selectedInput.getBoundingClientRect().height - h) / 2, this.selectedInput.offsetHeight * 0.05);\r\n                            this.padding[this.inputIndex] = Math.max(padding, 1);\r\n                            this.selectedInput.style.padding = `${this.padding[this.inputIndex]}px 0.25vw`;\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                if (\r\n                    this.commandMode && (\r\n                        forbiddenCharacters.includes(event.key) ||\r\n                        event.key.length > 1\r\n                    )\r\n                ) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (!this.commandMode) {\r\n                if (event.key === 'Backspace') {\r\n                    if (this.selectedInput.lastElementChild) {\r\n                        this.selectedInput.lastElementChild.remove();\r\n\r\n                        Object.defineProperty(\r\n                            this.currentWord,\r\n                            Object.keys(this.currentWord)[this.inputIndex],\r\n                            { value: Object.values(this.currentWord)[this.inputIndex].slice(0, this.keys - 1) }\r\n                        );\r\n\r\n                        this.keys--;\r\n\r\n                        if (this.automaticPaddingAdjustment && this.padding[this.inputIndex] > this.selectedInput.offsetHeight * 0.05) {\r\n                            let object = this.selectedInput.lastElementChild;\r\n                            let w = Math.round((this.selectedInput.getBoundingClientRect().width -\r\n                                parseFloat(window.getComputedStyle(this.selectedInput).paddingLeft) -\r\n                                parseFloat(window.getComputedStyle(this.selectedInput).paddingRight) -\r\n                                parseFloat(window.getComputedStyle(this.selectedInput).borderLeftWidth) -\r\n                                parseFloat(window.getComputedStyle(this.selectedInput).borderRightWidth)) * 100) / 100;\r\n                            let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n                            let h = w / this.keys * aspectRatio;\r\n                            let padding = Math.max((this.selectedInput.getBoundingClientRect().height - h) / 2, this.selectedInput.offsetHeight * 0.05);\r\n                            this.padding[this.inputIndex] = Math.max(padding, 1);\r\n                            this.selectedInput.style.padding = `${this.padding[this.inputIndex]}px 0.25vw`;\r\n                        }\r\n                    }\r\n                    return;\r\n                } else if (event.key === 'Enter' || event.key === 'ArrowDown') {\r\n                    if (this.inputIndex + 1 < 4) {\r\n                        this.inputIndex++;\r\n                        this.changeSelectedInput();\r\n                    } else {\r\n                        for (let i = 0; i < this.container.childElementCount; i++) {\r\n                            this.container.children[i].classList.add('shadow');\r\n                        }\r\n\r\n                        if (this.enterMode) {\r\n                            if (\r\n                                !this.vocabulary[this.wordIndex + 1] ||\r\n                                (this.vocabulary[this.wordIndex + 1].latinWord.includes('^con^') && !this.vocabulary[this.wordIndex + 2])\r\n                            ) {\r\n                                this.vocabulary[this.wordIndex] = this.currentWord;\r\n\r\n                                const transaction = this.database.transaction(`vocabulary`, 'readwrite');\r\n                                transaction.onerror = () => console.error(transaction.error);\r\n                                const objectStore = transaction.objectStore(`vocabulary`);\r\n                                const req = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                                req.onerror = () => console.error(req.error)\r\n                                transaction.oncomplete = () => {\r\n                                    for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                        this.container.children[i].classList.remove('shadow');\r\n                                    }\r\n\r\n                                    this.wordIndex++;\r\n                                    if (this.vocabulary[this.wordIndex] && this.vocabulary[this.wordIndex].latinWord.includes('^con^')) {\r\n                                        this.wordIndex++;\r\n                                    }\r\n                                    this.keys = 0;\r\n                                    this.currentWord = {\r\n                                        latinWord: '',\r\n                                        inflections: '',\r\n                                        germanTranslation: '',\r\n                                        relatedForeignWords: '',\r\n                                        selected: true,\r\n                                        probability: 1\r\n                                    };\r\n\r\n                                    for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                        this.container.children[i].innerHTML = '';\r\n\r\n                                        this.inputIndex = 0;\r\n                                        this.changeSelectedInput();\r\n                                        if (i != 0) {\r\n                                            let div = <HTMLDivElement>this.container.children[i];\r\n                                            div.classList.remove('selected');\r\n                                            div.style.padding = `${this.padding[i]}px 0.5vw`;\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                    let value = Object.values(this.currentWord)[i];\r\n                                    this.adjustInputWidth(<HTMLDivElement>this.container.children[i], value);\r\n                                }\r\n\r\n                            } else {\r\n                                this.vocabulary[this.wordIndex] = this.currentWord;\r\n\r\n                                for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                    this.container.children[i].classList.remove('shadow');\r\n                                }\r\n\r\n                                const transaction = this.database.transaction(`vocabulary`, 'readwrite');\r\n                                transaction.onerror = () => console.error(transaction.error);\r\n                                const objectStore = transaction.objectStore(`vocabulary`);\r\n                                const req = objectStore.get(this.wordIndex);\r\n                                req.onerror = () => console.error(req.error);\r\n                                req.onsuccess = () => {\r\n                                    const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                                    idontcare.onerror = () => console.error(idontcare.error);\r\n\r\n                                    this.wordIndex++;\r\n                                    if (this.vocabulary[this.wordIndex].latinWord.includes('^con^')) {\r\n                                        this.wordIndex++;\r\n                                    }\r\n                                    this.currentWord = this.vocabulary[this.wordIndex];\r\n\r\n                                    for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                        let value = <string>Object.values(this.currentWord)[i];\r\n                                        value = value.replaceAll(\"^ign^\", \"\");\r\n                                        this.container.children[i].innerHTML = '';\r\n                                        for (let ii = 0; ii < value.length; ii++) {\r\n                                            let object = document.createElement('object');\r\n                                            object.data = './keys/Reversion_T.svg';\r\n                                            object.id = `key${ii}-inp${i}`;\r\n                                            object.style.height = `100%`;\r\n                                            this.container.children[i].insertAdjacentElement('beforeend', object);\r\n\r\n                                            object.hidden = true;\r\n                                            object.addEventListener('load', _ => {\r\n                                                let svg = object.contentDocument;\r\n                                                if (value.charAt(ii) === '<') {\r\n                                                    svg.querySelector('#tspan7').innerHTML = '&lt;';\r\n                                                } else if (value.charAt(ii) === '&') {\r\n                                                    svg.querySelector('#tspan7').innerHTML = '&amp;';\r\n                                                } else {\r\n                                                    svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    }\r\n\r\n                                    let objects = this.container.querySelectorAll('object');\r\n                                    if (objects.length > 0) {\r\n                                        objects[objects.length - 1].addEventListener('load', _ => {\r\n                                            objects.forEach(obj => obj.hidden = false);\r\n                                            for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                                let value = Object.values(this.currentWord)[i];\r\n                                                this.adjustInputWidth(<HTMLDivElement>this.container.children[i], value);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                            this.enterMode = false;\r\n                        } else {\r\n                            this.enterMode = true;\r\n                        }\r\n\r\n                        const transaction = this.database.transaction(`vocabulary`, 'readwrite');\r\n                        transaction.onerror = () => console.error(transaction.error);\r\n                        const objectStore = transaction.objectStore(`vocabulary`);\r\n                        const req = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                        req.onerror = () => console.error(req.error);\r\n\r\n                        setTimeout(_ => {\r\n                            for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                this.container.children[i].classList.remove('shadow');\r\n                            }\r\n                        }, 250);\r\n                    }\r\n\r\n                    return;\r\n                } else if (event.key === 'ArrowUp') {\r\n                    if (this.inputIndex > 0) this.inputIndex--;\r\n                    this.changeSelectedInput();\r\n                    this.enterMode = false;\r\n                    return;\r\n                } else if (event.key === '#') {\r\n                    this.command = '';\r\n                    this.commandMode = true;\r\n                } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let object = document.createElement('object');\r\n            object.data = './keys/Reversion_T.svg';\r\n            object.id = `key${this.keys}-inp${this.inputIndex}`;\r\n            object.style.height = `100%`;\r\n            this.selectedInput.insertAdjacentElement('beforeend', object);\r\n            object.hidden = true;\r\n\r\n            object.addEventListener('load', _ => {\r\n                object.hidden = false;\r\n                let width = Math.round(object.getBoundingClientRect().width * 100) / 100;\r\n                object.hidden = true;\r\n                let w = Math.round((this.selectedInput.getBoundingClientRect().width -\r\n                    parseFloat(window.getComputedStyle(this.selectedInput).paddingLeft) -\r\n                    parseFloat(window.getComputedStyle(this.selectedInput).paddingRight) -\r\n                    parseFloat(window.getComputedStyle(this.selectedInput).borderLeftWidth) -\r\n                    parseFloat(window.getComputedStyle(this.selectedInput).borderRightWidth)) * 100) / 100;\r\n                if (this.keys + 1 > w / width) {\r\n                    if (!this.automaticPaddingAdjustment) {\r\n                        object.remove();\r\n                        for (let i = 0; i < this.keys; i++) {\r\n                            this.failureAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                        }\r\n                        return;\r\n                    } else {\r\n                        object.hidden = false;\r\n                        let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n                        object.hidden = true;\r\n                        let h = (w / (this.keys + 1)) * aspectRatio;\r\n                        let padding = (this.selectedInput.getBoundingClientRect().height - h) / 2;\r\n                        if (padding > this.selectedInput.getBoundingClientRect().height / 2 * 0.85) {\r\n                            object.remove();\r\n                            for (let i = 0; i < this.keys; i++) {\r\n                                this.failureAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                            }\r\n                            return;\r\n                        } else {\r\n                            this.padding[this.inputIndex] = Math.max(padding, 1);\r\n                            this.animatedBorderWidth = parseFloat(window.getComputedStyle(this.selectedInput).borderTopWidth);\r\n                            this.automaticPaddingAnimation(this.selectedInput, true);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setTimeout(_ => { object.hidden = false; }, 10);\r\n\r\n                let svg = object.contentDocument;\r\n                if (event.key === '<') {\r\n                    svg.querySelector('#tspan7').innerHTML = '&lt;';\r\n                } else if (event.key === '&') {\r\n                    svg.querySelector('#tspan7').innerHTML = '&amp;';\r\n                } else {\r\n                    svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\r\n                }\r\n\r\n                if (!this.commandMode) {\r\n                    Object.defineProperty(\r\n                        this.currentWord,\r\n                        Object.keys(this.currentWord)[this.inputIndex],\r\n                        { value: Object.values(this.currentWord)[this.inputIndex] + event.key.charAt(0) }\r\n                    );\r\n                    this.idleAnimation(object);\r\n                } else {\r\n                    this.command += event.key;\r\n                    training.commandAnimation(object);\r\n                }\r\n\r\n                this.keys++;\r\n            });\r\n        }\r\n\r\n        document.addEventListener('keydown', this.keyDownFunction);\r\n\r\n    }\r\n\r\n    changeSelectedInput(): void {\r\n        if (this.secondTimeout) {\r\n            clearTimeout(this.secondTimeout);\r\n        }\r\n\r\n        document.querySelectorAll('.selected').forEach((elem: HTMLDivElement) => {\r\n            elem.classList.remove('selected');\r\n            elem.style.padding = `${this.padding[parseInt(elem.id.charAt(3))]}px 0.5vw`;\r\n            elem.style.border = 'none';\r\n            elem.style.transition = 'none';\r\n        });\r\n        this.selectedInput = <HTMLDivElement>this.container.children[this.inputIndex];\r\n        this.selectedInput.classList.add('selected');\r\n        this.keys = this.selectedInput.childElementCount;\r\n        this.selectedInput.style.padding = `${this.padding[this.inputIndex]}px 0.25vw`;\r\n        if (this.automaticPaddingAdjustment) {\r\n            this.automaticPaddingAnimation(this.selectedInput);\r\n        } else {\r\n            this.paddingAnimation(this.selectedInput);\r\n        }\r\n    }\r\n\r\n    failureAnimation(object: HTMLObjectElement): void {\r\n        if (!object || object.classList.contains(\"animationActive\")) {\r\n            return;\r\n        }\r\n\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: Keyframe[] = [\r\n            { stroke: \"rgb(186, 2, 70)\", offset: 0.025 },\r\n\r\n            { rotate: \"10deg z\", offset: 0.25 },\r\n\r\n            { rotate: \"0deg z\", offset: 0.5 },\r\n\r\n            { rotate: \"-10deg z\", offset: 0.75, stroke: \"rgb(186, 2, 70)\" },\r\n\r\n            { stroke: \"#eeeeeeff\", offset: 0.925 },\r\n\r\n            { rotate: \"0deg z\", offset: 1 }\r\n        ];\r\n        object.classList.add(\"animationActive\");\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 500\r\n        };\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n\r\n        setTimeout(_ => {\r\n            object.classList.remove(\"animationActive\");\r\n        }, 500);\r\n    }\r\n\r\n    idleAnimation(object: HTMLObjectElement): void {\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#8f8f8f', '#fff', '#eeeeeeff'],\r\n            offset: [0, 1]\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 250\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    paddingAnimation(input: HTMLDivElement): void {\r\n        let id = parseInt(input.id.charAt(3));\r\n        let marginLeft = parseInt(window.getComputedStyle(input).marginLeft.slice(0, -2));\r\n        let borderLeft = 0.005 * window.innerWidth - marginLeft;\r\n\r\n        input.style.padding = '0';\r\n        input.style.willChange = 'border-width';\r\n        input.style.borderTopWidth = `calc(${this.padding[id]}px)`;\r\n        input.style.borderRightWidth = `${borderLeft}px`;\r\n        input.style.borderBottomWidth = `calc(${this.padding[id]}px)`;\r\n        input.style.borderLeftWidth = `${borderLeft}px`;\r\n        input.style.borderStyle = 'solid';\r\n        input.style.borderColor = '#12dada';\r\n        input.style.transition = 'none';\r\n        input.style.paddingLeft = 0.005 * window.innerWidth - (parseInt(window.getComputedStyle(input).marginLeft.slice(0, -2)) + parseFloat(window.getComputedStyle(input).borderLeftWidth.slice(0, -2))) + 'px';\r\n        input.style.paddingTop = this.padding[id] - parseFloat(window.getComputedStyle(input).borderTopWidth.slice(0, -2)) + 'px';\r\n        input.style.paddingRight = 0.005 * window.innerWidth - (parseInt(window.getComputedStyle(input).marginLeft.slice(0, -2)) + parseFloat(window.getComputedStyle(input).borderLeftWidth.slice(0, -2))) + 'px';\r\n        input.style.paddingBottom = this.padding[id] - parseFloat(window.getComputedStyle(input).borderBottomWidth.slice(0, -2)) + 'px';\r\n\r\n\r\n        setTimeout(_ => {\r\n            input.style.borderColor = '#06011b';\r\n            input.style.transition = 'none';\r\n            input.style.transition = \"border-color 1.5s\";\r\n\r\n            this.secondTimeout = setTimeout(_ => {\r\n                if (input.classList.contains('selected')) {\r\n                    input.style.padding = `${this.padding[id]}px 0.25vw`;\r\n                } else {\r\n                    input.style.padding = `${this.padding[id]}px 0.5vw`;\r\n                }\r\n\r\n                input.style.border = 'none';\r\n            }, 1500)\r\n        }, 1);\r\n    }\r\n\r\n    automaticPaddingAnimation(input: HTMLDivElement, adjustment?: boolean, cancelable?: boolean): void {\r\n        cancelable = cancelable === undefined || cancelable === true;\r\n        this.clearIntervals(adjustment == undefined);\r\n\r\n        let id = parseInt(input.id.charAt(3));\r\n        let marginLeft = parseInt(window.getComputedStyle(input).marginLeft.slice(0, -2));\r\n        let borderLeft = 0.005 * window.innerWidth - marginLeft;\r\n        let newPadding = this.padding[id];\r\n        let borderWidth = adjustment ? this.animatedBorderWidth : 0;\r\n        let $tepSize = (newPadding - borderWidth) / 20;\r\n        let stepSize = newPadding / 20;\r\n        let step = 0;\r\n        let timeout1 = adjustment ? 1 : 250 / 20;\r\n        let timeout2 = 250 / 20;\r\n        let timeout: number;\r\n        let interval1: number;\r\n        let interval2: number;\r\n\r\n        if (cancelable) this.firstInterval = setInterval(intervalFunction1.bind(this), timeout1);\r\n        else interval1 = setInterval(intervalFunction1.bind(this), timeout1);\r\n\r\n        window.addEventListener('resize', resizeHandler.bind(this), { passive: true });\r\n\r\n        if (!cancelable) {\r\n            this.buttonLeft.addEventListener('mouseup', removeAll.bind(this));\r\n            this.buttonRight.addEventListener('mouseup', removeAll.bind(this));\r\n        }\r\n\r\n        function intervalFunction1() {\r\n            for (let i = 0; i < ((adjustment) ? 4 : 1); i++) {\r\n                this.animatedInputIndex = id;\r\n                borderWidth += $tepSize;\r\n                this.animatedBorderWidth = borderWidth;\r\n                input.style.borderWidth = `${borderWidth}px ${borderLeft / (20 - step)}px`;\r\n                input.style.borderStyle = 'solid';\r\n                input.style.borderColor = 'orange';\r\n                input.style.transition = 'none';\r\n                let paddingLeft = borderLeft - parseFloat(window.getComputedStyle(input).borderLeft);\r\n                let paddingTop = newPadding - parseFloat(window.getComputedStyle(input).borderTop);\r\n                input.style.padding = `${paddingTop}px ${paddingLeft}px`;\r\n                step++;\r\n                if (step === 20) {\r\n                    if (cancelable) {\r\n                        clearInterval(this.firstInterval);\r\n                        this.firstTimeout = setTimeout(timeoutFunction.bind(this), timeout1 * 20);\r\n                    }\r\n                    else {\r\n                        clearInterval(interval1);\r\n                        timeout = setTimeout(timeoutFunction.bind(this), timeout1 * 20);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        function removeAll() {\r\n            clearInterval(interval1);\r\n            clearInterval(interval2);\r\n            clearTimeout(timeout);\r\n        }\r\n\r\n\r\n        function timeoutFunction() {\r\n            if (cancelable) this.secondInterval = setInterval(intervalFunction2.bind(this), timeout2);\r\n            else interval2 = setInterval(intervalFunction2.bind(this), timeout2);\r\n        }\r\n\r\n        function intervalFunction2() {\r\n            borderWidth -= stepSize;\r\n            this.animatedBorderWidth = borderWidth;\r\n            input.style.borderWidth = `${borderWidth}px ${borderLeft / (20 - step)}px`;\r\n            input.style.borderStyle = 'solid';\r\n            input.style.borderColor = 'orange';\r\n            let paddingLeft = borderLeft - parseFloat(window.getComputedStyle(input).borderLeft);\r\n            let paddingTop = newPadding - parseFloat(window.getComputedStyle(input).borderTop);\r\n            input.style.padding = `${paddingTop}px ${paddingLeft}px`;\r\n            step--;\r\n            if (step === 0) {\r\n                input.style.border = 'none';\r\n                input.style.padding = `${newPadding}px ${borderLeft}px`;\r\n                clearInterval(cancelable ? this.secondInterval : interval2);\r\n\r\n                if (!cancelable) {\r\n                    this.buttonLeft.removeEventListener('mouseup', removeAll.bind(this));\r\n                    this.buttonRight.removeEventListener('mouseup', removeAll.bind(this));\r\n                }\r\n            }\r\n        }\r\n\r\n        function resizeHandler() {\r\n            clearInterval(interval1);\r\n            clearInterval(interval2);\r\n            clearTimeout(timeout);\r\n\r\n            let paddingLeft = borderLeft - parseFloat(window.getComputedStyle(input).borderLeft);\r\n            let paddingTop = newPadding - parseFloat(window.getComputedStyle(input).borderTop);\r\n            input.style.padding = `${paddingTop}px ${paddingLeft}px`;\r\n            input.style.border = 'none';\r\n            input.style.paddingTop = `${newPadding}px`;\r\n            input.style.paddingRight = `${borderLeft}px`;\r\n            input.style.paddingBottom = `${newPadding}px`;\r\n            input.style.paddingLeft = `${borderLeft}px`;\r\n        }\r\n    }\r\n\r\n    adjustInputWidth(input: HTMLDivElement, value: string, animation?: boolean): string {\r\n        animation = animation === undefined || animation === true;\r\n        let v = value.replaceAll(\"^ign^\", \"\");\r\n\r\n        if (!input.hasChildNodes() && value.length == 0) {\r\n            if (this.automaticPaddingAdjustment) {\r\n                if (input.classList.contains('selected')) {\r\n                    input.style.padding = 0.05 * input.offsetHeight + 'px 0.25vw';\r\n                } else {\r\n                    input.style.padding = 0.05 * input.offsetHeight + 'px 0.5vw';\r\n                }\r\n                input.style.border = 'none';\r\n                this.padding[parseInt(input.id.charAt(3))] = 0.05 * input.offsetHeight;\r\n                if (animation) this.automaticPaddingAnimation(input, false, false);\r\n                return value;\r\n            }\r\n            if (animation) this.paddingAnimation(input);\r\n            return value;\r\n        }\r\n\r\n        let padding: number;\r\n        let w = Math.round((window.innerWidth -\r\n            parseFloat(window.getComputedStyle(input).paddingLeft) -\r\n            parseFloat(window.getComputedStyle(input).paddingRight) -\r\n            parseFloat(window.getComputedStyle(input).borderLeftWidth) -\r\n            parseFloat(window.getComputedStyle(input).borderRightWidth) -\r\n            parseFloat(window.getComputedStyle(input).marginLeft) -\r\n            parseFloat(window.getComputedStyle(input).marginRight)) * 100) / 100;\r\n        let object = <HTMLObjectElement>input.firstElementChild;\r\n        let id = parseInt(input.id.charAt(3));\r\n        if (!object) {\r\n            this.padding[id] = 0.05 * input.offsetHeight;\r\n            return;\r\n        }\r\n        let width = object.getBoundingClientRect().width;\r\n\r\n        if (w / width < v.length || this.automaticPaddingAdjustment) {\r\n            w = Math.round((window.innerWidth -\r\n                parseFloat(window.getComputedStyle(input).paddingLeft) -\r\n                parseFloat(window.getComputedStyle(input).paddingRight) -\r\n                parseFloat(window.getComputedStyle(input).borderLeftWidth) -\r\n                parseFloat(window.getComputedStyle(input).borderRightWidth) -\r\n                parseFloat(window.getComputedStyle(input).marginLeft) -\r\n                parseFloat(window.getComputedStyle(input).marginRight)) * 100) / 100;\r\n            object = <HTMLObjectElement>input.lastElementChild;\r\n            let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n            let h = w / v.length * aspectRatio;\r\n            padding = Math.max((input.getBoundingClientRect().height - h) / 2, input.offsetHeight * 0.05);\r\n\r\n            this.padding[id] = padding;\r\n            this.animatedBorderWidth = parseFloat(window.getComputedStyle(input).borderTopWidth);\r\n        }\r\n\r\n        if (this.automaticPaddingAdjustment && animation) {\r\n            this.automaticPaddingAnimation(input, false, false);\r\n        } else if (animation) {\r\n            this.paddingAnimation(input);\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    private clearIntervals(param: boolean): void {\r\n        clearInterval(this.firstInterval);\r\n        clearInterval(this.secondInterval);\r\n        clearTimeout(this.firstTimeout);\r\n\r\n        if (this.animatedInputIndex != undefined && param) {\r\n            let input = <HTMLDivElement>document.querySelector(`#div${this.animatedInputIndex}`);\r\n            let marginLeft = parseInt(window.getComputedStyle(input).marginLeft.slice(0, -2));\r\n            let paddingLeft = 0.005 * window.innerWidth - marginLeft;\r\n            let paddingTop = this.padding[this.animatedInputIndex];\r\n            input.style.padding = `${paddingTop}px ${paddingLeft}px`;\r\n            input.style.border = 'none';\r\n        }\r\n    }\r\n}\r\n\r\nexport interface WordBundle {\r\n    latinWord: string;\r\n    inflections: string;\r\n    germanTranslation: string;\r\n    relatedForeignWords: string;\r\n    selected: boolean;\r\n    probability: number;\r\n}","import { WordBundle } from './add-vocabulary';\r\n\r\nexport const VOCABULARY: WordBundle[] = [\r\n    // --- Unit 1 ---\r\n    {\r\n        latinWord: '^con^Lektion 1: De schola',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'schola f.',\r\n        inflections: '2.F. scholae',\r\n        germanTranslation: 'Schule',\r\n        relatedForeignWords: 'engl. school, ital. scuola, span. escuela',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'hic (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'hier',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sedit',\r\n        inflections: 'sedi, sessum*',\r\n        germanTranslation: 'er/sie/es sitzt',\r\n        relatedForeignWords: 'vgl. Sediment (= Ablagerung), Re-sidenz (= Wohnsitz)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'amica f.',\r\n        inflections: '2.F. amicae',\r\n        germanTranslation: 'Freundin',\r\n        relatedForeignWords: 'frz. amie, ital. amica, span. amiga',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'meus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'mein',\r\n        relatedForeignWords: 'besitzanzeigendes Fürwort (Possessivpronomen) frz. est, ital. è, span. es',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'disciplina f.',\r\n        inflections: '2.F. disciplinae',\r\n        germanTranslation: 'Schülerin',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'bonus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'gut',\r\n        relatedForeignWords: 'frz. bon, ital. buono, span. bueno; vgl. Bona-Öl; der Bonus',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'semper (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'immer',\r\n        relatedForeignWords: 'ital. sempre, span. siempre; vgl. Semperit = \"Es/Er geht immer\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sunt',\r\n        inflections: 'fui, -',\r\n        germanTranslation: 'sie sind',\r\n        relatedForeignWords: 'frz. sont, ital. sono, span. son',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'et',\r\n        inflections: '',\r\n        germanTranslation: 'und',\r\n        relatedForeignWords: 'frz. et, ital. e',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'amicus m.',\r\n        inflections: '2.F. amici',\r\n        germanTranslation: 'Freund',\r\n        relatedForeignWords: 'frz. ami, ital. amico, span. amigo',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sed',\r\n        inflections: '',\r\n        germanTranslation: '1) aber; 2) sondern',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'discipulus m.',\r\n        inflections: '2.F. discipuli',\r\n        germanTranslation: 'Schüler',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'malus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'schlecht',\r\n        relatedForeignWords: 'span. malo;(a); vgl. Bonus-Malus-System',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'laetus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'froh, fröhlich',\r\n        relatedForeignWords: 'ital. lieto; vgl. die Vornamen Laetitia und Letizia',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'saepe (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'oft',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ridet',\r\n        inflections: 'risi, risum',\r\n        germanTranslation: 'er/sie/es lacht',\r\n        relatedForeignWords: 'frz. rire, ital. ridere, span. reir; engl. ridiculous',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cur?',\r\n        inflections: '',\r\n        germanTranslation: 'warum?',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nunc (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'jetzt, nun',\r\n        relatedForeignWords: 'vgl. engl. now',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'non',\r\n        inflections: '',\r\n        germanTranslation: 'nicht',\r\n        relatedForeignWords: 'frz. + ital. non, span. no',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'pensum n.',\r\n        inflections: '2.F. pensi',\r\n        germanTranslation: 'Aufgabe',\r\n        relatedForeignWords: 'vgl. das Arbeitspensum',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'magnus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'groß',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'itaque',\r\n        inflections: '',\r\n        germanTranslation: 'deshalb, daher',\r\n        relatedForeignWords: 'vgl. Magnum (Eis; Schusswaffe)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'gaudet',\r\n        inflections: 'gavisus sum',\r\n        germanTranslation: 'er/sie/es freut sich',\r\n        relatedForeignWords: 'vgl. die Gaudi (= Spaß)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'diu (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'lange',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'laborat',\r\n        inflections: 'laboravi, laboratum',\r\n        germanTranslation: 'er/sie/es arbeitet',\r\n        relatedForeignWords: 'vgl. engl. lab(o)ur; das Labor',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'libenter (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'gern',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'interrogat',\r\n        inflections: 'interrogavi, -atum',\r\n        germanTranslation: 'er/sie/es fragt',\r\n        relatedForeignWords: 'vgl. engl. interrogation mark (= Fragezeichen)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'respondet',\r\n        inflections: 'respondi, responsum',\r\n        germanTranslation: 'er/sie/es antwortet',\r\n        relatedForeignWords: 'ital. rispondere; vgl. Kor-respondent (= Briefeschreiber)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'tum (= tunc)',\r\n        inflections: '',\r\n        germanTranslation: 'dann, damals',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'clamat',\r\n        inflections: 'clamavi, clamatum',\r\n        germanTranslation: 'er/sie/es ruft, schreit',\r\n        relatedForeignWords: 'ital. chiamare, span. llamar; vgl. re-Klamieren, Re-Klamation',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'laudat',\r\n        inflections: 'laudavi, laudatum',\r\n        germanTranslation: 'er/sie/es lobt',\r\n        relatedForeignWords: 'vgl. Laudatio (= Lobrede)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    // --- Unit 2 ---\r\n    {\r\n        latinWord: '^con^Lektion 2: Quid grammaticus docet?',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'quid?',\r\n        inflections: '',\r\n        germanTranslation: 'was?',\r\n        relatedForeignWords: 'vgl. doziere, Dozent (= Hochschullehrer)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'docet',\r\n        inflections: 'docui, doctum',\r\n        germanTranslation: 'er/sie/es lehrt, unterrichtet',\r\n        relatedForeignWords: 'vgl. doziere, Dozent (= Hochschullehrer)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ubi?',\r\n        inflections: '',\r\n        germanTranslation: 'wo?',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iam',\r\n        inflections: '',\r\n        germanTranslation: 'schon',\r\n        relatedForeignWords: 'span. ya',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'exspectat',\r\n        inflections: 'exspectavi, -atum',\r\n        germanTranslation: 'er/sie/es erwartet',\r\n        relatedForeignWords: 'engl. to expect',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'intrat',\r\n        inflections: 'intravi, intratum',\r\n        germanTranslation: 'er/sie/es tritt ein, betritt',\r\n        relatedForeignWords: 'engl. to enter, frz. entrer, ital. entrare, span. entrar, ital. salve',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'salve!/salvete!',\r\n        inflections: '',\r\n        germanTranslation: 'sei/seid gegrüßt!',\r\n        relatedForeignWords: 'ital. salve',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'magister m.',\r\n        inflections: '2.F. magistri',\r\n        germanTranslation: 'Lehrer',\r\n        relatedForeignWords: 'frz. maître; vgl. Maestro (= Dirigent)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'amat',\r\n        inflections: 'amavi, amatum',\r\n        germanTranslation: 'er/sie/es liebt',\r\n        relatedForeignWords: 'vgl. Amateur (= \"Liebhaber\", <-> Profi)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'non solum - sed etiam',\r\n        inflections: '',\r\n        germanTranslation: 'nicht nur - sondern auch',\r\n        relatedForeignWords: '<-> iam =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'etiam',\r\n        inflections: '',\r\n        germanTranslation: 'auch, sogar',\r\n        relatedForeignWords: '<-> iam =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'lingua f.',\r\n        inflections: '2.F. linguae',\r\n        germanTranslation: '1) Zunge; 2) Sprache',\r\n        relatedForeignWords: 'engl. language, frz. langue, ital. lingua',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Latinus/a/um',\r\n        inflections: '(Adjektiv!)',\r\n        germanTranslation: 'lateinisch',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Graecus/a/um',\r\n        inflections: '(Adjektiv!)',\r\n        germanTranslation: 'griechisch',\r\n        relatedForeignWords: 'engl. Greek, Greece, span. griego',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'liber m.',\r\n        inflections: '2.F. libri',\r\n        germanTranslation: 'Buch',\r\n        relatedForeignWords: 'ital. + span. libro; vgl. engl. library (= Bibliothek)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quam',\r\n        inflections: '',\r\n        germanTranslation: 'wie',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'pulcher/chra/chrum',\r\n        inflections: '',\r\n        germanTranslation: 'schön, hübsch',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'verbum n.',\r\n        inflections: '2.F. verbi',\r\n        germanTranslation: 'Wort',\r\n        relatedForeignWords: 'vgl. verbal (= durch Worte)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'secum',\r\n        inflections: '',\r\n        germanTranslation: 'mit sich, bei sich',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cogitat',\r\n        inflections: 'cogitavi, cogitatum',\r\n        germanTranslation: 'er/sie/es denkt',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'puer m.',\r\n        inflections: '2.F. pueri',\r\n        germanTranslation: 'Bub',\r\n        relatedForeignWords: 'pueril (= kindlich)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'puella f.',\r\n        inflections: '2.F. puellae',\r\n        germanTranslation: 'Mädchen',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quod',\r\n        inflections: '',\r\n        germanTranslation: 'weil',\r\n        relatedForeignWords: '<-> quid =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quis?',\r\n        inflections: '',\r\n        germanTranslation: 'wer?',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'habet',\r\n        inflections: 'habui, habitum',\r\n        germanTranslation: 'er/sie/es hat',\r\n        relatedForeignWords: 'engl. to have, frz. avoir, ital. avere, span. haber',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'spectat',\r\n        inflections: 'spectavi, -atum',\r\n        germanTranslation: 'er/sie/es schaut an, er/sie/es betrachtet',\r\n        relatedForeignWords: 'vgl. Spektakel, spektakulär; engl. spectator (= Zuschauer)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'oculus m.',\r\n        inflections: '2.F. oculi',\r\n        germanTranslation: 'Auge',\r\n        relatedForeignWords: 'vgl. Mon-okel (= Ein­glas), Okular',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'tuus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'dein',\r\n        relatedForeignWords: 'ital. tuo, span. tu',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'monet',\r\n        inflections: 'monui, monitum',\r\n        germanTranslation: 'er/sie/es (er)mahnt',\r\n        relatedForeignWords: 'vgl. Monitor (= elektronisches Anzeigegerät)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iratus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'zornig, erzürnt',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 3 ---\r\n    {\r\n        latinWord: '^con^Lektion 3: Quam pulchra Roma est!',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'Roma f.',\r\n        inflections: '2.F. Romae',\r\n        germanTranslation: 'Rom',\r\n        relatedForeignWords: 'vgl. perforieren (= durchlöchern), per… (Mail, Post etc.)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'per (Präp. + Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'durch',\r\n        relatedForeignWords: 'vgl. perforieren (= durchlöchern), per… (Mail, Post etc.)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'via f.',\r\n        inflections: '2.F. viae',\r\n        germanTranslation: 'Weg, Straße',\r\n        relatedForeignWords: 'ital. via, span. vía; vgl. Viadukt (= Brücke über ein Tal)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ambulo, -as',\r\n        inflections: 'ambulavi, ambulatum',\r\n        germanTranslation: 'gehen, spazieren',\r\n        relatedForeignWords: 'vgl. Ambulatorium, Ambulanz (siehe unten)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'multi/ae/a (Plural)',\r\n        inflections: '',\r\n        germanTranslation: 'viele',\r\n        relatedForeignWords: 'vgl. Multivitaminsoft, Multitasking, Multitalent',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'multum (n. Sg.)',\r\n        inflections: '',\r\n        germanTranslation: 'viel',\r\n        relatedForeignWords: 'ital. molto',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'aedificium n.',\r\n        inflections: '2.F. aedificii',\r\n        germanTranslation: 'Gebäude',\r\n        relatedForeignWords: 'ital. + span. edificio',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'video, -es',\r\n        inflections: 'vidi, visum',\r\n        germanTranslation: 'sehen',\r\n        relatedForeignWords: 'ital. vedere; vgl. das Video, Videorekorder',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'et',\r\n        inflections: '',\r\n        germanTranslation: 'und',\r\n        relatedForeignWords: 'z. B. Quintus Gaiusque = Quintus et Gaius',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'clarus/a/um',\r\n        inflections: '',\r\n        germanTranslation: '1) berühmt; 2) hell',\r\n        relatedForeignWords: 'vgl. klar; Clara (= \"die Berühmte\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'monstro, -as',\r\n        inflections: 'monstravi, monstratum',\r\n        germanTranslation: 'zeigen',\r\n        relatedForeignWords: 'vgl. Monstranz (= Behälter, in dem die Hostie gezeigt wird)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'spectaculum n.',\r\n        inflections: '2.F. spectaculi',\r\n        germanTranslation: 'Schauspiel',\r\n        relatedForeignWords: 'vgl. Spektakel; <-> spectat =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ibi',\r\n        inflections: '',\r\n        germanTranslation: 'dort',\r\n        relatedForeignWords: '<-> ubi =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'statua f.',\r\n        inflections: '2.F. statuae',\r\n        germanTranslation: 'Statue',\r\n        relatedForeignWords: 'ital. statua, span. estatua',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vir m.',\r\n        inflections: '2.F. viri',\r\n        germanTranslation: 'Mann',\r\n        relatedForeignWords: 'vgl. Triumvirat (= Dreimännerbund); viril (= männlich)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: '-ne',\r\n        inflections: '',\r\n        germanTranslation: '(Fragepartikel, unübersetzt)',\r\n        relatedForeignWords: 'z. B. Amasne Iuliam? = \"Liebst du Julia?\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'certe (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'sicherlich',\r\n        relatedForeignWords: 'ital. certo, span. cierto, engl. certainly',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'forum n.',\r\n        inflections: '2.F. fori',\r\n        germanTranslation: 'Forum; Marktplatz',\r\n        relatedForeignWords: 'vgl. Forensik = Gerichtsmedizin (das Gericht tagte am Forum!)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Romanus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'römisch',\r\n        relatedForeignWords: 'engl. Roman; vgl. Romanisierung',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'templum n.',\r\n        inflections: '2.F. templi',\r\n        germanTranslation: 'Tempel',\r\n        relatedForeignWords: 'frz. temple, ital. tempio, span. templo',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'tam',\r\n        inflections: '',\r\n        germanTranslation: 'so',\r\n        relatedForeignWords: '<-> tum =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'deus m.',\r\n        inflections: '2.F. dei',\r\n        germanTranslation: 'Gott',\r\n        relatedForeignWords: 'frz. dieu, ital. dio, span. dios',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dea f.',\r\n        inflections: '2.F. deae',\r\n        germanTranslation: 'Göttin',\r\n        relatedForeignWords: 'frz. déesse, ital. dea, span. diosa',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ante (Präp. + Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'vor',\r\n        relatedForeignWords: 'vgl. Antipasto (= Vorspeise), antizipieren (= vorwegnehmen)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'post (Präp. + Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'nach; hinter',\r\n        relatedForeignWords: 'vgl. post mortem (= \"nach dem Tod\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'solum (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'nur',\r\n        relatedForeignWords: 'ital. solo, span. sólo; vgl. non solum - sed etiam',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ad (Präp. + Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'zu, an, bei',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    // --- Unit 4 ---\r\n    {\r\n        latinWord: '^con^Lektion 4: De spectaculis',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'de (Präp. + Abl.)',\r\n        inflections: '',\r\n        germanTranslation: '1) von (... herab); 2) über',\r\n        relatedForeignWords: 'frz. de, ital. di, span. de',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cum (Präp. + Abl.)',\r\n        inflections: '',\r\n        germanTranslation: 'mit',\r\n        relatedForeignWords: 'ital. + span. con',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sine (Präp. + Abl.)',\r\n        inflections: '',\r\n        germanTranslation: 'ohne',\r\n        relatedForeignWords: 'frz. sons, ital. senza, span. sin',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'femina',\r\n        inflections: 'feminae* f.',\r\n        germanTranslation: 'Frau',\r\n        relatedForeignWords: 'vgl. Feministin, feminin',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'gaudium',\r\n        inflections: 'gaudii n.',\r\n        germanTranslation: 'Freude',\r\n        relatedForeignWords: 'vgl. \"Mordsgaudi\" (= ein riesiger Spaß)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'narro, -as',\r\n        inflections: 'narravi, narratum',\r\n        germanTranslation: 'erzählen',\r\n        relatedForeignWords: 'span. narrar; vgl. engl. narrator',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Romani (Pl.)',\r\n        inflections: 'Romanorum m.',\r\n        germanTranslation: 'die Römer',\r\n        relatedForeignWords: 'engl. the Romans (\"die Römer\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'copia',\r\n        inflections: 'copiae f.',\r\n        germanTranslation: 'Menge, Vorrat',\r\n        relatedForeignWords: 'ital. + span. copia; vgl. Kopie',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'e / ex (Präp. + Abl.)',\r\n        inflections: '',\r\n        germanTranslation: 'aus, von',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'terra',\r\n        inflections: 'terrae f.',\r\n        germanTranslation: 'Land; Erde',\r\n        relatedForeignWords: 'vgl. Terrarium, Terrasse, Parterre (= Erdgeschoß)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'alienus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'fremd',\r\n        relatedForeignWords: 'vgl. Aliens (= die Außerirdischen/Fremden)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'pugno, -as',\r\n        inflections: 'pugnavi, -atum',\r\n        germanTranslation: 'kämpfen',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'neco, -as',\r\n        inflections: 'necavi, -atum',\r\n        germanTranslation: 'töten',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'placeo, -es',\r\n        inflections: 'placui, -itum',\r\n        germanTranslation: 'gefallen',\r\n        relatedForeignWords: 'frz. plaire, ital. piacere',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'novus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'neu',\r\n        relatedForeignWords: 'vgl. re-novieren (= erneuern), In-novation',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'alius/a/ud',\r\n        inflections: '',\r\n        germanTranslation: 'ein anderer',\r\n        relatedForeignWords: '<-> alienus/a/um =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'alius - alius',\r\n        inflections: '',\r\n        germanTranslation: 'der eine - der andere',\r\n        relatedForeignWords: 'z. B. alius interrogat, alius respondet =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'gladius',\r\n        inflections: 'gladii m.',\r\n        germanTranslation: 'Schwert',\r\n        relatedForeignWords: 'vgl. Gladiator (= \"Schwertkämpfer\"), Gladiole',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'postremo (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'schließlich, endlich',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'supero, -as',\r\n        inflections: 'superavi, superatum',\r\n        germanTranslation: '1) besiegen; 2) übertreffen',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'si',\r\n        inflections: '',\r\n        germanTranslation: 'wenn, falls',\r\n        relatedForeignWords: 'span. si, ital. se',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'bene (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'gut',\r\n        relatedForeignWords: 'frz. bien, ital. bene, span. bien; vgl. Benefizkonzert',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vita',\r\n        inflections: 'vitae f.',\r\n        germanTranslation: 'Leben',\r\n        relatedForeignWords: 'ital. vita, span. vida; vgl. Vitamine; vital (= lebendig)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dono, -as',\r\n        inflections: 'donavi, donatum',\r\n        germanTranslation: 'schenken',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'pro (Präp. + Abl.)',\r\n        inflections: '',\r\n        germanTranslation: 'für',\r\n        relatedForeignWords: 'Pro und Kontra (= Für und Wider)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'suus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'sein, ihr',\r\n        relatedForeignWords: 'Possessivpronomen; ital. suo, span. su',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'a / ab (Präp. + Abl.)',\r\n        inflections: '',\r\n        germanTranslation: 'von',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'prae (Präp. + Abl.)',\r\n        inflections: '',\r\n        germanTranslation: 'vor',\r\n        relatedForeignWords: 'vgl. Präposition (= Vorwort)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'neque (= nec)',\r\n        inflections: '',\r\n        germanTranslation: 'und nicht',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 5 ---\r\n    {\r\n        latinWord: '^con^Lektion 5: De thermis',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'mihi / tibi / sibi (Dativ)',\r\n        inflections: '',\r\n        germanTranslation: 'mir / dir / sich',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'me / te / se (Akkusativ)',\r\n        inflections: '',\r\n        germanTranslation: 'mich / dich / sich',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'delectare',\r\n        inflections: 'delecto 1, -avi, -atum',\r\n        germanTranslation: '(jemanden) erfreuen',\r\n        relatedForeignWords: 'sich an etwas delektieren (= erfreuen)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nonne?',\r\n        inflections: '',\r\n        germanTranslation: 'nicht?',\r\n        relatedForeignWords: 'aus: non-ne? (Frage)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ego / tu',\r\n        inflections: '',\r\n        germanTranslation: 'ich / du',\r\n        relatedForeignWords: '(siehe Grammatica); vgl. Egoist',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Graeci (Pl.)',\r\n        inflections: 'Graecorum m.',\r\n        germanTranslation: 'die Griechen',\r\n        relatedForeignWords: '<-> Graecus/a/um =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ita',\r\n        inflections: '',\r\n        germanTranslation: 'so',\r\n        relatedForeignWords: 'ita est = \"ja\" (wörtlich?)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'inquit',\r\n        inflections: '',\r\n        germanTranslation: 'er/sie sagte',\r\n        relatedForeignWords: '(in die direkte Rede eingeschoben)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'num?',\r\n        inflections: '',\r\n        germanTranslation: 'etwa?',\r\n        relatedForeignWords: 'z. B. Num rides? = \"Lachst du etwa?\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vester/tra/trum',\r\n        inflections: '',\r\n        germanTranslation: 'euer, eure',\r\n        relatedForeignWords: 'franz. vôtre, ital. vostra/a',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quoque (nachgestellt)',\r\n        inflections: '',\r\n        germanTranslation: 'auch',\r\n        relatedForeignWords: 'z. B. etiam tu = tu quoque',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nobis / vobis (Dativ)',\r\n        inflections: '',\r\n        germanTranslation: 'uns / euch',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'noster/tra/trum',\r\n        inflections: '',\r\n        germanTranslation: 'unser, unsere',\r\n        relatedForeignWords: 'franz. nôtre; vgl. Pater noster =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'in (+ Abl.)',\r\n        inflections: '',\r\n        germanTranslation: 'in, auf',\r\n        relatedForeignWords: 'in aedificio (WO?) = \"im Gebäude\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'animus',\r\n        inflections: 'animi m.',\r\n        germanTranslation: '1) Sinn, Geist; 2) Mut',\r\n        relatedForeignWords: 'vgl. animieren (= \"anregen\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'in animo habere',\r\n        inflections: '',\r\n        germanTranslation: 'vorhaben',\r\n        relatedForeignWords: 'wörtl.: \"im Sinn haben\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nos / vos (Nom. + Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'wir; uns / ihr; euch',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quis nostrum',\r\n        inflections: '',\r\n        germanTranslation: 'wer von uns',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quis vestrum',\r\n        inflections: '',\r\n        germanTranslation: 'wer von euch',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nobiscum / vobiscum',\r\n        inflections: '',\r\n        germanTranslation: 'mit uns / mit euch',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'in (+ Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'in, nach; gegen',\r\n        relatedForeignWords: 'in aedificium (WOHIN?) = \"\"ins Gebäude\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'manere',\r\n        inflections: 'maneo 2, mansi, mansum',\r\n        germanTranslation: 'bleiben',\r\n        relatedForeignWords: 'vgl. permanent (= dauerhaft)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'properare',\r\n        inflections: 'propero 1, -avi, -atum',\r\n        germanTranslation: 'eilen',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'aqua',\r\n        inflections: 'aquae f.',\r\n        germanTranslation: 'Wasser',\r\n        relatedForeignWords: 'ital. acqua, span. agua; vgl. Aquarium',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iterum (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'wieder(um)',\r\n        relatedForeignWords: 'Eselsbrücke: \"iterum = wiederum\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'minime (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'keineswegs; nein',\r\n        relatedForeignWords: 'vgl. minimal = sehr klein, sehr gering',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'licet (nur 3.P. Sg.)',\r\n        inflections: '',\r\n        germanTranslation: 'es ist erlaubt, es ist möglich',\r\n        relatedForeignWords: 'vgl. die Lizenz = Erlaubnis, Berechtigung',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'otium',\r\n        inflections: 'otii n.',\r\n        germanTranslation: 'Freizeit, Erholung, Muße',\r\n        relatedForeignWords: 'ital. ozio, span. ocio',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sub (+ Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'unter (...hin)',\r\n        relatedForeignWords: 'vgl. Subvention = finanzielle Hilfe',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'terrere',\r\n        inflections: 'terreo 2, terrui, territum',\r\n        germanTranslation: '(jemanden) erschrecken',\r\n        relatedForeignWords: 'vgl. engl. subdue, submarine; vgl. jemanden terrorisieren, Terrorist',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 6 ---\r\n    {\r\n        latinWord: '^con^Lektion 6: De Romulo et Remo',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'filia',\r\n        inflections: 'filiae f.',\r\n        germanTranslation: 'Tochter',\r\n        relatedForeignWords: 'vgl. Filiale (-> Tochterunternehmen)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'tamen',\r\n        inflections: '',\r\n        germanTranslation: 'dennoch, trotzdem',\r\n        relatedForeignWords: '<-> tam =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'duo/duae/duo',\r\n        inflections: '',\r\n        germanTranslation: 'zwei',\r\n        relatedForeignWords: 'ital. due, span. dos; vgl. Duett, Duo',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'filius',\r\n        inflections: 'filii m.',\r\n        germanTranslation: 'Sohn',\r\n        relatedForeignWords: 'frz. fils, ital. figlio',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'parvus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'klein',\r\n        relatedForeignWords: '<-> magnus =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'paulo post',\r\n        inflections: '',\r\n        germanTranslation: 'wenig später',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'post (nach Abl.)',\r\n        inflections: '',\r\n        germanTranslation: 'später',\r\n        relatedForeignWords: '<-> post + Akk. =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'appropinquare',\r\n        inflections: 'appropinquo 1, -avi, -atum',\r\n        germanTranslation: 'sich nähern',\r\n        relatedForeignWords: 'engl. to approach',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'liberi (Pl.)',\r\n        inflections: 'liberorum m.',\r\n        germanTranslation: 'die Kinder',\r\n        relatedForeignWords: '<-> libri, librorum =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'autem',\r\n        inflections: '',\r\n        germanTranslation: 'aber',\r\n        relatedForeignWords: 'immer nachgestellt: ego autem = sed ego (\"aber ich\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'deinde',\r\n        inflections: '',\r\n        germanTranslation: 'dann',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'portare',\r\n        inflections: 'porto 1, portavi, -atum',\r\n        germanTranslation: 'tragen, bringen',\r\n        relatedForeignWords: 'franz. porter, ital. portare; vgl. trans-portieren, ap-portieren (=heranbringen\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'annus',\r\n        inflections: 'anni m.',\r\n        germanTranslation: 'Jahr',\r\n        relatedForeignWords: 'frz. an, ital. anno, span. año; vgl. Annalen (= Jahrbücher)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'oppidum',\r\n        inflections: 'oppidi n.',\r\n        germanTranslation: 'Stadt',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'aedificare',\r\n        inflections: 'aedifico 1, -avi, -atum',\r\n        germanTranslation: 'erbauen',\r\n        relatedForeignWords: 'frz. édifier, ital. edificare; vgl. aedificium =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'regnare',\r\n        inflections: 'regno 1, regnavi, -atum',\r\n        germanTranslation: 'herrschen, regieren',\r\n        relatedForeignWords: 'frz. régner, ital. regnare, span. reinar, engl. to reign',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'posse',\r\n        inflections: 'possum, potui, -',\r\n        germanTranslation: 'können',\r\n        relatedForeignWords: '(siehe Grammatica); vgl. engl. possible',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sex',\r\n        inflections: '',\r\n        germanTranslation: 'sechs',\r\n        relatedForeignWords: 'vgl. Sextett',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'duodecim',\r\n        inflections: '',\r\n        germanTranslation: 'zwölf',\r\n        relatedForeignWords: 'ital. dodici; vgl. das Dutzend (= zwölf Stück)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dis = deis',\r\n        inflections: '(3./6.F. Pl. m.)',\r\n        germanTranslation: 'den Göttern',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'di = dei (= dii)',\r\n        inflections: '(1.F. Pl. m.)',\r\n        germanTranslation: 'die Götter',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'gratus/a/um',\r\n        inflections: '',\r\n        germanTranslation: '1) dankbar 2) lieb, angenehm',\r\n        relatedForeignWords: 'ital. grato',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'esse',\r\n        inflections: 'sum, fui, -',\r\n        germanTranslation: '(zu) sein',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'auxilium',\r\n        inflections: 'auxilii n.',\r\n        germanTranslation: 'Hilfe',\r\n        relatedForeignWords: 'span. auxilio; vgl. engl. auxiliary verbs (= Hilfszeitwörter)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nonnulli/ae/a (Pl.)',\r\n        inflections: '',\r\n        germanTranslation: 'einige',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'magnificus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'großartig, prächtig',\r\n        relatedForeignWords: 'frz. magnifique, ital. magnifico, span. magnífico',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'trans (+ Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'über; jenseits von',\r\n        relatedForeignWords: 'vgl. Transit, Transfer, Transformator, \"Transdanubien\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 7 ---\r\n    {\r\n        latinWord: '^con^Lektion 7: De Romanis et Sabinis',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'venire',\r\n        inflections: 'venio 4, veni, ventum',\r\n        germanTranslation: 'kommen',\r\n        relatedForeignWords: 'frz. venir, ital. venire, span. venir',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'habitare',\r\n        inflections: 'habito 1, -avi, -atum',\r\n        germanTranslation: 'wohnen; bewohnen',\r\n        relatedForeignWords: 'frz. habiter, ital. abitare, span. habitar',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ut',\r\n        inflections: '',\r\n        germanTranslation: '1) wie; 2) als',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'apud (+ Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'bei',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'legere',\r\n        inflections: 'lego 3, legi, lectum',\r\n        germanTranslation: 'lesen',\r\n        relatedForeignWords: 'ital. leggere; vgl. Lektüre, Legende',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'consilium',\r\n        inflections: 'consilii n.',\r\n        germanTranslation: 'Plan, Beschluss; Rat',\r\n        relatedForeignWords: 'frz. conseil, ital. consiglio, span. consejo',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'capere',\r\n        inflections: 'capio M, cepi, captum',\r\n        germanTranslation: '1) fassen, ergreifen; 2) fangen; 3) nehmen',\r\n        relatedForeignWords: 'vgl. S. 53f; ital. capire; vgl. kapern, kapieren (= verstehen)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nuntius',\r\n        inflections: 'nuntii m.',\r\n        germanTranslation: 'Bote; Nachricht',\r\n        relatedForeignWords: 'vgl. Nuntius (= päpstlicher Botschafter)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'populus',\r\n        inflections: 'populi m.',\r\n        germanTranslation: 'Volk',\r\n        relatedForeignWords: 'vgl. populär (= beim Volk beliebt), Populismus',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'mittere',\r\n        inflections: 'mitto 3, misi, missum',\r\n        germanTranslation: 'schicken',\r\n        relatedForeignWords: 'vgl. Missionar (= einer, der ausgeschickt wurde)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dicere',\r\n        inflections: 'dico 3, dixi, dictum',\r\n        germanTranslation: '1) sagen; 2) nennen',\r\n        relatedForeignWords: 'vgl. Diktat; Diktion (= Ausdrucksweise)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'parare',\r\n        inflections: 'paro 1, paravi, -atum',\r\n        germanTranslation: '1) vorbereiten, bereiten; 2) erwerben',\r\n        relatedForeignWords: 'vgl. etwas parat haben (= etwas vorbereitet haben)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'audire',\r\n        inflections: 'audio 4, audivi, -itum',\r\n        germanTranslation: 'hören',\r\n        relatedForeignWords: 'vgl. Audio-Datei, Audienz; Auditorium (= Hörsaal)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nam',\r\n        inflections: '',\r\n        germanTranslation: 'denn, nämlich',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dum (+ Präsens)',\r\n        inflections: '',\r\n        germanTranslation: 'während',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'subito (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'plötzlich',\r\n        relatedForeignWords: '<-> ital. subito = \"sofort\"!',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'rapere',\r\n        inflections: 'rapio M, rapui, raptum',\r\n        germanTranslation: 'rauben',\r\n        relatedForeignWords: 'frz. ravir, ital. rapire',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'domum',\r\n        inflections: '',\r\n        germanTranslation: 'nach Hause',\r\n        relatedForeignWords: '<-> domum =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'arma (Pl.)',\r\n        inflections: 'armorum n.',\r\n        germanTranslation: 'Waffen',\r\n        relatedForeignWords: 'frz. arme, ital. + span. arma; vgl. Armee, Alarm (aus \"Ad arma!\" = \"Zu den Waffen!\"), Armada',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'adiuvare',\r\n        inflections: 'adiuvo 1, -iuvi, -iutum',\r\n        germanTranslation: 'unterstützen, helfen',\r\n        relatedForeignWords: 'vgl. Adjutant (= Hilfsoffizier eines Kommandanten)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'relinquere',\r\n        inflections: 'relinquo 3, reliqui, relictum',\r\n        germanTranslation: '1) verlassen; 2) zurücklassen',\r\n        relatedForeignWords: 'vgl. Reliquien (= Überreste von Heiligen), Relikt (= Überbleibsel)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'domi',\r\n        inflections: '',\r\n        germanTranslation: 'zu Hause',\r\n        relatedForeignWords: '<-> domum =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iniuria',\r\n        inflections: 'iniuriae f.',\r\n        germanTranslation: 'Unrecht',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'tolerare',\r\n        inflections: 'tolero 1, -avi, -atum',\r\n        germanTranslation: 'ertragen',\r\n        relatedForeignWords: 'vgl. tolerant sein (= nachsichtig sein)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'bellum',\r\n        inflections: 'belli n.',\r\n        germanTranslation: 'Krieg',\r\n        relatedForeignWords: 'vgl. Rebellion, Duell (duellum = bellum)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'bellum gerere',\r\n        inflections: 'gerere 3, gessi, gestum',\r\n        germanTranslation: 'Krieg führen',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'inter (+ Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'zwischen',\r\n        relatedForeignWords: 'vgl. international, Intercity-Zug, Intervall, interaktiv',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'contendere',\r\n        inflections: 'contendo 3, -tendi, -tentum',\r\n        germanTranslation: '1) eilen; 2) kämpfen',\r\n        relatedForeignWords: 'Grundbedeutung: \"die Kräfte anspannen\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'necesse est',\r\n        inflections: '',\r\n        germanTranslation: 'es ist notwendig',\r\n        relatedForeignWords: 'engl. necessary; vgl. das Necessaire (= Behälter mit Reisebedarf)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 8 ---\r\n    {\r\n        latinWord: '^con^Lektion 8: De Lucretia',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'tres (m./f.)',\r\n        inflections: 'tria (n.)',\r\n        germanTranslation: 'drei',\r\n        relatedForeignWords: 'frz. trois, ital. tre, span. tres; vgl. Triathlon; Triumvirat (= Dreimännerbund)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'hora',\r\n        inflections: 'horae f.',\r\n        germanTranslation: 'Stunde',\r\n        relatedForeignWords: 'engl. hour, frz. heure, ital. ora, span. hora',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'facere',\r\n        inflections: 'facio M, feci, factum',\r\n        germanTranslation: 'tun, machen',\r\n        relatedForeignWords: 'frz. faire, ital. fare',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'neque - neque',\r\n        inflections: '(= nec - nec)',\r\n        germanTranslation: 'weder - noch',\r\n        relatedForeignWords: 'vgl. neque =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dormire',\r\n        inflections: 'dormio 4, -ivi, -itum',\r\n        germanTranslation: 'schlafen',\r\n        relatedForeignWords: 'frz. dormir, ital. dormire, span. dormir',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'solus/a/um',\r\n        inflections: '2.F. solius, 3.F. soli',\r\n        germanTranslation: 'allein',\r\n        relatedForeignWords: 'ital. + span. solo/a; vgl. Solo, Solist',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'duo/duae/duo',\r\n        inflections: '',\r\n        germanTranslation: 'zwei',\r\n        relatedForeignWords: '(siehe Grammatica); ital. due; vgl. Duett, Duo',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'unus/a/um',\r\n        inflections: '2.F. unius, 3.F. uni',\r\n        germanTranslation: '1) ein; 2) einzig',\r\n        relatedForeignWords: 'frz. un, ital. uno, span. un; Unikat (= Einzelstück)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'primus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'der erste',\r\n        relatedForeignWords: 'ital. primo; vgl. Primel, Primat, prima, primär',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'castra (Pl.)',\r\n        inflections: 'castrorum n.',\r\n        germanTranslation: 'das Lager (Sg.)',\r\n        relatedForeignWords: 'vgl. Kastell (= kleines Lager), engl. castle',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'resistere',\r\n        inflections: 'resisto 3, restiti, -',\r\n        germanTranslation: 'sich widersetzen, Widerstand leisten',\r\n        relatedForeignWords: 'engl. to resist; vgl. resistent (= widerstandsfähig)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'committere',\r\n        inflections: 'committo 3, commisi, commissum',\r\n        germanTranslation: 'begehen (ein Verbrechen); beginnen (einen Krieg)',\r\n        relatedForeignWords: 'engl. to commit (a crime)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nisi',\r\n        inflections: '',\r\n        germanTranslation: 'wenn nicht, falls nicht',\r\n        relatedForeignWords: '<-> si =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'parere',\r\n        inflections: 'pareo 2, parui, -',\r\n        germanTranslation: 'gehorchen',\r\n        relatedForeignWords: 'vgl. parieren; <-> parare 1 =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'servus',\r\n        inflections: 'servi m.',\r\n        germanTranslation: 'Sklave',\r\n        relatedForeignWords: 'Servus! (erg. sum) = \"Ich bin dein Diener\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'non iam',\r\n        inflections: '',\r\n        germanTranslation: 'nicht mehr',\r\n        relatedForeignWords: '<-> iam =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'culpa',\r\n        inflections: 'culpae f.',\r\n        germanTranslation: 'Schuld',\r\n        relatedForeignWords: 'ital. colpa, span. culpa',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nullus/a/um',\r\n        inflections: '2.F. nullius, 3.F. nulli',\r\n        germanTranslation: 'kein',\r\n        relatedForeignWords: 'vgl. Null; <-> nonnulli =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'exemplum',\r\n        inflections: 'exempli n.',\r\n        germanTranslation: 'Beispiel',\r\n        relatedForeignWords: 'engl. for example (\"zum Beispiel\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'maxime (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'sehr; am meisten',\r\n        relatedForeignWords: 'vgl. maximal',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'familia',\r\n        inflections: 'familiae f.',\r\n        germanTranslation: 'Familie',\r\n        relatedForeignWords: 'engl. family, frz. famille, ital. famiglia',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'expellere',\r\n        inflections: 'expello 3, expuli, expulsum',\r\n        germanTranslation: '1) vertreiben; 2) verjagen',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 9 ---\r\n    {\r\n        latinWord: '^con^Lektion 9: Quem Romani maxime timent?',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'quem?',\r\n        inflections: '',\r\n        germanTranslation: 'wen?',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'timere',\r\n        inflections: 'timeo 2, timui, -',\r\n        germanTranslation: 'fürchten; sich fürchten',\r\n        relatedForeignWords: 'ital. temere, span. temer',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Galli',\r\n        inflections: 'Gallorum m.',\r\n        germanTranslation: 'die Gallier (= Kelten)',\r\n        relatedForeignWords: 'frz. Gaulois',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'flumen',\r\n        inflections: 'fluminis n.',\r\n        germanTranslation: 'Fluss',\r\n        relatedForeignWords: 'ital. fiume',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'miles',\r\n        inflections: 'militis m.',\r\n        germanTranslation: 'Soldat',\r\n        relatedForeignWords: 'vgl. Militär',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'fugere (+ Akk.)',\r\n        inflections: 'fugio M, fugi, -',\r\n        germanTranslation: 'flüchten (vor), fliehen',\r\n        relatedForeignWords: 'vgl. Zentrifuge, Refugium (= Rückzugsort)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'occupare',\r\n        inflections: 'occupo 1, -avi, -atum',\r\n        germanTranslation: 'besetzen',\r\n        relatedForeignWords: 'frz. occuper, ital. occupare; vgl. okkupieren',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'delere',\r\n        inflections: 'deleo 2, delevi, deletum',\r\n        germanTranslation: 'zerstören',\r\n        relatedForeignWords: 'vgl. engl. to delete = \"löschen\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'oppugnare',\r\n        inflections: 'oppugno 1, -avi, -atum',\r\n        germanTranslation: 'bestürmen, belagern',\r\n        relatedForeignWords: 'wörtlich: \"dagegenkämpfen\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'expugnare',\r\n        inflections: 'expugno 1, -avi, -atum',\r\n        germanTranslation: 'erobern',\r\n        relatedForeignWords: 'wörtlich: \"herauskämpfen\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nox',\r\n        inflections: 'noctis f. (2. F. Pl. -ium)',\r\n        germanTranslation: 'Nacht',\r\n        relatedForeignWords: 'frz. nuit, ital. notte, span. noche',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'constituere',\r\n        inflections: 'constituo 3, constitui, constitutum',\r\n        germanTranslation: 'beschließen, festsetzen',\r\n        relatedForeignWords: 'vgl. Konstitution (= Verfassung)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'clam (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'heimlich',\r\n        relatedForeignWords: 'vgl. klammheimlich (= ganz heimlich)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ascendere',\r\n        inflections: 'ascendo 3, ascendi, ascensum',\r\n        germanTranslation: 'hinaufsteigen, besteigen',\r\n        relatedForeignWords: 'vgl. Aszendent; vgl. frz. ascenseur, ital. ascensore, span. ascensor',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'homo',\r\n        inflections: 'hominis m.',\r\n        germanTranslation: 'Mensch',\r\n        relatedForeignWords: 'frz. homme; Homo sapiens =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'canis',\r\n        inflections: 'canis m.',\r\n        germanTranslation: 'Hund',\r\n        relatedForeignWords: 'frz. chien, ital. cane; Cave canem (siehe unten)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Iuno',\r\n        inflections: 'Iunonis f.',\r\n        germanTranslation: 'Juno (griech. Hera)',\r\n        relatedForeignWords: 'Gattin des Jupiter (griech. Hera -> S. 9)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sacer/cra/crum',\r\n        inflections: '',\r\n        germanTranslation: '1) heilig; 2) geweiht',\r\n        relatedForeignWords: 'vgl. Sakristei, Sakrament, sakral',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quamquam',\r\n        inflections: '',\r\n        germanTranslation: 'obwohl',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'carere (+ Abl.)',\r\n        inflections: 'careo 2, carui, -',\r\n        germanTranslation: 'frei sein (von ...), nicht haben',\r\n        relatedForeignWords: 'z. B. dico careo = (ich bin frei von Freizeit ➔ ich habe keine Freizeit); vgl. Karenz',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vox',\r\n        inflections: 'vocis f.',\r\n        germanTranslation: 'Stimme',\r\n        relatedForeignWords: 'engl. voice, frz. voix, ital. voce, span. voz',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'clamor',\r\n        inflections: 'clamoris m.',\r\n        germanTranslation: 'Geschrei, Lärm',\r\n        relatedForeignWords: 'frz. clameur, ital. clamore; vgl. clamare =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'statim (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'sofort, sogleich',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ceteri/ae/a (Pl.)',\r\n        inflections: '',\r\n        germanTranslation: 'die übrigen',\r\n        relatedForeignWords: 'etc. (et cetera) = \"und das Übrige\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'servare',\r\n        inflections: 'servo 1, -avi, -atum',\r\n        germanTranslation: '1) retten; 2) bewahren',\r\n        relatedForeignWords: 'vgl. konservieren',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'gloria',\r\n        inflections: 'gloriae f.',\r\n        germanTranslation: 'Ruhm, Ehre',\r\n        relatedForeignWords: 'vgl. Gloria; glorreich (= ruhmreich)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nomen',\r\n        inflections: 'nominis n.',\r\n        germanTranslation: 'Name',\r\n        relatedForeignWords: 'vgl. Nomen est omen = \"Der Name ist Vorzeichen\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'accipere',\r\n        inflections: 'accipio M, accepi, acceptum',\r\n        germanTranslation: '1) erhalten, 2) aufnehmen, 3) annehmen',\r\n        relatedForeignWords: 'vgl. akzeptieren (= etwas annehmen)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 10 ---\r\n    {\r\n        latinWord: '^con^Lektion 10: De Hannibale',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'imperator',\r\n        inflections: 'imperatoris m.',\r\n        germanTranslation: '1) Feldherr; 2) Kaiser',\r\n        relatedForeignWords: 'eigntl.: \"Befehlshaber\" (vgl. imperare!)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'virtus',\r\n        inflections: 'virtutis f.',\r\n        germanTranslation: '1) Tapferkeit; 2) Tugend',\r\n        relatedForeignWords: 'eigntl.: \"Mannhaftigkeit\" (vgl. vir = Mann)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'copiae (Pl.)',\r\n        inflections: 'copiarum f.',\r\n        germanTranslation: 'Truppen',\r\n        relatedForeignWords: '<-> copia, -ae (Sg.) =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ducere',\r\n        inflections: 'duco 3, duxi, ductum',\r\n        germanTranslation: 'führen',\r\n        relatedForeignWords: 'vgl. reduzieren',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'navis',\r\n        inflections: 'navis f.',\r\n        germanTranslation: 'Schiff',\r\n        relatedForeignWords: 'Navigation = Steuerung des Schiffs); vgl. engl. navy',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'mare',\r\n        inflections: 'maris n.',\r\n        germanTranslation: 'Meer',\r\n        relatedForeignWords: 'frz. mer, ital. mare, vgl. Marine =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'audere',\r\n        inflections: 'audeo 2, ausus sum',\r\n        germanTranslation: 'wagen',\r\n        relatedForeignWords: 'frz. oser, ital. osare, span. osar',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'amittere',\r\n        inflections: 'amitto 3, amisi, amissum',\r\n        germanTranslation: 'verlieren',\r\n        relatedForeignWords: 'wört.: \"wegschicken\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'pugna',\r\n        inflections: 'pugnae f.',\r\n        germanTranslation: 'Kampf',\r\n        relatedForeignWords: 'vgl. pugnare =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vincere',\r\n        inflections: 'vinco 3, vici, victum',\r\n        germanTranslation: 'siegen, besiegen',\r\n        relatedForeignWords: 'frz. vaincre, ital. vincere, span. vencer',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'pars',\r\n        inflections: 'partis f.',\r\n        germanTranslation: 'Teil',\r\n        relatedForeignWords: 'engl. part; vgl. partiell (= teilweise)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'timor',\r\n        inflections: 'timoris m.',\r\n        germanTranslation: 'Furcht, Angst',\r\n        relatedForeignWords: 'ital. timore, span. temor; vgl. timere =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ne ... quidem',\r\n        inflections: '',\r\n        germanTranslation: 'nicht einmal ...',\r\n        relatedForeignWords: 'z.B. ne tu quidem =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'prohibere',\r\n        inflections: 'prohibeo 2, -ui, -itum',\r\n        germanTranslation: '1) ab-, fernhalten; 2) hindern, verhindern',\r\n        relatedForeignWords: 'ital. proibire, span. prohibir; vgl. engl. to prohibit (\"verbieten\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'occidere',\r\n        inflections: 'occido 3, occidi, occisum',\r\n        germanTranslation: 'töten',\r\n        relatedForeignWords: 'ital. uccidere',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'porta',\r\n        inflections: 'portae f.',\r\n        germanTranslation: 'Tor, Tür',\r\n        relatedForeignWords: 'frz. porte, ital. porta; vgl. Portal, Portier',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'urbs',\r\n        inflections: 'urbis f.',\r\n        germanTranslation: 'Stadt',\r\n        relatedForeignWords: 'vgl. engl. suburb; urban (= städtisch)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'summus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'der höchste; sehr hoch',\r\n        relatedForeignWords: 'vgl. Summe; engl. summit (= Höhepunkt)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'honor',\r\n        inflections: 'honoris m.',\r\n        germanTranslation: 'Ehre, Ansehen',\r\n        relatedForeignWords: 'vgl. honorieren (= belohnen); engl. honour',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'facere',\r\n        inflections: '(mit doppeltem Akk.)',\r\n        germanTranslation: 'zu etwas machen',\r\n        relatedForeignWords: 'z. B. te amicam meam facio =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'patria',\r\n        inflections: 'patriae f.',\r\n        germanTranslation: 'Heimat',\r\n        relatedForeignWords: 'ital. + span. patria; vgl. Patriot =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'pax',\r\n        inflections: 'pacis f.',\r\n        germanTranslation: 'Friede',\r\n        relatedForeignWords: 'engl. peace; vgl. Pazifist (= Kriegsgegner), Pazifik',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'hostis',\r\n        inflections: 'hostis m.',\r\n        germanTranslation: 'Feind',\r\n        relatedForeignWords: 'vgl. engl. hostile (= feindlich)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'liberare (+ Abl.)',\r\n        inflections: 'libero 1, -avi, -atum',\r\n        germanTranslation: 'befreien (von)',\r\n        relatedForeignWords: 'vgl. liberalisieren (= von Regelungen befreien)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 11 ---\r\n    {\r\n        latinWord: '^con^Lektion 11: Quis Iovem non amat?',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'Iuppiter',\r\n        inflections: 'Iovis m.',\r\n        germanTranslation: 'Jupiter',\r\n        relatedForeignWords: 'griech. Zeus (S. 9)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'scire',\r\n        inflections: 'scio 4, scivi, scitum',\r\n        germanTranslation: 'wissen',\r\n        relatedForeignWords: 'vgl. engl. science =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'is, ea, id',\r\n        inflections: '',\r\n        germanTranslation: '1) dieser/e/es 2) er, sie, es',\r\n        relatedForeignWords: 'hinweisendes Fürwort (siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vocare',\r\n        inflections: 'voco 1, -avi, -atum',\r\n        germanTranslation: '1) rufen; 2) nennen',\r\n        relatedForeignWords: 'vgl. vox, vocis; vgl. Vokativ (= Ruf-Fall), Advokat',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'imperare',\r\n        inflections: 'impero 1, -avi, -atum',\r\n        germanTranslation: 'befehlen',\r\n        relatedForeignWords: 'vgl. Imperator, Imperativ =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'mons',\r\n        inflections: 'montis m.',\r\n        germanTranslation: 'Berg',\r\n        relatedForeignWords: 'engl. mount, frz. mont, ital. + span. monte',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'rex',\r\n        inflections: 'regis m.',\r\n        germanTranslation: 'König',\r\n        relatedForeignWords: 'frz. roi, ital. re, span. rey',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'litus',\r\n        inflections: 'litoris n.',\r\n        germanTranslation: 'Küste, Strand',\r\n        relatedForeignWords: 'ital. lido, span. litoral',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'eius',\r\n        inflections: '(2.F. Sg.)',\r\n        germanTranslation: 'dessen/deren',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'eorum/earum',\r\n        inflections: '(2.F. Pl.)',\r\n        germanTranslation: 'deren',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iussum',\r\n        inflections: 'iussi n.',\r\n        germanTranslation: 'Befehl',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'conficere',\r\n        inflections: 'conficio M, confeci, confectum',\r\n        germanTranslation: '1) ausführen, anfertigen 2) beenden',\r\n        relatedForeignWords: 'vgl. facere M =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'solere',\r\n        inflections: 'soleo 2, solitus sum',\r\n        germanTranslation: 'gewohnt sein, pflegen',\r\n        relatedForeignWords: 'span. soler',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'idem, eadem, idem',\r\n        inflections: '',\r\n        germanTranslation: 'der-, die-, dasselbe',\r\n        relatedForeignWords: 'siehe Grammatica; vgl. ident, identisch',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'locus',\r\n        inflections: 'loci m.',\r\n        germanTranslation: 'Ort, Stelle, Platz',\r\n        relatedForeignWords: 'vgl. Lokal, lokalisieren; der Lokus (= WC)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'virgo',\r\n        inflections: 'virginis f.',\r\n        germanTranslation: 'Mädchen, Jungfrau',\r\n        relatedForeignWords: 'engl. virgin, frz. vierge, ital. vergine, span. virgen',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ludere',\r\n        inflections: 'ludo 3, lusi, lusum',\r\n        germanTranslation: 'spielen',\r\n        relatedForeignWords: 'vgl. Präludium (= Vorspiel)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'taurus',\r\n        inflections: 'tauri m.',\r\n        germanTranslation: 'Stier',\r\n        relatedForeignWords: 'ital. + span. toro, vgl. Torero (= Stierkämpfer)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'multitudo',\r\n        inflections: 'multitudinis f.',\r\n        germanTranslation: 'Menge',\r\n        relatedForeignWords: 'vgl. multi/ae/a =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'conspicere',\r\n        inflections: 'conspicio M, conspexi, conspectum',\r\n        germanTranslation: 'erblicken',\r\n        relatedForeignWords: 'vgl. in-spezieren (= genau untersuchen)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'pulchritudo',\r\n        inflections: 'pulchritudinis f.',\r\n        germanTranslation: 'Schönheit',\r\n        relatedForeignWords: 'vgl. pulcher/a/um',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'primo (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'zuerst',\r\n        relatedForeignWords: 'vgl. Prime!; <-> primus/a/um (Adj.) =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'tangere',\r\n        inflections: 'tango 3, tetigi, tactum',\r\n        germanTranslation: 'berühren',\r\n        relatedForeignWords: 'vgl. Tangente, tangieren, Tangens; engl. contact',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'corpus',\r\n        inflections: 'corporis n.',\r\n        germanTranslation: 'Körper',\r\n        relatedForeignWords: 'vgl. der Korpus; das Corpus delicti (= Beweisstück)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'mox (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'bald',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'insula',\r\n        inflections: 'insulae f.',\r\n        germanTranslation: 'Insel',\r\n        relatedForeignWords: 'engl. island, frz. île, ital. isola, span. isla',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 12 ---\r\n    {\r\n        latinWord: '^con^Lektion 12: De Minotauro',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'pater',\r\n        inflections: 'patris m.',\r\n        germanTranslation: 'Vater',\r\n        relatedForeignWords: 'vgl. Patriarch (= Familienoberhaupt); <-> patria, -ae = \"Vaterland\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quaerere',\r\n        inflections: 'quaero 3, quaesivi, quaesitum',\r\n        germanTranslation: '1) suchen (+ Akk.) 2) fragen (+ ab/ex)',\r\n        relatedForeignWords: 'quaero amicam = ich suche die Freundin; quaero ab amica = ich frage die Freundin',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'parentes (Pl.)',\r\n        inflections: 'parentum m.',\r\n        germanTranslation: 'Eltern',\r\n        relatedForeignWords: 'engl. + franz. parents',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'qui, quae, quod',\r\n        inflections: '',\r\n        germanTranslation: '1) welcher/e/s; 2) der/die/das',\r\n        relatedForeignWords: 'Relativpronomen, siehe Grammatica',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nihil',\r\n        inflections: '',\r\n        germanTranslation: 'nichts',\r\n        relatedForeignWords: 'vgl. Nihilist (= einer, der an nichts glaubt)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nihil nisi',\r\n        inflections: '',\r\n        germanTranslation: 'nichts außer; nur',\r\n        relatedForeignWords: 'wörtl.: \"nichts, wenn nicht\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'debere (+ Inf.)',\r\n        inflections: 'debeo 2, -ui, -itum',\r\n        germanTranslation: 'müssen',\r\n        relatedForeignWords: 'frz. devoir, ital. dovere, span. deber',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'caput',\r\n        inflections: 'capitis n.',\r\n        germanTranslation: 'Kopf, Haupt',\r\n        relatedForeignWords: 'vgl. engl. capital; vgl. Kapuze, Kapitän',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'periculum',\r\n        inflections: 'periculi n.',\r\n        germanTranslation: 'Gefahr',\r\n        relatedForeignWords: 'vgl. ital. pericoloso',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'interficere',\r\n        inflections: 'interficio M, interfeci, interfectum',\r\n        germanTranslation: 'töten',\r\n        relatedForeignWords: '= necare, occidere',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'miser/era/erum',\r\n        inflections: '',\r\n        germanTranslation: '1) arm, elend; 2) unglücklich',\r\n        relatedForeignWords: 'vgl. miserable; die Misere (= Notlage)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'navigare',\r\n        inflections: 'navigo 1, -avi, -atum',\r\n        germanTranslation: 'segeln, mit dem Schiff fahren',\r\n        relatedForeignWords: 'vgl. navis, -is = navigieren (= \"steuern\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'adulescens',\r\n        inflections: 'adulescentis m.',\r\n        germanTranslation: 'junger Mann',\r\n        relatedForeignWords: 'vgl. die Adoleszenz (= Jugendalter)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iuvare',\r\n        inflections: 'iuvo 1, iuvi, iutum',\r\n        germanTranslation: 'unterstützen, helfen',\r\n        relatedForeignWords: '= adiuvare (Lec. 7)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nemo',\r\n        inflections: '',\r\n        germanTranslation: 'niemand',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'invenire',\r\n        inflections: 'invenio 4, inveni, inventum',\r\n        germanTranslation: '1) finden; 2) erfinden',\r\n        relatedForeignWords: 'wörtl.: \"daraufkommen\"; engl. invention, to invent',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cura',\r\n        inflections: 'curae f.',\r\n        germanTranslation: 'Sorge',\r\n        relatedForeignWords: 'vgl. Kur',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quomodo',\r\n        inflections: '',\r\n        germanTranslation: 'wie',\r\n        relatedForeignWords: 'Wörtlich: \"auf welche Weise?\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'modus',\r\n        inflections: 'modi m.',\r\n        germanTranslation: 'Art, Weise',\r\n        relatedForeignWords: 'vgl. Mode = Art, sich anzuziehen',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dare',\r\n        inflections: 'do 1, dedi, datum',\r\n        germanTranslation: 'geben',\r\n        relatedForeignWords: 'ital. dare, dar; vgl. Dativ (Gib-Fall)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'medius/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'der mittlere; in der Mitte',\r\n        relatedForeignWords: 'vgl. engl. medium (z. B. Kleidergröße, Steak), meditieren',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'medio in labyrintho',\r\n        inflections: '',\r\n        germanTranslation: 'mitten im Labyrinth',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'paratus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'bereit',\r\n        relatedForeignWords: 'vgl. parare (Lec. 7); vgl. \"etwas parat haben\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'atque (= ac)',\r\n        inflections: '',\r\n        germanTranslation: 'und',\r\n        relatedForeignWords: '= et, -que',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 13 ---\r\n    {\r\n        latinWord: '^con^Lektion 13: De Daedalo et Icaro',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'amor',\r\n        inflections: 'amoris m.',\r\n        germanTranslation: 'Liebe',\r\n        relatedForeignWords: 'frz. amour, ital. amore, span. amor; vgl. Amor',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cupere',\r\n        inflections: 'cupio M, cupivi, -itum',\r\n        germanTranslation: 'wünschen, begehren',\r\n        relatedForeignWords: '<-> capere M =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'petere a/ab',\r\n        inflections: 'peto 3, petivi, petitum (+ Abl.)',\r\n        germanTranslation: 'bitten, erbitten',\r\n        relatedForeignWords: 'peto a te auxilium = \"ich bitte dich um Hilfe\"; \"ich erbitte Hilfe von dir\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'manus',\r\n        inflections: 'manus f.',\r\n        germanTranslation: 'Hand',\r\n        relatedForeignWords: 'vgl. manuell, Manufaktur, Maniküre',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'artificium',\r\n        inflections: 'artificii n.',\r\n        germanTranslation: 'Kunstwerk',\r\n        relatedForeignWords: 'zusammengesetzt aus: ars + facere',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'res',\r\n        inflections: 'rei f.',\r\n        germanTranslation: 'Sache',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ars',\r\n        inflections: 'artis f.',\r\n        germanTranslation: '1) Kunst; 2) Technik',\r\n        relatedForeignWords: 'engl. + frz. art, ital. + span. arte; vgl. Artist',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'casus',\r\n        inflections: 'casus m.',\r\n        germanTranslation: '1) Fall; 2) Zufall; 3) Unglücksfall',\r\n        relatedForeignWords: 'engl. case (= Fall), frz. cas, ital. + span. caso',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'coniungere',\r\n        inflections: 'coniunxo 3, coniunxi, coniunctum',\r\n        germanTranslation: '1) verbinden; 2) vereinigen',\r\n        relatedForeignWords: 'vgl. Konjunktion (= Bindewort)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dies',\r\n        inflections: 'diei m.',\r\n        germanTranslation: 'Tag',\r\n        relatedForeignWords: 'span. día; vgl. engl. diary (= Tagebuch)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'opus',\r\n        inflections: 'operis n.',\r\n        germanTranslation: 'Werk',\r\n        relatedForeignWords: 'ital. opera; vgl. das Opus (= Musikwerk)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'meridies',\r\n        inflections: 'meridiei m.',\r\n        germanTranslation: 'Mittag',\r\n        relatedForeignWords: 'vgl. Meridian (= \"Mittagslinie\"), a. m. (siehe unten)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sol',\r\n        inflections: 'solis m.',\r\n        germanTranslation: 'Sonne',\r\n        relatedForeignWords: 'frz. soleil, ital. sole, span. sol; vgl. Solanum',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'caelum',\r\n        inflections: 'caeli n.',\r\n        germanTranslation: 'Himmel',\r\n        relatedForeignWords: 'engl. ceiling, frz. ciel, ital. + span. cielo',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'metus',\r\n        inflections: 'metus m.',\r\n        germanTranslation: 'Furcht, Angst',\r\n        relatedForeignWords: '= timor, -oris',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'denique (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'schließlich, endlich',\r\n        relatedForeignWords: '= postremo',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'negligere',\r\n        inflections: 'neglego 3, neglexi, neglectum',\r\n        germanTranslation: 'missachten, ignorieren',\r\n        relatedForeignWords: 'engl. to neglect, frz. négliger',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'solvere',\r\n        inflections: 'solvo 3, solvi, solutum',\r\n        germanTranslation: 'auflösen, lösen',\r\n        relatedForeignWords: 'engl. to solve (a problem); solution (= Lösung)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cadere',\r\n        inflections: 'cado 3, cecidi, -',\r\n        germanTranslation: 'fallen',\r\n        relatedForeignWords: 'de-kadent (= verfallen, entartet); vgl. casus, -us (s. oben)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'mortuus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'tot, gestorben',\r\n        relatedForeignWords: 'frz. mort; vgl. Mortalität (= Sterblichkeit)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 14 ---\r\n    {\r\n        latinWord: '^con^Lektion 14: De Tartaro',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'fuit',\r\n        inflections: '',\r\n        germanTranslation: 'Perfekt von est',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'hic, haec, hoc',\r\n        inflections: '',\r\n        germanTranslation: 'dieser/e/es',\r\n        relatedForeignWords: 'hinweisendes Fürwort (siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cena',\r\n        inflections: 'cenae f.',\r\n        germanTranslation: 'Mahlzeit, Mahl',\r\n        relatedForeignWords: 'frz. cène, ital. + span. cena (= Abendessen)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'invitare',\r\n        inflections: 'invito 1, -avi, invitatus',\r\n        germanTranslation: 'einladen',\r\n        relatedForeignWords: 'engl. to invite, frz. inviter, ital. invitare',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quidam, quaedam, quoddam',\r\n        inflections: '2.F. cuiusdam, 3.F. cuidam',\r\n        germanTranslation: 'Sg.: ein (gewisser); Pl.: einige',\r\n        relatedForeignWords: 'Deklination wie qui/quae/quod + -dam',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'facinus',\r\n        inflections: 'facinoris n.',\r\n        germanTranslation: '1) Tat; 2) Untat',\r\n        relatedForeignWords: 'abgeleitet vom Verbum facere = tun',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'prudentia',\r\n        inflections: 'prudentiae f.',\r\n        germanTranslation: 'Klugheit',\r\n        relatedForeignWords: 'engl. + frz. prudence, ital. prudenza, span. prudencia',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'intellegere',\r\n        inflections: 'intellego 3, intellexi, intellectum',\r\n        germanTranslation: 'erkennen, einsehen',\r\n        relatedForeignWords: 'vgl. Intelligenz, intelligent',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'reddere',\r\n        inflections: 'reddo 3, reddidi, redditum',\r\n        germanTranslation: 'zurückgeben',\r\n        relatedForeignWords: 'aus: re- (zurück-) + dare',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'poena',\r\n        inflections: 'poenae f.',\r\n        germanTranslation: 'Strafe',\r\n        relatedForeignWords: 'vgl. Pönale (= Strafgeld), Penalty (= Strafstoß)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'poenas solvere',\r\n        inflections: '',\r\n        germanTranslation: 'eine Strafe verbüßen',\r\n        relatedForeignWords: 'wörtlich: \"Strafgeld zahlen\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'stare',\r\n        inflections: 'sto 1, steti, statum',\r\n        germanTranslation: 'stehen',\r\n        relatedForeignWords: 'vgl. Station, Statue; statisch (= stillstehend)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'arbor',\r\n        inflections: 'arboris f.',\r\n        germanTranslation: 'Baum',\r\n        relatedForeignWords: 'Nota bene: Bäume galten als weiblich!',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sitis',\r\n        inflections: 'sitis f. (i-Stamm)',\r\n        germanTranslation: 'Durst',\r\n        relatedForeignWords: 'ital. sete, span. sed',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'fames',\r\n        inflections: 'famis f.',\r\n        germanTranslation: 'Hunger',\r\n        relatedForeignWords: 'frz. faim, ital. fame',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cum (Konjunktion)',\r\n        inflections: '',\r\n        germanTranslation: '1) wenn, sooft; 2) als',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'bibere',\r\n        inflections: 'bibo 3, bibi, -',\r\n        germanTranslation: 'trinken',\r\n        relatedForeignWords: 'frz. boire, ital. bere, span. beber',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'improbus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'schlecht, böse',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'scelus',\r\n        inflections: 'sceleris n.',\r\n        germanTranslation: 'Verbrechen',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'mors',\r\n        inflections: 'mortis f.',\r\n        germanTranslation: 'Tod',\r\n        relatedForeignWords: 'frz. mort, ital. morte, span. muerte',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'contra (+ Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'gegen',\r\n        relatedForeignWords: 'vgl. Kontrast; Pro und Kontra (= Für und Wider)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'natura',\r\n        inflections: 'naturae f.',\r\n        germanTranslation: 'Natur',\r\n        relatedForeignWords: 'engl. + frz. nature, ital. natura',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'genus',\r\n        inflections: 'generis n.',\r\n        germanTranslation: '1) Art; 2) Geschlecht',\r\n        relatedForeignWords: 'engl. gender, frz. genre, ital. genere',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'punire',\r\n        inflections: 'punio 4, punivi, -itum',\r\n        germanTranslation: 'bestrafen',\r\n        relatedForeignWords: 'frz. punir, ital. punire; vgl. poena =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'saxum',\r\n        inflections: 'saxi n.',\r\n        germanTranslation: 'Fels',\r\n        relatedForeignWords: 'ital. sasso',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vis (Sg.)',\r\n        inflections: 'vim (4.F.), vi (6.F.) f.',\r\n        germanTranslation: '1) Kraft; 2) Gewalt',\r\n        relatedForeignWords: 'vgl. vis, viri (= Mann)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vires (Pl.)',\r\n        inflections: 'virium f.',\r\n        germanTranslation: 'die Kräfte',\r\n        relatedForeignWords: 'Viribus unitis (siehe links)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'paene (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'fast, beinahe',\r\n        relatedForeignWords: 'engl. quasi, pen-insula (\"Fast-Insel\" = Halbinsel)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 15 ---\r\n    {\r\n        latinWord: '^con^Lektion 15: De Orpheo et Eurydice',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'ille, illa, illud',\r\n        inflections: '',\r\n        germanTranslation: 'jener/e/es',\r\n        relatedForeignWords: 'vgl. die Artikel: frz. le/la, ital. il/la, span. el/la',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'et ... et',\r\n        inflections: '',\r\n        germanTranslation: 'sowohl ... als auch',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'animal (i-Stamm)',\r\n        inflections: 'animalis n.',\r\n        germanTranslation: '1) Tier; 2) Lebewesen',\r\n        relatedForeignWords: 'engl. + frz. + span. animal, ital. animale',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'carmen',\r\n        inflections: 'carminis n.',\r\n        germanTranslation: 'Lied',\r\n        relatedForeignWords: 'vgl. Carmina Burana (Carl Orff)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'canere',\r\n        inflections: 'cano 3, cecini, -',\r\n        germanTranslation: 'singen, besingen',\r\n        relatedForeignWords: 'frz. chanter, ital. cantare, span. cantar',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'olim (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'einst',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'matrimonium',\r\n        inflections: 'matrimonii n.',\r\n        germanTranslation: 'Ehe',\r\n        relatedForeignWords: 'ital. + span. matrimonio, engl. matrimony',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'in matrimonium ducere',\r\n        inflections: '',\r\n        germanTranslation: 'heiraten (vom Mann aus)',\r\n        relatedForeignWords: 'wörtl.: \"die Frau in die Ehe führen\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dolor',\r\n        inflections: 'doloris m.',\r\n        germanTranslation: 'Schmerz',\r\n        relatedForeignWords: 'frz. douleur, ital. dolore, span. dolor',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'flere',\r\n        inflections: 'fleo 2, flevi, fletum',\r\n        germanTranslation: 'weinen',\r\n        relatedForeignWords: 'vgl. flennen',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dolere',\r\n        inflections: 'doleo 2, dolui, -',\r\n        germanTranslation: 'trauern, Schmerz empfinden',\r\n        relatedForeignWords: 'vgl. dolor =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ipse, ipsa, ipsum',\r\n        inflections: '',\r\n        germanTranslation: 'selbst',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'regina',\r\n        inflections: 'reginae f.',\r\n        germanTranslation: 'Königin',\r\n        relatedForeignWords: 'ital. regina',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'movere',\r\n        inflections: 'moveo 2, movi, motum',\r\n        germanTranslation: 'bewegen; beeindrucken',\r\n        relatedForeignWords: 'engl. to move, movie; vgl. motivieren, Motor',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'postquam',\r\n        inflections: '',\r\n        germanTranslation: 'nachdem',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cuncti/ae/a (Pl.)',\r\n        inflections: '',\r\n        germanTranslation: 'alle; alles (n.)',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'frustra (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'vergeblich',\r\n        relatedForeignWords: 'vgl. Frustration (= enttäuschte Erwartung)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'desinere',\r\n        inflections: 'desino 3, desii, -',\r\n        germanTranslation: 'aufhören, ablassen',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'considerere',\r\n        inflections: 'consido 3, consedi, -',\r\n        germanTranslation: 'sich niedersetzen',\r\n        relatedForeignWords: '<-> sedere 2 =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ignotus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'unbekannt',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'eram, eras, ... (etc.)',\r\n        inflections: '',\r\n        germanTranslation: 'ich war, du warst ... (etc.)',\r\n        relatedForeignWords: '(Imperfekt von esse, siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'condicio',\r\n        inflections: 'condicionis f.',\r\n        germanTranslation: 'Bedingung',\r\n        relatedForeignWords: 'vgl. Konditionalsatz (= Bedingungssatz)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'uxor',\r\n        inflections: 'uxoris f.',\r\n        germanTranslation: 'Gattin, Ehefrau',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iter',\r\n        inflections: 'itineris n.',\r\n        germanTranslation: '1) Weg; 2) Reise',\r\n        relatedForeignWords: 'ital. + span. itinerario',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iter facere',\r\n        inflections: '',\r\n        germanTranslation: 'reisen, marschieren',\r\n        relatedForeignWords: 'wörtl.: \"eine Reise machen\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vertere',\r\n        inflections: 'verto 3, verti, versum',\r\n        germanTranslation: 'wenden, drehen',\r\n        relatedForeignWords: 'vgl. konvertieren (= die Religion wechseln)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'domus',\r\n        inflections: 'domus f.',\r\n        germanTranslation: 'Haus',\r\n        relatedForeignWords: 'vgl. Dom, Domizil (= Wohnsitz)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'longus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'lang',\r\n        relatedForeignWords: 'engl. long; vgl. Longinus (= großer Mensch)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'lux',\r\n        inflections: 'lucis f.',\r\n        germanTranslation: 'Licht',\r\n        relatedForeignWords: 'engl. luce, span. luz; vgl. Luzifer (\"Lichtbringer\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 16 ---\r\n    {\r\n        latinWord: '^con^Lektion 16: De Spartaco',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'natio',\r\n        inflections: 'nationis f.',\r\n        germanTranslation: 'Volk',\r\n        relatedForeignWords: 'vgl. inter-national, Nation, Nationalismus',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nobilis/e',\r\n        inflections: '',\r\n        germanTranslation: '1) vornehm; 2) adelig',\r\n        relatedForeignWords: 'frz. noble, ital. nobile, span. noble; vgl. nobel',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'natus/a/um',\r\n        inflections: '',\r\n        germanTranslation: '1) geboren; 2) abstammend',\r\n        relatedForeignWords: 'vgl. engl. native speaker',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'fortis/e',\r\n        inflections: '',\r\n        germanTranslation: 'tapfer',\r\n        relatedForeignWords: '<-> frz. fort + ital. forte (\"stark\")!',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'gladiator',\r\n        inflections: 'gladiatoris m.',\r\n        germanTranslation: 'Gladiator',\r\n        relatedForeignWords: 'wörtl.: \"Schwertkämpfer\" (vgl. gladius)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'crudelis/e',\r\n        inflections: '',\r\n        germanTranslation: 'grausam',\r\n        relatedForeignWords: 'engl. + frz. + span. cruel, ital. crudele',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'varius/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'verschieden',\r\n        relatedForeignWords: 'vgl. variieren (= abwechseln), Variante, Variation',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'discere',\r\n        inflections: 'disco 3, didici, -',\r\n        germanTranslation: 'lernen',\r\n        relatedForeignWords: 'vgl. discipulus =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'difficilis/e',\r\n        inflections: '',\r\n        germanTranslation: 'schwierig',\r\n        relatedForeignWords: 'engl. difficult, frz. + ital. difficile, span. difícil',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'exercitus',\r\n        inflections: 'exercitus m.',\r\n        germanTranslation: 'Heer',\r\n        relatedForeignWords: 'ital. esercito, span. ejercito; vgl. exercere (s.u.)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'brevis/e',\r\n        inflections: '',\r\n        germanTranslation: 'kurz',\r\n        relatedForeignWords: 'engl. brief, frz. bref, ital. + span. breve',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'tempus',\r\n        inflections: 'temporis n.',\r\n        germanTranslation: 'Zeit',\r\n        relatedForeignWords: 'frz. temps, ital. tempo; vgl. Temporalzsatz, temporär',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'agere',\r\n        inflections: 'ago 3, egi, actum',\r\n        germanTranslation: '1) tun; 2) verbringen',\r\n        relatedForeignWords: 'vgl. agieren, reagieren; agil (= beweglich, flink)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vitam agere',\r\n        inflections: '',\r\n        germanTranslation: 'das Leben verbringen',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'exercere',\r\n        inflections: 'exerceo 2, -ui, -itum',\r\n        germanTranslation: 'trainieren, üben',\r\n        relatedForeignWords: 'engl. exercise; vgl. exerzieren =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'celer/eris/ere',\r\n        inflections: '',\r\n        germanTranslation: 'schnell',\r\n        relatedForeignWords: 'ital. celere; vgl. engl. celerity',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ager',\r\n        inflections: 'agri m.',\r\n        germanTranslation: 'Feld; Pl.: Gebiet(e)',\r\n        relatedForeignWords: 'vgl. Aqar; vgl. engl. agriculture =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'latus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'weit, breit',\r\n        relatedForeignWords: 'vgl. Latifundien (= große Landgüter)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'recipere',\r\n        inflections: 'recipio M, recepi, receptum',\r\n        germanTranslation: 'aufnehmen',\r\n        relatedForeignWords: 'vgl. Rezept, Rezept',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'se recipere',\r\n        inflections: '',\r\n        germanTranslation: 'sich zurückziehen',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'continere',\r\n        inflections: 'contineo 2, continui, -',\r\n        germanTranslation: '1) zusammenhalten; 2) enthalten',\r\n        relatedForeignWords: 'vgl. Kontinent; Container',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cupiditas',\r\n        inflections: 'cupiditatis f.',\r\n        germanTranslation: 'Gier',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'adductus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'veranlasst',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'senatus',\r\n        inflections: 'senatus m.',\r\n        germanTranslation: 'Senat',\r\n        relatedForeignWords: 'eig.: \"Ältestenrat\" (vgl. senex = \"alter Mann\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cognoscere',\r\n        inflections: 'cognosco 3, cognovi, cognitum',\r\n        germanTranslation: 'erkennen; erfahren',\r\n        relatedForeignWords: 'vgl. engl. to recognize; incognito (= unerkannt)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'atrox (m./f./n.)',\r\n        inflections: 'atrocis (2.F.)',\r\n        germanTranslation: 'grausam, wild',\r\n        relatedForeignWords: 'ital. atroce, span. atroz',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'crux',\r\n        inflections: 'crucis f.',\r\n        germanTranslation: 'Kreuz',\r\n        relatedForeignWords: 'ital. croce, span. cruz; vgl. Kreuzigung',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 17 ---\r\n    {\r\n        latinWord: '^con^Lektion 17: De Cicerone',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'littera',\r\n        inflections: 'litterae f.',\r\n        germanTranslation: 'Buchstabe',\r\n        relatedForeignWords: 'vgl. die Lettern (= große Buchstaben)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'litterae (Pl.)',\r\n        inflections: 'litterarum f.',\r\n        germanTranslation: '1) Wissenschaft; 2) Brief',\r\n        relatedForeignWords: 'engl. letter; vgl. Literatur',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iuvenis',\r\n        inflections: 'iuvenis m.',\r\n        germanTranslation: 'junger Mann (30-45 Jahre)',\r\n        relatedForeignWords: 'ital. giovane; <-> adulescens (ca. 18-30 Jahre)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'orator',\r\n        inflections: 'oratoris m.',\r\n        germanTranslation: 'Redner',\r\n        relatedForeignWords: 'vgl. orare =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'res publica',\r\n        inflections: 'rei publicae f.',\r\n        germanTranslation: 'Staat',\r\n        relatedForeignWords: 'wörtl.: \"öffentliche Sache\"; vgl. Republik',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iustitia',\r\n        inflections: 'iustitiae f.',\r\n        germanTranslation: 'Gerechtigkeit',\r\n        relatedForeignWords: 'vgl. Justiz (= staatliche Rechtspflege)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'incola',\r\n        inflections: 'incolae m.',\r\n        germanTranslation: 'Bewohner, Einwohner',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'provincia',\r\n        inflections: 'provinciae f.',\r\n        germanTranslation: 'Provinz',\r\n        relatedForeignWords: 'vgl. die Provence (Region in S-Frankreich)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'divitiae (Pl.)',\r\n        inflections: 'divitiarum f.',\r\n        germanTranslation: 'Reichtum',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'antiquus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'alt',\r\n        relatedForeignWords: 'antik; vgl. Antiquitäten (= alte Kunstgegenstände)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ferre',\r\n        inflections: 'fero, fers, tuli, latum',\r\n        germanTranslation: 'tragen, bringen; ertragen',\r\n        relatedForeignWords: '(siehe Grammatica); vgl. Transfer',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nobilitas',\r\n        inflections: 'nobilitatis f.',\r\n        germanTranslation: 'Adel',\r\n        relatedForeignWords: 'vgl. Snob (= sine nobilitate); nobilis/e =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ius',\r\n        inflections: 'iuris n.',\r\n        germanTranslation: 'Recht',\r\n        relatedForeignWords: 'Jus, Jura, Jurisdiktion = Rechtsprechung',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'oratio',\r\n        inflections: 'orationis f.',\r\n        germanTranslation: 'Rede',\r\n        relatedForeignWords: 'vgl. orator (siehe oben) =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iudicium',\r\n        inflections: 'iudicii n.',\r\n        germanTranslation: 'Urteil',\r\n        relatedForeignWords: 'ital. giudizio, span. juicio',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sponte sua',\r\n        inflections: '',\r\n        germanTranslation: 'freiwillig',\r\n        relatedForeignWords: 'vgl. spontan (= aus eigenem Antrieb)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'exilium',\r\n        inflections: 'exilii n.',\r\n        germanTranslation: 'Exil, Verbannung',\r\n        relatedForeignWords: 'vgl. S. 82); vgl. Semperit = \"Es geht immer\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ire',\r\n        inflections: 'eo, is, ii, itum',\r\n        germanTranslation: 'gehen',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Romae',\r\n        inflections: '(Lokativ)',\r\n        germanTranslation: 'in Rom',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'studere (+ Dat.)',\r\n        inflections: 'studeo 2, studui, -',\r\n        germanTranslation: 'sich bemühen (um), streben (nach)',\r\n        relatedForeignWords: 'studieren, Student',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cogere',\r\n        inflections: 'cogo 3, coegi, coactum',\r\n        germanTranslation: '1) sammeln; 2) zwingen',\r\n        relatedForeignWords: 'aus: co-agere = wörtl.: \"zusammentreiben\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'consul',\r\n        inflections: 'consulis m.',\r\n        germanTranslation: 'Konsul',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'convocare',\r\n        inflections: 'convoco 1, -avi, -atum',\r\n        germanTranslation: 'zusammenrufen',\r\n        relatedForeignWords: 'con- = \"zusammen-\" (vgl. S. 118)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'senator',\r\n        inflections: 'senatoris m.',\r\n        germanTranslation: 'Senator',\r\n        relatedForeignWords: 'vgl. senatus (Lec. 16) =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ferre',\r\n        inflections: '1) ungefähr; 2) fast',\r\n        germanTranslation: '<-> ferre = \"tragen\"',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'exire',\r\n        inflections: 'exeo, exis, exii, exitum',\r\n        germanTranslation: 'hinausgehen',\r\n        relatedForeignWords: 'vgl. engl. exit; vgl. Exitus (= Tod)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iubere (+ Akk.)',\r\n        inflections: 'iubeo 2, iussi, iussum',\r\n        germanTranslation: 'befehlen; lassen (+ Inf.)',\r\n        relatedForeignWords: 'iubeo te (Akk.) = ich befehle dir (Dativ)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'socius',\r\n        inflections: 'socii m.',\r\n        germanTranslation: 'Gefährte',\r\n        relatedForeignWords: 'vgl. sozial, Sozialismus; Sozius (= Beifahrersitz)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'comprehendere',\r\n        inflections: 'comprehendo 3, comprehendi, -prehensum',\r\n        germanTranslation: '1) ergreifen; 2) erfassen (auch geistig)',\r\n        relatedForeignWords: 'vgl. engl. listening comprehension',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'afficere',\r\n        inflections: 'afficio M, affeci, affectum',\r\n        germanTranslation: 'erfüllen, versehen (mit)',\r\n        relatedForeignWords: 'vgl. Affekt (= Gefühlsregung)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'priusquam',\r\n        inflections: '',\r\n        germanTranslation: 'bevor',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'adire',\r\n        inflections: 'adeo, adis, adii, aditum',\r\n        germanTranslation: '1) hingehen; 2) sich wenden (an); 3) angreifen',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n\r\n    // --- Unit 18 ---\r\n    {\r\n        latinWord: '^con^Lektion 18: Caesar Gallos superat',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'C. Iulius Caesar',\r\n        inflections: 'Iulii Caesaris',\r\n        germanTranslation: 'Gaius Julius Cäsar',\r\n        relatedForeignWords: 'vgl. Kaiser, Zar; C. = altlateinisch für Gaius',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'prudens (m./f./n.)',\r\n        inflections: 'prudentis (2.F.)',\r\n        germanTranslation: 'klug',\r\n        relatedForeignWords: 'frz. prudent, ital. + span. prudente',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quam',\r\n        inflections: '',\r\n        germanTranslation: 'als (nach Komparativ)',\r\n        relatedForeignWords: 'vgl. Plusquamperfekt (= mehr als vergangen?)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'civitas',\r\n        inflections: 'civitatis f.',\r\n        germanTranslation: '1) Stamm; 2) Gemeinde; 3) Staat',\r\n        relatedForeignWords: 'vgl. engl. city, frz. cité, ital. città, span. ciudad',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Gallia',\r\n        inflections: 'Galliae f.',\r\n        germanTranslation: 'Gallien',\r\n        relatedForeignWords: '-> das heutige Frankreich; frz. Gaule',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'tradere',\r\n        inflections: 'trado 3, tradidi, traditum',\r\n        germanTranslation: '1) ausliefern; 2) überliefern',\r\n        relatedForeignWords: 'vgl. Tradition (= Überlieferung)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'se tradere',\r\n        inflections: '',\r\n        germanTranslation: 'sich ergeben',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'amicitia',\r\n        inflections: 'amicitiae f.',\r\n        germanTranslation: 'Freundschaft',\r\n        relatedForeignWords: 'ital. amicizia; vgl. amicus, amica',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'legio',\r\n        inflections: 'legionis f.',\r\n        germanTranslation: 'Legion',\r\n        relatedForeignWords: 'ca. 4000-6000 Mann',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'pauci/ae/a',\r\n        inflections: '',\r\n        germanTranslation: 'wenige',\r\n        relatedForeignWords: 'frz. peu, ital. tutto; vgl. total',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'totus/a/um',\r\n        inflections: '2.F. totius, 3.F. toti',\r\n        germanTranslation: 'ganz',\r\n        relatedForeignWords: 'frz. tout, ital. tutto; vgl. total',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'at',\r\n        inflections: '',\r\n        germanTranslation: 'aber',\r\n        relatedForeignWords: '= autem, sed; <-> atque (ac) = \"und\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'auctoritas',\r\n        inflections: 'auctoritatis f.',\r\n        germanTranslation: 'Ansehen, Einfluss',\r\n        relatedForeignWords: 'vgl. Autorität',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'omnis/e (Sg.)',\r\n        inflections: '',\r\n        germanTranslation: '1) jeder; 2) ganz',\r\n        relatedForeignWords: 'ital. ogni; vgl. omnipräsent',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'omnes (Pl. m./f.)',\r\n        inflections: '2.F. omnium',\r\n        germanTranslation: 'alle (Pl. m./f.)',\r\n        relatedForeignWords: 'vgl. Omnibus (wortl. = \"für alle\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'omnia (Pl. neutrum)',\r\n        inflections: '',\r\n        germanTranslation: 'alles (Sg. neutrum!)',\r\n        relatedForeignWords: 'z. B. omnia scio = \"ich weiß alles\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'proelium',\r\n        inflections: 'proelii n.',\r\n        germanTranslation: 'Schlacht',\r\n        relatedForeignWords: 'z. B. proelium committere =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'qui, quae, quod',\r\n        inflections: '(am Satzanfang)',\r\n        germanTranslation: 'dieser, diese, dieses',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'circumvenire',\r\n        inflections: 'circumvenio 4, circumveni, -ventum',\r\n        germanTranslation: 'umzingeln',\r\n        relatedForeignWords: 'circum (\"herum-\") + venire',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'advenire',\r\n        inflections: 'advenio 4, -veni, -ventum',\r\n        germanTranslation: 'hinkommen, ankommen',\r\n        relatedForeignWords: 'vgl. Advent (= Ankunft Christi)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'frumentum',\r\n        inflections: 'frumenti n.',\r\n        germanTranslation: 'Getreide',\r\n        relatedForeignWords: 'ital. frumento',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'concilium',\r\n        inflections: 'concilii n.',\r\n        germanTranslation: 'Versammlung',\r\n        relatedForeignWords: 'vgl. Konzil; <-> consilium =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'honestus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'ehrenhaft, ehrenvoll',\r\n        relatedForeignWords: 'engl. honest = \"anständig\", \"ehrlich\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'servitus',\r\n        inflections: 'servitutis f.',\r\n        germanTranslation: 'Sklaverei',\r\n        relatedForeignWords: 'vgl. servus =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'aetas',\r\n        inflections: 'aetatis f.',\r\n        germanTranslation: '1) Alter; 2) Zeitalter, Zeit',\r\n        relatedForeignWords: 'engl. span. edad',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'aut',\r\n        inflections: '',\r\n        germanTranslation: 'oder',\r\n        relatedForeignWords: 'sobald',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ubi (+ Perfekt)',\r\n        inflections: '',\r\n        germanTranslation: 'sobald',\r\n        relatedForeignWords: 'wird als Fragewort =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'prior (m./f.), prius (n.)',\r\n        inflections: '',\r\n        germanTranslation: 'der/die/das frühere',\r\n        relatedForeignWords: 'vgl. Priorität (= Vorrang, Vorzug)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'acer/acris/acre',\r\n        inflections: '',\r\n        germanTranslation: '1) heftig; 2) spitz, scharf',\r\n        relatedForeignWords: '<-> cepi (von capere M) = \"ich habe gefangen\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'incipere',\r\n        inflections: 'incipio M, coepi, coeptum',\r\n        germanTranslation: 'beginnen, anfangen',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 19 ---\r\n    {\r\n        latinWord: '^con^Lektion 19: De Caesaris morte',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'maximus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'der größte, sehr groß',\r\n        relatedForeignWords: 'vgl. maximal, maximieren, Maximum',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'potestas',\r\n        inflections: 'potestatis f.',\r\n        germanTranslation: 'Macht',\r\n        relatedForeignWords: 'vgl. posse =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dictator',\r\n        inflections: 'dictatoris m.',\r\n        germanTranslation: 'Diktator',\r\n        relatedForeignWords: 'Oberbefehlshaber in Kriegszeiten für max. 6 Monate',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'perpetuus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'ununterbrochen, ewig',\r\n        relatedForeignWords: 'dictator perpetuus = \"Diktator auf Lebenszeit\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'civis',\r\n        inflections: 'civis m.',\r\n        germanTranslation: 'Bürger',\r\n        relatedForeignWords: 'vgl. Zivilist; civis =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'persuadere',\r\n        inflections: 'persuadeo 2, persuasi, persuasum',\r\n        germanTranslation: '1) überreden; 2) überzeugen',\r\n        relatedForeignWords: 'engl. to persuade, frz. persuader, ital. persuadere',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'persuadeo tibi',\r\n        inflections: '',\r\n        germanTranslation: 'ich überrede dich (Akk.!)',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'mos',\r\n        inflections: 'moris m.',\r\n        germanTranslation: 'Sitte, Brauch',\r\n        relatedForeignWords: 'vgl. Moral (Sittenlehre); mos, mortis =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'lex',\r\n        inflections: 'legis f.',\r\n        germanTranslation: 'Gesetz',\r\n        relatedForeignWords: 'frz. loi, ital. legge, span. ley; vgl. legal, Legislative (= gesetzgebende Gewalt im Staat)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'libertas',\r\n        inflections: 'libertatis f.',\r\n        germanTranslation: 'Freiheit',\r\n        relatedForeignWords: 'engl. liberty, frz. liberté, span. libertad; vgl. liberare =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'melior (m./f.)',\r\n        inflections: 'melius (n.)',\r\n        germanTranslation: 'besser',\r\n        relatedForeignWords: 'frz. meilleur, ital. miglior, span. mejor',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'caedes',\r\n        inflections: 'caedis f.',\r\n        germanTranslation: 'Ermordung, Mord',\r\n        relatedForeignWords: 'frz. homicide, ital. omicidio; engl. homicide',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vivere',\r\n        inflections: 'vivo 3, vixi, -',\r\n        germanTranslation: 'leben',\r\n        relatedForeignWords: 'frz. vivre, ital. vivere, span. vivir; engl. to survive',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'facilis/e',\r\n        inflections: '',\r\n        germanTranslation: 'leicht',\r\n        relatedForeignWords: 'frz. facile, ital. facile, span. facil; <-> difficilis =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'plurimi/ae/a',\r\n        inflections: '',\r\n        germanTranslation: 'die meisten',\r\n        relatedForeignWords: 'Superlativ zu multi/ae/a, siehe Lec. 17',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'statuere',\r\n        inflections: 'statuto 3, statui, statutum',\r\n        germanTranslation: '1) beschließen; 2) aufstellen',\r\n        relatedForeignWords: 'vgl. constituere; vgl. Statuten (= beschlossene Richtlinien)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'futurus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'zukünftig',\r\n        relatedForeignWords: 'vgl. engl. future, frz. futur, ital. + span. futuro',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'adesse',\r\n        inflections: 'adsum, ades, adfui, -',\r\n        germanTranslation: 'da sein, anwesend sein',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quidem',\r\n        inflections: '',\r\n        germanTranslation: 'zwar, freilich',\r\n        relatedForeignWords: '<-> ne ... quidem =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iste, ista, istud',\r\n        inflections: '',\r\n        germanTranslation: 'dieser/es (da)',\r\n        relatedForeignWords: 'abschätzig gemeint! (Deklination wie ille/illa/illud, S. 72)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'defendere',\r\n        inflections: 'defendo 3, defendi, defensum',\r\n        germanTranslation: 'verteidigen',\r\n        relatedForeignWords: 'frz. défendre, ital. difendere, span. defender; vgl. defensiv',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vulnus',\r\n        inflections: 'vulneris n.',\r\n        germanTranslation: 'Wunde',\r\n        relatedForeignWords: 'engl. vulnerable (= verletzlich, verwundbar)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ultimus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'der/die/das letzte',\r\n        relatedForeignWords: 'vgl. Ultimatum (= letzte Aufforderung)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 20 ---\r\n    {\r\n        latinWord: '^con^Lektion 20: De Cleopatra',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'convenire',\r\n        inflections: 'convenio 4, conveni, conventum',\r\n        germanTranslation: 'zusammenkommen',\r\n        relatedForeignWords: 'vgl. Konvent (= Klostergemeinde; Zusammenkunft)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'mulier',\r\n        inflections: 'mulieris f.',\r\n        germanTranslation: 'Frau',\r\n        relatedForeignWords: 'span. mujer, vgl. ital. moglie (= \"Ehefrau\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'finis (Sg.)',\r\n        inflections: 'finis m.',\r\n        germanTranslation: '1) Grenze; 2) Ende',\r\n        relatedForeignWords: 'vgl. Finale (= Endspiel)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'fines (Pl.)',\r\n        inflections: 'finium m.',\r\n        germanTranslation: 'Gebiet(e)',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'regnum',\r\n        inflections: 'regni n.',\r\n        germanTranslation: '1) Königreich, Reich; 2) Herrschaft',\r\n        relatedForeignWords: 'vgl. engl. reign (\"Herrschaft\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'augere',\r\n        inflections: 'augeo 2, auxi, auctum',\r\n        germanTranslation: 'vergrößern, steigern, vermehren',\r\n        relatedForeignWords: 'vgl. Auktion (= Versteigerung)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'donum',\r\n        inflections: 'doni n.',\r\n        germanTranslation: 'Geschenk',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'mihi gaudio est',\r\n        inflections: '',\r\n        germanTranslation: 'es bereitet mir Freude',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ingens (m./f./n.)',\r\n        inflections: 'ingentis (2.F.)',\r\n        germanTranslation: 'riesig, gewaltig',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ante (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'vorher, früher',\r\n        relatedForeignWords: 'span. antes; <-> ante (Präp.)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'clades',\r\n        inflections: 'cladis f.',\r\n        germanTranslation: 'Niederlage',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'classis',\r\n        inflections: 'classis f.',\r\n        germanTranslation: 'Flotte',\r\n        relatedForeignWords: 'auch: \"Abteilung\" (davon \"Klasse\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'animadvertere',\r\n        inflections: 'animadverto 3, animadverti, -versum',\r\n        germanTranslation: 'bemerken, wahrnehmen',\r\n        relatedForeignWords: 'aus: animum ad ... vertere (wörtl.: \"den Geist hinwenden zu ...\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cedere',\r\n        inflections: 'cedo 3, cessi, cessum',\r\n        germanTranslation: 'weggehen, weichen',\r\n        relatedForeignWords: 'vgl. Rezession (= Rückgang der Wirtschaft)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'claudere',\r\n        inflections: 'claudo 3, clausi, clausum',\r\n        germanTranslation: 'einschließen; schließen',\r\n        relatedForeignWords: 'ital. chiudere; vgl. Klausur, Numerus clausus',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'custos',\r\n        inflections: 'custodis m.',\r\n        germanTranslation: 'Wächter',\r\n        relatedForeignWords: 'ital. custode; vgl. Küster (= Kirchendiener)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ponere',\r\n        inflections: 'pono 3, posui, positum',\r\n        germanTranslation: 'stellen, legen',\r\n        relatedForeignWords: 'engl. to put, span. poner; vgl. Position (= Lage)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'enim',\r\n        inflections: '(nachgestellt!)',\r\n        germanTranslation: 'denn, nämlich',\r\n        relatedForeignWords: 'z. B. tu enim = nam tu (\"denn du\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'auferre',\r\n        inflections: 'aufero, aufers, abstuli, ablatum',\r\n        germanTranslation: 'wegtragen, wegnehmen',\r\n        relatedForeignWords: 'aus: ab + ferre (= davontragen) vgl. \"Ablativ\" (drückt eine Trennung aus)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'serva',\r\n        inflections: 'servae f.',\r\n        germanTranslation: 'Sklavin',\r\n        relatedForeignWords: 'vgl. servus, -i =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 21 ---\r\n    {\r\n        latinWord: '^con^Lektion 21: De Paridis iudicio',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'praeter (+ Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'außer',\r\n        relatedForeignWords: 'ital. + span. discordia; <=> concordia =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'discordia',\r\n        inflections: 'discordiae f.',\r\n        germanTranslation: 'Zwietracht, Streit',\r\n        relatedForeignWords: 'ital. + span. discordia; <=> concordia =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'controversia',\r\n        inflections: 'controversiae f.',\r\n        germanTranslation: 'Auseinandersetzung',\r\n        relatedForeignWords: 'vgl. Kontroverse; aus: contra + verterel',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iacere',\r\n        inflections: 'iacio M, ieci, iactum',\r\n        germanTranslation: 'werfen, schleudern',\r\n        relatedForeignWords: 'vgl. projizieren, Projektor',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Venus',\r\n        inflections: 'Veneris f.',\r\n        germanTranslation: 'Göttin der Liebe (griech.: Aphrodite)',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'certare',\r\n        inflections: 'certo 1, -avi, -atum',\r\n        germanTranslation: '1) streiten; 2) wetteifern',\r\n        relatedForeignWords: 'vgl. Kon-zert',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iudicare',\r\n        inflections: 'iudico 1, -avi, -atum',\r\n        germanTranslation: '1) urteilen, beurteilen; 2) richten',\r\n        relatedForeignWords: 'vgl. iudicium, -i =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'deligere',\r\n        inflections: 'deligo 3, -legi, -lectum',\r\n        germanTranslation: 'auswählen',\r\n        relatedForeignWords: 'engl. election (= Wahl)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'praemium',\r\n        inflections: 'praemii n.',\r\n        germanTranslation: 'Belohnung, Preis',\r\n        relatedForeignWords: 'Prämie, prämieren',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'praeterea (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'außerdem',\r\n        relatedForeignWords: 'aus: praeter + ea (wörtl.: \"außer diesem\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dives (m./f./n.)',\r\n        inflections: 'divitis (2.F.)',\r\n        germanTranslation: 'reich',\r\n        relatedForeignWords: 'vgl. divitate, -arum =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'fortitudo',\r\n        inflections: 'fortitudinis f.',\r\n        germanTranslation: 'Tapferkeit',\r\n        relatedForeignWords: 'vgl. fortis/e =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quia',\r\n        inflections: '',\r\n        germanTranslation: 'weil',\r\n        relatedForeignWords: '= quod (Einleitung eines Kausalsatzes)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Graecia',\r\n        inflections: 'Graeciae f.',\r\n        germanTranslation: 'Griechenland',\r\n        relatedForeignWords: '<=> Graeci, -orum =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'decernere',\r\n        inflections: 'decerno 3, decrevi, decretum',\r\n        germanTranslation: 'beschließen',\r\n        relatedForeignWords: 'vgl. Dekret (= amtlicher Beschluss)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'eo (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'dorthin',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'fides',\r\n        inflections: 'fidei f.',\r\n        germanTranslation: 'Treue, Vertrauen (hier: Schutz)',\r\n        relatedForeignWords: 'ital. fede',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'mandare',\r\n        inflections: 'mando 1, -avi, -atum',\r\n        germanTranslation: 'anvertrauen',\r\n        relatedForeignWords: 'vgl. Mandant; eigentl.: in manum dare',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'occasio',\r\n        inflections: 'occasionis f.',\r\n        germanTranslation: 'Gelegenheit',\r\n        relatedForeignWords: 'engl. occasion, frz. occasion, span. ocasión',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iungere',\r\n        inflections: 'iungo 3, iunxi, iunctum',\r\n        germanTranslation: 'verbinden',\r\n        relatedForeignWords: 'vgl. con-iungere =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'maritus',\r\n        inflections: 'mariti m.',\r\n        germanTranslation: 'Gatte, Ehemann',\r\n        relatedForeignWords: 'frz. mari, ital. marito, span. marido',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'aut ... aut',\r\n        inflections: '',\r\n        germanTranslation: 'entweder ... oder',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'eiusmodi',\r\n        inflections: '(= huiusmodi)',\r\n        germanTranslation: 'derartig',\r\n        relatedForeignWords: 'wörtl.: \"dieser Art\"; vgl. modus, Lec. 12',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Troia',\r\n        inflections: 'Troiae f.',\r\n        germanTranslation: 'Troja',\r\n        relatedForeignWords: '(siehe De Graecis S. 106)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 22 ---\r\n    {\r\n        latinWord: '^con^Lektion 22: De ira Achillis',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'ira',\r\n        inflections: 'irae f.',\r\n        germanTranslation: 'Zorn',\r\n        relatedForeignWords: 'ital. + span. ira; vgl. iratus/a/um =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'moenia (Pl.)',\r\n        inflections: 'moenium n. (3. Dekl.)',\r\n        germanTranslation: '(Stadt-)Mauern',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'altus/a/um',\r\n        inflections: '',\r\n        germanTranslation: '1) hoch; 2) tief',\r\n        relatedForeignWords: 'ital. alto; vgl. Altstimme (tiefe Frauenstimme)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ut (+ Konj.)',\r\n        inflections: '',\r\n        germanTranslation: 'dass; damit; sodass',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Troiani (Pl.)',\r\n        inflections: 'Troianorum m.',\r\n        germanTranslation: 'die Trojaner',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'tenere',\r\n        inflections: 'teneo 2, tenui, -',\r\n        germanTranslation: 'halten',\r\n        relatedForeignWords: 'ital. tenere, span. tener',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'abstinere',\r\n        inflections: 'abstineo 2, abstinui, -',\r\n        germanTranslation: '(sich) fernhalten (von)',\r\n        relatedForeignWords: 'vgl. abstinent (= enthaltsam)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'imperium',\r\n        inflections: 'imperii n.',\r\n        germanTranslation: '1) Befehl; 2) Herrschaft; 3) Reich',\r\n        relatedForeignWords: 'engl. empire, frz. empire, vgl. Imperativ, Imperialismus',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'obtinere',\r\n        inflections: 'obtineo 2, obtinui, -',\r\n        germanTranslation: 'innehalten, besitzen',\r\n        relatedForeignWords: 'engl. to obtain',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'incendere',\r\n        inflections: 'incendo 3, incendi, incensum',\r\n        germanTranslation: 'anzünden',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ne (+ Konj.)',\r\n        inflections: '',\r\n        germanTranslation: 'dass nicht; damit nicht',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'putare',\r\n        inflections: 'puto 1, putavi, putatum',\r\n        germanTranslation: '1) glauben; 2) halten für',\r\n        relatedForeignWords: 'puto te amicum = \"ich halte dich für einen Freund\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'interesse (+ Dat.)',\r\n        inflections: 'intersum, interfui, -',\r\n        germanTranslation: 'bewohnen, teilnehmen (an)',\r\n        relatedForeignWords: 'Interesse (geistig bei etwas dabei sein)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'complures (m./f.), complura (n.)',\r\n        inflections: '',\r\n        germanTranslation: 'mehrere',\r\n        relatedForeignWords: '<-> plurimi/ae/a = \"die meisten\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'caedere',\r\n        inflections: 'caedo 3, cecidi, caesum',\r\n        germanTranslation: '(fällen =) töten',\r\n        relatedForeignWords: 'vgl. caedes, -is =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'deponere',\r\n        inflections: 'depono 3, deposui, depositum',\r\n        germanTranslation: 'ablegen, weglegen',\r\n        relatedForeignWords: 'vgl. deponieren, Deponie',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'equus',\r\n        inflections: 'equi m.',\r\n        germanTranslation: 'Pferd',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'trahere',\r\n        inflections: 'traho 3, traxi, tractum',\r\n        germanTranslation: 'ziehen',\r\n        relatedForeignWords: 'vgl. Traktor, subtrahieren (\"ab-ziehen\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'magis (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'mehr',\r\n        relatedForeignWords: 'vgl. magister (wört.: einer, der \"mehr\" ist)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'preces (Pl.)',\r\n        inflections: 'precum f. (3. Dekl.)',\r\n        germanTranslation: 'die Bitten',\r\n        relatedForeignWords: 'vgl. ital. pregare',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'aurum',\r\n        inflections: 'auri n.',\r\n        germanTranslation: 'Gold',\r\n        relatedForeignWords: 'chem. Zeichen für Gold = Au',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'frater',\r\n        inflections: 'fratris m.',\r\n        germanTranslation: 'Bruder',\r\n        relatedForeignWords: 'frz. frère, ital. fratello',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Apollo',\r\n        inflections: 'Apollinis m.',\r\n        germanTranslation: 'Apoll',\r\n        relatedForeignWords: 'griech.-röm. Gott der Weissagungskunst',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 23 ---\r\n    {\r\n        latinWord: '^con^Lektion 23: De equo Troiano',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'Troianus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'trojanisch',\r\n        relatedForeignWords: '<-> Troiani, -orum =',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'Ulixes',\r\n        inflections: 'Uliхis m.',\r\n        germanTranslation: 'Odysseus',\r\n        relatedForeignWords: 'vgl. James Joyces Roman \"Ulysses\"',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'etsi',\r\n        inflections: '',\r\n        germanTranslation: 'wenn auch, obwohl',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'firmus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'stark',\r\n        relatedForeignWords: 'vgl. Firmung (= \"Stärkung\" im Glauben)',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'numquam (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'niemals',\r\n        relatedForeignWords: 'span. nunca',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'includere',\r\n        inflections: 'includo 3, inclusi, inclusum',\r\n        germanTranslation: 'einschließen',\r\n        relatedForeignWords: 'vgl. Inkludieren; inklusive',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'cum (+ Konj.)',\r\n        inflections: '',\r\n        germanTranslation: '1) als; 2) weil; 3) obwohl',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'apparere',\r\n        inflections: 'appareo 2, apparui, -',\r\n        germanTranslation: 'erscheinen',\r\n        relatedForeignWords: 'engl. to appear, ital. apparire, span. aparecer',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'intra (+ Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'innerhalb',\r\n        relatedForeignWords: 'vgl. internus, intramuskulär etc.',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'favere (+ Dat.)',\r\n        inflections: 'faveo 2, favi, fautum',\r\n        germanTranslation: 'begünstigen, bevorzugen',\r\n        relatedForeignWords: 'vgl. favorisieren',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'arx',\r\n        inflections: 'arcis f.',\r\n        germanTranslation: 'Burg',\r\n        relatedForeignWords: 'ars, artis =',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'victoria',\r\n        inflections: 'victoriae f.',\r\n        germanTranslation: 'Sieg',\r\n        relatedForeignWords: 'frz. victoire, ital. vittoria, span. victoria',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'vinum',\r\n        inflections: 'vini n.',\r\n        germanTranslation: 'Wein',\r\n        relatedForeignWords: 'frz. vin, ital. + span. vino',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'celebrare',\r\n        inflections: 'celebro 1, -avi, -atum',\r\n        germanTranslation: 'feiern',\r\n        relatedForeignWords: 'vgl. zelebrieren, engl. celebrities',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'universus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'alle (gemeinsam)',\r\n        relatedForeignWords: 'ital. universale; vgl. universal',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'interea (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'inzwischen',\r\n        relatedForeignWords: 'aus: inter + ea = \"zwischen diesen (Dingen)\"',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'redire',\r\n        inflections: 'redeo, redii, reditum',\r\n        germanTranslation: 'zurückkehren',\r\n        relatedForeignWords: '-> reddere 3, reddidi, redditum =',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'aperire',\r\n        inflections: 'aperio 4, aperui, apertum',\r\n        germanTranslation: 'öffnen',\r\n        relatedForeignWords: 'frz. ouvrir, ital. aprire, span. abrir, vgl. Aperitif',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'flamma',\r\n        inflections: 'flammae f.',\r\n        germanTranslation: 'Flamme',\r\n        relatedForeignWords: 'ital. fiamma (fiammifero = Streichholz)',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'consumere',\r\n        inflections: 'consumo 3, consumpsi, consumptum',\r\n        germanTranslation: '1) vernichten; 2) verbrauchen',\r\n        relatedForeignWords: 'vgl. konsumieren, Konsument, Konsum',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n\r\n    // --- Unit 24 ---\r\n    {\r\n        latinWord: '^con^Lektion 24: De Cassandra',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'velle',\r\n        inflections: 'volo, vis, volui, -',\r\n        germanTranslation: 'wollen',\r\n        relatedForeignWords: '(siehe Grammatica); frz. vouloir, ital. volere',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nolle',\r\n        inflections: 'nolo, non vis, nolui, -',\r\n        germanTranslation: 'nicht wollen',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Noli me tangere!',\r\n        inflections: '(Verbot mit noli)',\r\n        germanTranslation: 'Berühr mich nicht!',\r\n        relatedForeignWords: 'Das sagte Jesus nach seiner Auferstehung zu Maria Magdalena.',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'verus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'wahr, echt',\r\n        relatedForeignWords: 'frz. vrai, ital. vero, span. verdadero',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'promittere',\r\n        inflections: 'promitto 3, promisi, promissum',\r\n        germanTranslation: 'versprechen',\r\n        relatedForeignWords: 'engl. to promise, frz. promettre, ital. promettere, span. prometer',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sperare',\r\n        inflections: 'spero 1, -avi, -atum',\r\n        germanTranslation: 'hoffen, erhoffen',\r\n        relatedForeignWords: 'frz. espérer, ital. sperare, span. esperar',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'praebere',\r\n        inflections: 'praebeo 2, -ui, -itum',\r\n        germanTranslation: 'bieten, anbieten, geben',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'scientia',\r\n        inflections: 'scientiae f.',\r\n        germanTranslation: 'Wissen, Kenntnis',\r\n        relatedForeignWords: 'vgl. scire; engl. science, frz. science, ital. scienza, span. ciencia',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'usus',\r\n        inflections: 'usus m.',\r\n        germanTranslation: '1) Nutzen; 2) Gebrauch',\r\n        relatedForeignWords: 'engl. use, frz. utilité; vgl. \"es ist Usus\" =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'usui esse',\r\n        inflections: '(Zweckdativ)',\r\n        germanTranslation: 'nützlich sein',\r\n        relatedForeignWords: 'wörtl. = \"zum Nutzen sein\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'veritas',\r\n        inflections: 'veritatis f.',\r\n        germanTranslation: 'Wahrheit',\r\n        relatedForeignWords: 'frz. vérité, ital. verità, span. verdad',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'credere',\r\n        inflections: 'credo 3, credidi, creditum',\r\n        germanTranslation: 'glauben',\r\n        relatedForeignWords: 'ital. credere; vgl. Credo, Kredit (Gläubiger)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'inde (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: '1) von da an; 2) von dort',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ardere',\r\n        inflections: 'ardeo 2, arsi, -',\r\n        germanTranslation: 'brennen',\r\n        relatedForeignWords: 'vgl. ital. ardente, span. ardiente = brennend',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'tacere',\r\n        inflections: 'taceo 2, -ui, -',\r\n        germanTranslation: 'schweigen',\r\n        relatedForeignWords: 'frz. taire, ital. tacere',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'interire',\r\n        inflections: 'intereo, interii, interitum',\r\n        germanTranslation: 'sterben, untergehen',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'errare',\r\n        inflections: 'erro 1, -avi, -atum',\r\n        germanTranslation: 'irren, sich irren',\r\n        relatedForeignWords: 'ital. errare; vgl. engl. error',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'tollere',\r\n        inflections: 'tollo 3, sustuli, sublatum',\r\n        germanTranslation: 'aufheben, (er)heben',\r\n        relatedForeignWords: '<-> tolerare 1 = ertragen',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'orare',\r\n        inflections: 'oro 1, -avi, -atum',\r\n        germanTranslation: '1) (er)bitten; 2) beten',\r\n        relatedForeignWords: 'ital. orare, span. orar; vgl. Oratorium',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n\r\n    // --- Unit 25 ---\r\n    {\r\n        latinWord: '^con^Lektion 25: De Ulixe',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'poeta',\r\n        inflections: 'poetae m.',\r\n        germanTranslation: 'Dichter',\r\n        relatedForeignWords: 'Poet; frz. poète, ital. + span. poeta',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'pervenire',\r\n        inflections: 'pervenio 4, perveni, perventum',\r\n        germanTranslation: 'kommen, gelangen',\r\n        relatedForeignWords: 'wörtl.: \"durchkommen\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'inire',\r\n        inflections: 'ineo, inii, initum',\r\n        germanTranslation: 'hineingehen, betreten',\r\n        relatedForeignWords: 'vgl. etwas initiieren (= in Angriff nehmen), Initiative, Initialen (= Anfangsbuchstaben)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'exitus',\r\n        inflections: 'exitus m.',\r\n        germanTranslation: '1) Ausgang; 2) Ende, Tod',\r\n        relatedForeignWords: 'engl. exit',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dulcis/e',\r\n        inflections: '',\r\n        germanTranslation: 'süß',\r\n        relatedForeignWords: 'frz. doux/douce, ital. dolce (= Nachspeise)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'forte (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'zufällig',\r\n        relatedForeignWords: '<=> fortis/e =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'postulare',\r\n        inflections: 'postulo 1, -avi, -atum',\r\n        germanTranslation: 'fordern',\r\n        relatedForeignWords: 'vgl. postulieren, Postulat (= Forderung)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'gratia',\r\n        inflections: 'gratiae f.',\r\n        germanTranslation: 'Dank',\r\n        relatedForeignWords: 'ital. grazie, span. gracias; vgl. gratis (Abl.): \"um den (bloßen) Dank\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'gratias agere',\r\n        inflections: '',\r\n        germanTranslation: 'danken, Dank sagen',\r\n        relatedForeignWords: 'wörtl.: \"Dank tun\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'tandem',\r\n        inflections: '',\r\n        germanTranslation: 'endlich, schließlich',\r\n        relatedForeignWords: '= postremo, denique; <=> tamen =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'plenus/a/um',\r\n        inflections: '(+ Gen.)',\r\n        germanTranslation: 'voll (mit/von)',\r\n        relatedForeignWords: 'frz. plein, ital. pieno, span. lleno; vgl. das Plenum (= die Vollversammlung)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ignis',\r\n        inflections: 'ignis m.',\r\n        germanTranslation: 'Feuer',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sumere',\r\n        inflections: 'sumo 3, sumpsi, sumptum',\r\n        germanTranslation: 'nehmen',\r\n        relatedForeignWords: 'vgl. consumere =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'frons',\r\n        inflections: 'frontis f.',\r\n        germanTranslation: 'Stirn',\r\n        relatedForeignWords: 'ital. fronte, span. frente; vgl. Front, frontal',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'laedere',\r\n        inflections: 'laedo 3, laesi, laesum',\r\n        germanTranslation: 'verletzen',\r\n        relatedForeignWords: 'vgl. lädiert =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vero',\r\n        inflections: '',\r\n        germanTranslation: 'aber',\r\n        relatedForeignWords: 'versus/a/um (Adjektiv) =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'constat',\r\n        inflections: 'constitit, -',\r\n        germanTranslation: 'es steht fest (+ ACI: dass)',\r\n        relatedForeignWords: 'vgl. konstant, Konstante (= unveränderbarer Wert)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'posterus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'folgend, nachfolgend',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'postero die',\r\n        inflections: '(Zeitablativ)',\r\n        germanTranslation: 'am folgenden Tag',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'diligens (m./f./n.)',\r\n        inflections: 'diligentis (2.F.)',\r\n        germanTranslation: 'sorgfältig, genau',\r\n        relatedForeignWords: 'engl. diligent, ital. + span. diligente',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'prodesse',\r\n        inflections: 'prosum, prodes, profui, -',\r\n        germanTranslation: 'nützen',\r\n        relatedForeignWords: 'vgl. Prosit! (= \"Es soll dir nützen!\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 26 ---\r\n    {\r\n        latinWord: '^con^Lektion 26: De incendio Romae',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'incendium',\r\n        inflections: 'incendii n.',\r\n        germanTranslation: 'Brand',\r\n        relatedForeignWords: 'ital. + span. incendio; vgl. incendere =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'princeps',\r\n        inflections: 'principis m.',\r\n        germanTranslation: '1) der Erste; 2) Prinzeps, Kaiser',\r\n        relatedForeignWords: 'vgl. Prinz, der Prinzipat (= römische Kaiserzeit)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'gravis/e',\r\n        inflections: '',\r\n        germanTranslation: 'schwer; schwerwiegend',\r\n        relatedForeignWords: 'gravierend, frz. grave, ital. + span. grave',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'existere',\r\n        inflections: 'existo 3, exstiti, -',\r\n        germanTranslation: 'entstehen',\r\n        relatedForeignWords: 'engl. to exist, ital. esistere, span. existir; vgl. existieren, Existenz',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'auctor',\r\n        inflections: 'auctoris m.',\r\n        germanTranslation: '1) Autor; 2) Urheber, Anstifter',\r\n        relatedForeignWords: '(> S. 141); frz. auteur, ital. autore, span. autor; vgl. auctoritas, -atis =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vastare',\r\n        inflections: 'vasto 1, -avi, -atum',\r\n        germanTranslation: 'verwüsten',\r\n        relatedForeignWords: 'vgl. devastieren (= völlig zerstören)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'numerus',\r\n        inflections: 'numeri m.',\r\n        germanTranslation: 'Zahl, Anzahl',\r\n        relatedForeignWords: 'Nummer; vgl. Numerus clausus',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'privatus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'privat',\r\n        relatedForeignWords: 'frz. privé, ital. privato, span. privado',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'publicus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'öffentlich',\r\n        relatedForeignWords: 'engl. public; vgl. publizieren (= veröffentlichen)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'fama',\r\n        inflections: 'famae f.',\r\n        germanTranslation: '1) Gerücht; 2) Ruf',\r\n        relatedForeignWords: 'ital. + span. fama; vgl. famos (= großartig)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'fama erat',\r\n        inflections: '',\r\n        germanTranslation: 'es gab das Gerücht',\r\n        relatedForeignWords: 'est sunt kann auch \"es gibt\" bedeuten!',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'magnitudo',\r\n        inflections: 'magnitudinis f.',\r\n        germanTranslation: 'Größe',\r\n        relatedForeignWords: 'frz. magnitude',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ornare',\r\n        inflections: 'orno 1, -avi, -atum',\r\n        germanTranslation: 'schmücken',\r\n        relatedForeignWords: 'ital. ornare, vgl. Ornament (= Verzierung)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'postea (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'später',\r\n        relatedForeignWords: '<=> post (+ Akk.) =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'appellare',\r\n        inflections: 'appello 1, -avi, -atum (+ Gen.)',\r\n        germanTranslation: '1) nennen; 2) rufen',\r\n        relatedForeignWords: 'frz. appeler, vgl. Appell (= Aufruf)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cupidus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'gierig (nach)',\r\n        relatedForeignWords: 'vgl. cupiditas, -atis =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cupidus gloriae',\r\n        inflections: '',\r\n        germanTranslation: 'gierig nach Ruhm',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'condere',\r\n        inflections: 'condo 3, condidi, conditum',\r\n        germanTranslation: 'gründen',\r\n        relatedForeignWords: 'vgl. urbe condita (a. u. c., siehe unten)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'usque ad (+ Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'bis zu',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'iussu',\r\n        inflections: '',\r\n        germanTranslation: 'auf Befehl',\r\n        relatedForeignWords: 'vgl. iubere, iussi, iussum =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'Christianus/i',\r\n        inflections: 'Christianorum m.',\r\n        germanTranslation: 'die Christen',\r\n        relatedForeignWords: 'frz. chrétiens, ital. cristiani, span. cristianos',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'crimen',\r\n        inflections: 'criminis n.',\r\n        germanTranslation: '1) Verbrechen; 2) Vorwurf',\r\n        relatedForeignWords: 'frz. crime, ital. crimine, span. crimen, engl. crime; vgl. Kriminalität, kriminell',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'accusare',\r\n        inflections: 'accuso 1, -avi, -atum',\r\n        germanTranslation: 'anklagen',\r\n        relatedForeignWords: 'engl. to accuse, frz. accuser, ital. accusare',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quasi',\r\n        inflections: '',\r\n        germanTranslation: 'gleichsam (als), wie',\r\n        relatedForeignWords: '<=> ital. quasi, span. casi = \"fast\"!',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 27 ---\r\n    {\r\n        latinWord: '^con^Lektion 27: De martyrio sancti Petri',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'sanctus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'heilig',\r\n        relatedForeignWords: 'engl. saint, frz. saint; vgl. Sankt Stefan (etc.)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'cultus',\r\n        inflections: 'cultus m.',\r\n        germanTranslation: 'Verehrung',\r\n        relatedForeignWords: 'vgl. Kult (= religiöse Verehrung)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dubitare',\r\n        inflections: 'dubito 1, -avi, -atum',\r\n        germanTranslation: '1) zögern; 2) zweifeln',\r\n        relatedForeignWords: 'engl. to doubt, ital. dubitare, span. dudar',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'commovere',\r\n        inflections: 'commoveo 2, commovi, commotum',\r\n        germanTranslation: '1) (heftig) bewegen; 2) veranlassen',\r\n        relatedForeignWords: 'vgl. movere =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'fuga',\r\n        inflections: 'fugae f.',\r\n        germanTranslation: 'Flucht',\r\n        relatedForeignWords: 'vgl. fugere; Refugium (= Zufluchtsort), Zentrifuge',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'proximus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'der nächste',\r\n        relatedForeignWords: 'frz. prochain, ital. prossimo, span. próximo',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'repente (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'plötzlich',\r\n        relatedForeignWords: '= subito; span. de repente',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'obviam (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'entgegen',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'videtur (+ Inf.)',\r\n        inflections: '',\r\n        germanTranslation: 'er/sie/es scheint',\r\n        relatedForeignWords: '(NCI, siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dominus',\r\n        inflections: 'domini m.',\r\n        germanTranslation: 'Herr',\r\n        relatedForeignWords: 'vgl. dominieren =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quo',\r\n        inflections: '',\r\n        germanTranslation: 'wohin',\r\n        relatedForeignWords: '<=> eo =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vadere',\r\n        inflections: 'vado 3, -',\r\n        germanTranslation: 'gehen',\r\n        relatedForeignWords: 'vgl. Invasion (= kriegerischer Einmarsch)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dicitur (+ Inf.)',\r\n        inflections: '',\r\n        germanTranslation: 'er/sie/es soll (angeblich)',\r\n        relatedForeignWords: '(NCI, siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'lacrima',\r\n        inflections: 'lacrimae f.',\r\n        germanTranslation: 'Träne',\r\n        relatedForeignWords: 'frz. larme, ital. lacrima',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'referre',\r\n        inflections: 'refero, rettuli, relatum',\r\n        germanTranslation: '1) zurückbringen; 2) berichten',\r\n        relatedForeignWords: 'vgl. referieren, Referent',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sic',\r\n        inflections: '',\r\n        germanTranslation: 'so',\r\n        relatedForeignWords: '= ita, tam',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'salus',\r\n        inflections: 'salutis f.',\r\n        germanTranslation: '1) Heil, Rettung; 2) Gruß',\r\n        relatedForeignWords: 'vgl. salutieren; Salut!',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'mundus',\r\n        inflections: 'mundi m.',\r\n        germanTranslation: 'Welt',\r\n        relatedForeignWords: 'frz. monde, ital. mondo, span. mundo; vgl. Minimmundus',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'dignus/a/um',\r\n        inflections: '(+ Abl.)',\r\n        germanTranslation: 'würdig (+ Gen.)',\r\n        relatedForeignWords: 'ital. degno, frz. digne, span. digno; vgl. engl. dignity =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 28 ---\r\n    {\r\n        latinWord: '^con^Lektion 28: De Marco Aurelio',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'dividere',\r\n        inflections: 'divido 3, divisi, divisum',\r\n        germanTranslation: 'trennen, teilen',\r\n        relatedForeignWords: 'engl. to divide; vgl. dividieren, Division',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'transire',\r\n        inflections: 'transeo, transii, transitum',\r\n        germanTranslation: 'überqueren, hinübergehen',\r\n        relatedForeignWords: 'aus: trans + ire; vgl. Transitverkehr',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'gens',\r\n        inflections: 'gentis f.',\r\n        germanTranslation: 'Volk',\r\n        relatedForeignWords: 'frz. gens, ital. + span. gente (= Leute) -> genus, -eris n.',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'traducere',\r\n        inflections: 'traduco 3, traduxi, traductum',\r\n        germanTranslation: 'hinüberführen',\r\n        relatedForeignWords: 'aus: trans + ducere',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'adhuc (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'bis jetzt; bisher',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'felix (m./f./n.)',\r\n        inflections: 'felicis (2.F.)',\r\n        germanTranslation: 'glücklich, erfolgreich',\r\n        relatedForeignWords: 'ital. felice, span. feliz; vgl. frz. félicité',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'fortuna',\r\n        inflections: 'fortunae f.',\r\n        germanTranslation: '1) Glück; 2) Schicksal',\r\n        relatedForeignWords: 'engl. + frz. fortune, ital. + span. fortuna',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'eques',\r\n        inflections: 'equitis m.',\r\n        germanTranslation: 'Reiter; Ritter',\r\n        relatedForeignWords: '<=> equus, -i',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'campus',\r\n        inflections: 'campi m.',\r\n        germanTranslation: 'Feld',\r\n        relatedForeignWords: 'frz. champ, vgl. Camping, der Uni-Campus',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'aestas',\r\n        inflections: 'aestatis f.',\r\n        germanTranslation: 'Sommer',\r\n        relatedForeignWords: 'frz. été, ital. estate; <=> aetas, -atis f. =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'deesse',\r\n        inflections: 'desum, dees, defui, -',\r\n        germanTranslation: 'fehlen',\r\n        relatedForeignWords: 'wörtl.: \"weg sein\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'fessus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'erschöpft, müde',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vix (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'kaum',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ullus/a/um',\r\n        inflections: 'ullius (2.F.), ulli (3.F.)',\r\n        germanTranslation: 'irgend ein(e)',\r\n        relatedForeignWords: '<=> nullus =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'spes',\r\n        inflections: 'spei f.',\r\n        germanTranslation: 'Hoffnung',\r\n        relatedForeignWords: 'frz. espoir, ital. speranza, span. esperanza; vgl. sperare =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'rogare',\r\n        inflections: 'rogo 1, -avi, -atum',\r\n        germanTranslation: '1) bitten; 2) fragen',\r\n        relatedForeignWords: 'vgl. interrogare =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'divinus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'göttlich',\r\n        relatedForeignWords: 'engl. divine, frz. divin, ital. + span. divino; vgl. Diva',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'ecce!',\r\n        inflections: '',\r\n        germanTranslation: 'siehe!',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'miraculum',\r\n        inflections: 'miraculi n.',\r\n        germanTranslation: 'Wunder',\r\n        relatedForeignWords: 'engl. miracle; vgl. Mirakel, Miraculus (Zauberei!)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'accidere',\r\n        inflections: 'accido 3, accidi, -',\r\n        germanTranslation: 'geschehen',\r\n        relatedForeignWords: 'vgl. engl. accident =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 29 ---\r\n    {\r\n        latinWord: '^con^Lektion 29: De Constantino victore',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'victor',\r\n        inflections: 'victoris m.',\r\n        germanTranslation: 'siegreich; Sieger',\r\n        relatedForeignWords: 'vgl. Viktor; <=> victoria, -ae =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'civilis/e',\r\n        inflections: '',\r\n        germanTranslation: 'bürgerlich; Bürger-',\r\n        relatedForeignWords: 'vgl. zivil, engl. + frz. civil, ital. civile, span. civil',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'metuere',\r\n        inflections: 'metuo 3, metui, -',\r\n        germanTranslation: 'fürchten',\r\n        relatedForeignWords: 'ital. temere, span. temer',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'oraculum',\r\n        inflections: 'oraculi n.',\r\n        germanTranslation: 'Orakel(spruch)',\r\n        relatedForeignWords: 'frz. oracle, ital. oracolo, span. oraculo',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'extra (+ Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'außerhalb',\r\n        relatedForeignWords: 'vgl. E.T. = Extraterrestris, das Extra, extravagant Pronominale Deklination (S. 72)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'uterque, utraque, utrumque',\r\n        inflections: 'utriusque (2.F.), utrique (3.F.)',\r\n        germanTranslation: 'jeder von beiden, beide',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'notus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'bekannt',\r\n        relatedForeignWords: '<=> ignotus/a/um =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'signum',\r\n        inflections: 'signi n.',\r\n        germanTranslation: 'Zeichen',\r\n        relatedForeignWords: 'engl. sign, frz. signe, ital. segno, span. señal',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'scribere',\r\n        inflections: 'scribo 3, scripsi, scriptum',\r\n        germanTranslation: 'schreiben',\r\n        relatedForeignWords: 'frz. écrire, ital. scrivere, span. escribir; vgl. Skriptum, Manuskript',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'prope (+ Akk.)',\r\n        inflections: '',\r\n        germanTranslation: 'nahe bei',\r\n        relatedForeignWords: 'vgl. app-propinquare =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'pons',\r\n        inflections: 'pontis m.',\r\n        germanTranslation: 'Brücke',\r\n        relatedForeignWords: 'vgl. Pontifex maximus (= der Papst)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'plebs',\r\n        inflections: 'plebis f.',\r\n        germanTranslation: '(niedriges) Volk',\r\n        relatedForeignWords: 'vgl. Plebiszit (= Volksabstimmung)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'causa',\r\n        inflections: 'causae f.',\r\n        germanTranslation: 'Grund, Ursache',\r\n        relatedForeignWords: 'vgl. Kausalsatz (= Begründungssatz)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'qua de causa',\r\n        inflections: '',\r\n        germanTranslation: '1) deshalb; 2) weshalb',\r\n        relatedForeignWords: 'wörtl.: \"aus welchem Grund\"',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'consulere',\r\n        inflections: 'consulo 3, consului, consultum',\r\n        germanTranslation: 'befragen, um Rat fragen',\r\n        relatedForeignWords: 'vgl. konsultieren, Konsul (= \"Berater\")',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nuntiare',\r\n        inflections: 'nuntio 1, -avi, -atum',\r\n        germanTranslation: 'melden',\r\n        relatedForeignWords: 'vgl. nuntius, -i =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'hodie (Adv.)',\r\n        inflections: '',\r\n        germanTranslation: 'heute',\r\n        relatedForeignWords: 'aus: hoc + die =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'adducere',\r\n        inflections: 'adduco 3, adduxi, adductum',\r\n        germanTranslation: '1) hinführen; 2) veranlassen',\r\n        relatedForeignWords: 'vgl. adductus/a/um =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'studium',\r\n        inflections: 'studii n.',\r\n        germanTranslation: 'Eifer, Begeisterung',\r\n        relatedForeignWords: 'vgl. Studium; vgl. studere =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'premere',\r\n        inflections: 'premo 3, pressi, pressum',\r\n        germanTranslation: '1) drücken; 2) bedrängen',\r\n        relatedForeignWords: 'vgl. pressen; frz. presser; vgl. engl. pressure',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'pellere',\r\n        inflections: 'pello 3, pepuli, pulsum',\r\n        germanTranslation: 'schlagen, stoßen',\r\n        relatedForeignWords: 'vgl. Puls; vgl. expellere =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n\r\n    // --- Unit 30 ---\r\n    {\r\n        latinWord: '^con^Lektion 30: De beneficio sancti Martini',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        probability: 0,\r\n        selected: false\r\n    },\r\n    {\r\n        latinWord: 'beneficium',\r\n        inflections: 'beneficii n.',\r\n        germanTranslation: 'Wohltat',\r\n        relatedForeignWords: 'vgl. Benefizveranstaltung; aus: bene + facere',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'hiems',\r\n        inflections: 'hiemis f.',\r\n        germanTranslation: 'Winter',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'pauper (m./f./n.)',\r\n        inflections: 'pauperis (2.F.)',\r\n        germanTranslation: 'arm',\r\n        relatedForeignWords: 'frz. pauvre, ital. povero, span. pobre',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vestis',\r\n        inflections: 'vestis f.',\r\n        germanTranslation: 'Gewand',\r\n        relatedForeignWords: 'ital. vestiti; vgl. Weste, Transvestit, Investitur',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'pati (D)',\r\n        inflections: 'patior M, passus sum',\r\n        germanTranslation: '1) ertragen; 2) erleiden',\r\n        relatedForeignWords: 'vgl. passiv, Patient, Passion (= Leidensgeschichte)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'misericordia',\r\n        inflections: 'misericordiae f.',\r\n        germanTranslation: 'Mitleid',\r\n        relatedForeignWords: 'ital. misericordia; vgl. miser =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'nudus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'nackt',\r\n        relatedForeignWords: 'frz. nu, ital. nudo, span. desnudo; vgl. Nudist',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'reliquus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'übrig',\r\n        relatedForeignWords: '<=> relictus (PPP von relinquere) =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'similis/e',\r\n        inflections: '',\r\n        germanTranslation: 'ähnlich',\r\n        relatedForeignWords: 'engl. similar, ital. simile, frz. similaire, span. similar; vgl. As-similation (\"Anpassung\", S. 119)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'militaris/e',\r\n        inflections: '',\r\n        germanTranslation: 'militärisch, Militär-',\r\n        relatedForeignWords: '<=> miles, -itis =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'alter/era/erum',\r\n        inflections: 'alterius (2.F.), alteri (3.F.)',\r\n        germanTranslation: 'der andere (von zweien)',\r\n        relatedForeignWords: 'vgl. Alternative, das Alter Ego (= zweites Ich), Altruismus (= Selbstlosigkeit)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'alter - alter',\r\n        inflections: '',\r\n        germanTranslation: 'der eine - der andere',\r\n        relatedForeignWords: '(siehe Grammatica)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'mens',\r\n        inflections: 'mentis f.',\r\n        germanTranslation: 'Geist, Verstand, Sinn',\r\n        relatedForeignWords: 'vgl. mental, Mentalität (= Geisteshaltung)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sanus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'gesund; vernünftig',\r\n        relatedForeignWords: '<=> sanare; vgl. Sanitäter; SPA (siehe S. 27)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'queri (D)',\r\n        inflections: 'queror 3, questus sum',\r\n        germanTranslation: 'klagen',\r\n        relatedForeignWords: '<=> quaerere, quaesivi, quaesitum =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'humanus/a/um',\r\n        inflections: '',\r\n        germanTranslation: 'menschlich',\r\n        relatedForeignWords: 'engl. human, frz. humain; vgl. Humanbiologie',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'possidere',\r\n        inflections: 'possideo 2, possedi, possessum',\r\n        germanTranslation: 'besitzen',\r\n        relatedForeignWords: 'engl. to possess, vgl. Possessivpronomen (= besitzanzeigendes Fürwort, z.B. \"mein\" etc.)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sequi (D)',\r\n        inflections: 'sequor 3, secutus sum',\r\n        germanTranslation: 'folgen',\r\n        relatedForeignWords: 'vgl. Sequenz (= Abfolge); Con-secutio temporum',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'sequi te (Akk.!)',\r\n        inflections: '',\r\n        germanTranslation: 'ich folge dir (Dativ!)',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'tegere',\r\n        inflections: 'tego 3, texi, tectum',\r\n        germanTranslation: 'bedecken',\r\n        relatedForeignWords: 'vgl. Toga (= Körperbedeckung)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'loqui (D)',\r\n        inflections: 'loquor 3, locutus sum',\r\n        germanTranslation: 'sprechen',\r\n        relatedForeignWords: 'vgl. eloquent (= redegewandt)',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'vereri (D)',\r\n        inflections: 'vereor 2, veritus sum',\r\n        germanTranslation: '1) fürchten; 2) sich scheuen',\r\n        relatedForeignWords: 'vereri = timere / metuere',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'quidquid',\r\n        inflections: '',\r\n        germanTranslation: 'was auch immer; alles was',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'hortari (D)',\r\n        inflections: 'hortor 1, hortatus sum',\r\n        germanTranslation: 'auffordern, ermuntern',\r\n        relatedForeignWords: '',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: 'servire',\r\n        inflections: 'servio 4, -ivi, -itum',\r\n        germanTranslation: 'dienen',\r\n        relatedForeignWords: 'frz. + span. servir, vgl. servieren; <=> servare =',\r\n        selected: true,\r\n        probability: 1\r\n    },\r\n    {\r\n        latinWord: '^con^Eigene Vokabeln:',\r\n        inflections: '',\r\n        germanTranslation: '',\r\n        relatedForeignWords: '',\r\n        selected: false,\r\n        probability: 0\r\n    }\r\n];","import { addVocabulary, removeAllEventListeners, showVocabulary, inflectVocabulary, training } from \"..\";\r\n\r\nexport class HomeMenu {\r\n    input: HTMLDivElement;\r\n    iconPlaceholder: HTMLDivElement;\r\n    navbar: HTMLDivElement;\r\n\r\n    loaded = false;\r\n\r\n    padding = 0;\r\n    command = '';\r\n    keyDownFunction: EventListener;\r\n    resizeFunction: EventListener;\r\n\r\n    constructor() {\r\n        this.modifyDocument();\r\n    }\r\n\r\n    modifyDocument(): void {\r\n        this.resizeFunction = () => {\r\n            let object = <HTMLObjectElement>this.input.lastElementChild;\r\n            if (!object) return;\r\n            let w = window.innerWidth;\r\n            let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n            let h = (w / (this.input.childElementCount + 1)) * aspectRatio;\r\n            let padding = (this.input.getBoundingClientRect().height - h) / 2;\r\n            this.padding = Math.max(padding, 1);\r\n            this.movementAnimation();\r\n\r\n            this.movementAnimation()\r\n        };\r\n        window.addEventListener('resize', this.resizeFunction);\r\n        this.input = document.querySelector('#container');\r\n        this.iconPlaceholder = document.querySelector('#icon-placeholder');\r\n        this.navbar = document.querySelector('#navbar');\r\n\r\n        if (document.querySelector('.homeDiv')) {\r\n            let homeDiv = document.querySelector('.homeDiv');\r\n            homeDiv.remove();\r\n        }\r\n\r\n        document.body.style.backgroundImage = 'none';\r\n        document.body.style.backgroundImage = 'linear-gradient(180deg, #140063 0%, #06011b 65%, #06011b 77%, #140063 100%)';\r\n        document.body.setAttribute('class', '');\r\n        this.input.setAttribute('class', '');\r\n        this.iconPlaceholder.setAttribute('class', '');\r\n        this.navbar.setAttribute('class', '');\r\n        this.input.innerHTML = '';\r\n        this.iconPlaceholder.innerHTML = '';\r\n        this.navbar.innerHTML = '';\r\n\r\n        document.body.classList.add('homeBody');\r\n        this.input.classList.add('homeInput');\r\n        this.iconPlaceholder.classList.add('homeIconPlaceholder');\r\n        this.navbar.classList.add('homeNavbar');\r\n        \r\n        if (this.loaded) {\r\n            this.loaded = true;\r\n            let icon = document.createElement('object');\r\n            icon.data = './icon.svg';\r\n            icon.id = 'icon';\r\n            this.iconPlaceholder.insertAdjacentElement('beforeend', icon);\r\n            \r\n            let version = document.createElement('object');\r\n            version.data = './version.svg';\r\n            version.id = 'version';\r\n            this.iconPlaceholder.insertAdjacentElement('beforeend', version);\r\n\r\n            this.type();\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            console.log(\"servas\");\r\n            this.loaded = true;\r\n            let icon = document.createElement('object');\r\n            icon.data = './icon.svg';\r\n            icon.id = 'icon';\r\n            this.iconPlaceholder.insertAdjacentElement('beforeend', icon);\r\n            icon.addEventListener('load', () => {\r\n                const svgDoc = icon.contentDocument;\r\n                if (!svgDoc) return;\r\n\r\n                // Animation was created by COPILOT (GPT-5)\r\n                // collect groups l1..l13\r\n                const groups: SVGElement[] = [];\r\n                for (let i = 1; i <= 13; i++) {\r\n                    const g = svgDoc.querySelector<SVGElement>(`#l${i}`);\r\n                    if (!g) continue;\r\n\r\n                    // We'll wrap the original group in a new <g> so we can scale around the group's visual center\r\n                    // without disturbing its original transform (including any matrix(...) attributes).\r\n                    const wrapper = svgDoc.createElementNS('http://www.w3.org/2000/svg', 'g');\r\n\r\n                    // move the original group into the wrapper\r\n                    const parent = g.parentNode;\r\n                    if (parent) {\r\n                        parent.replaceChild(wrapper, g);\r\n                        wrapper.appendChild(g);\r\n                    }\r\n\r\n                    // ensure transforms are applied around the element center\r\n                    // use transform-box + transform-origin in pixels (viewport coords)\r\n                    (wrapper as unknown as any).style.transformBox = 'fill-box';\r\n                    (wrapper as unknown as any).style.transformOrigin = `50% 50%`;\r\n\r\n                    // start invisible and twice the final size\r\n                    (wrapper as any).style.opacity = '0';\r\n                    (wrapper as any).style.transform = 'scale(3)';\r\n\r\n                    groups.push(wrapper as unknown as SVGElement);\r\n                }\r\n\r\n                // stamp animation: scale from 2 -> 1 without moving the element\r\n                groups.forEach((g, idx) => {\r\n                    const delay = idx * 250 + 100; // stagger each letter slightly\r\n                    const anim = (g as any).animate(\r\n                        [\r\n                            { transform: 'scale(3)', opacity: 1 },\r\n                            { transform: 'scale(1)', opacity: 1 }\r\n                        ],\r\n                        {\r\n                            duration: 250,\r\n                            delay,\r\n                            fill: 'forwards'\r\n                        }\r\n                    );\r\n\r\n                    // ensure final styles are applied after the animation completes\r\n                    if (anim && (anim as any).finished && typeof (anim as any).finished.then === 'function') {\r\n                        (anim as any).finished.then(() => {\r\n                            (g as any).style.transform = 'scale(1)';\r\n                            (g as any).style.opacity = '1';\r\n                        }).catch(() => {\r\n                            // ignore cancellation errors but still set the final state\r\n                            (g as any).style.transform = 'scale(1)';\r\n                            (g as any).style.opacity = '1';\r\n                        });\r\n                    } else {\r\n                        // fallback if finished promise isn't available\r\n                        (g as any).style.transform = 'scale(1)';\r\n                        (g as any).style.opacity = '1';\r\n                    }\r\n                });\r\n\r\n                let version = document.createElement('object');\r\n                version.data = './version.svg';\r\n                version.id = 'version';\r\n                version.style.opacity = '0';\r\n                this.iconPlaceholder.insertAdjacentElement('beforeend', version);\r\n\r\n                // Call this once your <object> (or <embed>) holding the SVG is ready.\r\n                // `version` is the <object type=\"image/svg+xml\"> element.\r\n                // Assumes `version` is your <object type=\"image/svg+xml\" id=\"version\"> element.\r\n\r\n                version.addEventListener('load', () => {\r\n                    setTimeout(() => {\r\n                        const reduceMotion =\r\n                            window.matchMedia?.('(prefers-reduced-motion: reduce)')?.matches ?? false;\r\n\r\n                        // Access the embedded SVG document (must be same-origin)\r\n                        const svgDoc = (version as HTMLObjectElement).contentDocument;\r\n                        if (!svgDoc) {\r\n                            (version as HTMLElement).style.opacity = '1';\r\n                            console.warn('[fade-l5-l6] No contentDocument. Is the object same-origin?');\r\n                            return;\r\n                        }\r\n\r\n                        // Helper: get the <g id=\"...\"> or nearest <g> ancestor (if the id is on a child)\r\n                        const getGroup = (id: string): SVGGElement | null => {\r\n                            const el = svgDoc.getElementById(id) as unknown as SVGElement | null;\r\n                            if (!el) return null;\r\n                            if (el.nodeName.toLowerCase() === 'g') return el as unknown as SVGGElement;\r\n                            let p: Element | null = el.parentElement;\r\n                            while (p && p.nodeName.toLowerCase() !== 'g') p = p.parentElement;\r\n                            return p && p.nodeName.toLowerCase() === 'g'\r\n                                ? (p as unknown as SVGGElement)\r\n                                : null;\r\n                        };\r\n\r\n                        const l5 = getGroup('l5');\r\n                        const l6 = getGroup('l6');\r\n\r\n                        if (!l5 || !l6) {\r\n                            console.warn('[fade-l5-l6] Missing l5 and/or l6 in the SVG.', { l5: !!l5, l6: !!l6 });\r\n                            if (l5) l5.style.opacity = '1';\r\n                            if (l6) l6.style.opacity = '1';\r\n                            (version as HTMLElement).style.opacity = '1';\r\n                            return;\r\n                        }\r\n\r\n                        // Ensure l5/l6 are present but transparent (no layout impact in SVG anyway)\r\n                        const prep = (el: SVGGElement) => {\r\n                            el.style.transition = 'none';\r\n                            // Don’t touch display/visibility/transform to avoid surprises\r\n                            el.style.opacity = '0';\r\n                        };\r\n                        prep(l5);\r\n                        prep(l6);\r\n\r\n                        // ⬅️ NEW: Build a wrapper <g id=\"tail\"> around l7..l13 so we can move them together\r\n                        const SVG_NS = 'http://www.w3.org/2000/svg'; // ⬅️ NEW\r\n                        const tailIds = ['l7', 'l8', 'l9', 'l10', 'l11', 'l12', 'l13']; // ⬅️ NEW\r\n                        const tailChildren = tailIds.map(getGroup).filter((x): x is SVGGElement => !!x); // ⬅️ NEW\r\n\r\n                        let tail: SVGGElement | null = null; // ⬅️ NEW\r\n                        let tileWidth = 0; // ⬅️ NEW\r\n\r\n                        if (tailChildren.length) { // ⬅️ NEW\r\n                            // Estimate one tile width from any tile (they're identical squares)\r\n                            const l1 = getGroup('l1'); // use l1 if present, else any of tail children // ⬅️ NEW\r\n                            const ref = l1 ?? tailChildren[0]; // ⬅️ NEW\r\n                            try {\r\n                                tileWidth = ref.getBBox().width; // SVG user units // ⬅️ NEW\r\n                            } catch {\r\n                                // Fallback: try l5\r\n                                try { tileWidth = l5.getBBox().width; } catch { tileWidth = 0; }\r\n                            }\r\n\r\n                            // Only proceed if we could measure something sensible // ⬅️ NEW\r\n                            if (tileWidth > 0) {\r\n                                // Create wrapper\r\n                                tail = svgDoc.createElementNS(SVG_NS, 'g') as unknown as SVGGElement; // ⬅️ NEW\r\n                                tail.setAttribute('id', 'tail'); // ⬅️ NEW\r\n                                const parent = tailChildren[0].parentNode!; // ⬅️ NEW\r\n                                // Insert wrapper right before l7 (to preserve z-order) // ⬅️ NEW\r\n                                parent.insertBefore(tail, tailChildren[0]); // ⬅️ NEW\r\n                                // Move l7..l13 into the wrapper (preserves their own transforms) // ⬅️ NEW\r\n                                tailChildren.forEach(child => tail!.appendChild(child)); // ⬅️ NEW\r\n\r\n                                // Initial shift: exactly two tile widths to the left // ⬅️ NEW\r\n                                const offset = -2 * tileWidth; // ⬅️ NEW\r\n                                tail.setAttribute('transform', `translate(${offset},0)`); // ⬅️ NEW\r\n                            } else {\r\n                                console.warn('[fade-l5-l6] Could not determine tile width; skipping tail shift.'); // ⬅️ NEW\r\n                            }\r\n                        } else {\r\n                            console.warn('[fade-l5-l6] Could not find l7..l13; skipping tail shift.'); // ⬅️ NEW\r\n                        }\r\n\r\n                        version.animate([{\r\n                            opacity: '0'\r\n                        },\r\n                        {\r\n                            opacity: '.25'\r\n                        },\r\n                        {\r\n                            opacity: '1'\r\n                        }], {\r\n                            duration: 2500,\r\n                            fill: \"forwards\"\r\n                        }).finished.then(() => {\r\n                            this.type();\r\n                        })\r\n\r\n                        // Small utility: cubic-bezier evaluator for JS fallback // ⬅️ NEW\r\n                        const cubicBezier = (p0: number, p1: number, p2: number, p3: number) => {\r\n                            // x = t; y = bezier(t)\r\n                            const cx = 3 * p0, bx = 3 * (p2 - p0) - cx, ax = 1 - cx - bx;\r\n                            const cy = 3 * p1, by = 3 * (p3 - p1) - cy, ay = 1 - cy - by;\r\n                            return (t: number) => {\r\n                                const y = ((ay * t + by) * t + cy) * t; // we just use y(t) with t as time fraction\r\n                                return y;\r\n                            };\r\n                        };\r\n                        const ease = cubicBezier(0.25, 0.1, 0.25, 1); // ⬅️ NEW\r\n\r\n                        // JS fallback for animateTransform (in user units) // ⬅️ NEW\r\n                        const animateTranslateAttr = (\r\n                            el: SVGGElement,\r\n                            fromX: number,\r\n                            toX: number,\r\n                            duration: number,\r\n                            delay: number\r\n                        ) => {\r\n                            setTimeout(() => {\r\n                                const start = performance.now();\r\n                                const step = (now: number) => {\r\n                                    const t = Math.min(1, (now - start) / duration);\r\n                                    const x = fromX + (toX - fromX) * ease(t);\r\n                                    el.setAttribute('transform', `translate(${x},0)`);\r\n                                    if (t < 1) requestAnimationFrame(step);\r\n                                    else el.setAttribute('transform', 'translate(0,0)'); // snap-final\r\n                                };\r\n                                requestAnimationFrame(step);\r\n                            }, delay);\r\n                        };\r\n\r\n                        // Paint the initial frame (so you first see l1..l4 [gap] l7..l13)\r\n                        requestAnimationFrame(() => {\r\n                            (version as HTMLElement).style.opacity = '1'; // ensure host visible\r\n\r\n                            // Reduced motion: show immediately (no animation, no shift)\r\n                            if (reduceMotion) {\r\n                                l5.style.opacity = '1';\r\n                                l6.style.opacity = '1';\r\n                                if (tail) tail.setAttribute('transform', 'translate(0,0)'); // reset instantly // ⬅️ NEW\r\n                                return;\r\n                            }\r\n\r\n                            const fadeDuration = 800; // ms\r\n                            const fadeDelay = 400;    // ms\r\n                            const moveDuration = fadeDuration; // keep in sync with fade // ⬅️ NEW\r\n                            const moveDelay = fadeDelay;       // ⬅️ NEW\r\n\r\n                            // Try Web Animations API first (most reliable on SVG opacity)\r\n                            const fade = (el: SVGGElement) => {\r\n                                let usedWAAPI = false;\r\n\r\n                                try {\r\n                                    const anim = (el as any).animate?.(\r\n                                        [{ opacity: 0 }, { opacity: 1 }],\r\n                                        { duration: fadeDuration, delay: fadeDelay, easing: 'ease', fill: 'forwards' }\r\n                                    );\r\n\r\n                                    if (anim) {\r\n                                        usedWAAPI = true;\r\n                                        anim.finished\r\n                                            .then(() => { el.style.opacity = '1'; })\r\n                                            .catch(() => { el.style.opacity = '1'; });\r\n                                    }\r\n                                } catch {\r\n                                    // ignore and fall back\r\n                                }\r\n\r\n                                if (!usedWAAPI) {\r\n                                    // Fallback: CSS transition\r\n                                    el.style.transition = `opacity ${fadeDuration}ms ease ${fadeDelay}ms`;\r\n                                    // Trigger transition next tick to ensure transition is applied\r\n                                    requestAnimationFrame(() => { el.style.opacity = '1'; });\r\n\r\n                                    // Last-resort safeguard: force final state after duration+delay+buffer\r\n                                    setTimeout(() => { el.style.opacity = '1'; }, fadeDelay + fadeDuration + 50);\r\n                                }\r\n                            };\r\n\r\n                            fade(l5);\r\n                            fade(l6);\r\n\r\n                            // ⬅️ NEW: Animate the tail wrapper from -2w → 0 in SVG user units\r\n                            if (tail && tileWidth > 0) {\r\n                                const fromX = -2 * tileWidth;\r\n                                const toX = 0;\r\n\r\n                                // Prefer SMIL animateTransform (works in all modern browsers)\r\n                                try {\r\n                                    const anim = svgDoc.createElementNS(SVG_NS, 'animateTransform');\r\n                                    anim.setAttribute('attributeName', 'transform');\r\n                                    anim.setAttribute('type', 'translate');\r\n                                    anim.setAttribute('from', `${fromX} 0`);\r\n                                    anim.setAttribute('to', `${toX} 0`);\r\n                                    anim.setAttribute('dur', `${moveDuration}ms`);\r\n                                    anim.setAttribute('begin', 'indefinite'); // we’ll trigger it after the delay\r\n                                    anim.setAttribute('fill', 'freeze');\r\n                                    anim.setAttribute('calcMode', 'spline');\r\n                                    anim.setAttribute('keySplines', '.25 .1 .25 1');\r\n                                    anim.setAttribute('keyTimes', '0;1');\r\n                                    tail.appendChild(anim);\r\n\r\n                                    setTimeout(() => {\r\n                                        try {\r\n                                            // Start the animation\r\n                                            (anim as any).beginElement?.();\r\n                                        } catch {\r\n                                            // If beginElement fails, fallback to JS tween\r\n                                            animateTranslateAttr(tail!, fromX, toX, moveDuration, 0);\r\n                                        }\r\n                                    }, moveDelay);\r\n                                } catch {\r\n                                    // As a safety net, JS tween (no SMIL)\r\n                                    animateTranslateAttr(tail, fromX, toX, moveDuration, moveDelay);\r\n                                }\r\n                            }\r\n                        });\r\n                    }, 3200);\r\n                }, { once: true });\r\n            });\r\n        });\r\n    }\r\n\r\n    type(): void {\r\n        let keys = 0;\r\n        this.keyDownFunction = (event: KeyboardEvent) => {\r\n            let forbiddenCharacters = ['<', '´', '`', '^'];\r\n            if (event.key === 'Backspace' && this.input.lastElementChild) {\r\n                this.input.lastElementChild.remove();\r\n                this.command = this.command.slice(0, this.command.length - 1);\r\n                keys--;\r\n                let object = <HTMLObjectElement>this.input.lastElementChild;\r\n                if (!object) return;\r\n                let w = window.innerWidth;\r\n                let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n                let h = (w / (keys + 1)) * aspectRatio;\r\n                let padding = (this.input.getBoundingClientRect().height - h) / 2;\r\n                this.padding = Math.max(padding, 1);\r\n                this.movementAnimation();\r\n                return;\r\n            } else if (event.key === 'Enter') {\r\n                switch (this.command) {\r\n                    case 'add vocabulary':\r\n                    case 'add':\r\n                    case 'add vocabulary':\r\n                    case 'neu':\r\n                    case 'hinzufügen':\r\n                    case 'neues wort':\r\n                    case 'neues Wort':\r\n                    case 'Vokabeln hinzufügen':\r\n                        removeAllEventListeners();\r\n                        addVocabulary.modifyDocument();\r\n                        break;\r\n                    case 'show vocabulary':\r\n                    case 'show':\r\n                    case 'tabelle':\r\n                    case 'Tabelle':\r\n                    case 'Vokabeln anzeigen':\r\n                        removeAllEventListeners();\r\n                        showVocabulary.modifyDocument();\r\n                        break;\r\n                    case 'training':\r\n                    case 'Training':\r\n                    case 'trainer':\r\n                    case 'Training':\r\n                    case 'üben':\r\n                    case 'Üben':\r\n                    case 'vocabuary training':\r\n                        removeAllEventListeners();\r\n                        training.modifyDocument();\r\n                        break;\r\n                    case 'declinations':\r\n                    case 'deklinationen':\r\n                    case 'Deklinationen':\r\n                    case 'conj':\r\n                    case 'add declinations':\r\n                        removeAllEventListeners();\r\n                        inflectVocabulary.modifyDocument('add nouns');\r\n                        break;\r\n                    case 'deklinieren':\r\n                    case 'deklinationstraining':\r\n                    case 'Deklinationstraining':\r\n                    case 'decline nouns':\r\n                    case 'decline':\r\n                    case 'ct':\r\n                        removeAllEventListeners();\r\n                        inflectVocabulary.modifyDocument('nouns');\r\n                        break;\r\n                    case 'v':\r\n                    case 'conjugations':\r\n                    case 'konjugationen':\r\n                    case 'Konjugationen':\r\n                        removeAllEventListeners();\r\n                        inflectVocabulary.modifyDocument('add verbs');\r\n                        break;\r\n                    case 'conjugate':\r\n                    case 'konjugieren':\r\n                    case 'konjugationstraining':\r\n                    case 'Konjugationstraining':\r\n                    case 'vt':\r\n                        removeAllEventListeners();\r\n                        inflectVocabulary.modifyDocument('verbs');\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                keys = 0;\r\n                this.command = '';\r\n                this.padding = 0;\r\n                this.input.innerHTML = '';\r\n                return;\r\n            } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) {\r\n                return;\r\n            }\r\n\r\n            let object = document.createElement('object');\r\n            object.data = './keys/Reversion_T.svg';\r\n            object.id = `key${keys}`;\r\n            object.style.height = `100%`;\r\n            this.input.insertAdjacentElement('beforeend', object);\r\n            object.hidden = true;\r\n\r\n            object.addEventListener('load', _ => {\r\n                object.hidden = false;\r\n                let width = Math.floor(object.getBoundingClientRect().width * 100) / 100;\r\n                let w = window.innerWidth;\r\n                object.hidden = true;\r\n                if (keys + 2 > Math.floor(w / width)) {\r\n                    object.hidden = false;\r\n                    let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n                    object.hidden = true;\r\n                    let h = (w / (keys + 2)) * aspectRatio;\r\n                    let padding = (this.input.getBoundingClientRect().height - h) / 2;\r\n                    if (padding > this.input.getBoundingClientRect().height / 2 * 0.85) {\r\n                        object.remove();\r\n                        for (let i = 0; i < keys; i++) {\r\n                            addVocabulary.failureAnimation(<HTMLObjectElement>this.input.children[i]);\r\n                        }\r\n                        return;\r\n                    } else {\r\n                        this.padding = Math.max(padding, 1);\r\n                    }\r\n                }\r\n                object.hidden = false;\r\n\r\n                let svg = object.contentDocument;\r\n                svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\r\n\r\n                this.command += event.key;\r\n\r\n                keys++;\r\n\r\n                this.idleAnimation(object);\r\n                this.movementAnimation();\r\n            });\r\n        }\r\n\r\n        document.addEventListener('keydown', this.keyDownFunction);\r\n    }\r\n\r\n    idleAnimation(object: HTMLObjectElement): void {\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#8f8f8f', '#fff', '#eeeeeeff'],\r\n            offset: [0, 1]\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 250\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    failureAnimation(object: HTMLObjectElement): void {\r\n        if (!object) {\r\n            return;\r\n        }\r\n\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: Keyframe[] = [\r\n            { stroke: \"rgb(186, 2, 70)\", offset: 0.025 },\r\n\r\n            { rotate: \"10deg z\", offset: 0.25 },\r\n\r\n            { rotate: \"0deg z\", offset: 0.5 },\r\n\r\n            { rotate: \"-10deg z\", offset: 0.75, stroke: \"rgb(186, 2, 70)\" },\r\n\r\n            { stroke: \"#eeeeeeff\", offset: 0.925 },\r\n\r\n            { rotate: \"0deg z\", offset: 1 }\r\n        ];\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 500\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    movementAnimation(): void {\r\n        if (!this.input) {\r\n            return;\r\n        }\r\n\r\n        let object = <HTMLObjectElement>this.input.firstChild;\r\n        let inp = this.input;\r\n        if (object) {\r\n            if (inp.childElementCount > 1) {\r\n                inp.style.transition = 'padding 250ms';\r\n            }\r\n            inp.style.paddingTop = `${this.padding}px`;\r\n            inp.style.paddingBottom = `${this.padding}px`;\r\n\r\n            let height = inp.getBoundingClientRect().height - 2 * this.padding;\r\n            inp.style.paddingRight = `${(window.innerWidth - inp.childElementCount * height) / 2}px`;\r\n            inp.style.paddingLeft = `${(window.innerWidth - inp.childElementCount * height) / 2}px`;\r\n        }\r\n    }\r\n}","import { addVocabulary, createDiv, home, removeAllEventListeners } from \"..\";\r\nimport { AddVocabulary, WordBundle } from \"./add-vocabulary\";\r\n\r\nexport class ShowVocabulary {\r\n    container: HTMLDivElement;\r\n    iconPlaceholder: HTMLDivElement;\r\n    navbar: HTMLDivElement;\r\n\r\n    vocabulary: WordBundle[];\r\n    containers: number[] = [];\r\n    database: IDBDatabase;\r\n    resizeFunction: EventListener;\r\n\r\n    constructor() { }\r\n\r\n    modifyDocument(): void {\r\n        const request = window.indexedDB.open('Vocabulary', 2);\r\n\r\n        request.addEventListener('error', _ => {\r\n            this.vocabulary = [];\r\n            this.modifyDocument();\r\n            console.error(request.error);\r\n        });\r\n\r\n        request.addEventListener('success', _ => {\r\n            this.database = request.result;\r\n\r\n            const transaction = this.database.transaction('vocabulary', 'readonly');\r\n            transaction.onerror = _ => console.error(transaction.error);\r\n            const objectStore = transaction.objectStore('vocabulary');\r\n            const req = objectStore.getAll();\r\n            req.onerror = _ => console.error(req.error);\r\n            req.onsuccess = _ => {\r\n                this.vocabulary = req.result;\r\n                this.container = document.querySelector('#container');\r\n                this.iconPlaceholder = document.querySelector('#icon-placeholder');\r\n                this.navbar = document.querySelector('#navbar');\r\n\r\n                this.container.style.padding = '0';\r\n                document.body.style.backgroundImage = 'none';\r\n\r\n                document.body.setAttribute('class', '');\r\n                this.container.setAttribute('class', '');\r\n                this.iconPlaceholder.setAttribute('class', '');\r\n                this.navbar.setAttribute('class', '');\r\n\r\n                this.container.innerHTML = '';\r\n                this.iconPlaceholder.innerHTML = '';\r\n                this.navbar.innerHTML = '';\r\n\r\n                let showVocabularyIcon = document.createElement('object');\r\n                showVocabularyIcon.data = './show_vocabulary.svg';\r\n                showVocabularyIcon.id = 'showVocabularyIcon';\r\n                this.iconPlaceholder.insertAdjacentElement('beforeend', showVocabularyIcon);\r\n\r\n                for (let i = 0, str = 'HOME MENU'; i < str.length; i++) {\r\n                    let span = document.createElement('span');\r\n                    span.innerText = str[i];\r\n                    this.navbar.insertAdjacentElement('beforeend', span);\r\n                }\r\n\r\n                let navbarClickFunction = _ => {\r\n                    removeAllEventListeners();\r\n                    this.navbar.removeEventListener('click', navbarClickFunction);\r\n                    home.modifyDocument();\r\n                }\r\n                this.navbar.addEventListener('click', navbarClickFunction);\r\n\r\n                document.body.classList.add('showVocabularyBody');\r\n                this.container.classList.add('showVocabularyContainer');\r\n                this.iconPlaceholder.classList.add('showVocabularyIconPlaceholder');\r\n                this.navbar.classList.add('showVocabularyNavbar');\r\n                this.renderVocabulary();\r\n            }\r\n        });\r\n    }\r\n\r\n    renderVocabulary(): void {\r\n        const ignFunction: EventListener = (event: MouseEvent) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            let element = <HTMLDivElement>event.target;\r\n            let attribute: number;\r\n            let id: number;\r\n\r\n            if (element.id.includes('latinWord')) {\r\n                attribute = 0;\r\n                id = parseInt(element.id.replaceAll('latinWord', ''));\r\n            } else if (element.id.includes('inflections')) {\r\n                attribute = 1;\r\n                id = parseInt(element.id.replaceAll('inflections', ''));\r\n            } else if (element.id.includes('germanTranslation')) {\r\n                attribute = 2;\r\n                id = parseInt(element.id.replaceAll('germanTranslation', ''));\r\n            } else if (element.id.includes('relatedForeignWords')) {\r\n                attribute = 3;\r\n                id = parseInt(element.id.replaceAll('relatedForeignWords', ''));\r\n            } else if (element.tagName === 'INPUT' && element.parentElement.classList.contains('word')) {\r\n                attribute = parseInt(element.id.split('-')[0]);\r\n                id = parseInt(element.id.split('-')[1]);\r\n                element.blur();\r\n                element = <HTMLDivElement>element.parentElement;\r\n            }\r\n\r\n\r\n            if (id != undefined && attribute != undefined && this.vocabulary[id]) {\r\n                let value = <string>Object.values(this.vocabulary[id])[attribute];\r\n                if (value.includes('^ign^')) {\r\n                    value = value.replaceAll('^ign^', '');\r\n                    element.classList.remove('ign');\r\n                } else {\r\n                    value = '^ign^' + value;\r\n                    element.classList.add('ign');\r\n                }\r\n                this.vocabulary[id][Object.keys(this.vocabulary[id])[attribute]] = value;\r\n                const transaction = this.database.transaction('vocabulary', 'readwrite');\r\n                transaction.onerror = _ => console.error(transaction.error);\r\n                const objectStore = transaction.objectStore('vocabulary');\r\n                const request = objectStore.get(id + 1);\r\n                request.onerror = _ => console.error(request.error);\r\n                request.onsuccess = _ => {\r\n                    const data = request.result;\r\n                    if (!data) return;\r\n                    Object.defineProperty(\r\n                        data,\r\n                        Object.keys(data)[attribute],\r\n                        { value: value }\r\n                    );\r\n\r\n                    let cdiv = <HTMLDivElement>document.getElementById(`checkboxDiv${id}`);\r\n                    let ignWords: number = Object.values(data).slice(0, 4).filter((w: string) => w.includes('^ign^')).length;\r\n                    if (ignWords === 4) {\r\n                        data.selected = false;\r\n                        this.vocabulary[id].selected = false;\r\n                        let cdiv = this.container.querySelector(\"#checkboxDiv\" + (id));\r\n                        cdiv.classList.add('ign');\r\n                        cdiv.innerHTML = \"\";\r\n                        let img = document.createElement('img');\r\n                        img.src = './ign.svg';\r\n                        cdiv.append(img);\r\n                    } else if (ignWords === 3) {\r\n                        let cdiv = this.container.querySelector(\"#checkboxDiv\" + (id));\r\n                        cdiv.innerHTML = \"\";\r\n                        cdiv.classList.remove(\"ign\");\r\n                        let img = document.createElement('img');\r\n                        img.src = './ign.svg';\r\n                        img.classList.add(\"white\");\r\n                        cdiv.append(img);\r\n                    } else if (ignWords === 0) {\r\n                        data.selected = true;\r\n                        this.vocabulary[id].selected = true;\r\n                        let cdiv = this.container.querySelector(\"#checkboxDiv\" + (id));\r\n                        cdiv.innerHTML = \"\";\r\n                        cdiv.classList.remove(\"ign\");\r\n                        let img = document.createElement('img');\r\n                        img.src = './fully-selected.svg';\r\n                        cdiv.append(img);\r\n                    } else {\r\n                        let cdiv = this.container.querySelector(\"#checkboxDiv\" + (id));\r\n                        cdiv.innerHTML = \"\";\r\n                        cdiv.classList.remove(\"ign\");\r\n                        let img = document.createElement('img');\r\n                        img.src = './selected.svg';\r\n                        cdiv.append(img);\r\n                    }\r\n\r\n                    const req = objectStore.put(data, id + 1);\r\n                    req.onerror = _ => console.error(req.error);\r\n                }\r\n            }\r\n        }\r\n\r\n        const selectFunction: EventListener = (event: MouseEvent) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            let element = <HTMLDivElement>event.target;\r\n            if (element.classList.contains('cdiv')) {\r\n                let id = parseInt(element.id.replaceAll('checkboxDiv', ''));\r\n                if (this.vocabulary[id]) {\r\n                    let value = !this.vocabulary[id].selected;\r\n                    this.vocabulary[id].selected = value;\r\n\r\n                    if (!value) {\r\n                        for (let i = 0; i < 4; i++) {\r\n                            if (!Object.values(this.vocabulary[id])[i].includes('^ign^')) {\r\n                                this.vocabulary[id][Object.keys(this.vocabulary[id])[i]] = '^ign^' + this.vocabulary[id][Object.keys(this.vocabulary[id])[i]];\r\n                            }\r\n                            let word: HTMLDivElement = <HTMLDivElement>document.getElementById(Object.keys(this.vocabulary[id])[i] + id);\r\n                            if (word && !word.classList.contains('ign')) {\r\n                                word.classList.add('ign');\r\n                            }\r\n                            element.classList.add('ign');\r\n                            element.innerHTML = \"\";\r\n                            let img = document.createElement('img');\r\n                            img.src = './ign.svg';\r\n                            element.append(img);\r\n                        }\r\n                    } else {\r\n                        for (let i = 0; i < 4; i++) {\r\n                            if (Object.values(this.vocabulary[id])[i].includes('^ign^')) {\r\n                                this.vocabulary[id][Object.keys(this.vocabulary[id])[i]] = Object.values(this.vocabulary[id])[i].replaceAll('^ign^', '');\r\n                            }\r\n                            let word: HTMLDivElement = <HTMLDivElement>document.getElementById(Object.keys(this.vocabulary[id])[i] + id);\r\n                            if (word && word.classList.contains('ign')) {\r\n                                word.classList.remove('ign');\r\n                            }\r\n                            element.classList.remove('ign');\r\n                            element.innerHTML = \"\";\r\n                            let img = document.createElement('img');\r\n                            img.src = './fully-selected.svg';\r\n                            element.append(img);\r\n                        }\r\n                    }\r\n\r\n                    const transaction = this.database.transaction('vocabulary', 'readwrite');\r\n                    transaction.onerror = _ => console.error(transaction.error);\r\n                    const objectStore = transaction.objectStore('vocabulary');\r\n                    const request = objectStore.get(id + 1);\r\n                    request.onerror = _ => console.error(request.error);\r\n                    request.onsuccess = _ => {\r\n                        const data = request.result;\r\n                        if (data) {\r\n                            this.vocabulary[id].probability = data.probability;\r\n                            const req = objectStore.put(this.vocabulary[id], id + 1);\r\n                            req.onerror = _ => console.error(req.error);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const headerFunction: EventListener = (event: MouseEvent) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            let element = <HTMLElement>event.target;\r\n            if (element.classList.contains('header')) {\r\n                let header = <HTMLDivElement>element;\r\n                let key: 'latinWord' | 'inflections' | 'germanTranslation' | 'relatedForeignWords';\r\n                switch (header.id) {\r\n                    case 'latin-word':\r\n                        key = 'latinWord';\r\n                        break;\r\n                    case 'inflections':\r\n                        key = 'inflections';\r\n                        break;\r\n                    case 'german-translation':\r\n                        key = 'germanTranslation';\r\n                        break;\r\n                    case 'related-foreign-words':\r\n                        key = 'relatedForeignWords';\r\n                        break;\r\n                    default:\r\n                        return;\r\n                }\r\n\r\n                const transaction = this.database.transaction('vocabulary', 'readwrite');\r\n                transaction.onerror = _ => console.error(transaction.error);\r\n                const objectStore = transaction.objectStore('vocabulary');\r\n                const request = objectStore.openCursor();\r\n                request.onerror = _ => console.error(request.error);\r\n                request.onsuccess = _ => {\r\n                    const cursor = request.result;\r\n                    if (cursor) {\r\n                        let k = <number>cursor.key;\r\n                        const updatedData = cursor.value;\r\n                        if (updatedData.latinWord.includes('^con^')) {\r\n                            cursor.continue();\r\n                        } else {\r\n                            if (header.classList.contains('ign')) {\r\n                                if (updatedData.selected) {\r\n                                    updatedData[key] = updatedData[key].replaceAll('^ign^', '');\r\n                                    this.vocabulary[k - 1][key] = updatedData[key];\r\n                                    let div = document.querySelector(`#${key}${k - 1}`) as HTMLDivElement;\r\n                                    if (div) div.classList.remove('ign');\r\n                                }\r\n                            } else {\r\n                                if (!updatedData[key].includes('^ign^')) {\r\n                                    updatedData[key] = '^ign^' + updatedData[key];\r\n                                }\r\n                                this.vocabulary[k - 1][key] = updatedData[key];\r\n                                let div = document.querySelector(`#${key}${k - 1}`) as HTMLDivElement;\r\n                                if (!div.classList.contains('ign')) div.classList.add('ign');\r\n                            }\r\n\r\n                            let ignWords: number = Object.values(updatedData).slice(0, 4).filter((w: string) => w.includes('^ign^')).length;\r\n                            if (ignWords === 4) {\r\n                                updatedData.selected = false;\r\n                                this.vocabulary[k - 1].selected = false;\r\n                                let cdiv = this.container.querySelector(\"#checkboxDiv\" + (k - 1));\r\n                                cdiv.classList.add('ign');\r\n                                cdiv.innerHTML = \"\";\r\n                                let img = document.createElement('img');\r\n                                img.src = './ign.svg';\r\n                                cdiv.append(img);\r\n                            } else if (ignWords === 3) {\r\n                                let cdiv = this.container.querySelector(\"#checkboxDiv\" + (k - 1));\r\n                                cdiv.classList.remove('ign');\r\n                                cdiv.innerHTML = \"\";\r\n                                let img = document.createElement('img');\r\n                                img.src = './ign.svg';\r\n                                img.classList.remove(\"white\");\r\n                                cdiv.append(img);\r\n                            } else if (ignWords === 0) {\r\n                                let cdiv = this.container.querySelector(\"#checkboxDiv\" + (k - 1));\r\n                                cdiv.classList.remove('ign');\r\n                                cdiv.innerHTML = \"\";\r\n                                let img = document.createElement('img');\r\n                                img.src = './fully-selected.svg';\r\n                                cdiv.append(img);\r\n                            } else {\r\n                                let cdiv = this.container.querySelector(\"#checkboxDiv\" + (k - 1));\r\n                                cdiv.classList.remove('ign');\r\n                                cdiv.innerHTML = \"\";\r\n                                let img = document.createElement('img');\r\n                                img.src = './selected.svg';\r\n                                cdiv.append(img);\r\n                            }\r\n                            cursor.update(updatedData);\r\n                            cursor.continue();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                transaction.oncomplete = _ => {\r\n                    if (header.classList.contains('ign')) {\r\n                        header.classList.remove('ign');\r\n                    } else {\r\n                        header.classList.add('ign');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const conFunction: EventListener = (event: MouseEvent) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            let element = <HTMLElement>event.target;\r\n            if (element.parentElement.classList.contains('unit') && element.tagName != \"IMG\") {\r\n                element = element.parentElement;\r\n            }\r\n            if (element.classList.contains('unit')) {\r\n                let unit = <HTMLDivElement>element;\r\n                let id = parseInt(unit.id.replaceAll('unit', '')) - 1;\r\n                let index = this.containers[id];\r\n\r\n\r\n                let nextIndex = (index === this.containers[this.containers.length - 1]) ? this.vocabulary.length : this.containers[id + 1];\r\n                const transaction = this.database.transaction('vocabulary', 'readwrite');\r\n                transaction.onerror = _ => console.error(transaction.error);\r\n                const objectStore = transaction.objectStore('vocabulary');\r\n                const request = objectStore.openCursor();\r\n                request.onerror = _ => console.error(request.error);\r\n                request.onsuccess = _ => {\r\n                    const cursor = request.result;\r\n                    if (cursor) {\r\n                        let k = <number>cursor.key - 1;\r\n                        if (k === index) {\r\n                            const updatedData = cursor.value;\r\n                            let l: string = <string>updatedData.latinWord;\r\n                            if (l.includes('^ign^')) {\r\n                                l = l.replaceAll('^ign^', '');\r\n                                updatedData.latinWord = l;\r\n                            } else if (!l.includes('^ign^')) {\r\n                                l = '^ign^' + l;\r\n                                updatedData.latinWord = l;\r\n                            }\r\n                            cursor.update(updatedData);\r\n                        }\r\n                        if (k > index && k < nextIndex) {\r\n                            const updatedData = cursor.value;\r\n                            if (!unit.classList.contains('ign')) {\r\n                                for (let a = 0; a < 4; a++) {\r\n                                    if (!Object.values(this.vocabulary[k])[a].includes('^ign^')) {\r\n                                        Object.defineProperty(\r\n                                            this.vocabulary[k],\r\n                                            Object.keys(this.vocabulary[k])[a],\r\n                                            { value: '^ign^' + this.vocabulary[k][Object.keys(this.vocabulary[k])[a]] }\r\n                                        );\r\n                                        Object.defineProperty(\r\n                                            updatedData,\r\n                                            Object.keys(updatedData)[a],\r\n                                            { value: '^ign^' + updatedData[Object.keys(updatedData)[a]] }\r\n                                        );\r\n                                    }\r\n                                    let div: HTMLDivElement = <HTMLDivElement>document.getElementById(Object.keys(this.vocabulary[k])[a] + k);\r\n                                    if (div && !div.classList.contains('ign')) {\r\n                                        div.classList.add('ign');\r\n                                    }\r\n                                }\r\n                                this.vocabulary[k].selected = false;\r\n                                updatedData.selected = false;\r\n                                let cdiv: HTMLDivElement = <HTMLDivElement>document.getElementById(`checkboxDiv${k}`);\r\n                                if (cdiv && !cdiv.classList.contains('ign')) {\r\n                                    cdiv.classList.add('ign');\r\n                                    cdiv.innerHTML = \"\";\r\n                                    let img = document.createElement('img');\r\n                                    img.src = './ign.svg';\r\n                                    cdiv.append(img);\r\n                                }\r\n                            } else {\r\n                                for (let a = 0; a < 4; a++) {\r\n                                    if (Object.values(this.vocabulary[k])[a].includes('^ign^')) {\r\n                                        Object.defineProperty(\r\n                                            this.vocabulary[k],\r\n                                            Object.keys(this.vocabulary[k])[a],\r\n                                            { value: Object.values(this.vocabulary[k])[a].replaceAll('^ign^', '') }\r\n                                        );\r\n                                        Object.defineProperty(\r\n                                            updatedData,\r\n                                            Object.keys(updatedData)[a],\r\n                                            { value: this.vocabulary[k][Object.keys(this.vocabulary[k])[a]] }\r\n                                        );\r\n                                    }\r\n                                    let div: HTMLDivElement = <HTMLDivElement>document.getElementById(Object.keys(this.vocabulary[k])[a] + k);\r\n                                    if (div && div.classList.contains('ign')) {\r\n                                        div.classList.remove('ign');\r\n                                    }\r\n                                }\r\n                                this.vocabulary[k].selected = true;\r\n                                updatedData.selected = true;\r\n                                let cdiv: HTMLDivElement = <HTMLDivElement>document.getElementById(`checkboxDiv${k}`);\r\n                                if (cdiv && cdiv.classList.contains('ign')) {\r\n                                    cdiv.classList.remove('ign');\r\n                                    cdiv.innerHTML = \"\";\r\n                                    let img = document.createElement('img');\r\n                                    img.src = './fully-selected.svg';\r\n                                    cdiv.append(img);\r\n                                }\r\n                            }\r\n                            cursor.update(updatedData);\r\n                        }\r\n                        cursor.continue();\r\n                    }\r\n                }\r\n\r\n                transaction.oncomplete = _ => {\r\n                    if (unit.classList.contains('ign')) {\r\n                        unit.classList.remove('ign');\r\n                    } else {\r\n                        unit.classList.add('ign');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let str = '';\r\n        let decoration = createDiv('decoration', 'header');\r\n        let latinWord = createDiv('latin-word', 'header');\r\n        latinWord.innerHTML = 'Latein';\r\n        let inflections = createDiv('inflections', 'header');\r\n        inflections.innerHTML = 'Formen';\r\n        let germanTranslation = createDiv('german-translation', 'header');\r\n        germanTranslation.innerHTML = 'Deutsch';\r\n        let relatedForeignWords = createDiv('related-foreign-words', 'header');\r\n        relatedForeignWords.innerHTML = 'Fremdwörter';\r\n        [decoration, latinWord, inflections, germanTranslation, relatedForeignWords].forEach(header => {\r\n            header.addEventListener('contextmenu', headerFunction);\r\n            this.container.append(header);\r\n        });\r\n\r\n\r\n        let unit: number = 1;\r\n        this.vocabulary.forEach((word, i) => {\r\n            if (word.latinWord.includes('^con^')) {\r\n                let n_unit = createDiv(`unit${unit}`, 'unit');\r\n                this.container.append(n_unit);\r\n                n_unit.innerHTML = `<div></div><span>${word.latinWord.replaceAll('^con^', '').replaceAll('^ign^', '')}</span>`;\r\n                let img = document.createElement('img');\r\n                img.src = './arrow_down.svg';\r\n                img.id = 'arrowDown';\r\n                img.style.cursor = 'pointer';\r\n                n_unit.append(img);\r\n                n_unit.classList.add('down');\r\n                n_unit.addEventListener('contextmenu', conFunction);\r\n                if (word.latinWord.includes('^ign^')) {\r\n                    n_unit.classList.add(\"ign\");\r\n                }\r\n                unit++;\r\n                this.containers.push(i);\r\n\r\n                img.addEventListener('click', _ => {\r\n                    if (img.classList.contains('rotated')) {\r\n                        img.style.transform = 'rotate(0deg)';\r\n                        img.classList.remove('rotated');\r\n                    } else {\r\n                        img.style.transform = 'rotate(90deg)';\r\n                        img.classList.add('rotated');\r\n                    }\r\n                    this.clickUnit(n_unit, i);\r\n                });\r\n            } else {\r\n                str += 'auto ';\r\n\r\n                let Cdiv = createDiv(`checkboxDiv${i}`, 'word');\r\n                let div1 = createDiv(`latinWord${i}`, 'word');\r\n                let div2 = createDiv(`inflections${i}`, 'word');\r\n                let div3 = createDiv(`germanTranslation${i}`, 'word');\r\n                let div4 = createDiv(`relatedForeignWords${i}`, 'word');\r\n\r\n                Cdiv.classList.add('cdiv');\r\n\r\n                div1.innerHTML = `<input type=\"text\" id=\"0-${i}\" class=\"edit\" value=\"${(word.latinWord === '') ? ' ' : word.latinWord.replaceAll('\"', \"&QUOT;\")}\"></input>`;\r\n                div2.innerHTML = `<input type=\"text\" id=\"1-${i}\" class=\"edit\" value=\"${(word.inflections === '') ? ' ' : word.inflections.replaceAll('\"', \"&QUOT;\")}\"></input>`;\r\n                div3.innerHTML = `<input type=\"text\" id=\"2-${i}\" class=\"edit\" value=\"${(word.germanTranslation === '') ? ' ' : word.germanTranslation.replaceAll('\"', \"&QUOT;\")}\"></input>`;\r\n                div4.innerHTML = `<input type=\"text\" id=\"3-${i}\" class=\"edit\" value=\"${(word.relatedForeignWords === '') ? ' ' : word.relatedForeignWords.replaceAll('\"', \"&QUOT;\")}\"></input>`;\r\n\r\n                [div1, div2, div3, div4].forEach(div => {\r\n                    if (div.querySelector('input')?.value.includes('^ign^')) {\r\n                        div.classList.add('ign');\r\n                        div.querySelector('input')!.value = div.querySelector('input')?.value.replaceAll('^ign^', '');\r\n                    }\r\n                });\r\n\r\n\r\n                let ignWords: number = Object.values(word).slice(0, 4).filter((w: string) => w.includes('^ign^')).length;\r\n                if (!word.selected || ignWords === 4) {\r\n                    [Cdiv, div1, div2, div3, div4].forEach(div => div.classList.add('ign'));\r\n                    let img = document.createElement('img');\r\n                    img.src = './ign.svg';\r\n                    Cdiv.append(img);\r\n                } else if (ignWords === 3) {\r\n                    let img = document.createElement('img');\r\n                    img.src = './ign.svg';\r\n                    img.classList.add('white');\r\n                    Cdiv.append(img);\r\n                } else if (ignWords === 0) {\r\n                    Cdiv.innerHTML = \"\";\r\n                    let img = document.createElement('img');\r\n                    img.src = './fully-selected.svg';\r\n                    Cdiv.append(img);\r\n                } else {\r\n                    Cdiv.innerHTML = \"\";\r\n                    let img = document.createElement('img');\r\n                    img.src = './selected.svg';\r\n                    Cdiv.append(img);\r\n                }\r\n\r\n\r\n\r\n                Cdiv.addEventListener('contextmenu', selectFunction);\r\n\r\n                // COPILOT\r\n                const autoScaleInput = (input: HTMLInputElement) => {\r\n                    const parentWidth = window.innerWidth * 0.22;\r\n                    const maxFontSize = 0.015 * window.innerHeight;\r\n                    let fontSize = maxFontSize;\r\n\r\n                    const ctx = document.createElement('canvas').getContext('2d');\r\n                    if (!ctx) return;\r\n\r\n                    const style = window.getComputedStyle(input);\r\n                    const fontProps = [\r\n                        style.fontStyle || 'normal',\r\n                        style.fontVariant || 'normal',\r\n                        style.fontWeight || 'normal',\r\n                        `${fontSize}px`,\r\n                        style.fontFamily || 'inherit'\r\n                    ].join(' ');\r\n\r\n                    ctx.font = fontProps;\r\n                    const text = input.value.replaceAll('\"', \"&QUOT;\") || input.placeholder || '';\r\n\r\n                    while (ctx.measureText(text).width > parentWidth && fontSize > 1) {\r\n                        fontSize--;\r\n                        ctx.font = [\r\n                            style.fontStyle || 'normal',\r\n                            style.fontVariant || 'normal',\r\n                            style.fontWeight || 'normal',\r\n                            `${fontSize}px`,\r\n                            style.fontFamily || 'inherit'\r\n                        ].join(' ');\r\n                    }\r\n\r\n                    while (ctx.measureText(text).width < parentWidth - 10 && fontSize < maxFontSize) {\r\n                        fontSize++;\r\n                        ctx.font = [\r\n                            style.fontStyle || 'normal',\r\n                            style.fontVariant || 'normal',\r\n                            style.fontWeight || 'normal',\r\n                            `${fontSize}px`,\r\n                            style.fontFamily || 'inherit'\r\n                        ].join(' ');\r\n                        if (ctx.measureText(text).width > parentWidth) {\r\n                            fontSize--;\r\n                            ctx.font = [\r\n                                style.fontStyle || 'normal',\r\n                                style.fontVariant || 'normal',\r\n                                style.fontWeight || 'normal',\r\n                                `${fontSize}px`,\r\n                                style.fontFamily || 'inherit'\r\n                            ].join(' ');\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    input.style.fontSize = `${fontSize}px`;\r\n                };\r\n                const inputs = [div1, div2, div3, div4].map(div => div.querySelector('input') as HTMLInputElement).filter(Boolean);\r\n\r\n                this.resizeFunction = () => {\r\n                    inputs.forEach(input => autoScaleInput(input));\r\n                }\r\n\r\n                inputs.forEach(input => {\r\n                    input.style.width = '22vw';\r\n                    input.addEventListener('input', () => autoScaleInput(input));\r\n                });\r\n                window.addEventListener(\"resize\", this.resizeFunction);\r\n\r\n\r\n                this.container.append(Cdiv, div1, div2, div3, div4);\r\n                inputs.forEach(input => autoScaleInput(input));\r\n            }\r\n        });\r\n\r\n        for (let i = 1; i < unit; i++) {\r\n            let i_unit = this.container.querySelector('#unit' + i) as HTMLDivElement;\r\n            let img = i_unit.querySelector(\"#arrowDown\") as HTMLImageElement;\r\n            if (img.classList.contains('rotated')) {\r\n                img.style.transform = 'rotate(0deg)';\r\n                img.classList.remove('rotated');\r\n            } else {\r\n                img.style.transform = 'rotate(90deg)';\r\n                img.classList.add('rotated');\r\n            }\r\n            this.clickUnit(i_unit, this.containers[i - 1]);\r\n        }\r\n\r\n        this.container.style.gridTemplateRows = str;\r\n\r\n\r\n        let wordList = document.querySelectorAll('.word');\r\n        wordList.forEach((div: HTMLDivElement) => {\r\n            div.addEventListener('contextmenu', ignFunction);\r\n        });\r\n\r\n        let inputList = document.getElementsByClassName('edit');\r\n        for (let i = 0; i < inputList.length; i++) {\r\n            let input: HTMLInputElement = <HTMLInputElement>inputList.item(i);\r\n            input.addEventListener('contextmenu', ignFunction);\r\n\r\n            input.onblur = _ => {\r\n                const transaction = this.database.transaction('vocabulary', 'readwrite');\r\n                transaction.onerror = _ => console.error(transaction.error);\r\n                const objectStore = transaction.objectStore('vocabulary');\r\n                const request = objectStore.get(parseInt(input.id.split('-')[1]) + 1);\r\n                request.onerror = _ => console.error(request.error);\r\n                request.onsuccess = _ => {\r\n                    const data = request.result;\r\n\r\n                    Object.defineProperty(\r\n                        data,\r\n                        Object.keys(data)[parseInt(input.id.split('-')[0])],\r\n                        { value: input.value.replaceAll(\"&QUOT;\", '\"').trim() }\r\n                    );\r\n\r\n                    const req = objectStore.put(data, parseInt(input.id.split('-')[1]) + 1);\r\n                    req.onerror = _ => console.error(req.error);\r\n                }\r\n            }\r\n\r\n            input.onkeydown = (event: KeyboardEvent) => {\r\n                if (event.key === 'Enter') {\r\n                    input.blur();\r\n                }\r\n            }\r\n\r\n            input.onkeyup = _ => {\r\n                if (input.value.includes('^')) {\r\n                    let str = '';\r\n                    input.value.split('').forEach(letter => {\r\n                        if (letter != '^') {\r\n                            str += letter;\r\n                        }\r\n                    })\r\n                    input.value = str;\r\n                }\r\n            }\r\n        }\r\n\r\n        let checkboxDivList = document.getElementsByClassName('cdiv');\r\n        for (let i = 0; i < checkboxDivList.length; i++) {\r\n            let element = <HTMLDivElement>checkboxDivList[i];\r\n            let id = element.id.slice(11);\r\n            let mouseover = false;\r\n            let saved;\r\n            let clickFunction = (event: MouseEvent) => {\r\n                let cdiv = <HTMLDivElement>event.target;\r\n                let index = parseInt(cdiv.id.slice(11));\r\n                this.deleteWord(index);\r\n            }\r\n\r\n            let indicator;\r\n            element.addEventListener('mousemove', (event) => {\r\n                if (event.target === element.querySelector('input')) {\r\n                    mouseover = false;\r\n                    element.classList.remove('mouseon');\r\n                    clearTimeout(indicator);\r\n                    element.removeEventListener('click', clickFunction);\r\n                    document.querySelectorAll('.danger').forEach(e => e.classList.remove('danger'));\r\n                } else if (!mouseover) {\r\n                    mouseover = true;\r\n                    saved = element.innerHTML;\r\n                    setTimeout(_ => {\r\n                        if (mouseover) {\r\n                            element.classList.add('mouseon');\r\n                            indicator = setTimeout(_ => {\r\n                                if (mouseover) {\r\n                                    element.innerHTML = \"\";\r\n                                    let img = document.createElement('img');\r\n                                    img.src = './delete.svg';\r\n                                    element.append(img);\r\n                                    element.addEventListener('click', clickFunction);\r\n                                    document.querySelector(`#latinWord${id}`).classList.add('danger');\r\n                                    document.querySelector(`#inflections${id}`).classList.add('danger');\r\n                                    document.querySelector(`#germanTranslation${id}`).classList.add('danger');\r\n                                    document.querySelector(`#relatedForeignWords${id}`).classList.add('danger');\r\n                                }\r\n                            }, 1500);\r\n                        }\r\n                    }, 1500);\r\n                }\r\n            });\r\n\r\n            element.addEventListener('mouseleave', _ => {\r\n                mouseover = false;\r\n                element.classList.remove('mouseon');\r\n                clearTimeout(indicator);\r\n                document.querySelectorAll('.danger').forEach(e => e.classList.remove('danger'));\r\n                element.removeEventListener('click', clickFunction);\r\n                let ignWords: number = Object.values(this.vocabulary[id]).slice(0, 4).filter((w: string) => w.includes('^ign^')).length;\r\n                if (ignWords === 4) {\r\n                    let cdiv = element;\r\n                    cdiv.innerHTML = \"\";\r\n                    let img = document.createElement('img');\r\n                    img.src = './ign.svg';\r\n                    cdiv.append(img);\r\n                } else if (ignWords === 3) {\r\n                    let cdiv = element;\r\n                    cdiv.innerHTML = \"\";\r\n                    let img = document.createElement('img');\r\n                    img.src = './ign.svg';\r\n                    img.classList.add(\"white\");\r\n                    cdiv.append(img);\r\n                } else if (ignWords === 0) {\r\n                    let cdiv = element;\r\n                    cdiv.innerHTML = \"\";\r\n                    let img = document.createElement('img');\r\n                    img.src = './fully-selected.svg';\r\n                    cdiv.append(img);\r\n                } else {\r\n                    let cdiv = element;\r\n                    cdiv.innerHTML = \"\";\r\n                    let img = document.createElement('img');\r\n                    img.src = './selected.svg';\r\n                    cdiv.append(img);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    clickUnit(unit: HTMLDivElement, index: number) {\r\n        if (unit.classList.contains('down')) {\r\n            unit.classList.remove('down');\r\n            unit.classList.add('up');\r\n            let nextIndex = (index === this.containers[this.containers.length - 1]) ? undefined : this.containers[this.containers.indexOf(index) + 1];\r\n            let hiddenWords = nextIndex ? this.vocabulary.slice(index + 1, nextIndex) : this.vocabulary.slice(index + 1);\r\n            hiddenWords.forEach((hWord, i) => {\r\n                let Cdiv = document.querySelector(`#checkboxDiv${index + 1 + i}`) as HTMLDivElement;\r\n                let div1 = document.querySelector(`#latinWord${index + 1 + i}`) as HTMLDivElement;\r\n                let div2 = document.querySelector(`#inflections${index + 1 + i}`) as HTMLDivElement;\r\n                let div3 = document.querySelector(`#germanTranslation${index + 1 + i}`) as HTMLDivElement;\r\n                let div4 = document.querySelector(`#relatedForeignWords${index + 1 + i}`) as HTMLDivElement;\r\n                [Cdiv, div1, div2, div3, div4].forEach(div => { if (div) { div.style.display = 'none' } });\r\n            });\r\n        } else if (unit.classList.contains('up')) {\r\n            unit.classList.remove('up');\r\n            unit.classList.add('down');\r\n            let nextIndex = (index === this.containers[this.containers.length - 1]) ? undefined : this.containers[this.containers.indexOf(index) + 1];\r\n            let shownWords = nextIndex ? this.vocabulary.slice(index + 1, nextIndex) : this.vocabulary.slice(index + 1);\r\n            shownWords.forEach((sWord, i) => {\r\n                let Cdiv = document.querySelector(`#checkboxDiv${index + 1 + i}`) as HTMLDivElement;\r\n                let div1 = document.querySelector(`#latinWord${index + 1 + i}`) as HTMLDivElement;\r\n                let div2 = document.querySelector(`#inflections${index + 1 + i}`) as HTMLDivElement;\r\n                let div3 = document.querySelector(`#germanTranslation${index + 1 + i}`) as HTMLDivElement;\r\n                let div4 = document.querySelector(`#relatedForeignWords${index + 1 + i}`) as HTMLDivElement;\r\n                [Cdiv, div1, div2, div3, div4].forEach(div => { if (div) { div.style.display = 'flex' } });\r\n            });\r\n        }\r\n    }\r\n\r\n    deleteWord(key: number): void {\r\n        this.vocabulary.splice(key, 1);\r\n        const transaction = this.database.transaction('vocabulary', 'readwrite');\r\n        const objectStore = transaction.objectStore('vocabulary');\r\n        const request = objectStore.openCursor();\r\n        request.onsuccess = _ => {\r\n            let cursor = request.result;\r\n            if (cursor) {\r\n                let k = <number>cursor.key;\r\n                let word = this.vocabulary[k - 1];\r\n                if (word) {\r\n                    const updatedData = cursor.value;\r\n                    updatedData.latinWord = word.latinWord;\r\n                    updatedData.inflections = word.inflections;\r\n                    updatedData.germanTranslation = word.germanTranslation;\r\n                    updatedData.relatedForeignWords = word.relatedForeignWords;\r\n                    updatedData.selected = word.selected;\r\n                    updatedData.probability = word.probability;\r\n                    cursor.update(updatedData);\r\n                    cursor.continue();\r\n                } else {\r\n                    cursor.delete();\r\n                    removeAllEventListeners();\r\n                    this.modifyDocument();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { addVocabulary, createDiv, home, removeAllEventListeners } from \"..\";\r\nimport { WordBundle } from \"./add-vocabulary\";\r\nimport { InflectedWord, InflectVocabulary } from \"./inflect-vocabulary\";\r\n\r\nexport class VocabularyTraining {\r\n    container: HTMLDivElement;\r\n    iconPlaceholder: HTMLDivElement;\r\n    navbar: HTMLDivElement;\r\n\r\n    vocabulary: WordBundle[];\r\n    database: IDBDatabase;\r\n\r\n    keyDownFunction: EventListener;\r\n    mouseOverFunction: EventListener;\r\n    resizeFunction: EventListener;\r\n\r\n    currentWord: WordBundle;\r\n    currentWordIndex: number;\r\n\r\n    totalAttempts = 0;\r\n    totalPoints = 0;\r\n    result: [boolean, boolean, boolean, boolean];\r\n\r\n    commandMode = false;\r\n    command = '';\r\n    padding: [number, number, number, number] = [0, 0, 0, 0];\r\n\r\n    selectedInput: HTMLDivElement;\r\n    inputIndex = 0;\r\n\r\n    time = 0;\r\n    round = 0;\r\n    keys = 0;\r\n    backgroundColor = '#140063';\r\n\r\n    constructor() {\r\n        this.resizeFunction = () => {\r\n            let inputs = document.querySelectorAll('.inp');\r\n            inputs.forEach((inp: HTMLDivElement) => {\r\n                if (inp.firstChild && !inp.classList.contains('not-editable')) {\r\n                    let object = <HTMLObjectElement>inp.lastElementChild;\r\n                    if (!object || !object.contentDocument) return;\r\n                    let w = window.innerWidth;\r\n                    let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n                    let h = (w / (inp.childElementCount + 1)) * aspectRatio;\r\n                    let padding = (inp.getBoundingClientRect().height - h) / 2;\r\n                    this.padding[inp.id.charAt(3)] = Math.max(padding, 0.1);\r\n                    this.movementAnimation(inp);\r\n                } else if (inp.classList.contains('not-editable') && inp.querySelector(\"span\")) {\r\n                    let max = inp.clientHeight * 0.6;\r\n                    let fontSize: number;\r\n\r\n                    let span = <HTMLSpanElement>document.querySelector(`#${inp.id} span`);\r\n                    span.style.whiteSpace = 'nowrap';\r\n                    span.style.display = 'inline-block';\r\n                    span.style.width = 'auto';\r\n                    span.style.fontSize = max + 'px';\r\n                    while (span.scrollWidth > inp.clientWidth * 0.95 || span.clientHeight > max) {\r\n                        fontSize = parseInt(span.style.fontSize.slice(0, -2));\r\n                        if (fontSize <= 1) break;\r\n                        span.style.fontSize = (fontSize - 1) + 'px';\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    modifyDocument(): void {\r\n        window.addEventListener('resize', this.resizeFunction);\r\n\r\n        const request = window.indexedDB.open('Vocabulary', 2);\r\n\r\n        request.addEventListener('error', _ => {\r\n            this.vocabulary = [];\r\n            this.modifyDocument();\r\n            console.error(request.error);\r\n        });\r\n\r\n        request.addEventListener('success', _ => {\r\n            this.database = request.result;\r\n\r\n            const transaction = this.database.transaction('vocabulary', 'readonly');\r\n            transaction.onerror = () => console.error(transaction.error);\r\n            const objectStore = transaction.objectStore('vocabulary');\r\n            const req = objectStore.getAll();\r\n            req.onerror = () => console.error(req.error);\r\n            req.onsuccess = () => {\r\n                this.vocabulary = req.result;\r\n                this.backgroundColor = '#140063'\r\n                this.container = document.querySelector('#container');\r\n                this.iconPlaceholder = document.querySelector('#icon-placeholder');\r\n                this.navbar = document.querySelector('#navbar');\r\n\r\n                this.container.style.padding = '0';\r\n                document.body.style.backgroundImage = 'none';\r\n\r\n                document.body.setAttribute('class', '');\r\n                this.container.setAttribute('class', '');\r\n                this.iconPlaceholder.setAttribute('class', '');\r\n                this.navbar.setAttribute('class', '');\r\n\r\n                this.container.innerHTML = '';\r\n                this.iconPlaceholder.innerHTML = '';\r\n                this.navbar.innerHTML = '';\r\n\r\n                let trainingIcon = document.createElement('object');\r\n                trainingIcon.data = './training.svg';\r\n                trainingIcon.id = 'trainingIcon';\r\n                this.iconPlaceholder.insertAdjacentElement('beforeend', trainingIcon);\r\n\r\n                document.body.classList.add(\"trainingBody\");\r\n                this.container.classList.add(\"trainingContainer\");\r\n                this.iconPlaceholder.classList.add(\"trainingIconPlaceholder\");\r\n                this.navbar.classList.add(\"trainingNavbar\");\r\n\r\n                let classes = 'inp bg inp bg inp bg inp'.split(' ');\r\n                for (let i = 0; i < classes.length; i++) {\r\n                    let div = createDiv(`div${i}`, `${classes[i]}`, `100%`, `${100 / classes.length}%`);\r\n                    div.classList.add('t');\r\n                    this.container.appendChild(div);\r\n                    div.style.padding = `${0.05 * div.offsetHeight}px`;\r\n                }\r\n\r\n                this.mouseOverFunction = (event: MouseEvent) => {\r\n                    let homeDiv = <HTMLDivElement>document.querySelector('.homeDiv');\r\n                    if (\r\n                        homeDiv &&\r\n                        homeDiv != event.target &&\r\n                        event.target != this.navbar &&\r\n                        !(\r\n                            document.querySelector('.homeButton') &&\r\n                            event.target === document.querySelector('.homeButton')\r\n                        ) &&\r\n                        event.target != document.querySelector('.homeIcon')\r\n                    ) {\r\n                        homeDiv.classList.remove('moveUp');\r\n                        setTimeout(_ => homeDiv.classList.add('moveDown'), 0);\r\n                    } else if (!(\r\n                        event.target != this.navbar &&\r\n                        !(\r\n                            document.querySelector('.homeButton') &&\r\n                            event.target === document.querySelector('.homeButton')\r\n                        ) &&\r\n                        event.target != document.querySelector('.homeIcon')\r\n                    )) {\r\n                        if (!homeDiv.classList.contains('moveUp')) {\r\n                            homeDiv.classList.remove('moveDown');\r\n                            homeDiv.classList.add('moveUp');\r\n                        }\r\n                    }\r\n                    if (!homeDiv) {\r\n                        let hd = document.createElement('div');\r\n                        hd.setAttribute('class', 'homeDiv');\r\n                        this.navbar.insertAdjacentElement('afterend', hd);\r\n\r\n                        let button = document.createElement('div');\r\n                        button.classList.add('homeButton');\r\n\r\n                        let icon = document.createElement('object');\r\n                        icon.classList.add('homeIcon');\r\n                        icon.data = './home.svg';\r\n                        icon.style.height = '6vh';\r\n\r\n                        hd.insertAdjacentElement('beforeend', button);\r\n                        button.insertAdjacentElement('beforeend', icon);\r\n\r\n                        let clickFunction = () => {\r\n                            removeAllEventListeners();\r\n                            home.modifyDocument();\r\n                            return;\r\n                        }\r\n\r\n                        button.addEventListener('click', clickFunction);\r\n                        icon.addEventListener('load', _ => {\r\n                            icon.contentDocument.addEventListener('click', clickFunction);\r\n                        })\r\n                    }\r\n                }\r\n                document.addEventListener('mouseover', this.mouseOverFunction);\r\n\r\n                this.type();\r\n            }\r\n        });\r\n    }\r\n\r\n    type(): void {\r\n        let inputs = [0, 2, 4, 6];\r\n\r\n        for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n            this.container.children[i].addEventListener('click', _ => {\r\n                this.inputIndex = i / 2;\r\n                this.selectedInput = <HTMLDivElement>this.container.children[i];\r\n                this.inputStyling();\r\n                this.keys = this.selectedInput.childElementCount;\r\n            });\r\n        };\r\n\r\n        for (let i = 1; i < this.container.childElementCount; i += 2) {\r\n            this.container.children[i].addEventListener('click', (event: MouseEvent) => {\r\n                if (event.offsetY > this.container.children[i].clientHeight / 2) {\r\n                    this.inputIndex = (i + 1) / 2;\r\n                    this.selectedInput = <HTMLDivElement>this.container.children[i + 1];\r\n                    this.inputStyling();\r\n                    this.keys = this.selectedInput.childElementCount;\r\n                } else {\r\n                    this.inputIndex = (i - 1) / 2;\r\n                    this.selectedInput = <HTMLDivElement>this.container.children[i - 1];\r\n                    this.inputStyling();\r\n                    this.keys = this.selectedInput.childElementCount;\r\n                }\r\n            });\r\n        }\r\n\r\n        this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n        this.inputStyling();\r\n\r\n        this.keyDownFunction = (event: KeyboardEvent) => {\r\n            let mode = this.commandMode;\r\n            let forbiddenCharacters = ['<', '´', '`', '^'];\r\n\r\n            if (this.commandMode) {\r\n                if (event.key === 'Enter') {\r\n                    switch (this.command.toLowerCase()) {\r\n                        case '#hint':\r\n                        case '#t':\r\n                        case '#tip':\r\n                        case '#tipp':\r\n                            this.command.split('').forEach(_ => {\r\n                                this.returnLastElement(this.selectedInput).remove();\r\n                                this.keys--;\r\n                                if (this.selectedInput.firstChild) {\r\n                                    this.movementAnimation(this.selectedInput);\r\n                                }\r\n                            });\r\n\r\n                            let object = document.createElement('object');\r\n                            object.data = './keys/Reversion_T.svg';\r\n                            object.id = `key${this.keys}-inp${this.inputIndex}`;\r\n                            object.style.height = `100%`;\r\n                            let width = object.clientHeight;\r\n\r\n                            let index = 0;\r\n                            let word = <string>Object.values(this.currentWord)[this.inputIndex];\r\n                            let str = '';\r\n                            let maxLength: number;\r\n                            let changeMade = false;\r\n                            for (let i = 0; i < word.length; i++) {\r\n\r\n                                if (word[i] != Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex][i] && !changeMade) {\r\n                                    index = i;\r\n                                    if (this.vocabulary[this.currentWordIndex][Object.keys(this.vocabulary[this.currentWordIndex])[this.inputIndex]][index]) {\r\n                                        str += this.vocabulary[this.currentWordIndex][Object.keys(this.vocabulary[this.currentWordIndex])[this.inputIndex]][index];\r\n                                    } else {\r\n                                        maxLength = word.length - 1;\r\n                                    }\r\n\r\n                                    changeMade = true;\r\n                                } else {\r\n                                    str += word[i];\r\n                                }\r\n                            }\r\n\r\n                            this.currentWord[Object.keys(this.currentWord)[this.inputIndex]] = (maxLength) ? str.slice(0, maxLength) : str;\r\n                            word = (maxLength) ? str.slice(0, maxLength) : str;\r\n\r\n                            if (maxLength) {\r\n                                this.returnLastElement(this.selectedInput).remove();\r\n                                this.movementAnimation(this.selectedInput);\r\n                                this.keys--;\r\n                                mode = false;\r\n                                this.commandMode = false;\r\n                                break;\r\n                            }\r\n\r\n                            if (!changeMade) {\r\n                                index = word.length;\r\n                                if (word.length < Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex].length) {\r\n                                    this.currentWord[Object.keys(this.currentWord)[this.inputIndex]] +=\r\n                                        Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex][index];\r\n                                } else {\r\n                                    mode = false;\r\n                                    this.commandMode = false;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            if (word.length > 0 && index < word.length) {\r\n                                this.selectedInput.children[index].replaceWith(object);\r\n                                this.keys--;\r\n                                object.hidden = true;\r\n                            } else {\r\n                                this.selectedInput.insertAdjacentElement('beforeend', object);\r\n                                object.hidden = true;\r\n                            }\r\n\r\n                            object.addEventListener('load', _ => {\r\n                                if (this.keys >= Math.floor(window.innerWidth / width)) {\r\n                                    object.remove();\r\n                                    for (let i = 0; i < this.keys; i++) {\r\n                                        addVocabulary.failureAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                                    }\r\n                                    return;\r\n                                }\r\n                                object.hidden = false;\r\n                                this.keys++;\r\n\r\n                                let svg = object.contentDocument;\r\n                                svg.querySelector('#tspan7').innerHTML = Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex][index];\r\n\r\n                                this.fixedAnimation(object);\r\n                                this.movementAnimation(this.selectedInput);\r\n                            });\r\n                            break;\r\n                        case '#pensionistenmodus':\r\n                            this.backgroundColor = '#7a4aff';\r\n                            this.inputStyling();\r\n\r\n                            this.command.split('').forEach(_ => {\r\n                                this.returnLastElement(this.selectedInput).remove();\r\n                                this.keys--;\r\n                                if (this.selectedInput.firstChild) {\r\n                                    this.movementAnimation(this.selectedInput);\r\n                                }\r\n                            });\r\n                            break;\r\n                        case '#exit':\r\n                        case '#quit':\r\n                        case '#stop':\r\n                        case '#home':\r\n                        case '#stopp':\r\n                        case '#beenden':\r\n                        case '#hauptmenü':\r\n                        case '#home menu':\r\n                        case '#h':\r\n                            this.command = '';\r\n                            this.commandMode = false;\r\n                            removeAllEventListeners();\r\n                            home.modifyDocument();\r\n                            return;\r\n                        default: {\r\n                            this.command.split('').forEach(_ => {\r\n                                this.returnLastElement(this.selectedInput).remove();\r\n                                this.keys--;\r\n                                if (this.selectedInput.firstChild) {\r\n                                    this.movementAnimation(this.selectedInput);\r\n                                }\r\n                            });\r\n\r\n                            if (this.inputIndex + 1 < 4) {\r\n                                this.inputIndex++;\r\n                                this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                                if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\r\n                                    this.inputIndex += 1;\r\n                                    this.selectedInput = <HTMLDivElement>this.container.children[this.inputIndex];\r\n                                }\r\n                                this.keys = this.selectedInput.childElementCount;\r\n                                this.inputStyling();\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n                    this.command = '';\r\n                    this.commandMode = false;\r\n                } else if (event.key === 'ArrowUp') {\r\n                    this.command.split('').forEach(_ => {\r\n                        this.returnLastElement(this.selectedInput).remove();\r\n                        this.keys--;\r\n                        if (this.selectedInput.firstChild) {\r\n                            this.movementAnimation(this.selectedInput);\r\n                        }\r\n                    });\r\n\r\n                    this.command = '';\r\n                    this.commandMode = false;\r\n                } else if (event.key === 'ArrowDown') {\r\n                    this.command.split('').forEach(_ => {\r\n                        this.returnLastElement(this.selectedInput).remove();\r\n                        this.keys--;\r\n                        if (this.selectedInput.firstChild) {\r\n                            this.movementAnimation(this.selectedInput);\r\n                        }\r\n                    });\r\n\r\n                    this.command = '';\r\n                    this.commandMode = false;\r\n\r\n                    if (this.inputIndex + 1 < 4) {\r\n                        this.inputIndex++;\r\n                        this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                        if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\r\n                            this.inputIndex += 1;\r\n                            this.selectedInput = <HTMLDivElement>this.container.children[this.inputIndex];\r\n                        }\r\n                        this.keys = this.selectedInput.childElementCount;\r\n                        this.inputStyling();\r\n                    }\r\n                } else if (event.key === 'Backspace') {\r\n                    if (this.returnLastElement(this.selectedInput)) {\r\n                        this.returnLastElement(this.selectedInput).remove();\r\n                        this.command = this.command.slice(0, this.command.length - 1);\r\n                        this.keys--;\r\n\r\n                        if (this.selectedInput.firstChild) {\r\n                            this.movementAnimation(this.selectedInput);\r\n                        }\r\n\r\n                        if (this.command === '') {\r\n                            this.commandMode = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    this.commandMode && (\r\n                        this.selectedInput.classList.contains('not-editable') ||\r\n                        forbiddenCharacters.includes(event.key) ||\r\n                        event.key.length > 1\r\n                    )\r\n                ) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (!this.commandMode) {\r\n                if ((event.key === 'Enter' || event.key === 'ArrowDown') && !mode) {\r\n                    if (this.currentWord && !isNaN(this.currentWordIndex) && event.key === 'Enter') {\r\n                        if (\r\n                            Object.values(this.currentWord)[this.inputIndex] === Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex] ||\r\n                            Object.values(this.currentWord)[this.inputIndex] === ''\r\n                        ) {\r\n                            for (let i = 0; i < this.keys; i++) {\r\n                                if (this.selectedInput.children[i] && !this.selectedInput.classList.contains('not-editable')) {\r\n                                    this.successAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                                }\r\n                            }\r\n\r\n                            if (!this.selectedInput.classList.contains('not-editable')) {\r\n                                if (this.result[this.inputIndex] === undefined) {\r\n                                    this.result[this.inputIndex] = true;\r\n                                }\r\n                            }\r\n\r\n                            if (this.inputIndex + 1 < 4) {\r\n                                this.inputIndex++;\r\n                                this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                                while (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\r\n                                    this.inputIndex += 1;\r\n                                    this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                                }\r\n                                this.keys = this.selectedInput.childElementCount;\r\n                                this.inputStyling();\r\n                            } else if (this.inputIndex + 1 === 4) {\r\n                                let emptyLines: [boolean, boolean, boolean, boolean] = [undefined, undefined, undefined, undefined];\r\n                                Object.values(this.currentWord).slice(0, 4).forEach((value: string, i: number) => {\r\n                                    if (!document.querySelector(`#div${inputs[i]}`).classList.contains('not-editable')) {\r\n                                        if (value === Object.values(this.vocabulary[this.currentWordIndex])[i]) {\r\n                                            let inp = <HTMLDivElement>document.querySelector(`#div${inputs[i]}`);\r\n                                            for (let ii = 0; ii < inp.childElementCount; ii++) {\r\n                                                let obj = <HTMLObjectElement>inp.children[ii];\r\n                                                this.successAnimation(obj);\r\n                                            }\r\n\r\n                                            if (value === '') {\r\n                                                emptyLines[i] = true;\r\n                                            }\r\n\r\n                                            if (this.result[i] === undefined) {\r\n                                                this.result[i] = true;\r\n                                            }\r\n                                        } else {\r\n                                            let inp = <HTMLDivElement>document.querySelector(`#div${inputs[i]}`);\r\n                                            for (let ii = 0; ii < inp.childElementCount; ii++) {\r\n                                                let obj = <HTMLObjectElement>inp.children[ii];\r\n                                                addVocabulary.failureAnimation(obj);\r\n                                            }\r\n\r\n                                            if (value === '') {\r\n                                                emptyLines[i] = false;\r\n                                            }\r\n\r\n                                            if (this.result[i] === undefined) {\r\n                                                this.result[i] = false;\r\n                                            }\r\n                                        }\r\n                                    } else if (Object.values(this.vocabulary[this.currentWordIndex])[i].includes(\"^ign^\")) {\r\n                                        this.currentWord[Object.keys(this.currentWord)[i]] = Object.values(this.vocabulary[this.currentWordIndex])[i];\r\n                                        let div = <HTMLDivElement>document.querySelector(`#div${inputs[i]}`);\r\n                                        if (div && Object.values(this.vocabulary[this.currentWordIndex])[i].replaceAll(\"^ign^\", '').trim() != \"\") {\r\n                                            div.innerHTML = \"\";\r\n                                            let span = div.appendChild(document.createElement('span'));\r\n                                            span.innerHTML = Object.values(this.currentWord)[i].replaceAll(\"^ign^\", \"\");\r\n                                            span.classList.add(\"reveal\");\r\n\r\n                                            let max = div.clientHeight * 0.6;\r\n                                            let fontSize: number;\r\n\r\n                                            span.style.fontSize = max + 'px';\r\n\r\n                                            span.style.whiteSpace = 'nowrap';\r\n                                            span.style.display = 'inline-block';\r\n                                            span.style.width = 'auto';\r\n                                            span.style.fontSize = max + 'px';\r\n                                            while (span.scrollWidth > div.clientWidth * 0.95 || span.clientHeight > max) {\r\n                                                fontSize = parseInt(span.style.fontSize.slice(0, -2));\r\n                                                if (fontSize <= 1) break;\r\n                                                span.style.fontSize = (fontSize - 1) + 'px';\r\n                                            }\r\n                                            while (span.clientHeight > max) {\r\n                                                fontSize = parseInt(span.style.fontSize.slice(0, -2));\r\n                                                span.style.fontSize = (fontSize - 1) + 'px';\r\n                                            }\r\n                                        } else {\r\n                                            emptyLines[i] = true;\r\n                                        }\r\n                                    }\r\n                                });\r\n                                this.resultStyling(emptyLines);\r\n\r\n                                if (Object.values(this.currentWord).toLocaleString() === Object.values(this.vocabulary[this.currentWordIndex]).toLocaleString()) {\r\n                                    let addition = this.result.filter(w => w === true).length;\r\n                                    this.totalAttempts += 3;\r\n                                    this.totalPoints += addition;\r\n                                    if (addition === 3) {\r\n                                        this.vocabulary[this.currentWordIndex].probability *= 0.8;\r\n                                    } else {\r\n                                        this.vocabulary[this.currentWordIndex].probability *= 1.2;\r\n                                    }\r\n\r\n                                    const transaction = this.database.transaction('vocabulary', 'readwrite');\r\n                                    transaction.onerror = () => console.error(transaction.error);\r\n                                    const objectStore = transaction.objectStore('vocabulary');\r\n                                    const request = objectStore.get(this.currentWordIndex + 1);\r\n                                    request.onerror = () => console.error(request.error);\r\n                                    request.onsuccess = () => {\r\n                                        const req = objectStore.put(this.vocabulary[this.currentWordIndex], this.currentWordIndex + 1);\r\n                                        req.onerror = () => console.error(req.error);\r\n                                    }\r\n\r\n                                    setTimeout(_ => {\r\n                                        this.inputIndex = 0;\r\n                                        this.selectedInput = <HTMLDivElement>document.querySelector(`#div${inputs[this.inputIndex]}`);\r\n                                        this.keys = 0;\r\n                                        this.inputStyling();\r\n                                        this.startNewTrainingRound();\r\n                                    }, 500);\r\n                                } else {\r\n                                    setTimeout(_ => this.inputStyling(), 500);\r\n                                }\r\n                            }\r\n                        } else if (this.selectedInput.classList.contains('not-editable')) {\r\n                            if (this.inputIndex + 1 < 4) {\r\n                                this.inputIndex++;\r\n                                this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                                if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\r\n                                    this.inputIndex += 1;\r\n                                    this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                                }\r\n                                this.keys = this.selectedInput.childElementCount;\r\n                                this.inputStyling();\r\n                            }\r\n                            return;\r\n                        } else {\r\n                            if (this.inputIndex === 3) {\r\n                                let emptyLines: [boolean, boolean, boolean, boolean] = [undefined, undefined, undefined, undefined];\r\n                                Object.values(this.currentWord).slice(0, 4).forEach((value, i) => {\r\n                                    if (!document.querySelector(`#div${inputs[i]}`).classList.contains('not-editable')) {\r\n                                        if (value === Object.values(this.vocabulary[this.currentWordIndex])[i]) {\r\n                                            let inp = <HTMLDivElement>document.querySelector(`#div${inputs[i]}`);\r\n                                            for (let ii = 0; ii < inp.childElementCount; ii++) {\r\n                                                let obj = <HTMLObjectElement>inp.children[ii];\r\n                                                this.successAnimation(obj);\r\n                                            }\r\n\r\n                                            if (value === '') {\r\n                                                emptyLines[i] = true;\r\n                                            }\r\n\r\n                                            if (this.result[i] === undefined) {\r\n                                                this.result[i] = true;\r\n                                            }\r\n                                        } else {\r\n                                            let inp = <HTMLDivElement>document.querySelector(`#div${inputs[i]}`);\r\n                                            for (let ii = 0; ii < inp.childElementCount; ii++) {\r\n                                                let obj = <HTMLObjectElement>inp.children[ii];\r\n                                                addVocabulary.failureAnimation(obj);\r\n                                            }\r\n\r\n                                            if (value === '') {\r\n                                                emptyLines[i] = false;\r\n                                            }\r\n\r\n                                            if (this.result[i] === undefined) {\r\n                                                this.result[i] = false;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                                this.resultStyling(emptyLines);\r\n                                setTimeout(_ => this.inputStyling(), 500);\r\n                            } else {\r\n                                for (let i = 0; i < this.selectedInput.childElementCount; i++) {\r\n                                    addVocabulary.failureAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                                }\r\n                            }\r\n\r\n\r\n                            if (this.result[this.inputIndex] === undefined) {\r\n                                this.result[this.inputIndex] = true;\r\n                            }\r\n\r\n                            this.result[this.inputIndex] = false;\r\n                        }\r\n                    } else if (event.key === 'ArrowDown') {\r\n                        if (this.inputIndex + 1 < 4) {\r\n                            this.inputIndex++;\r\n                            this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                            if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\r\n                                this.inputIndex += 1;\r\n                                this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                            }\r\n                            this.keys = this.selectedInput.childElementCount;\r\n                            this.inputStyling();\r\n                        }\r\n                        return;\r\n                    }\r\n                    return;\r\n                } else if (event.key === 'ArrowUp') {\r\n                    if (this.inputIndex > 0) this.inputIndex--;\r\n                    this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                    this.keys = this.selectedInput.childElementCount;\r\n                    this.inputStyling();\r\n                    return;\r\n                } else if (this.selectedInput.classList.contains('not-editable')) {\r\n                    return;\r\n                } else if (event.key === 'Backspace' && !mode) {\r\n                    if (this.returnLastElement(this.selectedInput)) {\r\n                        this.returnLastElement(this.selectedInput).remove();\r\n                        this.keys--;\r\n                        if (this.selectedInput.firstChild) {\r\n                            this.movementAnimation(this.selectedInput);\r\n                        }\r\n\r\n                        if (this.currentWord && !isNaN(this.currentWordIndex) && !this.commandMode) {\r\n                            Object.defineProperty(\r\n                                this.currentWord,\r\n                                Object.keys(this.currentWord)[this.inputIndex],\r\n                                { value: Object.values(this.currentWord)[this.inputIndex].slice(0, this.keys) }\r\n                            );\r\n                        }\r\n\r\n                        let object = <HTMLObjectElement>this.selectedInput.lastElementChild;\r\n                        if (!object || !object.contentDocument) return;\r\n                        let w = window.innerWidth;\r\n                        let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n                        let h = (w / (this.keys + 1)) * aspectRatio;\r\n                        let padding = (this.selectedInput.getBoundingClientRect().height - h) / 2;\r\n                        this.padding[this.inputIndex] = Math.max(padding, 0.1);\r\n                    }\r\n                    return;\r\n                } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) {\r\n                    return;\r\n                } else if (event.key === '#') {\r\n                    this.commandMode = true;\r\n                }\r\n            }\r\n\r\n            let object = document.createElement('object');\r\n            object.data = './keys/Reversion_T.svg';\r\n            object.id = `key${this.keys}-inp${this.inputIndex}`;\r\n            object.style.height = `100%`;\r\n            this.selectedInput.insertAdjacentElement('beforeend', object);\r\n            let w = window.innerWidth;\r\n            object.hidden = true;\r\n\r\n            object.addEventListener('load', _ => {\r\n                object.hidden = false;\r\n                let width = Math.floor(object.getBoundingClientRect().width * 100) / 100;\r\n                object.hidden = true;\r\n                if (this.keys + 2 > Math.floor(w / width)) {\r\n                    object.hidden = false;\r\n                    let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n                    object.hidden = true;\r\n                    let h = (w / (this.keys + 2)) * aspectRatio;\r\n                    let padding = (this.selectedInput.getBoundingClientRect().height - h) / 2;\r\n                    if (padding > this.selectedInput.getBoundingClientRect().height / 2 * 0.85) {\r\n                        object.remove();\r\n                        for (let i = 0; i < this.keys; i++) {\r\n                            addVocabulary.failureAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                        }\r\n                        return;\r\n                    } else {\r\n                        this.padding[this.inputIndex] = Math.max(padding, 1);\r\n                    }\r\n                }\r\n                object.hidden = false;\r\n\r\n                let svg = object.contentDocument;\r\n                if (event.key === '<') {\r\n                    svg.querySelector('#tspan7').innerHTML = '&lt;';\r\n                } else if (event.key === '&') {\r\n                    svg.querySelector('#tspan7').innerHTML = '&amp;';\r\n                } else {\r\n                    if (event.key === '/') event.preventDefault();\r\n                    svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\r\n                }\r\n\r\n                if (this.currentWord && !isNaN(this.currentWordIndex) && !this.commandMode) {\r\n                    Object.defineProperty(\r\n                        this.currentWord,\r\n                        Object.keys(this.currentWord)[this.inputIndex],\r\n                        { value: Object.values(this.currentWord)[this.inputIndex] + event.key.charAt(0) }\r\n                    );\r\n                }\r\n\r\n                this.keys++;\r\n\r\n                this.movementAnimation(this.selectedInput);\r\n                addVocabulary.idleAnimation(object);\r\n\r\n                if (this.commandMode) {\r\n                    this.commandAnimation(object);\r\n                    this.command += event.key;\r\n                }\r\n            });\r\n        }\r\n\r\n        document.addEventListener('keydown', this.keyDownFunction);\r\n        this.startNewTrainingRound();\r\n    }\r\n\r\n    startNewTrainingRound(): void {\r\n        const isEmpty = (word: WordBundle): boolean => {\r\n            if ((\r\n                Object.values(word).slice(0, 4).filter((w: string) => w.trim() === \"\").length >= 3\r\n            ) || (\r\n                    word.latinWord.includes('^con^')\r\n                ) || (\r\n                    !word.selected\r\n                ) || (\r\n                    Object.values(word).slice(0, 4).filter((w: string) => w.includes(\"^ign^\")).length >= 3\r\n                )) {\r\n                return true;\r\n            } else return false;\r\n        }\r\n\r\n        if (this.vocabulary.length === 0) {\r\n            setTimeout(_ => alert('Keine Vokabeln!'), 50);\r\n            return;\r\n        }\r\n\r\n        this.round++;\r\n        this.result = [undefined, undefined, undefined, undefined];\r\n\r\n        let overallProbabilty = 0;\r\n        this.vocabulary.forEach(word => { if (!isEmpty(word)) { overallProbabilty += word.probability } });\r\n        if (overallProbabilty === 0) {\r\n            setTimeout(_ => alert('Keine Vokabeln!'), 50);\r\n            return;\r\n        }\r\n\r\n        let randomNumber = Math.floor(Math.random() * overallProbabilty * 10) / 10;\r\n        let lowestDifference: number;\r\n        let lastProbability = 0;\r\n\r\n        this.vocabulary.forEach((word, i) => {\r\n            if (!isEmpty(word)) {\r\n                if (lowestDifference === undefined) {\r\n                    lowestDifference = Math.abs(randomNumber - (lastProbability + word.probability));\r\n                    this.currentWord = word;\r\n                    this.currentWordIndex = i;\r\n                } else if (Math.abs(randomNumber - (lastProbability + word.probability)) < lowestDifference) {\r\n                    lowestDifference = Math.abs(randomNumber - (lastProbability + word.probability));\r\n                    this.currentWordIndex = i;\r\n                    if (Object.values(word).toLocaleString().slice(0, 4) === Object.values(this.currentWord).toLocaleString().slice(0, 4)) {\r\n                        word.probability = Math.max(0, word.probability - 1);\r\n                    }\r\n                    this.currentWord = word;\r\n                }\r\n                lastProbability += word.probability;\r\n            }\r\n        });\r\n\r\n        let savedProperty: [string, { value: string }];\r\n        do {\r\n            let rn = Math.random();\r\n            if (rn <= 0.5) {\r\n                savedProperty = ['latinWord', { value: this.currentWord.latinWord }];\r\n            } else if (rn <= 0.7) {\r\n                savedProperty = ['inflections', { value: this.currentWord.inflections }];\r\n            } else if (rn <= 0.95) {\r\n                savedProperty = ['germanTranslation', { value: this.currentWord.germanTranslation }];\r\n            } else {\r\n                savedProperty = ['relatedForeignWords', { value: this.currentWord.relatedForeignWords }];\r\n            }\r\n        } while (savedProperty[1].value.trim() === '' || savedProperty[1].value.includes('^ign^'));\r\n\r\n        this.currentWord = {\r\n            latinWord: '',\r\n            inflections: '',\r\n            germanTranslation: '',\r\n            relatedForeignWords: '',\r\n            selected: true,\r\n            probability: this.currentWord.probability\r\n        };\r\n\r\n        Object.defineProperty(this.currentWord, savedProperty[0], savedProperty[1]);\r\n\r\n        document.querySelectorAll('.t').forEach(t => t.innerHTML = '');\r\n        document.querySelectorAll(\".not-editable\").forEach(div => div.classList.remove(\"not-editable\"));\r\n        Object.values(this.vocabulary[this.currentWordIndex]).slice(0, 4).forEach((w: string, i: number) => {\r\n            let div = document.getElementById(\"div\" + i * 2);\r\n            if (Object.keys(this.vocabulary[this.currentWordIndex])[i] != savedProperty[0]) {\r\n                if (w.includes(\"^ign^\")) {\r\n                    div.classList.add(\"not-editable\")\r\n                }\r\n            } else {\r\n                div.classList.add(\"not-editable\");\r\n                let max = div.clientHeight * 0.6;\r\n                let fontSize: number;\r\n\r\n                let span = document.createElement('span');\r\n                span.style.fontSize = max + 'px';\r\n                span.innerHTML = savedProperty[1].value;\r\n                div.appendChild(span);\r\n\r\n                span.style.whiteSpace = 'nowrap';\r\n                span.style.display = 'inline-block';\r\n                span.style.width = 'auto';\r\n                span.style.fontSize = max + 'px';\r\n                while (span.scrollWidth > div.clientWidth * 0.95 || span.clientHeight > max) {\r\n                    fontSize = parseInt(span.style.fontSize.slice(0, -2));\r\n                    if (fontSize <= 1) break;\r\n                    span.style.fontSize = (fontSize - 1) + 'px';\r\n                }\r\n                while (span.clientHeight > max) {\r\n                    fontSize = parseInt(span.style.fontSize.slice(0, -2));\r\n                    span.style.fontSize = (fontSize - 1) + 'px';\r\n                }\r\n                this.result[i] = true;\r\n            }\r\n        });\r\n\r\n        let i = 0;\r\n        while (this.container.querySelector(\"#div\" + i * 2).classList.contains(\"not-editable\")) i++;\r\n        this.inputIndex = i;\r\n        this.selectedInput = this.container.querySelector(\"#div\" + i * 2);\r\n        this.inputStyling();\r\n    }\r\n\r\n    movementAnimation(inp: HTMLDivElement): void {\r\n        let object = <HTMLObjectElement>inp.firstChild;\r\n        let id = parseInt(inp.id[3]);\r\n        if (inp.firstChild) {\r\n            if (inp.childElementCount > 1) {\r\n                inp.style.transition = 'padding 250ms';\r\n            }\r\n            inp.style.paddingTop = `${this.padding[id / 2]}px`;\r\n            inp.style.paddingBottom = `${this.padding[id / 2]}px`;\r\n\r\n            let height = inp.getBoundingClientRect().height - 2 * this.padding[id / 2];\r\n            inp.style.paddingLeft = `${(window.innerWidth - inp.childElementCount * height) / 2}px`;\r\n            inp.style.paddingRight = `${(window.innerWidth - inp.childElementCount * height) / 2}px`;\r\n        }\r\n    }\r\n\r\n    commandAnimation(object: HTMLObjectElement): void {\r\n        if (!object) {\r\n            return;\r\n        }\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#eeeeeeff', '#ffa500'],\r\n            offset: [0, 1],\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 500,\r\n            fill: 'forwards'\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    fixedAnimation(object: HTMLObjectElement): void {\r\n        if (!object) {\r\n            return;\r\n        }\r\n        object.classList.add('fixed');\r\n\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#eeeeeeff', '#ffff00'],\r\n            offset: [0, 1],\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 500,\r\n            fill: 'forwards'\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    successAnimation(object: HTMLObjectElement): void {\r\n        if (!object) {\r\n            return;\r\n        }\r\n\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#eeeeeeff', '#08a000', '#eeeeeeff'],\r\n            offset: [0, 1]\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 500\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    private returnLastElement(input: HTMLDivElement): HTMLObjectElement {\r\n        if (input.childElementCount > 0) {\r\n            if (!input.lastElementChild.classList.contains('fixed')) {\r\n                return <HTMLObjectElement>input.lastElementChild;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private inputStyling(): void {\r\n        document.body.style.backgroundImage = `\r\n            linear-gradient(180deg, \r\n                ${this.backgroundColor} 0%, \r\n                #06011b ${20 + (this.inputIndex * 2) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%,\r\n                #06011b ${20 + (this.inputIndex * 2 + 1) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%, \r\n                ${this.backgroundColor} ${(window.innerHeight / document.body.scrollHeight) * 100}%\r\n            )\r\n        `;\r\n        //#0d0043\r\n        //#440075\r\n    }\r\n\r\n    private resultStyling(result: [boolean, boolean, boolean, boolean]): void {\r\n        document.body.style.transition = 'background-image 250ms';\r\n        let str = `linear-gradient(180deg,`;\r\n        result.forEach((value, i) => {\r\n            let color: string;\r\n            if (value === true) {\r\n                color = '#2be231';\r\n            } else if (value === false) {\r\n                color = '#e80000';\r\n            } else {\r\n                color = '#140063';\r\n            }\r\n\r\n            str +=\r\n                `#140063 ${20 + (i * 2) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%,\r\n                ${color} ${20 + (i * 2 + 0.5) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%, \r\n                #140063 ${20 + (i * 2 + 1) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%, `;\r\n        });\r\n\r\n        document.body.style.backgroundImage = str.slice(0, str.length - 2) + ')';\r\n    }\r\n}","import { addVocabulary, createDiv, home, removeAllEventListeners, training } from \"..\";\r\n\r\nexport class InflectVocabulary {\r\n    container: HTMLDivElement;\r\n    iconPlaceholder: HTMLDivElement;\r\n    navbar: HTMLDivElement;\r\n    buttonLeft: HTMLButtonElement;\r\n    buttonRight: HTMLButtonElement;\r\n    homeButton: HTMLButtonElement;\r\n    deletionButton: HTMLButtonElement;\r\n    genderSplitButton: HTMLButtonElement;\r\n\r\n    keydownFunction: EventListener;\r\n    buttonRightFunction: EventListener;\r\n    buttonLeftFunction: EventListener;\r\n    resizeFunction: EventListener;\r\n\r\n    selectedInput: HTMLDivElement;\r\n    inputSubIndex: number;\r\n    inputIndex: number;\r\n\r\n    currentWord: InflectedWord;\r\n    currentWordIndex: number;\r\n    wordIndex: number;\r\n    vocabulary: InflectedWord[];\r\n\r\n    database: IDBDatabase;\r\n    enterMode = false;\r\n    tabMode = false;\r\n    commandMode = false;\r\n    automaticPaddingAdjustment = false;\r\n    splitMode = false;\r\n    command = \"\";\r\n    tabulator = \"\";\r\n    tabCount = 0;\r\n    keys: number;\r\n    v = 1;\r\n    padding: number[] = [];\r\n    splitPadding: [number, number, number][] = new Array(3).fill(new Array(3).fill(0));\r\n    firstInterval: number;\r\n    secondInterval: number;\r\n    firstTimeout: number;\r\n    animatedInputIndex: number;\r\n    animatedInputSubIndex: number;\r\n    animatedBorderWidth = 0;\r\n    borderColor: string = '#12dada';\r\n\r\n    round = 0;\r\n    failures = 0;\r\n    totalAttempts = 0;\r\n    totalPoints = 0;\r\n    result: Result;\r\n\r\n    badColor = 'rgb(186, 2, 70)';\r\n    timeout: number;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    modifyDocument(param?: Parameter): void {\r\n        this.container = document.querySelector('#container');\r\n        this.iconPlaceholder = document.querySelector('#icon-placeholder');\r\n        this.navbar = document.querySelector('#navbar');\r\n\r\n        this.container.setAttribute('style', '');\r\n        document.body.style.backgroundImage = 'none';\r\n\r\n        document.body.setAttribute('class', '');\r\n        this.container.setAttribute('class', '');\r\n        this.iconPlaceholder.setAttribute('class', '');\r\n        this.navbar.setAttribute('class', '');\r\n\r\n        this.container.innerHTML = '';\r\n        this.iconPlaceholder.innerHTML = '';\r\n        this.navbar.innerHTML = '';\r\n\r\n        if (!param) {\r\n            param = 'add nouns';\r\n        }\r\n\r\n        let inflectVocabularyIcon: HTMLObjectElement;\r\n        inflectVocabularyIcon = document.createElement('object');\r\n        inflectVocabularyIcon.id = 'inflectVocabularyIcon';\r\n\r\n        this.v = 0;\r\n        this.badColor = 'rgb(186, 2, 70)';\r\n        switch (param) {\r\n            case 'add verbs':\r\n            case 'verbs':\r\n                this.v = 9;\r\n                this.badColor = '#ff00d4';\r\n                if (param === 'add verbs') {\r\n                    inflectVocabularyIcon.data = './conjugations.svg';\r\n                } else {\r\n                    inflectVocabularyIcon.data = './conjugate_verbs.svg';\r\n                }\r\n            case 'add nouns':\r\n            case 'nouns':\r\n            default:\r\n                const request = window.indexedDB.open('Vocabulary', 2);\r\n                request.onerror = () => console.error(request.error);\r\n                request.onsuccess = () => {\r\n                    this.database = request.result;\r\n                    this.tabulator = '';\r\n\r\n                    const transaction = this.database.transaction('inflected vocabulary', 'readonly');\r\n                    transaction.onerror = () => console.error(transaction.error);\r\n                    const objectStore = transaction.objectStore('inflected vocabulary');\r\n                    const req = objectStore.getAll();\r\n                    req.onerror = () => console.error(req.error);\r\n                    req.onsuccess = () => {\r\n                        this.vocabulary = req.result;\r\n\r\n                        document.body.classList.add('inflectVocabularyBody');\r\n                        this.iconPlaceholder.classList.add('inflectVocabularyIconPlaceholder');\r\n                        if (param === 'add nouns') {\r\n                            inflectVocabularyIcon.data = './declinations.svg';\r\n                        } else if (param === 'nouns') {\r\n                            inflectVocabularyIcon.data = './decline_nouns.svg';\r\n                        }\r\n                        this.iconPlaceholder.insertAdjacentElement('beforeend', inflectVocabularyIcon);\r\n\r\n                        if (param === 'add verbs' || param === 'verbs') {\r\n                            this.container.classList.add('inflectVocabularyContainer', 'verbs');\r\n                        } else {\r\n                            this.container.classList.add('inflectVocabularyContainer', 'nouns');\r\n                        }\r\n                        this.navbar.classList.add('inflectVocabularyNavbar');\r\n\r\n                        this.container.tabIndex = 0;\r\n                        this.padding = [];\r\n                        for (let i = 0; i < 21 - this.v; i++) {\r\n                            let div = createDiv(`div${i}`, 'editable');\r\n                            this.container.insertAdjacentElement('beforeend', div);\r\n                            if (i < 3) {\r\n                                div.classList.add('firstrow');\r\n                                div.classList.remove('editable');\r\n                                div.style.fontSize = `${div.offsetHeight * 0.75}px`;\r\n                                if (i === 1) {\r\n                                    div.innerHTML = 'Singular';\r\n                                } else if (i === 2) {\r\n                                    div.innerHTML = 'Plural';\r\n                                }\r\n                            }\r\n                            if (i % 3 === 0) {\r\n                                div.classList.add('firstcolumn');\r\n                                div.classList.remove('editable');\r\n                                div.style.fontSize = `${0.25 * div.offsetHeight}px`;\r\n                                if (i > 0) div.innerHTML = `${i / 3}. ${param.includes('verb') ? 'P' : 'F'}.`;\r\n                            }\r\n                            if (!(i < 3 || i % 3 === 0)) {\r\n                                div.style.padding = `${Math.round(0.05 * div.offsetHeight)}px`;\r\n                                if (!param.includes('add')) {\r\n                                    div.classList.add('shadowDesign');\r\n                                }\r\n                                this.padding.push(Math.round(div.offsetHeight * 0.05));\r\n                            } else {\r\n                                this.padding.push(0);\r\n                            }\r\n\r\n                            if (param.includes('verb')) {\r\n                                div.classList.add('v');\r\n                            }\r\n\r\n                        }\r\n\r\n                        if (param.startsWith('add')) {\r\n                            this.buttonLeft = document.createElement('button');\r\n                            this.buttonLeft.classList.add('roundButton', 'c');\r\n                            this.buttonLeft.innerHTML = '<';\r\n                            this.navbar.appendChild(this.buttonLeft);\r\n                        }\r\n\r\n                        this.homeButton = document.createElement('button');\r\n                        this.homeButton.classList.add('roundButton');\r\n                        this.homeButton.tabIndex = -1;\r\n                        let icon = document.createElement('object');\r\n                        icon.classList.add('homeIcon');\r\n                        icon.data = './home.svg';\r\n                        icon.style.height = '7.5vh';\r\n\r\n                        const homeFunction = () => {\r\n                            removeAllEventListeners();\r\n                            if (this.tabMode) {\r\n                                this.cancelTabMode();\r\n                            }\r\n\r\n                            if (param.includes('add') && !(\r\n                                this.currentWord.singular.filter((value) => value === '').length === (param.includes('verb') ? 3 : 6) &&\r\n                                this.currentWord.plural.filter((value) => value === '').length === (param.includes('verb') ? 3 : 6)\r\n                            )) {\r\n                                const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\r\n                                transaction.onerror = () => console.error(transaction.error);\r\n                                const objectStore = transaction.objectStore(`inflected vocabulary`);\r\n                                const req = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                                req.onerror = () => console.error(req.error);\r\n\r\n                                document.querySelectorAll('.editable').forEach(el => el.classList.add('savedElement'));\r\n                                setTimeout(() => {\r\n                                    document.querySelectorAll('.editable').forEach(el => el.classList.remove('savedElement'));\r\n                                    this.splitMode = false;\r\n                                    this.tabulator = '';\r\n                                    home.modifyDocument();\r\n                                    this.commandMode = false;\r\n                                }, 200);\r\n                                return;\r\n                            }\r\n                            this.splitMode = false;\r\n                            this.tabulator = '';\r\n                            home.modifyDocument();\r\n                            this.commandMode = false;\r\n                        }\r\n\r\n                        icon.addEventListener('load', _ => {\r\n                            icon.contentDocument.addEventListener('click', homeFunction);\r\n                        })\r\n\r\n                        this.homeButton.addEventListener('click', homeFunction);\r\n\r\n\r\n                        this.homeButton.insertAdjacentElement('beforeend', icon);\r\n                        this.navbar.appendChild(this.homeButton);\r\n\r\n                        if (param.startsWith('add')) {\r\n                            this.deletionButton = document.createElement('button');\r\n                            this.deletionButton.classList.add('roundButton', 'deletionButton');\r\n                            this.deletionButton.innerHTML = 'X';\r\n                            this.deletionButton.tabIndex = -1;\r\n                            if (param.includes('verb')) {\r\n                                this.deletionButton.classList.add('v');\r\n                            }\r\n                            this.navbar.appendChild(this.deletionButton);\r\n\r\n                            if (param == 'add nouns') {\r\n                                this.genderSplitButton = document.createElement('button');\r\n                                this.genderSplitButton.classList.add('roundButton', 'genderSplitButton');\r\n                                let svg = document.createElement('img');\r\n                                svg.src = '/split-genders.svg';\r\n                                this.genderSplitButton.append(svg);\r\n                                this.navbar.appendChild(this.genderSplitButton);\r\n\r\n                                [svg, this.genderSplitButton].forEach(el => el.addEventListener('click', () => this.splitGenders(this.currentWord)));\r\n                            }\r\n\r\n                            this.buttonRight = document.createElement('button');\r\n                            this.buttonRight.classList.add('roundButton', 'c');\r\n                            this.buttonRight.innerHTML = '>';\r\n                            this.buttonRight.tabIndex = -1;\r\n                            this.navbar.appendChild(this.buttonRight);\r\n                        }\r\n\r\n\r\n                        if (param) {\r\n                            this.type(param);\r\n                        } else {\r\n                            this.type();\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n\r\n        let animation: number | null = null;\r\n        this.resizeFunction = () => {\r\n            if (animation !== null) {\r\n                clearTimeout(animation);\r\n                animation = null;\r\n            }\r\n\r\n            for (let i = 4; i < this.container.children.length; i++) {\r\n                if (i % 3 > 0) {\r\n                    if (!this.splitMode) {\r\n                        let div = <HTMLDivElement>this.container.children[i];\r\n                        let array = Object.values(this.currentWord)[i % 3 - 1];\r\n                        let n = Math.floor(i / 3) - 1;\r\n                        this.adjustInputWidth(div, array[n], false);\r\n                    } else {\r\n                        for (let ii = 0; ii < 3; ii++) {\r\n                            let div = this.container.children[i].children[ii];\r\n                            let array = Object.values(this.currentWord)[i % 3 - 1];\r\n                            let n = Math.floor(i / 3 - 1);\r\n                            this.adjustInputWidth(div as HTMLDivElement, array[n].split(mfORn)[ii + 1], false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            animation = setTimeout((): void => {\r\n                for (let j = 4; j < this.container.childElementCount; j++) {\r\n                    if (j % 3 > 0) {\r\n                        if (this.automaticPaddingAdjustment) {\r\n                            if (this.splitMode) {\r\n                                for (let k = 0; k < 3; k++) {\r\n                                    let input = <HTMLDivElement>this.container.children[j].children[k];\r\n                                    let array = Object.values(this.currentWord)[j % 3 - 1];\r\n                                    let n = Math.floor(j / 3) - 1;\r\n                                    let splitto = array[n].split(mfORn).slice(1);\r\n                                    this.adjustInputWidth(input, splitto[k], false);\r\n                                    this.automaticPaddingAnimation(input, false, false);\r\n                                }\r\n                            }\r\n                            this.automaticPaddingAnimation(<HTMLDivElement>this.container.children[j], false, false);\r\n                        } else {\r\n                            this.paddingAnimation(<HTMLDivElement>this.container.children[j]);\r\n                        }\r\n                    }\r\n                }\r\n            }, 200);\r\n        }\r\n\r\n        window.addEventListener(\"resize\", this.resizeFunction);\r\n    }\r\n\r\n    type(param?: Parameter): void {\r\n        switch (param) {\r\n            case 'verbs':\r\n            case 'nouns':\r\n                this.keys = 0;\r\n                this.borderColor = param.includes('verb') ? '#ff5e01' : 'rgba(138, 43, 226, 1)';\r\n\r\n                document.querySelectorAll('.editable').forEach((element: HTMLDivElement) => {\r\n                    element.addEventListener('click', (event: MouseEvent) => {\r\n                        if (this.splitMode) {\r\n                            let source = event.target as Element;\r\n                            if (source === element) return;\r\n                            let count: number;\r\n                            for (let q = 0; q < element.childElementCount; q++) {\r\n                                if (element.children[q] === source) {\r\n                                    count = q;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            this.inputSubIndex = count;\r\n                        }\r\n                        this.inputIndex = parseInt(element.id.slice(3));\r\n\r\n                        this.changeSelectedInput();\r\n                    });\r\n                });\r\n\r\n                this.selectedInput = <HTMLDivElement>document.getElementById('div4');\r\n                this.selectedInput.classList.add('selectedElement');\r\n                this.inputIndex = 4;\r\n                this.wordIndex = this.vocabulary.length;\r\n\r\n                this.currentWord = {\r\n                    singular: this.empty(param),\r\n                    plural: this.empty(param),\r\n                    verb: param.includes('verb'),\r\n                    probability: 1\r\n                }\r\n\r\n                this.keydownFunction = (event: KeyboardEvent) => {\r\n                    let forbiddenCharacters = ['´', '`', '^'];\r\n                    let inp = this.splitMode ? this.selectedInput.children[this.inputSubIndex] as HTMLDivElement : this.selectedInput;\r\n                    if (this.commandMode) {\r\n                        forbiddenCharacters.push('#');\r\n                        if (event.key === 'Enter') {\r\n                            if (this.command.endsWith('%') && !this.automaticPaddingAdjustment) {\r\n                                if (this.command.startsWith('#p-')) {\r\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\r\n                                    if (percentage >= 0 && percentage <= 100) {\r\n                                        this.padding[this.inputIndex] = Math.round(Math.max(Math.min(this.padding[this.inputIndex] * (1 - percentage / 100), this.selectedInput.clientHeight / 2 * 0.7), 1));\r\n                                        this.paddingAnimation(this.selectedInput);\r\n                                        this.command.split('').forEach(_ => {\r\n                                            this.selectedInput.lastElementChild.remove();\r\n                                            this.keys--;\r\n                                        });\r\n\r\n                                        this.command = '';\r\n                                        this.commandMode = false;\r\n                                        return;\r\n                                    }\r\n                                } else if (this.command.startsWith('#p+')) {\r\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\r\n                                    if (percentage >= 0) {\r\n                                        this.padding[this.inputIndex] = Math.round(Math.max(Math.min(this.padding[this.inputIndex] * (1 + percentage / 100), this.selectedInput.clientHeight / 2 * 0.7), 1));\r\n                                        this.paddingAnimation(this.selectedInput);\r\n                                        this.command.split('').forEach(_ => {\r\n                                            this.selectedInput.lastElementChild.remove();\r\n                                            this.keys--;\r\n                                        });\r\n                                        this.command = '';\r\n                                        this.commandMode = false;\r\n                                        return;\r\n                                    }\r\n                                } else if (this.command.startsWith('#P+')) {\r\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\r\n                                    if (percentage >= 0) {\r\n                                        this.padding.forEach((p, i) => {\r\n                                            let div: HTMLDivElement = document.querySelector(`#div${i}`);\r\n                                            if (div && i > 3 && i % 3 != 0) {\r\n                                                this.padding[i] = Math.round(Math.max(Math.min(this.padding[i] * (1 + percentage / 100), div.clientHeight / 2 * 0.7), 1));\r\n                                                this.paddingAnimation(div);\r\n                                            }\r\n                                        });\r\n                                        this.command.split('').forEach(_ => {\r\n                                            this.selectedInput.lastElementChild.remove();\r\n                                            this.keys--;\r\n                                        });\r\n                                        this.command = '';\r\n                                        this.commandMode = false;\r\n                                        return;\r\n                                    }\r\n                                } else if (this.command.startsWith('#P-')) {\r\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\r\n                                    if (percentage >= 0) {\r\n                                        this.padding.forEach((p, i) => {\r\n                                            let div: HTMLDivElement = document.querySelector(`#div${i}`);\r\n                                            if (div && i > 3 && i % 3 != 0) {\r\n                                                this.padding[i] = Math.round(Math.max(Math.min(this.padding[i] * (1 - percentage / 100), div.clientHeight / 2 * 0.7), 1));\r\n                                                this.paddingAnimation(document.querySelector(`#div${i}`));\r\n                                            }\r\n                                        });\r\n                                        this.command.split('').forEach(_ => {\r\n                                            this.selectedInput.lastElementChild.remove();\r\n                                            this.keys--;\r\n                                        });\r\n                                        this.command = '';\r\n                                        this.commandMode = false;\r\n                                        return;\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n\r\n                            switch (this.command.toLowerCase()) {\r\n                                case '#exit':\r\n                                case '#quit':\r\n                                case '#stop':\r\n                                case '#home':\r\n                                case '#stopp':\r\n                                case '#beenden':\r\n                                case '#hauptmenü':\r\n                                case '#home menu':\r\n                                case '#h':\r\n                                    this.command = '';\r\n                                    this.commandMode = false;\r\n                                    removeAllEventListeners();\r\n                                    this.splitMode = false;\r\n                                    this.tabulator = '';\r\n                                    home.modifyDocument();\r\n                                    return;\r\n                                case '#automaticpaddingadjustment':\r\n                                case '#auto':\r\n                                case '#automatic-padding-adjustment':\r\n                                case '#automatische padding-anpassung':\r\n                                case '#automatischepaddinganpassung':\r\n                                case '#automatische-padding-anpassung':\r\n                                case '#apa':\r\n                                    this.automaticPaddingAdjustment = true;\r\n                                    this.command.split('').forEach(_ => {\r\n                                        this.selectedInput.lastElementChild.remove();\r\n                                        this.keys--;\r\n                                    });\r\n                                    this.command = '';\r\n                                    this.commandMode = false;\r\n                                    this.adjustInputWidth(this.selectedInput, Object.values(this.currentWord)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1], true);\r\n                                    this.borderColor = 'orange';\r\n                                    if (!param.includes('add')) this.borderColor = param.includes('verb') ? '#ff5e01' : 'rgba(138, 43, 226, 1)';\r\n                                    return;\r\n                                case '#manualpaddingadjustment':\r\n                                case '#manual':\r\n                                case '#normalpaddingadjustment':\r\n                                case '#normal':\r\n                                case '#manual-padding-adjustment':\r\n                                case '#mpa':\r\n                                case '#npa':\r\n                                    if (!this.splitMode) {\r\n                                        this.automaticPaddingAdjustment = false;\r\n                                        this.command.split('').forEach(_ => {\r\n                                            this.selectedInput.lastElementChild.remove();\r\n                                            this.keys--;\r\n                                        });\r\n                                        this.command = '';\r\n                                        this.commandMode = false;\r\n                                        this.borderColor = '#12dada';\r\n                                        if (!param.includes('add')) this.borderColor = param.includes('verb') ? '#ff5e01' : 'rgba(138, 43, 226, 1)';\r\n                                        return;\r\n                                    }\r\n                                default: {\r\n                                    this.command.split('').forEach(_ => {\r\n                                        inp.lastElementChild.remove();\r\n                                        this.keys--;\r\n                                    });\r\n                                    this.commandMode = false;\r\n                                    this.changeSelectedInput();\r\n                                    break;\r\n                                }\r\n                            }\r\n                            return;\r\n                        } else if (event.key === 'ArrowUp') {\r\n                            this.command.split('').forEach(_ => {\r\n                                inp.removeChild(inp.lastElementChild);\r\n                                this.keys--;\r\n                            });\r\n\r\n                            if (this.inputIndex > 6) {\r\n                                this.inputIndex -= 3;\r\n                            }\r\n                            this.changeSelectedInput();\r\n\r\n                            this.command = '';\r\n                            this.commandMode = false;\r\n                            return;\r\n                        } else if (event.key === 'ArrowDown') {\r\n                            this.command.split('').forEach(_ => {\r\n                                inp.removeChild(inp.lastElementChild);\r\n                                this.keys--;\r\n                            });\r\n\r\n                            this.command = '';\r\n                            this.commandMode = false;\r\n\r\n                            if (this.inputIndex < 18 - this.v) {\r\n                                this.inputIndex += 3;\r\n                            }\r\n                            this.changeSelectedInput();\r\n                            return;\r\n                        } else if (event.key === 'ArrowLeft') {\r\n                            this.command.split('').forEach(_ => {\r\n                                inp.removeChild(inp.lastElementChild);\r\n                                this.keys--;\r\n                            });\r\n\r\n                            this.command = '';\r\n                            this.commandMode = false;\r\n\r\n                            if (this.inputIndex > 4) {\r\n                                if (this.splitMode && this.inputSubIndex > 0) {\r\n                                    this.inputSubIndex--;\r\n                                } else {\r\n                                    this.inputIndex--;\r\n                                    if (this.inputIndex % 3 === 0) {\r\n                                        this.inputIndex--;\r\n                                    }\r\n                                    if (this.splitMode && this.inputSubIndex === 0) {\r\n                                        this.inputSubIndex = 2;\r\n                                    }\r\n                                }\r\n\r\n                                this.changeSelectedInput();\r\n                            } else if (this.inputIndex == 4 && this.inputSubIndex > 0 && this.splitMode) {\r\n                                this.inputSubIndex--;\r\n                                this.changeSelectedInput();\r\n                            }\r\n                            return;\r\n                        } else if (event.key === 'ArrowRight') {\r\n                            this.command.split('').forEach(_ => {\r\n                                inp.removeChild(inp.lastElementChild);\r\n                                this.keys--;\r\n                            });\r\n\r\n                            this.command = '';\r\n                            this.commandMode = false;\r\n\r\n                            if (this.inputIndex < 20 - this.v) {\r\n                                if (this.splitMode && this.inputSubIndex < 2) {\r\n                                    this.inputSubIndex++;\r\n                                } else {\r\n                                    this.inputIndex++;\r\n                                    if (this.inputIndex % 3 === 0) {\r\n                                        this.inputIndex++;\r\n                                    }\r\n                                    if (this.splitMode && this.inputSubIndex === 2) {\r\n                                        this.inputSubIndex = 0;\r\n                                    }\r\n                                }\r\n                                this.changeSelectedInput();\r\n                            } else if (this.splitMode && this.inputIndex == 20 - this.v && this.inputSubIndex < 2) {\r\n                                this.inputSubIndex++;\r\n                                this.changeSelectedInput();\r\n                            }\r\n                            return;\r\n                        } else if (event.key === 'Backspace') {\r\n                            if (inp.lastElementChild) {\r\n                                inp.lastElementChild.remove();\r\n                                this.command = this.command.slice(0, this.command.length - 1);\r\n                                this.keys--;\r\n\r\n\r\n                                if (this.command === '') {\r\n                                    this.commandMode = false;\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (this.automaticPaddingAdjustment && this.padding[this.inputIndex] > inp.offsetHeight * 0.05) {\r\n                                let object = inp.lastElementChild;\r\n                                let w = Math.round((inp.getBoundingClientRect().width -\r\n                                    parseFloat(window.getComputedStyle(inp).paddingLeft) -\r\n                                    parseFloat(window.getComputedStyle(inp).paddingRight)) * 100) / 100;\r\n                                let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n                                let h = w / this.keys * aspectRatio;\r\n                                let padding = Math.max((inp.getBoundingClientRect().height - h) / 2, inp.offsetHeight * 0.05);\r\n                                if (!this.splitMode) {\r\n                                    this.padding[this.inputIndex] = Math.max(padding, 1);\r\n                                    inp.style.padding = `${this.padding[this.inputIndex]}px 0.25vw`;\r\n\r\n                                } else {\r\n                                    this.splitPadding[this.inputIndex][this.inputSubIndex] = Math.max(padding, 1);\r\n                                    inp.style.padding = `${this.splitPadding[this.inputIndex][this.inputSubIndex]}px 0.25vw`;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (\r\n                            this.commandMode && (\r\n                                inp.classList.contains('known-case') ||\r\n                                forbiddenCharacters.includes(event.key) ||\r\n                                event.key.length > 1\r\n                            )\r\n                        ) {\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    if (!this.commandMode) {\r\n                        if (event.key === 'ArrowRight') {\r\n                            if (this.inputIndex < 20 - this.v) {\r\n                                if (this.splitMode && this.inputSubIndex < 2) {\r\n                                    this.inputSubIndex++;\r\n                                } else {\r\n                                    this.inputIndex++;\r\n                                    if (this.inputIndex % 3 === 0) {\r\n                                        this.inputIndex++;\r\n                                    }\r\n                                    if (this.splitMode && this.inputSubIndex === 2) {\r\n                                        this.inputSubIndex = 0;\r\n                                    }\r\n                                }\r\n                                this.changeSelectedInput();\r\n                            } else if (this.splitMode && this.inputIndex == 20 - this.v && this.inputSubIndex < 2) {\r\n                                this.inputSubIndex++;\r\n                                this.changeSelectedInput();\r\n                            }\r\n                            return;\r\n                        } else if (event.key === 'ArrowLeft') {\r\n                            if (this.inputIndex > 4) {\r\n                                if (this.splitMode && this.inputSubIndex > 0) {\r\n                                    this.inputSubIndex--;\r\n                                } else {\r\n                                    this.inputIndex--;\r\n                                    if (this.inputIndex % 3 === 0) {\r\n                                        this.inputIndex--;\r\n                                    }\r\n                                    if (this.splitMode && this.inputSubIndex === 0) {\r\n                                        this.inputSubIndex = 2;\r\n                                    }\r\n                                }\r\n\r\n                                this.changeSelectedInput();\r\n                            } else if (this.inputIndex == 4 && this.inputSubIndex > 0 && this.splitMode) {\r\n                                this.inputSubIndex--;\r\n                                this.changeSelectedInput();\r\n                            }\r\n                            return;\r\n                        } else if (event.key === 'ArrowDown' || event.key === 'Enter') {\r\n                            const enter = event.key === 'Enter';\r\n                            const sub = this.inputSubIndex;\r\n                            let delay = false;\r\n                            if (this.splitMode && enter && Object.values(this.currentWord)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1].split(mfORn)[this.inputSubIndex + 1] === '' && this.inputSubIndex > 0) {\r\n                                delay = true;\r\n                                let array = <string[]>Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                                let n = Math.floor(this.inputIndex / 3) - 1;\r\n                                let splitto = array[n].split(mfORn).slice(1);\r\n                                splitto[this.inputSubIndex] = splitto[this.inputSubIndex - 1];\r\n                                array[n] = `^^m^^${splitto[0]}^^f^^${splitto[1]}^^n^^${splitto[2]}`;\r\n                                Object.defineProperty(\r\n                                    this.currentWord,\r\n                                    Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                    { value: array }\r\n                                );\r\n                                let phrase = splitto[this.inputSubIndex];\r\n                                let tabulatorStyle = false;\r\n                                let inp = this.selectedInput.children[this.inputSubIndex] as HTMLDivElement;\r\n                                let objectCount = 0;\r\n                                let objectsLoaded = 0;\r\n                                const id = this.inputIndex;\r\n                                const count = this.inputSubIndex;\r\n                                for (let ii = 0; ii < phrase.length; ii++) {\r\n\r\n                                    let object = document.createElement('object');\r\n                                    this.keys++;\r\n                                    object.addEventListener('load', _ => {\r\n                                        let svg = object.contentDocument;\r\n                                        svg.querySelector('#tspan7').innerHTML = phrase.charAt(ii);\r\n                                        if (object.classList.contains('tabulator')) {\r\n                                            this.tabulatorAnimation(object);\r\n                                        }\r\n                                        objectsLoaded++;\r\n                                        if (objectsLoaded === objectCount) {\r\n                                            this.adjustInputWidth(inp, phrase, false);\r\n                                            let pad = this.splitPadding[id][count];\r\n                                            inp.style.padding = `${pad}px 0.25vw`;\r\n                                        }\r\n                                    })\r\n                                    object.data = './keys/Reversion_T.svg';\r\n                                    object.id = `key${this.keys}-inp${this.inputIndex}-sub${this.inputSubIndex}`;\r\n                                    object.style.height = `100%`;\r\n                                    objectCount++;\r\n                                    inp.insertAdjacentElement('beforeend', object);\r\n                                    if (this.selectedInput.children[id - 1]) {\r\n                                        object.classList.add('tabulator');\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (this.inputIndex < 20 - this.v || this.inputSubIndex != 2) {\r\n                                if (event.key === 'Enter' && !inp.classList.contains('known-case')) {\r\n                                    let attemptList: string[] = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                                    let solutionList: string[] = Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex % 3 - 1];\r\n                                    let result: SingleResult = Object.values(this.result)[this.inputIndex % 3 - 1];\r\n                                    let n = Math.floor(this.inputIndex / 3) - 1;\r\n                                    let attempt: string = this.splitMode ? attemptList[n].split(mfORn)[sub + 1] : attemptList[n];\r\n                                    let solution: string = this.splitMode ? solutionList[n].split(mfORn)[sub + 1] : solutionList[n];\r\n                                    if (this.compare(attempt, solution)) {\r\n                                        for (let i = 0; i < inp.childElementCount; i++) {\r\n                                            let object = <HTMLObjectElement>inp.children[i];\r\n                                            object.addEventListener('load', _ => {\r\n                                                this.successAnimation(object);\r\n                                            });\r\n                                            if (object.contentDocument) {\r\n                                                this.successAnimation(object);\r\n                                            }\r\n                                        }\r\n\r\n                                        if ((!this.splitMode ? result[n] : result[n][sub]) === undefined) {\r\n                                            if (this.splitMode) {\r\n                                                result[n][this.inputSubIndex] = true;\r\n                                            } else result[n] = true;\r\n\r\n                                            Object.defineProperty(\r\n                                                this.result,\r\n                                                Object.keys(this.result)[this.inputIndex % 3 - 1],\r\n                                                { value: result }\r\n                                            );\r\n\r\n                                            setTimeout(_ => {\r\n                                                inp.classList.remove('shadowDesign');\r\n                                                inp.classList.add('greenShadowDesign');\r\n                                            }, 120)\r\n                                        }\r\n                                    } else if (attempt.replace('^tab^', '') != '') {\r\n                                        for (let i = 0; i < inp.childElementCount; i++) {\r\n                                            let object = <HTMLObjectElement>inp.children[i];\r\n                                            object.addEventListener('load', _ => this.failureAnimation(object));\r\n                                            if (object.contentDocument) this.failureAnimation(object);\r\n                                        }\r\n\r\n                                        if ((!this.splitMode ? result[n] : result[n][sub]) === undefined) {\r\n                                            if (this.splitMode) {\r\n                                                result[n][sub] = false;\r\n                                            } else result[n] = false;\r\n\r\n                                            Object.defineProperty(\r\n                                                this.result,\r\n                                                Object.keys(this.result)[this.inputIndex % 3 - 1],\r\n                                                { value: result }\r\n                                            );\r\n\r\n                                            setTimeout(_ => {\r\n                                                inp.classList.remove('shadowDesign');\r\n                                                inp.classList.add('redShadowDesign');\r\n                                            }, 120);\r\n                                        }\r\n                                        return;\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n\r\n                            do {\r\n                                if (this.inputIndex < 18 - this.v) {\r\n                                    if (this.splitMode && this.inputSubIndex < 2 && enter) {\r\n                                        this.inputSubIndex++;\r\n                                    } else {\r\n                                        this.inputIndex += 3;\r\n                                        if (this.splitMode && this.inputSubIndex === 2 && enter) {\r\n                                            this.inputSubIndex = 0;\r\n                                        }\r\n                                    }\r\n\r\n                                    this.changeSelectedInput();\r\n                                } else if (enter && this.inputIndex === 19 - this.v) {\r\n                                    if (this.splitMode && this.inputSubIndex < 2) {\r\n                                        this.inputSubIndex++;\r\n                                    } else {\r\n                                        this.inputIndex = 5;\r\n                                        if (this.splitMode && this.inputSubIndex === 2) {\r\n                                            this.inputSubIndex = 0;\r\n                                        }\r\n                                    }\r\n\r\n                                    this.changeSelectedInput();\r\n                                } else if (enter && this.inputIndex === 20 - this.v) {\r\n                                    if (this.splitMode && this.inputSubIndex < 2) {\r\n                                        this.inputSubIndex++;\r\n                                        this.changeSelectedInput();\r\n                                    } else {\r\n                                        this.currentWord.singular.forEach((word, i) => {\r\n                                            let index = 1 + (i + 1) * 3;\r\n                                            for (let ii = 0; ii < (this.splitMode ? 3 : 1); ii++) {\r\n                                                let m = index % 3 - 1;\r\n                                                let n = Math.floor(index / 3) - 1;\r\n                                                let wrd = this.splitMode ? word.split(mfORn)[ii + 1] : word;\r\n                                                let sol = this.splitMode ? Object.values(this.vocabulary[this.currentWordIndex])[m][n].split(mfORn)[ii + 1] : Object.values(this.vocabulary[this.currentWordIndex])[m][n];\r\n                                                if (this.compare(wrd, sol)) {\r\n                                                    for (let iii = 0; iii < (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).childElementCount; iii++) {\r\n                                                        if (index % 3 != 0 && !(this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.contains('known-case')) {\r\n                                                            let object = <HTMLObjectElement>(this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).children[iii];\r\n                                                            this.successAnimation(object);\r\n                                                        }\r\n                                                    }\r\n\r\n                                                    if ((this.splitMode ? Object.values(this.result)[m][n][ii] : Object.values(this.result)[m][n]) === undefined) {\r\n                                                        let array = Object.values(this.result)[m];\r\n                                                        if (this.splitMode) {\r\n                                                            array[n][ii] = true;\r\n                                                        } else array[n] = true;\r\n\r\n                                                        Object.defineProperty(\r\n                                                            this.result,\r\n                                                            Object.keys(this.result)[m],\r\n                                                            { value: array }\r\n                                                        )\r\n\r\n                                                        setTimeout(_ => {\r\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.remove('shadowDesign');\r\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.add('greenShadowDesign');\r\n                                                        }, 120)\r\n                                                    }\r\n                                                } else {\r\n                                                    for (let iii = 0; iii < (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).childElementCount; iii++) {\r\n                                                        if (index % 3 != 0 && !(this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.contains('known-case')) {\r\n                                                            let object = <HTMLObjectElement>(this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).children[iii];\r\n                                                            this.failureAnimation(object);\r\n                                                        }\r\n                                                    }\r\n\r\n                                                    if ((this.splitMode ? Object.values(this.result)[m][n][ii] : Object.values(this.result)[m][n]) === undefined) {\r\n                                                        let array = Object.values(this.result)[m];\r\n                                                        if (this.splitMode) {\r\n                                                            array[n][ii] = false;\r\n                                                        } else array[n] = false;\r\n                                                        Object.defineProperty(\r\n                                                            this.result,\r\n                                                            Object.keys(this.result)[m],\r\n                                                            { value: array }\r\n                                                        )\r\n\r\n                                                        setTimeout(_ => {\r\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.remove('shadowDesign');\r\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.add('redShadowDesign');\r\n                                                        }, 120);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        })\r\n                                        this.currentWord.plural.forEach((word, i) => {\r\n                                            let index = 2 + (i + 1) * 3;\r\n                                            for (let ii = 0; ii < (this.splitMode ? 3 : 1); ii++) {\r\n                                                let m = index % 3 - 1;\r\n                                                let n = Math.floor(index / 3) - 1;\r\n                                                let wrd = this.splitMode ? word.split(mfORn)[ii + 1] : word;\r\n                                                let sol = this.splitMode ? Object.values(this.vocabulary[this.currentWordIndex])[m][n].split(mfORn)[ii + 1] : Object.values(this.vocabulary[this.currentWordIndex])[m][n];\r\n                                                if (this.compare(wrd, sol)) {\r\n                                                    for (let iii = 0; iii < (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).childElementCount; iii++) {\r\n                                                        if (index % 3 != 0 && !(this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.contains('known-case')) {\r\n                                                            let object = <HTMLObjectElement>(this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).children[iii];\r\n                                                            object.addEventListener('load', () => this.successAnimation(object));\r\n                                                            if (object.contentDocument) this.successAnimation(object);\r\n                                                        }\r\n                                                    }\r\n                                                    if ((this.splitMode ? Object.values(this.result)[m][n][ii] : Object.values(this.result)[m][n]) === undefined) {\r\n                                                        let array = Object.values(this.result)[m];\r\n                                                        if (this.splitMode) {\r\n                                                            array[n][ii] = true;\r\n                                                        } else array[n] = true;\r\n                                                        Object.defineProperty(\r\n                                                            this.result,\r\n                                                            Object.keys(this.result)[m],\r\n                                                            { value: array }\r\n                                                        )\r\n\r\n                                                        setTimeout(_ => {\r\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.remove('shadowDesign');\r\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.add('greenShadowDesign');\r\n                                                        }, 120)\r\n                                                    }\r\n                                                } else {\r\n                                                    for (let iii = 0; iii < (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).childElementCount; iii++) {\r\n                                                        if (index % 3 != 0 && !(this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.contains('known-case')) {\r\n                                                            let object = <HTMLObjectElement>(this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).children[iii];\r\n                                                            this.failureAnimation(object);\r\n                                                        }\r\n                                                    }\r\n\r\n                                                    if ((this.splitMode ? Object.values(this.result)[m][n][ii] : Object.values(this.result)[m][n]) === undefined) {\r\n                                                        let array = Object.values(this.result)[m];\r\n                                                        if (this.splitMode) {\r\n                                                            array[n][ii] = false;\r\n                                                        } else array[n] = false;\r\n                                                        Object.defineProperty(\r\n                                                            this.result,\r\n                                                            Object.keys(this.result)[m],\r\n                                                            { value: array }\r\n                                                        )\r\n\r\n                                                        setTimeout(_ => {\r\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.remove('shadowDesign');\r\n                                                            (this.splitMode ? this.container.children[index].children[ii] : this.container.children[index]).classList.add('redShadowDesign');\r\n                                                        }, 120);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        });\r\n\r\n                                        if (this.compareObjects(this.currentWord, this.vocabulary[this.currentWordIndex])) {\r\n                                            this.totalAttempts += 11 - this.v / 3 * 2;\r\n                                            let addition = this.result.singular.filter(w => this.splitMode ? Array.isArray(w) && w.every(v => v === true) : w === true).length +\r\n                                                this.result.plural.filter(w => this.splitMode ? Array.isArray(w) && w.every(v => v === true) : w === true).length;\r\n                                            this.totalPoints += addition;\r\n\r\n                                            if (addition != 12 - this.v / 3 * 2) {\r\n                                                this.vocabulary[this.currentWordIndex].probability *= 1.2;\r\n                                            } else {\r\n                                                this.vocabulary[this.currentWordIndex].probability *= 0.8;\r\n                                            }\r\n\r\n                                            const transaction = this.database.transaction('inflected vocabulary', 'readwrite');\r\n                                            const objectStore = transaction.objectStore('inflected vocabulary');\r\n                                            const request = objectStore.put(this.vocabulary[this.currentWordIndex], this.currentWordIndex + 1);\r\n                                            request.onerror = () => console.error(request.error);\r\n\r\n                                            setTimeout(_ => {\r\n                                                document.querySelectorAll('.selectedElement').forEach(div => {\r\n                                                    div.classList.remove('selectedElement');\r\n                                                });\r\n                                                this.keys = 0;\r\n                                                this.inputIndex = 4;\r\n                                                this.selectedInput = <HTMLDivElement>document.querySelector('#div4');\r\n                                                this.selectedInput.classList.add('selectedElement');\r\n                                                this.startNewTrainingRound(param || 'nouns');\r\n                                            }, 500);\r\n                                        }\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            } while (enter && (this.splitMode ? this.selectedInput.children[this.inputSubIndex] : this.selectedInput).classList.contains('known-case'));\r\n                            return;\r\n                        } else if (event.key === 'ArrowUp') {\r\n                            if (this.inputIndex > 6) {\r\n                                this.inputIndex -= 3;\r\n\r\n                                this.changeSelectedInput();\r\n                            }\r\n                            return;\r\n                        } else if (event.key === 'Backspace') {\r\n                            if (inp.lastElementChild) {\r\n                                inp.lastElementChild.remove();\r\n\r\n                                let array = <string[]>Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                                let n = Math.floor(this.inputIndex / 3) - 1;\r\n                                let index: number;\r\n                                if (this.splitMode) {\r\n                                    if (this.inputSubIndex == 0) {\r\n                                        index = array[n].search(F);\r\n                                    } else if (this.inputSubIndex == 1) {\r\n                                        index = array[n].search(N);\r\n                                    } else {\r\n                                        index = array[n].length;\r\n                                    }\r\n                                }\r\n                                if (!this.splitMode && array[n].slice(-5) === '^tab^') {\r\n                                    array[n] = array[n].slice(0, array[n].length - 6);\r\n                                    if (this.tabCount > 1) this.tabCount--;\r\n                                    this.tabMode = !this.tabMode;\r\n                                    inp.classList.add('tab');\r\n                                    if (!this.tabMode) {\r\n                                        inp.classList.remove('tab');\r\n                                    }\r\n                                } else if (this.splitMode && index != -1 && index !== undefined) {\r\n                                    if (array[n].slice(index - 5, index) === '^tab^') {\r\n                                        array[n] = array[n].slice(0, index - 6) + array[n].slice(index);\r\n                                        if (this.tabCount > 1) this.tabCount--;\r\n                                        this.tabMode = !this.tabMode;\r\n                                        inp.classList.add('tab');\r\n                                        if (!this.tabMode) {\r\n                                            inp.classList.remove('tab');\r\n                                        }\r\n                                    }\r\n                                    array[n] = array[n].slice(0, index - 1) + array[n].slice(index);\r\n                                } else {\r\n                                    array[n] = array[n].slice(0, array[n].length - 1);\r\n                                }\r\n                                Object.defineProperty(\r\n                                    this.currentWord,\r\n                                    Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                    { value: array }\r\n                                );\r\n                                this.keys--;\r\n\r\n                                if (this.tabMode) {\r\n                                    this.tabulator = this.tabulator.slice(0, this.tabulator.length - 1);\r\n                                }\r\n                            } else if (this.tabMode) {\r\n                                this.cancelTabMode();\r\n                            }\r\n\r\n                            let pad = this.splitMode ? this.splitPadding[this.inputIndex][this.inputSubIndex] : this.padding[this.inputIndex];\r\n                            if (this.automaticPaddingAdjustment && pad > inp.offsetHeight * 0.05) {\r\n                                let object = inp.lastElementChild;\r\n                                if (!object) return;\r\n                                let w = Math.round((inp.getBoundingClientRect().width -\r\n                                    parseFloat(window.getComputedStyle(inp).paddingLeft) -\r\n                                    parseFloat(window.getComputedStyle(inp).paddingRight)) * 100) / 100;\r\n                                let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n                                let h = w / this.keys * aspectRatio;\r\n                                let padding = Math.max((inp.getBoundingClientRect().height - h) / 2, inp.offsetHeight * 0.05);\r\n                                if (this.splitMode) {\r\n                                    this.splitPadding[this.inputIndex][this.inputSubIndex] = Math.max(padding, 1);\r\n                                    inp.style.padding = `${this.splitPadding[this.inputIndex][this.inputSubIndex]}px 0.25vw`;\r\n                                } else {\r\n                                    this.padding[this.inputIndex] = Math.max(padding, 1);\r\n                                    inp.style.padding = `${this.padding[this.inputIndex]}px 0.25vw`;\r\n                                }\r\n                            }\r\n                            return;\r\n                        } else if (inp.classList.contains('known-case')) {\r\n                            return;\r\n                        } else if (event.key === '#') {\r\n                            this.command = '';\r\n                            this.commandMode = true;\r\n                        } else if (event.key === 'Tab') {\r\n                            if (this.tabulator) {\r\n                                if (this.keys + this.tabulator.length >=\r\n                                    this.selectedInput.clientWidth /\r\n                                    (this.selectedInput.clientHeight - parseFloat(this.selectedInput.style.padding)) && !this.automaticPaddingAdjustment) {\r\n                                    this.selectedInput.childNodes.forEach((v, i) => {\r\n                                        this.failureAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                                    });\r\n                                } else {\r\n                                    let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                                    let n = Math.floor(this.inputIndex / 3) - 1;\r\n                                    let index: number;\r\n                                    if (this.splitMode) {\r\n                                        if (this.inputSubIndex == 0) {\r\n                                            index = array[n].search(F);\r\n                                        } else if (this.inputSubIndex == 1) {\r\n                                            index = array[n].search(N);\r\n                                        } else {\r\n                                            index = array[n].length;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (this.splitMode) {\r\n                                        array[n] = array[n].slice(0, index) + this.tabulator + array[n].slice(index);\r\n                                    } else {\r\n                                        array[n] += this.tabulator;\r\n                                    }\r\n                                    Object.defineProperty(\r\n                                        this.currentWord,\r\n                                        Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                        { value: array }\r\n                                    );\r\n\r\n                                    let objectsLoaded = 0;\r\n                                    let objectCount = 0;\r\n                                    this.tabulator.split('').forEach(letter => {\r\n                                        let object = document.createElement('object');\r\n                                        object.data = './keys/Reversion_T.svg';\r\n                                        object.id = `key${this.keys}-inp${this.inputIndex}`;\r\n                                        object.style.height = `100%`;\r\n                                        this.selectedInput.insertAdjacentElement('beforeend', object);\r\n                                        object.hidden = true;\r\n                                        objectCount++;\r\n\r\n                                        object.addEventListener('load', _ => {\r\n                                            object.hidden = false;\r\n                                            objectsLoaded++;\r\n\r\n                                            let svg = object.contentDocument;\r\n                                            svg.querySelector('#tspan7').innerHTML = letter;\r\n                                            this.keys++;\r\n\r\n                                            this.tabulatorAnimation(object);\r\n                                            if (objectsLoaded === objectCount) {\r\n                                                this.adjustInputWidth(inp, array[n])\r\n                                            }\r\n                                        });\r\n                                    })\r\n                                }\r\n                            }\r\n                            return;\r\n                        } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) {\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    let object = document.createElement('object');\r\n                    object.data = './keys/Reversion_T.svg';\r\n                    object.id = `key${this.keys}-inp${this.inputIndex}`;\r\n                    object.style.height = `100%`;\r\n                    inp.insertAdjacentElement('beforeend', object);\r\n                    object.hidden = true;\r\n\r\n                    object.addEventListener('load', _ => {\r\n                        object.hidden = false;\r\n                        let width = Math.round(object.getBoundingClientRect().width * 100) / 100;\r\n                        object.hidden = true;\r\n                        let w = Math.round((inp.getBoundingClientRect().width -\r\n                            parseFloat(window.getComputedStyle(inp).paddingLeft) -\r\n                            parseFloat(window.getComputedStyle(inp).paddingRight) -\r\n                            parseFloat(window.getComputedStyle(inp).borderLeftWidth) -\r\n                            parseFloat(window.getComputedStyle(inp).borderRightWidth)) * 100) / 100;\r\n                        if (!this.automaticPaddingAdjustment && this.keys + 1 > w / width) {\r\n                            object.remove();\r\n                            for (let i = 0; i < this.keys; i++) {\r\n                                this.failureAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                            }\r\n                            return;\r\n                        } else if (this.automaticPaddingAdjustment) {\r\n                            object.hidden = false;\r\n                            let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n                            object.hidden = true;\r\n                            let h = (w / (this.keys + 1)) * aspectRatio;\r\n                            let padding = (inp.getBoundingClientRect().height - h) / 2;\r\n                            if (padding > inp.getBoundingClientRect().height / 2 * 0.85) {\r\n                                object.remove();\r\n                                for (let i = 0; i < this.keys; i++) {\r\n                                    this.failureAnimation(<HTMLObjectElement>inp.children[i]);\r\n                                }\r\n                                return;\r\n                            } else {\r\n                                const prev = this.splitMode ? this.splitPadding[this.inputIndex][this.inputSubIndex] : this.padding[this.inputIndex];\r\n                                if (this.splitMode && this.inputSubIndex != undefined) {\r\n                                    this.splitPadding[this.inputIndex][this.inputSubIndex] = Math.max(padding, inp.offsetHeight * 0.05);\r\n                                } else {\r\n                                    this.padding[this.inputIndex] = Math.max(padding, inp.offsetHeight * 0.05);\r\n                                }\r\n                                this.animatedBorderWidth = parseFloat(window.getComputedStyle(inp).borderTopWidth);\r\n                                let now = this.splitMode ? this.splitPadding[this.inputIndex][this.inputSubIndex] : this.padding[this.inputIndex];\r\n                                if (prev !== now) {\r\n                                    this.automaticPaddingAnimation(inp as HTMLDivElement, true, true);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        setTimeout(_ => { object.hidden = false; }, 10);\r\n                        let svg = object.contentDocument;\r\n                        if (event.key === '<') {\r\n                            svg.querySelector('#tspan7').innerHTML = '&lt;';\r\n                        } else if (event.key === '&') {\r\n                            svg.querySelector('#tspan7').innerHTML = '&amp;';\r\n                        } else {\r\n                            svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\r\n                        }\r\n\r\n                        if (!this.commandMode) {\r\n                            let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                            let n = Math.floor(this.inputIndex / 3) - 1\r\n                            let index: number;\r\n                            if (this.splitMode) {\r\n                                if (this.inputSubIndex == 0) {\r\n                                    index = array[n].search(F);\r\n                                } else if (this.inputSubIndex == 1) {\r\n                                    index = array[n].search(N);\r\n                                } else {\r\n                                    index = array[n].length;\r\n                                }\r\n                                array[n] = array[n].slice(0, index) + event.key + array[n].slice(index);\r\n                            } else {\r\n                                array[n] += event.key;\r\n                            }\r\n\r\n                            Object.defineProperty(\r\n                                this.currentWord,\r\n                                Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                { value: array }\r\n                            );\r\n                        } else {\r\n                            this.command += event.key;\r\n                            training.commandAnimation(object);\r\n                        }\r\n\r\n                        this.keys++;\r\n\r\n                        this.idleAnimation(object);\r\n                    });\r\n                }\r\n\r\n                document.addEventListener('keydown', this.keydownFunction);\r\n\r\n                window.addEventListener('keydown', (event: KeyboardEvent) => {\r\n                    if (event.key === 'Tab') {\r\n                        event.preventDefault();\r\n                        this.container.focus();\r\n                    }\r\n                });\r\n\r\n                this.startNewTrainingRound(param ? param : 'nouns');\r\n                break;\r\n            case 'add verbs':\r\n            case 'add nouns':\r\n                this.keys = 0;\r\n                this.borderColor = '#12dada';\r\n\r\n                document.querySelectorAll('.editable').forEach((element: HTMLDivElement) => {\r\n                    element.addEventListener('click', event => {\r\n                        if (this.tabMode) {\r\n                            this.cancelTabMode();\r\n                        }\r\n\r\n                        if (this.splitMode) {\r\n                            let source = event.target as Element;\r\n                            if (source === element) return;\r\n                            let count: number;\r\n                            for (let q = 0; q < element.childElementCount; q++) {\r\n                                if (element.children[q] === source) {\r\n                                    count = q;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            this.inputSubIndex = count;\r\n                        }\r\n                        this.inputIndex = parseInt(element.id.slice(3));\r\n\r\n                        this.changeSelectedInput();\r\n                    });\r\n                });\r\n\r\n                this.selectedInput = <HTMLDivElement>document.getElementById('div4');\r\n                this.selectedInput.classList.add('selectedElement');\r\n                this.inputIndex = 4;\r\n                this.wordIndex = this.vocabulary.length;\r\n\r\n                this.currentWord = {\r\n                    singular: this.empty(param),\r\n                    plural: this.empty(param),\r\n                    verb: param.includes('verb'),\r\n                    probability: 1\r\n                }\r\n\r\n                let deletionMode = false;\r\n                let indicator;\r\n                let deletionFunction = () => {\r\n                    this.vocabulary.splice(this.wordIndex, 1);\r\n                    const transaction = this.database.transaction('inflected vocabulary', 'readwrite');\r\n                    const objectStore = transaction.objectStore('inflected vocabulary');\r\n                    const request = objectStore.openCursor();\r\n                    request.onsuccess = () => {\r\n                        let cursor = request.result;\r\n                        if (cursor) {\r\n                            let k = <number>cursor.key;\r\n                            let word = this.vocabulary[k - 1];\r\n                            if (word) {\r\n                                const updatedData = cursor.value;\r\n                                updatedData.singular = word.singular;\r\n                                updatedData.plural = word.plural;\r\n                                updatedData.verb = word.verb;\r\n                                updatedData.probability = word.probability;\r\n                                cursor.update(updatedData);\r\n                                cursor.continue();\r\n                            } else {\r\n                                cursor.delete();\r\n\r\n                                let vocab1 = this.vocabulary.slice(0, this.wordIndex);\r\n                                let vocab2 = this.vocabulary.slice(this.wordIndex);\r\n                                let wi1 = vocab1.findLastIndex(w => w.verb === param.includes('verb'));\r\n                                let wi2 = vocab2.findIndex(w => w.verb === param.includes('verb')) + this.wordIndex;\r\n                                if (this.vocabulary[wi1]) {\r\n                                    this.wordIndex = wi1;\r\n\r\n                                    this.currentWord = this.vocabulary[wi1];\r\n                                    if (this.splitMode) {\r\n                                        this.splitMode = false;\r\n                                        document.querySelectorAll('.split').forEach(split => {\r\n                                            split.innerHTML = '';\r\n                                            split.classList.remove('split');\r\n                                        });\r\n                                    }\r\n                                    if (this.genderSplitButton) this.genderSplitButton.style.display = 'block';\r\n                                    if (this.currentWord.singular[0].search(mfANDn) != -1) {\r\n                                        this.splitGenders(this.currentWord);\r\n                                        return;\r\n                                    }\r\n                                    let overallIndexes: [number, number[]][] = [];\r\n\r\n                                    let tabulatorStyle = false;\r\n                                    for (let i = 3; i < this.container.childElementCount; i++) {\r\n                                        let tabulatorIndexes: number[] = [];\r\n                                        let n = Math.floor(i / 3) - 1;\r\n                                        let singular = this.currentWord.singular;\r\n                                        let plural = this.currentWord.plural;\r\n                                        if (i % 3 === 1) {\r\n                                            this.container.children[i].innerHTML = '';\r\n                                            for (let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++) {\r\n                                                if (singular[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                    tabulatorStyle = !tabulatorStyle;\r\n                                                    ii += 4;\r\n                                                } else {\r\n                                                    let object = document.createElement('object');\r\n                                                    object.data = './keys/Reversion_T.svg';\r\n                                                    object.id = `key${ii}-inp${i}`;\r\n                                                    object.style.height = `100%`;\r\n                                                    this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                    if (tabulatorStyle) tabulatorIndexes.push(ii)\r\n\r\n                                                    object.addEventListener('load', _ => {\r\n                                                        let svg = object.contentDocument;\r\n                                                        svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                        if (\r\n                                                            overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined &&\r\n                                                            overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                                .includes(parseInt(object.id.slice(3)))\r\n                                                        ) {\r\n                                                            this.tabulatorAnimation(object);\r\n                                                            object.classList.add('tabulator');\r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                            }\r\n                                            overallIndexes.push([i, tabulatorIndexes]);\r\n                                        } else if (i % 3 === 2) {\r\n                                            this.container.children[i].innerHTML = '';\r\n                                            for (let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++) {\r\n                                                if (plural[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                    tabulatorStyle = !tabulatorStyle;\r\n                                                    ii += 4;\r\n                                                } else {\r\n                                                    let object = document.createElement('object');\r\n                                                    object.data = './keys/Reversion_T.svg';\r\n                                                    object.id = `key${ii}-inp${i}`;\r\n                                                    object.style.height = `100%`;\r\n                                                    this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                    if (tabulatorStyle) tabulatorIndexes.push(ii);\r\n\r\n                                                    object.addEventListener('load', _ => {\r\n                                                        let svg = object.contentDocument;\r\n                                                        svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                        if (\r\n                                                            overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined &&\r\n                                                            overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                                .includes(parseInt(object.id.slice(3)))\r\n                                                        ) {\r\n                                                            this.tabulatorAnimation(object);\r\n                                                            object.classList.add('tabulator');\r\n                                                        }\r\n                                                    });\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        overallIndexes.push([i, tabulatorIndexes]);\r\n                                    }\r\n                                    this.changeSelectedInput();\r\n                                } else if (this.vocabulary[wi2]) {\r\n                                    this.currentWord = <InflectedWord>this.vocabulary[wi2];\r\n\r\n                                    if (this.splitMode) {\r\n                                        this.splitMode = false;\r\n                                        document.querySelectorAll('.split').forEach(split => {\r\n                                            split.innerHTML = '';\r\n                                            split.classList.remove('split');\r\n                                        });\r\n                                    }\r\n                                    if (this.genderSplitButton) this.genderSplitButton.style.display = 'block';\r\n                                    if (this.currentWord.singular[0].search(mfANDn) != -1) {\r\n                                        this.splitGenders(this.currentWord);\r\n                                        return;\r\n                                    }\r\n                                    let overallIndexes: [number, number[]][] = [];\r\n                                    let tabulatorStyle = false;\r\n                                    for (let i = 3; i < this.container.childElementCount; i++) {\r\n                                        let tabulatorIndexes: number[] = [];\r\n                                        let n = Math.floor(i / 3) - 1;\r\n                                        let singular = this.currentWord.singular;\r\n                                        let plural = this.currentWord.plural;\r\n                                        if (i % 3 === 1) {\r\n                                            this.container.children[i].innerHTML = '';\r\n                                            for (let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++) {\r\n                                                if (singular[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                    tabulatorStyle = !tabulatorStyle;\r\n                                                    ii += 4;\r\n                                                } else {\r\n                                                    let object = document.createElement('object');\r\n                                                    object.data = './keys/Reversion_T.svg';\r\n                                                    object.id = `key${ii}-inp${i}`;\r\n                                                    object.style.height = `100%`;\r\n                                                    this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                    if (tabulatorStyle) tabulatorIndexes.push(ii)\r\n\r\n                                                    object.addEventListener('load', _ => {\r\n                                                        let svg = object.contentDocument;\r\n                                                        svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                        if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) &&\r\n                                                            overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                                .includes(parseInt(object.id.slice(3)))\r\n                                                        ) {\r\n                                                            this.tabulatorAnimation(object);\r\n                                                            object.classList.add('tabulator');\r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                            }\r\n                                            overallIndexes.push([i, tabulatorIndexes]);\r\n                                        } else if (i % 3 === 2) {\r\n                                            this.container.children[i].innerHTML = '';\r\n                                            for (let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++) {\r\n                                                if (plural[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                    tabulatorStyle = !tabulatorStyle;\r\n                                                    ii += 4;\r\n                                                } else {\r\n                                                    let object = document.createElement('object');\r\n                                                    object.data = './keys/Reversion_T.svg';\r\n                                                    object.id = `key${ii}-inp${i}`;\r\n                                                    object.style.height = `100%`;\r\n                                                    this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                    if (tabulatorStyle) tabulatorIndexes.push(ii);\r\n\r\n                                                    object.addEventListener('load', _ => {\r\n                                                        let svg = object.contentDocument;\r\n                                                        svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                        if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) &&\r\n                                                            overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                                .includes(parseInt(object.id.slice(3)))\r\n                                                        ) {\r\n                                                            this.tabulatorAnimation(object);\r\n                                                            object.classList.add('tabulator');\r\n                                                        }\r\n                                                    });\r\n                                                }\r\n                                            }\r\n                                            overallIndexes.push([i, tabulatorIndexes]);\r\n                                        }\r\n                                    }\r\n                                    this.changeSelectedInput();\r\n                                } else {\r\n                                    this.keys = 0;\r\n                                    this.currentWord = {\r\n                                        singular: this.empty(param),\r\n                                        plural: this.empty(param),\r\n                                        verb: param.includes('verb'),\r\n                                        probability: 1\r\n                                    };\r\n\r\n                                    for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                        if (i % 3 != 0) {\r\n                                            this.container.children[i].innerHTML = '';\r\n                                            this.container.children[i].classList.remove('split');\r\n                                        }\r\n\r\n                                        this.container.children[i].classList.remove('selectedElement');\r\n                                    }\r\n                                    this.inputIndex = 4;\r\n                                    this.selectedInput = <HTMLDivElement>this.container.children[4];\r\n                                    this.tabCount = 0;\r\n                                    this.selectedInput.classList.add('selectedElement');\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    deletionMode = false;\r\n                    this.deletionButton.removeEventListener('click', deletionFunction);\r\n                    this.deletionButton.classList.remove('click');\r\n                    document.querySelectorAll('object').forEach(object => {\r\n                        if (object.contentDocument.getElementById('tspan7')) {\r\n                            this.deletionAnimation(object, 1, 'reverse');\r\n                        }\r\n                    });\r\n                    Array.from(document.getElementsByClassName('editable')).forEach((div: HTMLDivElement) => {\r\n                        div.classList.remove('redShadowDesign');\r\n                    });\r\n                }\r\n\r\n                this.deletionButton.addEventListener('mousemove', _ => {\r\n                    if (deletionMode) {\r\n                        return;\r\n                    }\r\n                    deletionMode = true;\r\n\r\n                    this.deletionAnimation(this.deletionButton, 2000, 'normal');\r\n                    let broken = false;\r\n                    this.container.querySelectorAll('object').forEach((object) => {\r\n                        if (!object.contentDocument) {\r\n                            return;\r\n                        }\r\n                        this.deletionAnimation(object, 2000, 'normal');\r\n\r\n                        if (object.contentDocument.getElementById('tspan7')) {\r\n                            this.deletionAnimation(object, 2000, 'normal');\r\n                        } else {\r\n                            broken = true;\r\n                            return;\r\n                        }\r\n                    });\r\n\r\n                    if (broken) {\r\n                        this.container.querySelectorAll('object').forEach((object) => {\r\n                            if (object.contentDocument.getElementById('tspan7')) {\r\n                                this.deletionAnimation(object, 1, 'reverse');\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    indicator = setTimeout(_ => {\r\n                        if (deletionMode) {\r\n                            this.deletionButton.addEventListener('click', deletionFunction);\r\n                            Array.from(document.getElementsByClassName('editable')).forEach((div: HTMLDivElement) => {\r\n                                div.classList.add('redShadowDesign');\r\n                            });\r\n                        }\r\n                    }, 2000);\r\n                });\r\n\r\n                this.deletionButton.addEventListener('mouseleave', _ => {\r\n                    clearTimeout(indicator);\r\n                    deletionMode = false;\r\n                    this.deletionAnimation(this.deletionButton, 1, 'reverse');\r\n                    this.container.querySelectorAll('object').forEach((object) => {\r\n                        if (!object.contentDocument) {\r\n                            return;\r\n                        }\r\n                        if (object.contentDocument.getElementById('tspan7')) {\r\n                            this.deletionAnimation(object, 1, 'reverse');\r\n                        }\r\n                    });\r\n                    Array.from(document.getElementsByClassName('editable')).forEach((div: HTMLDivElement) => {\r\n                        div.classList.remove('redShadowDesign');\r\n                    });\r\n                    this.deletionButton.removeEventListener('click', deletionFunction);\r\n                });\r\n\r\n                document.querySelectorAll('.c').forEach((element: HTMLButtonElement) => {\r\n                    element.addEventListener('mousedown', _ => {\r\n                        element.classList.add('click');\r\n                        document.querySelectorAll('.editable').forEach((div: HTMLDivElement) => {\r\n                            if (element === this.buttonLeft) {\r\n                                let vocab = this.vocabulary.slice(0, this.wordIndex);\r\n                                let wi = vocab.findLastIndex(w => w.verb === param.includes('verb'));\r\n\r\n                                if (this.vocabulary[wi]) {\r\n                                    if (\r\n                                        this.currentWord.singular.filter((value) => value === '').length === (param.includes('verb') ? 3 : 6) &&\r\n                                        this.currentWord.plural.filter((value) => value === '').length === (param.includes('verb') ? 3 : 6) &&\r\n                                        this.wordIndex === this.vocabulary.length\r\n                                    ) {\r\n                                        return;\r\n                                    }\r\n                                }\r\n                            }\r\n                            div.classList.add('savedElement');\r\n                        });\r\n                    });\r\n\r\n                    element.addEventListener('mouseout', _ => {\r\n                        element.classList.remove('click');\r\n                        document.querySelectorAll('.editable').forEach((div: HTMLDivElement) => {\r\n                            div.classList.remove('savedElement');\r\n                        });\r\n                    });\r\n                });\r\n\r\n                this.buttonLeftFunction = () => {\r\n                    this.commandMode = false;\r\n                    this.command = '';\r\n                    if (this.tabMode) {\r\n                        this.cancelTabMode();\r\n                    }\r\n\r\n                    let vocab = this.vocabulary.slice(0, this.wordIndex);\r\n                    let wi = vocab.findLastIndex(w => w.verb === param.includes('verb'));\r\n\r\n                    if (this.vocabulary[wi]) {\r\n                        if (\r\n                            this.currentWord.singular.filter((value) => value === '').length === (param.includes('verb') ? 3 : 6) &&\r\n                            this.currentWord.plural.filter((value) => value === '').length === (param.includes('verb') ? 3 : 6) &&\r\n                            this.wordIndex === this.vocabulary.length\r\n                        ) {\r\n                            for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                this.container.children[i].classList.remove('savedElement');\r\n                                this.buttonLeft.classList.remove('click');\r\n                            }\r\n\r\n                            this.wordIndex = wi;\r\n                            this.currentWord = this.vocabulary[wi];\r\n                            let overallIndexes: [number, number[]][] = [];\r\n                            let objectCount = 0;\r\n                            let objectsLoaded = 0;\r\n\r\n                            if (this.splitMode) {\r\n                                this.splitMode = false;\r\n                                document.querySelectorAll('.split').forEach(split => {\r\n                                    split.innerHTML = '';\r\n                                    split.classList.remove('split');\r\n                                });\r\n                            }\r\n                            if (this.genderSplitButton) this.genderSplitButton.style.display = 'block';\r\n                            if (this.currentWord.singular[0].search(mfANDn) != -1) {\r\n                                this.splitGenders(this.currentWord);\r\n                                return;\r\n                            }\r\n\r\n                            let tabulatorStyle = false;\r\n                            for (let i = 3; i < this.container.childElementCount; i++) {\r\n                                let tabulatorIndexes: number[] = [];\r\n                                let n = Math.floor(i / 3) - 1;\r\n                                let singular = this.currentWord.singular;\r\n                                let plural = this.currentWord.plural;\r\n                                if (i % 3 === 1) {\r\n                                    this.container.children[i].innerHTML = '';\r\n                                    for (let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++) {\r\n                                        if (singular[n].slice(ii, ii + 5) === '^tab^') {\r\n                                            tabulatorStyle = !tabulatorStyle;\r\n                                            ii += 4;\r\n                                        } else {\r\n                                            let object = document.createElement('object');\r\n                                            object.data = './keys/Reversion_T.svg';\r\n                                            object.id = `key${ii}-inp${i}`;\r\n                                            object.style.height = `100%`;\r\n                                            objectCount++;\r\n                                            this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                            if (tabulatorStyle) tabulatorIndexes.push(ii)\r\n\r\n                                            object.addEventListener('load', _ => {\r\n                                                let svg = object.contentDocument;\r\n                                                svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                if (\r\n                                                    overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined &&\r\n                                                    overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))\r\n                                                ) {\r\n                                                    this.tabulatorAnimation(object);\r\n                                                    object.classList.add('tabulator');\r\n                                                }\r\n                                                objectsLoaded++;\r\n                                                if (objectCount === objectsLoaded) {\r\n                                                    let objects = this.container.querySelectorAll('object');\r\n                                                    objects.forEach(obj => obj.hidden = false);\r\n                                                    for (let i = 4; i < this.container.children.length; i++) {\r\n                                                        if (i % 3 > 0) {\r\n                                                            let div = <HTMLDivElement>this.container.children[i];\r\n                                                            let array = Object.values(this.currentWord)[i % 3 - 1];\r\n                                                            let n = Math.floor(i / 3) - 1;\r\n                                                            this.adjustInputWidth(div, array[n]);\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                    overallIndexes.push([i, tabulatorIndexes]);\r\n                                } else if (i % 3 === 2) {\r\n                                    this.container.children[i].innerHTML = '';\r\n                                    for (let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++) {\r\n                                        if (plural[n].slice(ii, ii + 5) === '^tab^') {\r\n                                            tabulatorStyle = !tabulatorStyle;\r\n                                            ii += 4;\r\n                                        } else {\r\n                                            let object = document.createElement('object');\r\n                                            object.data = './keys/Reversion_T.svg';\r\n                                            object.id = `key${ii}-inp${i}`;\r\n                                            object.style.height = `100%`;\r\n                                            objectCount++;\r\n                                            this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                            if (tabulatorStyle) tabulatorIndexes.push(ii);\r\n\r\n                                            object.addEventListener('load', _ => {\r\n                                                let svg = object.contentDocument;\r\n                                                svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                if (\r\n                                                    overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined &&\r\n                                                    overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                        .includes(parseInt(object.id.slice(3)))\r\n                                                ) {\r\n                                                    this.tabulatorAnimation(object);\r\n                                                    object.classList.add('tabulator');\r\n                                                }\r\n                                                objectsLoaded++;\r\n                                                if (objectCount === objectsLoaded) {\r\n                                                    let objects = this.container.querySelectorAll('object');\r\n                                                    objects.forEach(obj => obj.hidden = false);\r\n                                                    for (let i = 4; i < this.container.children.length; i++) {\r\n                                                        if (i % 3 > 0) {\r\n                                                            let div = <HTMLDivElement>this.container.children[i];\r\n                                                            let array = Object.values(this.currentWord)[i % 3 - 1];\r\n                                                            let n = Math.floor(i / 3) - 1;\r\n                                                            this.adjustInputWidth(div, array[n]);\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                }\r\n                                overallIndexes.push([i, tabulatorIndexes]);\r\n                            }\r\n\r\n                            this.changeSelectedInput();\r\n                        } else {\r\n                            this.vocabulary[this.wordIndex] = this.currentWord;\r\n\r\n                            const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\r\n                            transaction.onerror = () => console.error(transaction.error);\r\n                            const objectStore = transaction.objectStore(`inflected vocabulary`);\r\n                            const req = objectStore.get(this.wordIndex);\r\n                            req.onerror = () => console.error(req.error);\r\n                            req.onsuccess = () => {\r\n                                for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                    this.container.children[i].classList.remove('savedElement');\r\n                                    this.buttonLeft.classList.remove('click');\r\n                                }\r\n\r\n                                const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                                idontcare.onerror = () => console.error(idontcare.error);\r\n\r\n                                this.wordIndex = wi;\r\n\r\n                                let tabulatorStyle = false;\r\n                                this.currentWord = this.vocabulary[wi];\r\n                                let overallIndexes: [number, number[]][] = [];\r\n\r\n                                if (this.splitMode) {\r\n                                    this.splitMode = false;\r\n                                    document.querySelectorAll('.split').forEach(split => {\r\n                                        split.innerHTML = '';\r\n                                        split.classList.remove('split');\r\n                                    });\r\n                                }\r\n                                if (this.genderSplitButton) this.genderSplitButton.style.display = 'block';\r\n                                if (this.currentWord.singular[0].search(mfANDn) != -1) {\r\n                                    this.splitGenders(this.currentWord);\r\n                                    return;\r\n                                }\r\n                                for (let i = 3; i < this.container.childElementCount; i++) {\r\n                                    let tabulatorIndexes: number[] = [];\r\n                                    let n = Math.floor(i / 3) - 1;\r\n                                    let singular = this.currentWord.singular;\r\n                                    let plural = this.currentWord.plural;\r\n                                    if (i % 3 === 1) {\r\n                                        this.container.children[i].innerHTML = '';\r\n                                        for (let ii = 0; ii < singular[n].length; ii++) {\r\n                                            if (singular[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                tabulatorStyle = !tabulatorStyle;\r\n                                                ii += 4;\r\n                                            } else {\r\n                                                let object = document.createElement('object');\r\n                                                object.data = './keys/Reversion_T.svg';\r\n                                                object.id = `key${ii}-inp${i}`;\r\n                                                object.style.height = `100%`;\r\n                                                this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                if (tabulatorStyle) tabulatorIndexes.push(ii)\r\n\r\n                                                object.addEventListener('load', _ => {\r\n                                                    let svg = object.contentDocument;\r\n                                                    svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                    if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined &&\r\n                                                        overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                            .includes(parseInt(object.id.slice(3)))\r\n                                                    ) {\r\n                                                        this.tabulatorAnimation(object);\r\n                                                        object.classList.add('tabulator');\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        }\r\n                                        overallIndexes.push([i, tabulatorIndexes]);\r\n                                    } else if (i % 3 === 2) {\r\n                                        this.container.children[i].innerHTML = '';\r\n                                        for (let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++) {\r\n                                            if (plural[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                tabulatorStyle = !tabulatorStyle;\r\n                                                ii += 4;\r\n                                            } else {\r\n                                                let object = document.createElement('object');\r\n                                                object.data = './keys/Reversion_T.svg';\r\n                                                object.id = `key${ii}-inp${i}`;\r\n                                                object.style.height = `100%`;\r\n                                                this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                if (tabulatorStyle) tabulatorIndexes.push(ii);\r\n\r\n                                                object.addEventListener('load', _ => {\r\n                                                    let svg = object.contentDocument;\r\n                                                    svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                    if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined &&\r\n                                                        overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                            .includes(parseInt(object.id.slice(3)))\r\n                                                    ) {\r\n                                                        this.tabulatorAnimation(object);\r\n                                                        object.classList.add('tabulator');\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        overallIndexes.push([i, tabulatorIndexes]);\r\n                                    }\r\n                                }\r\n\r\n                                let objects = this.container.querySelectorAll('object');\r\n                                if (objects.length > 0) {\r\n                                    objects[objects.length - 1].addEventListener('load', _ => {\r\n                                        objects.forEach(obj => obj.hidden = false);\r\n                                        for (let i = 4; i < this.container.children.length; i++) {\r\n                                            if (i % 3 > 0) {\r\n                                                let div = <HTMLDivElement>this.container.children[i];\r\n                                                let array = Object.values(this.currentWord)[i % 3 - 1];\r\n                                                let n = Math.floor(i / 3) - 1;\r\n                                                this.adjustInputWidth(div, array[n]);\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                } else {\r\n                                    window.resizeBy(0, 0);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                this.buttonLeft.addEventListener('mouseup', this.buttonLeftFunction);\r\n\r\n                this.buttonRightFunction = () => {\r\n                    this.commandMode = false;\r\n                    this.command = '';\r\n\r\n                    if (this.tabMode) {\r\n                        this.cancelTabMode();\r\n                    }\r\n\r\n                    let vocab = this.vocabulary.slice(this.wordIndex + 1);\r\n                    let wi = (vocab.findIndex(w => w.verb === param.includes('verb'))) >= 0 ? vocab.findIndex(w => w.verb === param.includes('verb')) + this.wordIndex + 1 : -1;\r\n\r\n                    if (!this.vocabulary[wi]) {\r\n                        this.vocabulary[this.wordIndex] = this.currentWord;\r\n\r\n                        const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\r\n                        transaction.onerror = () => console.error(transaction.error);\r\n                        const objectStore = transaction.objectStore(`inflected vocabulary`);\r\n                        const req = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                        req.onerror = () => console.error(req.error)\r\n                        transaction.oncomplete = () => {\r\n                            for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                this.container.children[i].classList.remove('savedElement');\r\n                                this.buttonRight.classList.remove('click');\r\n                            }\r\n\r\n                            this.wordIndex = this.vocabulary.length;\r\n                            this.keys = 0;\r\n                            this.currentWord = {\r\n                                singular: this.empty(param),\r\n                                plural: this.empty(param),\r\n                                verb: param.includes('verb'),\r\n                                probability: 1\r\n                            };\r\n\r\n                            for (let i = 3; i < this.container.childElementCount; i++) {\r\n                                if (i % 3 != 0) {\r\n                                    this.container.children[i].innerHTML = '';\r\n                                    this.container.children[i].classList.remove('split');\r\n                                }\r\n\r\n                                this.container.children[i].classList.remove('selectedElement');\r\n                            }\r\n                            this.splitMode = false;\r\n                            if (this.genderSplitButton) this.genderSplitButton.style.display = 'block';\r\n                            this.inputIndex = 4;\r\n                            this.selectedInput = <HTMLDivElement>this.container.children[4];\r\n                            this.tabCount = 0;\r\n                            this.selectedInput.classList.add('selectedElement');\r\n                        }\r\n\r\n                        window.resizeBy(0, 0);\r\n                    } else {\r\n                        this.vocabulary[this.wordIndex] = this.currentWord;\r\n\r\n                        for (let i = 0; i < this.container.childElementCount; i++) {\r\n                            this.container.children[i].classList.remove('savedElement');\r\n                            this.buttonRight.classList.remove('click');\r\n                        }\r\n\r\n                        const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\r\n                        transaction.onerror = () => console.error(transaction.error);\r\n                        const objectStore = transaction.objectStore(`inflected vocabulary`);\r\n                        const req = objectStore.get(this.wordIndex);\r\n                        req.onerror = () => console.error(req.error);\r\n                        req.onsuccess = () => {\r\n                            const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                            idontcare.onerror = () => console.error(idontcare.error);\r\n\r\n                            this.wordIndex = wi;\r\n                            this.currentWord = <InflectedWord>this.vocabulary[wi];\r\n\r\n                            if (this.splitMode) {\r\n                                this.splitMode = false;\r\n                                document.querySelectorAll('.split').forEach(split => {\r\n                                    split.innerHTML = '';\r\n                                    split.classList.remove('split');\r\n                                });\r\n                            }\r\n                            if (this.genderSplitButton) this.genderSplitButton.style.display = 'block';\r\n                            if (this.currentWord.singular[0].search(mfANDn) != -1) {\r\n                                this.splitGenders(this.currentWord);\r\n                                return;\r\n                            }\r\n                            let overallIndexes: [number, number[]][] = [];\r\n                            let tabulatorStyle = false;\r\n                            let objectCount = 0;\r\n                            let objectsLoaded = 0;\r\n                            for (let i = 3; i < this.container.childElementCount; i++) {\r\n                                let tabulatorIndexes: number[] = [];\r\n                                let n = Math.floor(i / 3) - 1;\r\n                                let singular = this.currentWord.singular;\r\n                                let plural = this.currentWord.plural;\r\n                                if (i % 3 === 1) {\r\n                                    this.container.children[i].innerHTML = '';\r\n                                    for (let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++) {\r\n                                        if (singular[n].slice(ii, ii + 5) === '^tab^') {\r\n                                            tabulatorStyle = !tabulatorStyle;\r\n                                            ii += 4;\r\n                                        } else {\r\n                                            let object = document.createElement('object');\r\n                                            object.data = './keys/Reversion_T.svg';\r\n                                            object.id = `key${ii}-inp${i}`;\r\n                                            object.style.height = `100%`;\r\n                                            this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                            if (tabulatorStyle) tabulatorIndexes.push(ii);\r\n                                            objectCount++;\r\n\r\n                                            object.addEventListener('load', _ => {\r\n                                                let svg = object.contentDocument;\r\n                                                svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) &&\r\n                                                    overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                        .includes(parseInt(object.id.slice(3)))\r\n                                                ) {\r\n                                                    this.tabulatorAnimation(object);\r\n                                                    object.classList.add('tabulator');\r\n                                                }\r\n                                                objectsLoaded++;\r\n                                                if (objectCount === objectsLoaded) {\r\n                                                    let objects = this.container.querySelectorAll('object');\r\n                                                    for (let i = 4; i < this.container.children.length; i++) {\r\n                                                        if (i % 3 > 0) {\r\n                                                            let div = <HTMLDivElement>this.container.children[i];\r\n                                                            let array = Object.values(this.currentWord)[i % 3 - 1];\r\n                                                            let n = Math.floor(i / 3) - 1;\r\n                                                            this.adjustInputWidth(div, array[n]);\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                    overallIndexes.push([i, tabulatorIndexes]);\r\n                                } else if (i % 3 === 2) {\r\n                                    this.container.children[i].innerHTML = '';\r\n                                    for (let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++) {\r\n                                        if (plural[n].slice(ii, ii + 5) === '^tab^') {\r\n                                            tabulatorStyle = !tabulatorStyle;\r\n                                            ii += 4;\r\n                                        } else {\r\n                                            let object = document.createElement('object');\r\n                                            object.data = './keys/Reversion_T.svg';\r\n                                            object.id = `key${ii}-inp${i}`;\r\n                                            object.style.height = `100%`;\r\n                                            this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                            if (tabulatorStyle) tabulatorIndexes.push(ii);\r\n\r\n                                            object.addEventListener('load', _ => {\r\n                                                let svg = object.contentDocument;\r\n                                                svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) &&\r\n                                                    overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                        .includes(parseInt(object.id.slice(3)))\r\n                                                ) {\r\n                                                    this.tabulatorAnimation(object);\r\n                                                    object.classList.add('tabulator');\r\n                                                }\r\n                                                objectsLoaded++;\r\n                                                if (objectCount === objectsLoaded) {\r\n                                                    for (let i = 4; i < this.container.children.length; i++) {\r\n                                                        if (i % 3 > 0) {\r\n                                                            let div = <HTMLDivElement>this.container.children[i];\r\n                                                            let array = Object.values(this.currentWord)[i % 3 - 1];\r\n                                                            let n = Math.floor(i / 3) - 1;\r\n                                                            this.adjustInputWidth(div, array[n]);\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            });\r\n                                            objectCount++;\r\n                                        }\r\n                                        overallIndexes.push([i, tabulatorIndexes]);\r\n                                    }\r\n                                }\r\n                                this.changeSelectedInput();\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                this.buttonRight.addEventListener('mouseup', this.buttonRightFunction);\r\n\r\n                this.keydownFunction = (event: KeyboardEvent) => {\r\n                    let forbiddenCharacters = ['´', '`', '^'];\r\n                    if (this.commandMode) {\r\n                        forbiddenCharacters.push('#');\r\n                        let inp = this.splitMode ? this.selectedInput.children[this.inputSubIndex] as HTMLDivElement : this.selectedInput;\r\n                        if (event.key === 'Enter') {\r\n                            if (this.command.endsWith('%') && !this.automaticPaddingAdjustment) {\r\n                                if (this.command.startsWith('#p-')) {\r\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\r\n                                    if (percentage >= 0 && percentage <= 100) {\r\n                                        this.padding[this.inputIndex] = Math.round(Math.max(Math.min(this.padding[this.inputIndex] * (1 - percentage / 100), this.selectedInput.clientHeight / 2 * 0.7), 1));\r\n                                        this.paddingAnimation(this.selectedInput);\r\n                                        this.command.split('').forEach(_ => {\r\n                                            this.selectedInput.lastElementChild.remove();\r\n                                            this.keys--;\r\n                                        });\r\n\r\n                                        this.command = '';\r\n                                        this.commandMode = false;\r\n                                        return;\r\n                                    }\r\n                                } else if (this.command.startsWith('#p+')) {\r\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\r\n                                    if (percentage >= 0) {\r\n                                        this.padding[this.inputIndex] = Math.round(Math.max(Math.min(this.padding[this.inputIndex] * (1 + percentage / 100), this.selectedInput.clientHeight / 2 * 0.7), 1));\r\n                                        this.paddingAnimation(this.selectedInput);\r\n                                        this.command.split('').forEach(_ => {\r\n                                            this.selectedInput.lastElementChild.remove();\r\n                                            this.keys--;\r\n                                        });\r\n                                        this.command = '';\r\n                                        this.commandMode = false;\r\n                                        return;\r\n                                    }\r\n                                } else if (this.command.startsWith('#P+')) {\r\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\r\n                                    if (percentage >= 0) {\r\n                                        this.padding.forEach((p, i) => {\r\n                                            let div: HTMLDivElement = document.querySelector(`#div${i}`);\r\n                                            if (i > 3 && i % 3 != 0) {\r\n                                                this.padding[i] = Math.round(Math.max(Math.min(this.padding[i] * (1 + percentage / 100), div.clientHeight / 2 * 0.7), 1));\r\n                                                this.paddingAnimation(div);\r\n                                            }\r\n                                        });\r\n                                        this.command.split('').forEach(_ => {\r\n                                            this.selectedInput.lastElementChild.remove();\r\n                                            this.keys--;\r\n                                        });\r\n                                        this.command = '';\r\n                                        this.commandMode = false;\r\n                                        return;\r\n                                    }\r\n                                } else if (this.command.startsWith('#P-')) {\r\n                                    let percentage = parseInt(this.command.slice(3, this.command.length - 1));\r\n                                    if (percentage >= 0) {\r\n                                        this.padding.forEach((p, i) => {\r\n                                            let div: HTMLDivElement = document.querySelector(`#div${i}`);\r\n                                            if (i > 3 && i % 3 != 0) {\r\n                                                this.padding[i] = Math.round(Math.max(Math.min(this.padding[i] * (1 - percentage / 100), div.clientHeight / 2 * 0.7), 1));\r\n                                                this.paddingAnimation(document.querySelector(`#div${i}`));\r\n                                            }\r\n                                        });\r\n                                        this.command.split('').forEach(_ => {\r\n                                            this.selectedInput.lastElementChild.remove();\r\n                                            this.keys--;\r\n                                        });\r\n                                        this.command = '';\r\n                                        this.commandMode = false;\r\n                                        return;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            switch (this.command.toLowerCase()) {\r\n                                case '#<':\r\n                                case '#<-':\r\n                                case '#previous':\r\n                                case '#prvs':\r\n                                case '#vorheriges':\r\n                                case '#voriges':\r\n                                case '#prev':\r\n                                    this.command.split('').forEach(_ => {\r\n                                        inp.lastElementChild.remove();\r\n                                        this.keys--;\r\n                                    });\r\n\r\n                                    this.command = '';\r\n                                    this.commandMode = false;\r\n                                    this.buttonLeftFunction(event);\r\n                                    return;\r\n                                case '#>':\r\n                                case '#->':\r\n                                case '#next':\r\n                                case '#nxt':\r\n                                case '#nächstes':\r\n                                    this.command.split('').forEach(_ => {\r\n                                        inp.lastElementChild.remove();\r\n                                        this.keys--;\r\n                                    });\r\n                                    \r\n                                    this.command = '';\r\n                                    this.commandMode = false;\r\n                                    this.buttonRightFunction(event);\r\n                                    return;\r\n                                case '#exit':\r\n                                case '#quit':\r\n                                case '#stop':\r\n                                case '#home':\r\n                                case '#stopp':\r\n                                case '#beenden':\r\n                                case '#hauptmenü':\r\n                                case '#home menu':\r\n                                case '#h':\r\n                                    this.command = '';\r\n                                    this.commandMode = false;\r\n                                    removeAllEventListeners();\r\n                                    this.splitMode = false;\r\n                                    this.tabulator = '';\r\n                                    home.modifyDocument();\r\n                                    return;\r\n                                case '#geschlechtertrennung':\r\n                                case '#teilen':\r\n                                case '#splitto':\r\n                                case '#split':\r\n                                case '#sp':\r\n                                    if (!this.splitMode) {\r\n                                        this.splitGenders(this.currentWord);\r\n                                    } else {\r\n                                        this.command.split('').forEach(_ => {\r\n                                            inp.lastElementChild.remove();\r\n                                            this.keys--;\r\n                                        });\r\n                                        let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                                        let n = Math.floor(this.inputIndex / 3) - 1;\r\n                                        let word = array[n].split(mfORn)[this.inputSubIndex + 1];\r\n                                        this.adjustInputWidth(inp, word, true);\r\n                                        this.command = '';\r\n                                        this.commandMode = false;\r\n                                    }\r\n                                    return;\r\n                                case '#automaticpaddingadjustment':\r\n                                case '#auto':\r\n                                case '#automatic-padding-adjustment':\r\n                                case '#automatische padding-anpassung':\r\n                                case '#automatischepaddinganpassung':\r\n                                case '#automatische-padding-anpassung':\r\n                                case '#apa':\r\n                                    this.automaticPaddingAdjustment = true;\r\n                                    this.command.split('').forEach(_ => {\r\n                                        inp.lastElementChild.remove();\r\n                                        this.keys--;\r\n                                    });\r\n                                    this.command = '';\r\n                                    this.commandMode = false;\r\n                                    this.borderColor = 'orange';\r\n                                    let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                                    let n = Math.floor(this.inputIndex / 3) - 1;\r\n                                    let word = this.splitMode ? array[n].split(mfORn)[this.inputSubIndex + 1] : array[n];\r\n                                    this.adjustInputWidth(inp, word, true);\r\n                                    return;\r\n                                case '#manualpaddingadjustment':\r\n                                case '#manual':\r\n                                case '#normalpaddingadjustment':\r\n                                case '#normal':\r\n                                case '#manual-padding-adjustment':\r\n                                case '#mpa':\r\n                                case '#npa':\r\n                                    if (!this.splitMode) {\r\n                                        this.automaticPaddingAdjustment = false;\r\n                                    }\r\n                                    if (!param.includes('add')) this.borderColor = param.includes('verb') ? '#ff5e01' : 'rgba(138, 43, 226, 1)';\r\n                                default: {\r\n                                    this.command.split('').forEach(_ => {\r\n                                        inp.lastElementChild.remove();\r\n                                        this.keys--;\r\n                                    });\r\n                                    if (this.automaticPaddingAdjustment) {\r\n                                        let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                                        let n = Math.floor(this.inputIndex / 3) - 1;\r\n                                        let word = this.splitMode ? array[n].split(mfORn)[this.inputSubIndex + 1] : array[n];\r\n                                        this.adjustInputWidth(inp, word, true);\r\n                                    } else {\r\n                                        this.paddingAnimation(inp);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            this.command = '';\r\n                            this.commandMode = false;\r\n                            return;\r\n                        } else if (event.key === 'ArrowUp') {\r\n                            this.command.split('').forEach(_ => {\r\n                                inp.removeChild(inp.lastElementChild);\r\n                                this.keys--;\r\n                            });\r\n\r\n                            if (this.inputIndex > 6) {\r\n                                this.inputIndex -= 3;\r\n                            }\r\n                            this.changeSelectedInput();\r\n\r\n                            this.command = '';\r\n                            this.commandMode = false;\r\n                            return;\r\n                        } else if (event.key === 'ArrowDown') {\r\n                            this.command.split('').forEach(_ => {\r\n                                inp.removeChild(inp.lastElementChild);\r\n                                this.keys--;\r\n                            });\r\n\r\n                            this.command = '';\r\n                            this.commandMode = false;\r\n\r\n                            if (this.inputIndex < 18 - this.v) {\r\n                                this.inputIndex += 3;\r\n                            }\r\n                            this.changeSelectedInput();\r\n                            return;\r\n                        } else if (event.key === 'ArrowLeft') {\r\n                            this.command.split('').forEach(_ => {\r\n                                inp.removeChild(inp.lastElementChild);\r\n                                this.keys--;\r\n                            });\r\n\r\n                            this.command = '';\r\n                            this.commandMode = false;\r\n\r\n                            if (this.inputIndex > 4) {\r\n                                if (this.splitMode && this.inputSubIndex > 0) {\r\n                                    this.inputSubIndex--;\r\n                                } else {\r\n                                    this.inputIndex--;\r\n                                    if (this.inputIndex % 3 === 0) {\r\n                                        this.inputIndex--;\r\n                                    }\r\n                                    if (this.splitMode && this.inputSubIndex === 0) {\r\n                                        this.inputSubIndex = 2;\r\n                                    }\r\n                                }\r\n\r\n                                this.changeSelectedInput();\r\n                            } else if (this.inputIndex == 4 && this.inputSubIndex > 0 && this.splitMode) {\r\n                                this.inputSubIndex--;\r\n                                this.changeSelectedInput();\r\n                            }\r\n                            return;\r\n                        } else if (event.key === 'ArrowRight') {\r\n                            this.command.split('').forEach(_ => {\r\n                                inp.removeChild(inp.lastElementChild);\r\n                                this.keys--;\r\n                            });\r\n\r\n                            this.command = '';\r\n                            this.commandMode = false;\r\n\r\n                            if (this.inputIndex < 20 - this.v) {\r\n                                if (this.splitMode && this.inputSubIndex < 2) {\r\n                                    this.inputSubIndex++;\r\n                                } else {\r\n                                    this.inputIndex++;\r\n                                    if (this.inputIndex % 3 === 0) {\r\n                                        this.inputIndex++;\r\n                                    }\r\n                                    if (this.splitMode && this.inputSubIndex === 2) {\r\n                                        this.inputSubIndex = 0;\r\n                                    }\r\n                                }\r\n                                this.changeSelectedInput();\r\n                            } else if (this.splitMode && this.inputIndex == 20 - this.v && this.inputSubIndex < 2) {\r\n                                this.inputSubIndex++;\r\n                                this.changeSelectedInput();\r\n                            }\r\n                            return;\r\n                        } else if (event.key === 'Backspace') {\r\n                            if (inp.lastElementChild) {\r\n                                inp.lastElementChild.remove();\r\n                                this.command = this.command.slice(0, this.command.length - 1);\r\n                                this.keys--;\r\n\r\n\r\n                                if (this.command === '') {\r\n                                    this.commandMode = false;\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            let pad = this.splitMode ? this.splitPadding[this.inputIndex][this.inputSubIndex] : this.padding[this.inputIndex];\r\n                            if (this.automaticPaddingAdjustment && pad > inp.offsetHeight * 0.05) {\r\n                                let object = inp.lastElementChild;\r\n                                if (!object) return;\r\n                                let w = Math.round((inp.getBoundingClientRect().width -\r\n                                    parseFloat(window.getComputedStyle(inp).paddingLeft) -\r\n                                    parseFloat(window.getComputedStyle(inp).paddingRight)) * 100) / 100;\r\n                                let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n                                let h = w / this.keys * aspectRatio;\r\n                                let padding = Math.max((inp.getBoundingClientRect().height - h) / 2, inp.offsetHeight * 0.05);\r\n                                if (this.splitMode) {\r\n                                    this.splitPadding[this.inputIndex][this.inputSubIndex] = Math.max(padding, 1);\r\n                                    inp.style.padding = `${this.splitPadding[this.inputIndex][this.inputSubIndex]}px 0.25vw`;\r\n                                } else {\r\n                                    this.padding[this.inputIndex] = Math.max(padding, 1);\r\n                                    inp.style.padding = `${this.padding[this.inputIndex]}px 0.25vw`;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (\r\n                            this.commandMode && (\r\n                                this.selectedInput.classList.contains('known-case') ||\r\n                                forbiddenCharacters.includes(event.key) ||\r\n                                event.key.length > 1\r\n                            )\r\n                        ) {\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    if (!this.commandMode) {\r\n                        if (event.key === 'ArrowRight') {\r\n                            if (this.tabMode) {\r\n                                this.cancelTabMode();\r\n                            }\r\n\r\n                            if (this.inputIndex < 20 - this.v) {\r\n                                if (this.splitMode && this.inputSubIndex < 2) {\r\n                                    this.inputSubIndex++;\r\n                                } else {\r\n                                    this.inputIndex++;\r\n                                    if (this.inputIndex % 3 === 0) {\r\n                                        this.inputIndex++;\r\n                                    }\r\n                                    if (this.splitMode && this.inputSubIndex === 2) {\r\n                                        this.inputSubIndex = 0;\r\n                                    }\r\n                                }\r\n                                this.changeSelectedInput();\r\n                            } else if (this.splitMode && this.inputIndex == 20 - this.v && this.inputSubIndex < 2) {\r\n                                this.inputSubIndex++;\r\n                                this.changeSelectedInput();\r\n                            }\r\n\r\n                            return;\r\n                        } else if (event.key === 'ArrowLeft') {\r\n                            if (this.tabMode) {\r\n                                this.cancelTabMode();\r\n                            }\r\n\r\n                            if (this.inputIndex > 4) {\r\n                                if (this.splitMode && this.inputSubIndex > 0) {\r\n                                    this.inputSubIndex--;\r\n                                } else {\r\n                                    this.inputIndex--;\r\n                                    if (this.inputIndex % 3 === 0) {\r\n                                        this.inputIndex--;\r\n                                    }\r\n                                    if (this.splitMode && this.inputSubIndex === 0) {\r\n                                        this.inputSubIndex = 2;\r\n                                    }\r\n                                }\r\n\r\n                                this.changeSelectedInput();\r\n                            } else if (this.inputIndex == 4 && this.inputSubIndex > 0 && this.splitMode) {\r\n                                this.inputSubIndex--;\r\n                                this.changeSelectedInput();\r\n                            }\r\n                            return;\r\n                        } else if (event.key === 'ArrowDown' || event.key === 'Enter') {\r\n                            if (this.tabMode) {\r\n                                this.cancelTabMode();\r\n                                if (this.inputIndex === 19) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            const enter = event.key === 'Enter';\r\n\r\n\r\n                            if (this.splitMode && enter && Object.values(this.currentWord)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1].split(mfORn)[this.inputSubIndex + 1] === '' && this.inputSubIndex > 0) {\r\n                                let array = <string[]>Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                                let n = Math.floor(this.inputIndex / 3) - 1;\r\n                                let splitto = array[n].split(mfORn).slice(1);\r\n                                splitto[this.inputSubIndex] = splitto[this.inputSubIndex - 1];\r\n                                array[n] = `^^m^^${splitto[0]}^^f^^${splitto[1]}^^n^^${splitto[2]}`;\r\n                                Object.defineProperty(\r\n                                    this.currentWord,\r\n                                    Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                    { value: array }\r\n                                );\r\n                                let phrase = splitto[this.inputSubIndex];\r\n                                let tabulatorStyle = false;\r\n                                let inp = this.selectedInput.children[this.inputSubIndex] as HTMLDivElement;\r\n                                let objectCount = 0;\r\n                                let objectsLoaded = 0;\r\n                                const id = this.inputIndex;\r\n                                const count = this.inputSubIndex;\r\n                                for (let ii = 0; ii < phrase.length; ii++) {\r\n                                    if (phrase.slice(ii, ii + 5) === '^tab^') {\r\n                                        tabulatorStyle = !tabulatorStyle;\r\n                                        ii += 4;\r\n                                    } else {\r\n                                        let object = document.createElement('object');\r\n                                        this.keys++;\r\n                                        object.addEventListener('load', _ => {\r\n                                            let svg = object.contentDocument;\r\n                                            svg.querySelector('#tspan7').innerHTML = phrase.charAt(ii);\r\n                                            if (object.classList.contains('tabulator')) {\r\n                                                this.tabulatorAnimation(object);\r\n                                            }\r\n                                            objectsLoaded++;\r\n                                            if (objectsLoaded === objectCount) {\r\n                                                this.adjustInputWidth(inp, phrase, false);\r\n                                                let pad = this.splitPadding[id][count];\r\n                                                inp.style.padding = `${pad}px 0.25vw`;\r\n                                            }\r\n                                        })\r\n                                        object.data = './keys/Reversion_T.svg';\r\n                                        object.id = `key${this.keys}-inp${this.inputIndex}-sub${this.inputSubIndex}`;\r\n                                        object.style.height = `100%`;\r\n                                        objectCount++;\r\n                                        inp.insertAdjacentElement('beforeend', object);\r\n                                        if (tabulatorStyle) object.classList.add('tabulator');\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (this.inputIndex < 18 - this.v) {\r\n                                if (this.splitMode && this.inputSubIndex < 2 && enter) {\r\n                                    this.inputSubIndex++;\r\n                                } else {\r\n                                    this.inputIndex += 3;\r\n                                    if (this.splitMode && this.inputSubIndex === 2 && enter) {\r\n                                        this.inputSubIndex = 0;\r\n                                    }\r\n                                }\r\n\r\n                                this.changeSelectedInput();\r\n                            } else if (enter && this.inputIndex === 19 - this.v) {\r\n                                if (this.splitMode && this.inputSubIndex < 2) {\r\n                                    this.inputSubIndex++;\r\n                                } else {\r\n                                    this.inputIndex = 5;\r\n                                    if (this.splitMode && this.inputSubIndex === 2) {\r\n                                        this.inputSubIndex = 0;\r\n                                    }\r\n                                }\r\n\r\n                                this.changeSelectedInput();\r\n                            } else if (enter && this.inputIndex === 20 - this.v) {\r\n                                if (this.splitMode && this.inputSubIndex < 2) {\r\n                                    this.inputSubIndex++;\r\n                                    this.changeSelectedInput();\r\n                                    return;\r\n                                }\r\n\r\n                                document.querySelectorAll('.editable').forEach((element: HTMLDivElement) => {\r\n                                    element.classList.add('savedElement');\r\n                                });\r\n\r\n                                if (this.enterMode) {\r\n                                    let vocab = this.vocabulary.slice(this.wordIndex + 1);\r\n                                    let wi = (vocab.findIndex(w => w.verb === param.includes('verb'))) >= 0 ? vocab.findIndex(w => w.verb === param.includes('verb')) + this.wordIndex + 1 : -1;\r\n\r\n                                    if (!this.vocabulary[wi]) {\r\n                                        this.vocabulary[this.wordIndex] = this.currentWord;\r\n\r\n                                        const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\r\n                                        transaction.onerror = () => console.error(transaction.error);\r\n                                        const objectStore = transaction.objectStore(`inflected vocabulary`);\r\n                                        const req = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                                        req.onerror = () => console.error(req.error)\r\n                                        transaction.oncomplete = () => {\r\n                                            for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                                this.container.children[i].classList.remove('savedElement');\r\n                                            }\r\n\r\n                                            this.wordIndex = this.vocabulary.length;\r\n                                            this.keys = 0;\r\n                                            this.currentWord = {\r\n                                                singular: this.empty(param),\r\n                                                plural: this.empty(param),\r\n                                                verb: param.includes('verb'),\r\n                                                probability: 1\r\n                                            };\r\n\r\n                                            for (let i = 3; i < this.container.childElementCount; i++) {\r\n                                                if (i % 3 != 0) {\r\n                                                    this.container.children[i].innerHTML = '';\r\n                                                    this.container.children[i].classList.remove('split');\r\n                                                }\r\n\r\n                                                this.container.children[i].classList.remove('selectedElement');\r\n                                            }\r\n                                            this.inputIndex = 4;\r\n                                            this.selectedInput = <HTMLDivElement>this.container.children[4];\r\n                                            this.tabCount = 0;\r\n                                            this.genderSplitButton.style.display = 'block';\r\n                                            this.selectedInput.classList.add('selectedElement');\r\n                                        }\r\n                                    } else {\r\n                                        this.vocabulary[this.wordIndex] = this.currentWord;\r\n\r\n                                        for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                            this.container.children[i].classList.remove('savedElement');\r\n                                        }\r\n\r\n                                        const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\r\n                                        transaction.onerror = () => console.error(transaction.error);\r\n                                        const objectStore = transaction.objectStore(`inflected vocabulary`);\r\n                                        const req = objectStore.get(this.wordIndex);\r\n                                        req.onerror = () => console.error(req.error);\r\n                                        req.onsuccess = () => {\r\n                                            const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                                            idontcare.onerror = () => console.error(idontcare.error);\r\n\r\n                                            this.wordIndex = wi;\r\n                                            this.currentWord = <InflectedWord>this.vocabulary[wi];\r\n                                            if (this.splitMode) {\r\n                                                this.splitMode = false;\r\n                                                document.querySelectorAll('.split').forEach(split => {\r\n                                                    split.innerHTML = '';\r\n                                                    split.classList.remove('split');\r\n                                                });\r\n                                            }\r\n                                            if (this.genderSplitButton) this.genderSplitButton.style.display = 'block';\r\n                                            if (this.currentWord.singular[0].search(mfANDn) != -1) {\r\n                                                this.splitGenders(this.currentWord);\r\n                                                return;\r\n                                            }\r\n                                            let overallIndexes: [number, number[]][] = [];\r\n                                            let tabulatorStyle = false;\r\n                                            for (let i = 3; i < this.container.childElementCount; i++) {\r\n                                                let tabulatorIndexes: number[] = [];\r\n                                                let n = Math.floor(i / 3) - 1;\r\n                                                let singular = this.currentWord.singular;\r\n                                                let plural = this.currentWord.plural;\r\n                                                if (i % 3 === 1) {\r\n                                                    this.container.children[i].innerHTML = '';\r\n                                                    for (let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++) {\r\n                                                        if (singular[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                            tabulatorStyle = !tabulatorStyle;\r\n                                                            ii += 4;\r\n                                                        } else {\r\n                                                            let object = document.createElement('object');\r\n                                                            object.data = './keys/Reversion_T.svg';\r\n                                                            object.id = `key${ii}-inp${i}`;\r\n                                                            object.style.height = `100%`;\r\n                                                            this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                            if (tabulatorStyle) tabulatorIndexes.push(ii)\r\n\r\n                                                            object.addEventListener('load', _ => {\r\n                                                                let svg = object.contentDocument;\r\n                                                                svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                                if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) &&\r\n                                                                    overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                                        .includes(parseInt(object.id.slice(3)))\r\n                                                                ) {\r\n                                                                    this.tabulatorAnimation(object);\r\n                                                                    object.classList.add('tabulator');\r\n                                                                }\r\n                                                            })\r\n                                                        }\r\n                                                    }\r\n                                                    overallIndexes.push([i, tabulatorIndexes]);\r\n                                                } else if (i % 3 === 2) {\r\n                                                    this.container.children[i].innerHTML = '';\r\n                                                    for (let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++) {\r\n                                                        if (plural[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                            tabulatorStyle = !tabulatorStyle;\r\n                                                            ii += 4;\r\n                                                        } else {\r\n                                                            let object = document.createElement('object');\r\n                                                            object.data = './keys/Reversion_T.svg';\r\n                                                            object.id = `key${ii}-inp${i}`;\r\n                                                            object.style.height = `100%`;\r\n                                                            this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                            if (tabulatorStyle) tabulatorIndexes.push(ii);\r\n\r\n                                                            object.addEventListener('load', _ => {\r\n                                                                let svg = object.contentDocument;\r\n                                                                svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                                if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) &&\r\n                                                                    overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                                        .includes(parseInt(object.id.slice(3)))\r\n                                                                ) {\r\n                                                                    this.tabulatorAnimation(object);\r\n                                                                    object.classList.add('tabulator');\r\n                                                                }\r\n                                                            });\r\n                                                        }\r\n                                                    }\r\n                                                    overallIndexes.push([i, tabulatorIndexes]);\r\n                                                }\r\n                                                this.changeSelectedInput();\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                    this.enterMode = false;\r\n                                } else {\r\n                                    this.enterMode = true;\r\n                                }\r\n\r\n                                const transaction = this.database.transaction('inflected vocabulary', 'readwrite');\r\n                                const objectStore = transaction.objectStore('inflected vocabulary');\r\n                                const req = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                                req.onerror = () => console.error(req.error);\r\n                                setTimeout(_ => {\r\n                                    for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                        this.container.children[i].classList.remove('savedElement');\r\n                                    }\r\n                                }, 250);\r\n                            }\r\n\r\n                            return;\r\n                        } else if (event.key === 'ArrowUp') {\r\n                            if (this.tabMode) {\r\n                                this.cancelTabMode();\r\n                            }\r\n                            if (this.inputIndex > 6) {\r\n                                this.inputIndex -= 3;\r\n\r\n                                this.changeSelectedInput();\r\n                            }\r\n\r\n                            return;\r\n                        } else if (event.key === 'Backspace') {\r\n                            let inp = (this.splitMode && this.inputSubIndex != undefined ? this.selectedInput.children[this.inputSubIndex] : this.selectedInput) as HTMLDivElement;\r\n                            if (inp.lastElementChild) {\r\n                                inp.lastElementChild.remove();\r\n\r\n                                let array = <string[]>Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                                let n = Math.floor(this.inputIndex / 3) - 1;\r\n                                let index: number;\r\n                                if (this.splitMode) {\r\n                                    if (this.inputSubIndex == 0) {\r\n                                        index = array[n].search(F);\r\n                                    } else if (this.inputSubIndex === 1) {\r\n                                        index = array[n].search(N);\r\n                                    } else {\r\n                                        index = array[n].length;\r\n                                    }\r\n                                }\r\n                                if (!this.splitMode && array[n].slice(-5) === '^tab^') {\r\n                                    array[n] = array[n].slice(0, array[n].length - 6);\r\n                                    if (this.tabCount > 1) this.tabCount--;\r\n                                    this.tabMode = !this.tabMode;\r\n                                    inp.classList.add('tab');\r\n                                    if (!this.tabMode) {\r\n                                        inp.classList.remove('tab');\r\n                                    }\r\n                                } else if (this.splitMode && index != -1 && index !== undefined) {\r\n                                    if (array[n].slice(index - 5, index) === '^tab^') {\r\n                                        array[n] = array[n].slice(0, index - 6) + array[n].slice(index);\r\n                                        if (this.tabCount > 1) this.tabCount--;\r\n                                        this.tabMode = !this.tabMode;\r\n                                        inp.classList.add('tab');\r\n                                        if (!this.tabMode) {\r\n                                            inp.classList.remove('tab');\r\n                                        }\r\n                                    } else {\r\n                                        array[n] = array[n].slice(0, index - 1) + array[n].slice(index);\r\n                                    }\r\n                                } else {\r\n                                    array[n] = array[n].slice(0, array[n].length - 1);\r\n                                }\r\n                                Object.defineProperty(\r\n                                    this.currentWord,\r\n                                    Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                    { value: array }\r\n                                );\r\n                                this.keys--;\r\n\r\n                                if (this.tabMode) {\r\n                                    this.tabulator = this.tabulator.slice(0, this.tabulator.length - 1);\r\n                                }\r\n                            } else if (this.tabMode) {\r\n                                this.cancelTabMode();\r\n                            }\r\n\r\n                            let pad = this.splitMode ? this.splitPadding[this.inputIndex][this.inputSubIndex] : this.padding[this.inputIndex];\r\n                            if (this.automaticPaddingAdjustment && pad > inp.offsetHeight * 0.05) {\r\n                                let object = inp.lastElementChild;\r\n                                if (!object) return;\r\n                                let w = Math.round((inp.getBoundingClientRect().width -\r\n                                    parseFloat(window.getComputedStyle(inp).paddingLeft) -\r\n                                    parseFloat(window.getComputedStyle(inp).paddingRight)) * 100) / 100;\r\n                                let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n                                let h = w / this.keys * aspectRatio;\r\n                                let padding = Math.max((inp.getBoundingClientRect().height - h) / 2, inp.offsetHeight * 0.05);\r\n                                if (this.splitMode) {\r\n                                    this.splitPadding[this.inputIndex][this.inputSubIndex] = Math.max(padding, 1);\r\n                                    inp.style.padding = `${this.splitPadding[this.inputIndex][this.inputSubIndex]}px 0.25vw`;\r\n                                } else {\r\n                                    this.padding[this.inputIndex] = Math.max(padding, 1);\r\n                                    inp.style.padding = `${this.padding[this.inputIndex]}px 0.25vw`;\r\n                                }\r\n                            }\r\n                            return;\r\n                        } else if (event.key === '#') {\r\n                            this.command = '';\r\n                            this.commandMode = true;\r\n                        } else if (event.key === 'Tab') {\r\n                            let inp = this.splitMode ? this.selectedInput.children[this.inputSubIndex] as HTMLDivElement : this.selectedInput;\r\n                            if (!this.tabMode) {\r\n                                if (this.tabCount >= 2) {\r\n                                    let array = <string[]>Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                                    let n = Math.floor(this.inputIndex / 3) - 1;\r\n                                    let word = this.splitMode ? array[n].split(mfORn)[this.inputSubIndex + 1] : array[n];\r\n                                    let index: number;\r\n                                    while (word.search('\\\\^tab\\\\^') !== -1) {\r\n                                        let c = word.search('\\\\^tab\\\\^');\r\n                                        if (index === undefined) index = c;\r\n                                        word = word.slice(0, c) + word.slice(c + 5, word.length);\r\n                                    }\r\n\r\n                                    word = word.slice(0, index) + '^tab^' + word.slice(index, word.length);\r\n                                    Object.defineProperty(\r\n                                        this.currentWord,\r\n                                        Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                        { value: array }\r\n                                    );\r\n\r\n                                    let tabulatorStyle = false;\r\n                                    for (let i = 0; i < word.length; i++) {\r\n                                        if (word.slice(i, i + 5) === '^tab^') {\r\n                                            tabulatorStyle = !tabulatorStyle;\r\n                                            i += 4;\r\n                                        } else if (inp.children[i > index ? i - 5 : i]) {\r\n                                            let object = <HTMLObjectElement>inp.children[i > index ? i - 5 : i];\r\n                                            let svg = object.contentDocument;\r\n                                            svg.querySelector('#tspan7').innerHTML = word.charAt(i);\r\n                                            if (tabulatorStyle) {\r\n                                                this.tabulatorAnimation(object);\r\n                                                object.classList.add('tabulator');\r\n                                            } else {\r\n                                                object.classList.remove('tabulator');\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    this.tabulator = word.slice(index + 5, word.length);\r\n                                    this.tabCount = 1;\r\n                                    this.tabMode = true;\r\n                                    inp.classList.add('tab');\r\n\r\n                                    let splitto = this.splitMode ? array[n].split(mfORn).slice(1) : undefined;\r\n                                    if (splitto) splitto[this.inputSubIndex] = word;\r\n                                    array[n] = !this.splitMode ? word : `^^m^^${splitto[0]}^^f^^${splitto[1]}^^n^^${splitto[2]}`;\r\n                                } else {\r\n                                    this.tabMode = true;\r\n                                    inp.classList.add('tab');\r\n                                    let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1] as string[];\r\n                                    let n = Math.floor(this.inputIndex / 3) - 1;\r\n                                    let index: number;\r\n                                    if (this.splitMode) {\r\n                                        if (this.inputSubIndex == 0) {\r\n                                            index = array[n].search(F);\r\n                                        } else if (this.inputSubIndex == 1) {\r\n                                            index = array[n].search(N);\r\n                                        } else {\r\n                                            index = array[n].length;\r\n                                        }\r\n                                    }\r\n                                    if (index !== -1 && index !== undefined) {\r\n                                        array[n] = array[n].slice(0, index) + \"^tab^\" + array[n].slice(index);\r\n                                    } else {\r\n                                        array[n] += \"^tab^\";\r\n                                    }\r\n                                    Object.defineProperty(\r\n                                        this.currentWord,\r\n                                        Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                        { value: array }\r\n                                    );\r\n                                    this.tabCount++;\r\n                                }\r\n                            } else if (this.tabulator.length > 0) {\r\n                                let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1] as string[];\r\n                                let n = Math.floor(this.inputIndex / 3) - 1;\r\n                                let index: number;\r\n                                if (this.splitMode) {\r\n                                    if (this.inputSubIndex == 0) {\r\n                                        index = array[n].search(F);\r\n                                    } else if (this.inputSubIndex == 1) {\r\n                                        index = array[n].search(N);\r\n                                    } else {\r\n                                        index = array[n].length;\r\n                                    }\r\n                                }\r\n                                let phrase = this.splitMode ? array[n].slice(index - 5, index) : array[n].slice(-5);\r\n                                if (phrase != '^tab^') {\r\n                                    this.tabMode = false;\r\n                                    inp.classList.remove('tab');\r\n                                    if (this.splitMode && this.inputSubIndex != undefined) {\r\n                                        array[n] = array[n].slice(0, index) + \"^tab^\" + array[n].slice(index);\r\n                                    } else {\r\n                                        array[n] += \"^tab^\";\r\n                                    }\r\n                                    Object.defineProperty(\r\n                                        this.currentWord,\r\n                                        Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                        { value: array }\r\n                                    );\r\n                                    this.tabCount++;\r\n                                } else {\r\n                                    const previous = array[n];\r\n                                    const ID = this.inputIndex;\r\n                                    const subID = this.inputSubIndex;\r\n\r\n                                    let objectCount = 0;\r\n                                    let objectsLoaded = 0;\r\n\r\n                                    if (this.splitMode && this.inputSubIndex != undefined) {\r\n                                        array[n] = array[n].slice(0, index) + this.tabulator + \"^tab^\" + array[n].slice(index);\r\n                                    } else {\r\n                                        array[n] += this.tabulator + \"^tab^\";\r\n                                    }\r\n                                    const word = this.splitMode ? array[n].split(mfORn).at(this.inputSubIndex + 1) : array[n];\r\n                                    if (\r\n                                        this.keys + this.tabulator.length <=\r\n                                        Math.floor(inp.clientWidth / (inp.clientHeight - parseFloat(inp.style.padding))) ||\r\n                                        (this.keys + this.tabulator.length >\r\n                                            Math.floor(inp.clientWidth / (inp.clientHeight - parseFloat(inp.style.padding))) &&\r\n                                            this.automaticPaddingAdjustment)\r\n                                    ) {\r\n                                        for (let i = 0; i < this.tabulator.length; i++) {\r\n                                            let object = document.createElement('object');\r\n                                            object.data = './keys/Reversion_T.svg';\r\n                                            object.id = `key${this.keys}-inp${this.inputIndex}${(this.splitMode) ? `-sub${this.inputSubIndex}` : ''}`;\r\n                                            object.style.height = `100%`;\r\n                                            objectCount++;\r\n                                            inp.insertAdjacentElement('beforeend', object);\r\n                                            object.hidden = true;\r\n                                            object.addEventListener('load', _ => {\r\n                                                object.hidden = false;\r\n                                                this.tabulatorAnimation(object);\r\n                                                object.classList.add('tabulator');\r\n                                                let svg = object.contentDocument;\r\n                                                svg.querySelector('#tspan7').innerHTML = this.tabulator.charAt(i);\r\n                                                this.keys++;\r\n                                                objectsLoaded++;\r\n                                                if (objectsLoaded === objectCount && this.automaticPaddingAdjustment) {\r\n                                                    this.adjustInputWidth(inp, word, false);\r\n                                                    let pad = this.splitMode ? this.splitPadding[ID][subID] : this.padding[ID];\r\n                                                    inp.style.padding = `${pad}px 0.25vw`;\r\n                                                    inp.style.border = 'none';\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    } else {\r\n                                        for (let ii = 0; ii < this.keys; ii++) {\r\n                                            this.failureAnimation(<HTMLObjectElement>inp.children[ii]);\r\n                                            array[n] = previous;\r\n                                        }\r\n                                        return;\r\n                                    }\r\n\r\n\r\n                                    Object.defineProperty(\r\n                                        this.currentWord,\r\n                                        Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                        { value: array }\r\n                                    );\r\n                                    this.tabMode = false;\r\n                                    this.tabCount++;\r\n                                    inp.classList.remove('tab');\r\n                                }\r\n                            } else {\r\n                                this.tabCount = 0;\r\n                                this.cancelTabMode();\r\n                            }\r\n                            return;\r\n                        } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    this.enterMode = false;\r\n\r\n                    let inp = (this.splitMode && this.inputSubIndex != undefined ? this.selectedInput.children[this.inputSubIndex] : this.selectedInput) as HTMLDivElement;\r\n\r\n                    let object = document.createElement('object');\r\n                    object.data = './keys/Reversion_T.svg';\r\n                    object.id = `key${this.keys}-inp${this.inputIndex}${this.splitMode ? `-sub${this.inputSubIndex}` : ''}`;\r\n                    object.style.height = `100%`;\r\n                    inp.insertAdjacentElement('beforeend', object);\r\n                    object.hidden = true;\r\n\r\n                    object.addEventListener('load', _ => {\r\n                        object.hidden = false;\r\n                        let width = Math.round(object.getBoundingClientRect().width * 100) / 100;\r\n                        object.hidden = true;\r\n                        let w = Math.round((inp.getBoundingClientRect().width -\r\n                            parseFloat(window.getComputedStyle(inp).paddingLeft) -\r\n                            parseFloat(window.getComputedStyle(inp).paddingRight) -\r\n                            parseFloat(window.getComputedStyle(inp).borderLeftWidth) -\r\n                            parseFloat(window.getComputedStyle(inp).borderRightWidth)) * 100) / 100;\r\n                        if (!this.automaticPaddingAdjustment && this.keys + 1 > w / width) {\r\n                            object.remove();\r\n                            for (let i = 0; i < this.keys; i++) {\r\n                                this.failureAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                            }\r\n                            return;\r\n                        } else if (this.automaticPaddingAdjustment) {\r\n                            object.hidden = false;\r\n                            let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n                            object.hidden = true;\r\n                            let h = (w / (this.keys + 1)) * aspectRatio;\r\n                            let padding = (inp.getBoundingClientRect().height - h) / 2;\r\n                            if (padding > inp.getBoundingClientRect().height / 2 * 0.85) {\r\n                                object.remove();\r\n                                for (let i = 0; i < this.keys; i++) {\r\n                                    this.failureAnimation(<HTMLObjectElement>inp.children[i]);\r\n                                }\r\n                                return;\r\n                            } else {\r\n                                const prev = this.splitMode ? this.splitPadding[this.inputIndex][this.inputSubIndex] : this.padding[this.inputIndex];\r\n                                if (this.splitMode && this.inputSubIndex != undefined) {\r\n                                    this.splitPadding[this.inputIndex][this.inputSubIndex] = Math.max(padding, inp.offsetHeight * 0.05);\r\n                                } else {\r\n                                    this.padding[this.inputIndex] = Math.max(padding, inp.offsetHeight * 0.05);\r\n                                }\r\n                                this.animatedBorderWidth = parseFloat(window.getComputedStyle(inp).borderTopWidth);\r\n                                let now = this.splitMode ? this.splitPadding[this.inputIndex][this.inputSubIndex] : this.padding[this.inputIndex];\r\n                                if (prev !== now) {\r\n                                    this.automaticPaddingAnimation(inp as HTMLDivElement, true, true);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        setTimeout(_ => { object.hidden = false; }, 10);\r\n                        let svg = object.contentDocument;\r\n                        if (event.key === '<') {\r\n                            svg.querySelector('#tspan7').innerHTML = '&lt;';\r\n                        } else if (event.key === '&') {\r\n                            svg.querySelector('#tspan7').innerHTML = '&amp;';\r\n                        } else {\r\n                            svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\r\n                        }\r\n\r\n                        if (!this.commandMode) {\r\n                            let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1] as string[];\r\n                            let n = Math.floor(this.inputIndex / 3) - 1;\r\n                            let index: number;\r\n                            if (this.splitMode) {\r\n                                if (this.inputSubIndex == 0) {\r\n                                    index = array[n].search(F);\r\n                                } else if (this.inputSubIndex == 1) {\r\n                                    index = array[n].search(N);\r\n                                } else {\r\n                                    index = array[n].length;\r\n                                }\r\n                            }\r\n                            if (index !== -1 && index !== undefined) {\r\n                                array[n] = array[n].slice(0, index) + event.key + array[n].slice(index);\r\n                            } else {\r\n                                array[n] += event.key;\r\n                            }\r\n                            Object.defineProperty(\r\n                                this.currentWord,\r\n                                Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                { value: array }\r\n                            );\r\n\r\n                            if (this.tabMode) {\r\n                                if (\r\n                                    (this.splitMode && this.inputSubIndex != undefined && array[n].split(mfORn)[this.inputSubIndex + 1].slice(-6, -1) === '^tab^') ||\r\n                                    (!this.splitMode && array[n].slice(-6, -1) === '^tab^')\r\n                                ) {\r\n                                    this.tabulator = '';\r\n                                }\r\n                                this.tabulator += event.key;\r\n                                this.tabulatorAnimation(object);\r\n                                object.classList.add('tabulator');\r\n                            } else {\r\n                                this.idleAnimation(object);\r\n                            }\r\n\r\n                        } else {\r\n                            this.command += event.key;\r\n                            training.commandAnimation(object);\r\n                        }\r\n\r\n                        this.keys++;\r\n\r\n                    });\r\n                }\r\n\r\n                document.addEventListener('keydown', this.keydownFunction);\r\n\r\n                window.addEventListener('keydown', (event: KeyboardEvent) => {\r\n                    if (event.key === 'Tab') {\r\n                        event.preventDefault();\r\n                        this.container.focus();\r\n                    } else if (event.key === '/') {\r\n                        event.preventDefault();\r\n                        this.container.focus();\r\n                    }\r\n                });\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    empty(param: Parameter): [string, string, string] | [string, string, string, string, string, string] {\r\n        let l = param.includes('verb') ? 3 : 6;\r\n        return <[string, string, string] | [string, string, string, string, string, string]>new Array(l).fill('');\r\n    }\r\n\r\n    changeSelectedInput(): void {\r\n        if (this.timeout) {\r\n            clearTimeout(this.timeout);\r\n            this.selectedInput.style.padding = `${this.padding[parseInt(this.selectedInput.id.slice(3, 5))]}px ${0.05 * this.selectedInput.offsetHeight}px`;\r\n            this.selectedInput.style.transition = 'none';\r\n            this.selectedInput.style.border = 'none';\r\n        }\r\n        document.querySelectorAll('.selectedElement').forEach(elem => elem.classList.remove('selectedElement'));\r\n        this.selectedInput = <HTMLDivElement>document.getElementById(`div${this.inputIndex}`);\r\n        let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1] as string[];\r\n\r\n        let n = Math.floor(this.inputIndex / 3) - 1;\r\n        let word = this.splitMode ? array[n].split(mfORn)[this.inputSubIndex + 1] : array[n];\r\n        let regex = new RegExp('\\\\^tab\\\\^', 'g');\r\n        let matches = word.match(regex);\r\n        this.tabCount = matches ? matches.length : 0;\r\n        let inp = <HTMLDivElement>(this.splitMode ? this.selectedInput.children[this.inputSubIndex] : this.selectedInput);\r\n        if (!matches ? false : matches.length % 2 === 0) {\r\n            inp.classList.remove('tab');\r\n        }\r\n        this.selectedInput.classList.add('selectedElement');\r\n        this.keys = this.selectedInput.childElementCount;\r\n        if (this.splitMode && this.inputSubIndex != undefined) {\r\n            inp.classList.add('selectedElement');\r\n            this.keys = inp.childElementCount;\r\n        }\r\n\r\n        if (this.automaticPaddingAdjustment) {\r\n            this.adjustInputWidth(inp, word, false);\r\n            this.automaticPaddingAnimation(inp);\r\n        } else {\r\n            this.paddingAnimation(this.selectedInput);\r\n        }\r\n    }\r\n\r\n    cancelTabMode(): void {\r\n        // Simplified using COPILOT\r\n        let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1] as string[];\r\n        let n = Math.floor(this.inputIndex / 3) - 1;\r\n        let word = array[n];\r\n\r\n        if (this.splitMode && this.inputSubIndex != undefined) {\r\n            word = word.split(mfORn).at(this.inputSubIndex + 1);\r\n        }\r\n\r\n        if (word.includes('^tab^')) {\r\n            let start = word.indexOf('^tab^');\r\n            word = word.slice(0, start) + word.slice(start + 5);\r\n\r\n            let end = word.indexOf('^tab^');\r\n            if (end != -1) {\r\n                word = word.slice(0, end) + word.slice(end + 5);\r\n            } else end = word.length;\r\n\r\n            let tabbedContent = word.slice(start, end);\r\n\r\n            for (let i = 0; i < tabbedContent.length; i++) {\r\n                if (this.splitMode && this.inputSubIndex != undefined) {\r\n                    this.selectedInput.children[this.inputSubIndex].children[start].remove();\r\n                } else {\r\n                    this.selectedInput.children[start].remove();\r\n                }\r\n            }\r\n\r\n            // not the problem\r\n            if (this.splitMode && this.inputSubIndex != undefined) {\r\n                let splitto = array[n].split(mfORn).slice(1);\r\n                splitto[this.inputSubIndex] = word.slice(0, start) + word.slice(end + 5);\r\n                array[n] = `^^m^^${splitto[0]}^^f^^${splitto[1]}^^n^^${splitto[2]}`;\r\n                if (this.automaticPaddingAdjustment) this.adjustInputWidth(this.selectedInput.children[this.inputSubIndex] as HTMLDivElement, splitto[this.inputSubIndex], false);\r\n            } else {\r\n                array[n] = word.slice(0, start) + word.slice(end + 5);\r\n                if (this.automaticPaddingAdjustment) this.adjustInputWidth(this.selectedInput, array[n], false)\r\n            }\r\n\r\n            this.keys -= tabbedContent.length;\r\n        }\r\n\r\n        this.tabMode = false;\r\n        let inp = this.splitMode && this.inputSubIndex != undefined ? this.selectedInput.children[this.inputSubIndex] as HTMLDivElement : this.selectedInput;\r\n        inp.classList.remove('tab');\r\n    }\r\n\r\n    findMostUsedTabulator(inflectedWord: InflectedWord): string {\r\n        let tabulators = inflectedWord.singular.map(word => word.split(/\\^tab\\^/g).filter((v, i) => i % 2 === 1)).concat(inflectedWord.plural.map(word => word.split(/\\^tab\\^/g).filter((v, i) => i % 2 === 1)));\r\n        let tabs: string[] = []; tabulators.forEach(wordList => wordList.forEach(word => tabs.push(word)));\r\n        let checkedTabs: [string, number][] = [];\r\n        tabs.forEach((tab) => {\r\n            if (!checkedTabs.map(t => t[0]).includes(tab)) {\r\n                checkedTabs.push([tab, 1]);\r\n            } else {\r\n                let i = checkedTabs.findIndex(t => t[0] === tab);\r\n                checkedTabs[i] = [tab, checkedTabs[i][1] + 1];\r\n            }\r\n        });\r\n\r\n        for (let i = 0; i < checkedTabs.length; i++) {\r\n            checkedTabs.sort((a, b) => b[1] - a[1]);\r\n        }\r\n\r\n        return checkedTabs.length ? checkedTabs[0][0] : undefined;\r\n    }\r\n\r\n    startNewTrainingRound(param: Parameter): void {\r\n        this.splitMode = false;\r\n        document.querySelectorAll('.split').forEach(el => el.classList.remove('split'));\r\n\r\n        let vocab = this.vocabulary.filter(w => w.verb === param.includes('verb'));\r\n        if (vocab.length === 0) {\r\n            setTimeout(_ => alert(`Keine ${param.includes('verb') ? 'Konjugationen' : 'Deklinationen'}!`), 250);\r\n            return;\r\n        } else if (vocab.filter(w => !isEmpty(w)).length === 0) {\r\n            setTimeout(_ => alert(`Nur leere ${param.includes('verb') ? 'Konjugationen' : 'Deklinationen'}!`), 250);\r\n            return;\r\n        }\r\n\r\n        function isEmpty(w: InflectedWord) {\r\n            return w.singular.filter(s => s.replaceAll(/\\^\\^m\\^\\^|\\^\\^f\\^\\^|\\^\\^n\\^\\^/g, '').trim() === '').length === (!param.includes('verb') ? 6 : 3) &&\r\n                w.plural.filter(p => p.replaceAll(/\\^\\^m\\^\\^|\\^\\^f\\^\\^|\\^\\^n\\^\\^/g, '').trim() === '').length === (!param.includes('verb') ? 6 : 3);\r\n        }\r\n\r\n        this.round++;\r\n\r\n        // Optimized using COPILOT\r\n        const validWords = vocab.filter(w => !isEmpty(w));\r\n        const overallProbability = validWords.reduce((sum, word) => sum + word.probability, 0);\r\n        const randomNumber = Math.random() * overallProbability;\r\n\r\n        this.failures = 0;\r\n        let runningSum = 0;\r\n\r\n        for (let i = 0; i < this.vocabulary.length; i++) {\r\n            const word = this.vocabulary[i];\r\n            if (!isEmpty(word) && word.verb === param.includes('verb')) {\r\n                runningSum += word.probability;\r\n                if (runningSum >= randomNumber) {\r\n                    this.currentWord = word;\r\n                    this.currentWordIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.tabulator = this.findMostUsedTabulator(this.currentWord);\r\n        document.querySelectorAll('.editable').forEach(div => {\r\n            div.innerHTML = '';\r\n            div.classList.remove('redShadowDesign');\r\n            div.classList.remove('greenShadowDesign');\r\n            div.classList.remove('known-case');\r\n            div.classList.add('shadowDesign');\r\n        });\r\n        // - \r\n\r\n        let knownCase: string;\r\n        let rn: number;\r\n        let randi: number | undefined;\r\n        let v = this.v / 3;\r\n        do {\r\n            rn = Math.floor(Math.random() * (param.includes('verb') ? 6 : 12));\r\n            knownCase = Object.values(this.vocabulary[this.currentWordIndex])[rn > 5 - v ? 1 : 0][rn > 5 - v ? rn - 6 + v : rn];\r\n            if (knownCase.search(mfANDn) != -1) {\r\n                randi = Math.floor(Math.random() * 2);\r\n                knownCase = knownCase.split(mfORn)[randi + 1];\r\n            }\r\n        } while (knownCase === '');\r\n\r\n        knownCase = knownCase.replaceAll('^tab^', '');\r\n\r\n        let specificationDiv = document.getElementById(`div${rn > 5 - v ? 2 + (rn - 5 + v) * 3 : 1 + (rn + 1) * 3}`);\r\n        specificationDiv.classList.add('known-case');\r\n        specificationDiv.innerHTML = `<span>${knownCase}</span>`;\r\n\r\n        if (document.getElementById('div4') === specificationDiv) {\r\n            this.inputIndex = 7;\r\n            this.changeSelectedInput();\r\n        }\r\n\r\n        let array = this.empty(param);\r\n        array[rn > 5 - v ? rn - 6 + v : rn] = knownCase;\r\n        this.currentWord = {\r\n            singular: rn <= 5 - v ? array : this.empty(param),\r\n            plural: rn > 5 - v ? array : this.empty(param),\r\n            verb: param.includes('verb'),\r\n            probability: this.currentWord.probability\r\n        };\r\n\r\n        this.result = {\r\n            singular: param.includes('verb') ? [undefined, undefined, undefined] : [undefined, undefined, undefined, undefined, undefined, undefined],\r\n            plural: param.includes('verb') ? [undefined, undefined, undefined] : [undefined, undefined, undefined, undefined, undefined, undefined]\r\n        }\r\n\r\n        if (randi || randi === 0) {\r\n            this.emptySplit(knownCase, randi);\r\n        }\r\n    }\r\n\r\n    compare(string1: string, string2: string): boolean {\r\n        return string1.replaceAll('^tab^', '') === string2.replaceAll('^tab^', '');\r\n    }\r\n\r\n\r\n    compareObjects(obj1: InflectedWord, obj2: InflectedWord): boolean {\r\n        let object1 = JSON.parse(JSON.stringify(obj1));\r\n        let object2 = JSON.parse(JSON.stringify(obj2));\r\n\r\n        object1.singular.forEach((word, i) => {\r\n            object1.singular[i] = word.replaceAll('^tab^', '');\r\n        });\r\n\r\n        object1.plural.forEach((word, i) => {\r\n            object1.plural[i] = word.replaceAll('^tab^', '');\r\n        });\r\n\r\n        object2.singular.forEach((word, i) => {\r\n            object2.singular[i] = word.replaceAll('^tab^', '');\r\n        });\r\n\r\n        object2.plural.forEach((word, i) => {\r\n            object2.plural[i] = word.replaceAll('^tab^', '');\r\n        });\r\n\r\n        return Object.values(object1).slice(0, 3).toLocaleString() === Object.values(object2).slice(0, 3).toLocaleString();\r\n    }\r\n\r\n    failureAnimation(object: HTMLObjectElement): void {\r\n        if (!object) {\r\n            return;\r\n        }\r\n\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: Keyframe[] = [\r\n            { stroke: this.badColor, offset: 0.025 },\r\n\r\n            { rotate: \"10deg z\", offset: 0.25 },\r\n\r\n            { rotate: \"0deg z\", offset: 0.5 },\r\n\r\n            { rotate: \"-10deg z\", offset: 0.75, stroke: this.badColor },\r\n\r\n            { stroke: \"#eeeeeeff\", offset: 0.925 },\r\n\r\n            { rotate: \"0deg z\", offset: 1 }\r\n        ];\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 500\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    idleAnimation(object: HTMLObjectElement): void {\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#8f8f8f', '#fff', '#eeeeeeff'],\r\n            offset: [0, 1]\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 250\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    tabulatorAnimation(object: HTMLObjectElement): void {\r\n        if (!object) {\r\n            return;\r\n        }\r\n\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#eeeeeeff', this.badColor === 'rgb(186, 2, 70)' ? '#4400ff' : 'rgb(211, 0, 0)'],\r\n            offset: [0, 1]\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 250,\r\n            fill: 'forwards'\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    successAnimation(object: HTMLObjectElement): void {\r\n        if (!object) {\r\n            return;\r\n        }\r\n\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#eeeeeeff', '#08a000', '#eeeeeeff'],\r\n            offset: [0, 1]\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 500\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    deletionAnimation(element: Element, duration: number, direction: PlaybackDirection): void {\r\n        if (element.tagName === 'OBJECT') {\r\n            let object = <HTMLObjectElement>element;\r\n            let svg = object.contentDocument;\r\n            let rect = svg.querySelector('#mainRect');\r\n            let text = svg.querySelector('#text7');\r\n            let animationKeyframes: PropertyIndexedKeyframes = {\r\n                stroke: [object.classList.contains('tabulator') ? (this.badColor === 'rgb(186, 2, 70)' ? '#4400ff' : 'rgb(211, 0, 0)') : '#eeeeeeff', this.badColor],\r\n                offset: [0, 1]\r\n            }\r\n\r\n            let animationOptions: KeyframeAnimationOptions = {\r\n                duration: duration,\r\n                fill: 'forwards',\r\n                direction: direction\r\n            }\r\n\r\n            rect.animate(animationKeyframes, animationOptions);\r\n            text.animate(animationKeyframes, animationOptions);\r\n        } else if (element.tagName === 'BUTTON') {\r\n            let animationKeyframes: PropertyIndexedKeyframes = {\r\n                backgroundColor: [this.badColor === 'rgb(186, 2, 70)' ? '#ff0000' : this.badColor, this.badColor === 'rgb(186, 2, 70)' ? '#ba0303' : '#ad0668'],\r\n                boxShadow: [`0 0 0 0 ${this.badColor === 'rgb(186, 2, 70)' ? '#ba0303' : '#ad0668'}`, `0 0 1vh 1vh ${this.badColor === 'rgb(186, 2, 70)' ? '#ff0000' : this.badColor}`],\r\n                color: ['#ffffff', '#eeffff'],\r\n                border: ['none', 'none',],\r\n                offset: [0, 1]\r\n            }\r\n\r\n            let animationOptions: KeyframeAnimationOptions = {\r\n                duration: duration,\r\n                fill: 'forwards',\r\n                direction: direction\r\n            }\r\n\r\n            element.animate(animationKeyframes, animationOptions);\r\n        }\r\n    }\r\n\r\n    paddingAnimation(input: HTMLDivElement): void {\r\n        if (input.classList.contains('known-case')) {\r\n            return;\r\n        }\r\n\r\n        let id = parseInt(input.id.slice(3, 5));\r\n        let borderLeft = 0.05 * input.offsetHeight;\r\n\r\n        input.style.padding = '0';\r\n        input.style.willChange = 'border-width';\r\n        input.style.borderTopWidth = `${this.padding[id]}px`;\r\n        input.style.borderRightWidth = `${borderLeft}px`;\r\n        input.style.borderBottomWidth = `${this.padding[id]}px`;\r\n        input.style.borderLeftWidth = `${borderLeft}px`;\r\n        input.style.borderStyle = 'solid';\r\n        input.style.borderColor = this.borderColor;\r\n        input.style.paddingLeft = `${borderLeft - parseInt(window.getComputedStyle(input).borderLeftWidth.slice(0, -2))}px`;\r\n        input.style.paddingTop = this.padding[id] - parseFloat(window.getComputedStyle(input).borderTopWidth.slice(0, -2)) + 'px';\r\n        input.style.paddingRight = borderLeft - parseFloat(window.getComputedStyle(input).borderRightWidth.slice(0, -2)) + 'px';\r\n        input.style.paddingBottom = this.padding[id] - parseFloat(window.getComputedStyle(input).borderBottomWidth.slice(0, -2)) + 'px';\r\n        input.style.transition = 'none';\r\n        input.style.paddingLeft = borderLeft - parseInt(window.getComputedStyle(input).borderLeft.slice(0, -2)) + 'px';\r\n\r\n        setTimeout(_ => {\r\n            input.style.borderColor = 'transparent';\r\n            input.style.transition = \"border-color 1.5s\";\r\n\r\n            this.timeout = setTimeout(_ => {\r\n                input.style.padding = `${this.padding[id]}px ${0.05 * input.offsetHeight}px`;\r\n                input.style.border = 'none';\r\n                input.style.transition = 'none';\r\n            }, 1500);\r\n        }, 1);\r\n    }\r\n\r\n    automaticPaddingAnimation(input: HTMLDivElement, adjustment?: boolean, cancelable?: boolean): void {\r\n        cancelable = cancelable === undefined || cancelable === true;\r\n        clearInterval(this.firstInterval);\r\n        clearInterval(this.secondInterval);\r\n        clearTimeout(this.firstTimeout);\r\n\r\n        if (cancelable && this.animatedInputIndex != undefined && adjustment === undefined) {\r\n            let inp = <HTMLDivElement>document.querySelector(`#div${this.animatedInputIndex}`);\r\n            inp = this.splitMode && this.animatedInputSubIndex != undefined ? inp.children[this.animatedInputSubIndex] as HTMLInputElement : inp;\r\n            let paddingLeft = 0.05 * inp.offsetHeight;\r\n            let paddingTop = this.splitMode ? this.splitPadding[this.animatedInputIndex][this.animatedInputSubIndex] : this.padding[this.animatedInputIndex];\r\n            inp.style.padding = `${paddingTop}px ${paddingLeft}px`;\r\n            inp.style.border = 'none';\r\n        }\r\n\r\n\r\n        if (input.classList.contains('known-case')) return;\r\n\r\n        let id: number;\r\n        let count: number;\r\n        if (this.splitMode) {\r\n            if (input.parentElement == this.container) return;\r\n            id = parseInt(input.parentElement?.id.slice(3));\r\n            for (let q = 0; q < input.parentElement?.childElementCount; q++) {\r\n                if (input.parentElement.children[q] === input) {\r\n                    count = q;\r\n                    break;\r\n                }\r\n            }\r\n        } else id = parseInt(input.id.slice(3));\r\n        let borderLeft = 0.05 * input.offsetHeight;\r\n        let newPadding = this.splitMode ? this.splitPadding[id][count] : this.padding[id];\r\n        let borderWidth = adjustment ? this.animatedBorderWidth : 0;\r\n        let $tepSize = (newPadding - borderWidth) / 20;\r\n        let stepSize = newPadding / 20;\r\n        let step = 0;\r\n        let timeout1 = adjustment ? 1 : 250 / 20;\r\n        let timeout2 = 250 / 20;\r\n        let timeout: number;\r\n        let interval1: number;\r\n        let interval2: number;\r\n\r\n        if (cancelable) this.firstInterval = setInterval(intervalFunction1.bind(this), timeout1);\r\n        else interval1 = setInterval(intervalFunction1.bind(this), timeout1);\r\n\r\n        window.addEventListener('resize', resizeHandler.bind(this), { passive: true });\r\n\r\n        function intervalFunction1() {\r\n            for (let i = 0; i < ((adjustment) ? 4 : 1); i++) {\r\n                this.animatedInputIndex = id;\r\n                this.animatedInputSubIndex = count;\r\n                borderWidth += $tepSize;\r\n                this.animatedBorderWidth = borderWidth;\r\n                input.style.borderTopWidth = `${borderWidth}px`;\r\n                input.style.borderRightWidth = `${20 - step === 0 ? borderLeft : borderLeft / (20 - step)}px`;\r\n                input.style.borderBottomWidth = `${borderWidth}px`;\r\n                input.style.borderLeftWidth = `${20 - step === 0 ? borderLeft : borderLeft / (20 - step)}px`;\r\n                input.style.borderStyle = 'solid';\r\n                input.style.borderColor = this.borderColor;\r\n                input.style.transition = 'none';\r\n                let paddingLeft = borderLeft - parseFloat(window.getComputedStyle(input).borderLeftWidth);\r\n                let paddingTop = newPadding - parseFloat(window.getComputedStyle(input).borderTopWidth);\r\n                input.style.padding = `${paddingTop}px ${paddingLeft}px`;\r\n                step++;\r\n                if (step === 20) {\r\n                    if (cancelable) {\r\n                        clearInterval(this.firstInterval);\r\n                        this.firstTimeout = setTimeout(timeoutFunction.bind(this), timeout1 * 20);\r\n                    } else {\r\n                        clearInterval(interval1);\r\n                        timeout = setTimeout(timeoutFunction.bind(this), timeout1 * 20);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        function timeoutFunction() {\r\n            if (cancelable) this.secondInterval = setInterval(intervalFunction2.bind(this), timeout2);\r\n            else interval2 = setInterval(intervalFunction2.bind(this), timeout2);\r\n        }\r\n\r\n        function intervalFunction2() {\r\n            borderWidth -= stepSize;\r\n            this.animatedBorderWidth = borderWidth;\r\n            input.style.borderTopWidth = `${borderWidth}px`;\r\n            input.style.borderRightWidth = `${20 - step === 0 ? borderLeft : borderLeft / (20 - step)}px`;\r\n            input.style.borderBottomWidth = `${borderWidth}px`;\r\n            input.style.borderLeftWidth = `${20 - step === 0 ? borderLeft : borderLeft / (20 - step)}px`;\r\n            input.style.borderStyle = 'solid';\r\n            input.style.borderColor = this.borderColor;\r\n            let paddingLeft = borderLeft - parseFloat(window.getComputedStyle(input).borderLeft);\r\n            let paddingTop = newPadding - parseFloat(window.getComputedStyle(input).borderTop);\r\n            input.style.padding = `${paddingTop}px ${paddingLeft}px`;\r\n            step--;\r\n            if (step === 0) {\r\n                input.style.border = 'none';\r\n                input.style.paddingTop = `${newPadding}px`;\r\n                input.style.paddingRight = `${borderLeft}px`;\r\n                input.style.paddingBottom = `${newPadding}px`;\r\n                input.style.paddingLeft = `${borderLeft}px`;\r\n                window.removeEventListener('resize', resizeHandler.bind(this));\r\n                clearInterval(cancelable ? this.secondInterval : interval2);\r\n            }\r\n        }\r\n\r\n        function resizeHandler() {\r\n            clearInterval(interval1);\r\n            clearInterval(interval2);\r\n            clearTimeout(timeout);\r\n\r\n            let paddingLeft = borderLeft - parseFloat(window.getComputedStyle(input).borderLeft);\r\n            let paddingTop = newPadding - parseFloat(window.getComputedStyle(input).borderTop);\r\n            input.style.padding = `${paddingTop}px ${paddingLeft}px`;\r\n            input.style.border = 'none';\r\n            input.style.paddingTop = `${newPadding}px`;\r\n            input.style.paddingRight = `${borderLeft}px`;\r\n            input.style.paddingBottom = `${newPadding}px`;\r\n            input.style.paddingLeft = `${borderLeft}px`;\r\n        }\r\n    }\r\n\r\n    adjustInputWidth(input: HTMLDivElement, value: string, animation?: boolean): void {\r\n        animation = animation === undefined || animation === true;\r\n        if (input.classList.contains('known-case')) return;\r\n\r\n        let v = value.replaceAll('^tab^', '');\r\n\r\n        if (!input.hasChildNodes() && v.length == 0) {\r\n            if (this.automaticPaddingAdjustment) {\r\n                if (input.classList.contains('selected')) {\r\n                    input.style.padding = 0.05 * input.offsetHeight + 'px';\r\n                } else {\r\n                    input.style.padding = 0.05 * input.offsetHeight + 'px';\r\n                }\r\n\r\n                input.style.border = 'none';\r\n                this.padding[parseInt(input.id.slice(3))] = 0.05 * input.offsetHeight;\r\n                if (animation) this.automaticPaddingAnimation(input, false, false);\r\n                return;\r\n            }\r\n\r\n            if (animation) this.paddingAnimation(input);\r\n            return;\r\n        }\r\n\r\n        let padding: number;\r\n        let w = Math.round(input.getBoundingClientRect().width -\r\n            parseFloat(window.getComputedStyle(input).paddingLeft) -\r\n            parseFloat(window.getComputedStyle(input).paddingRight) -\r\n            parseFloat(window.getComputedStyle(input).borderLeftWidth) -\r\n            parseFloat(window.getComputedStyle(input).borderRightWidth)) * 100 / 100;\r\n        let object = <HTMLObjectElement>input.lastElementChild;\r\n        let id: number;\r\n        let count: number;\r\n        if (this.splitMode) {\r\n            if (input.parentElement == this.container) return;\r\n            id = parseInt(input.parentElement?.id.slice(3));\r\n            for (let q = 0; q < input.parentElement?.childElementCount; q++) {\r\n                if (input.parentElement.children[q] === input) {\r\n                    count = q;\r\n                    break;\r\n                }\r\n            }\r\n        } else id = parseInt(input.id.slice(3));\r\n\r\n        if (!object) return;\r\n        object.hidden = false;\r\n        let width = object.getBoundingClientRect().width;\r\n\r\n        if (w / width < v.length || this.automaticPaddingAdjustment) {\r\n            w = Math.round((input.getBoundingClientRect().width -\r\n                parseFloat(window.getComputedStyle(input).paddingLeft) -\r\n                parseFloat(window.getComputedStyle(input).paddingRight) -\r\n                parseFloat(window.getComputedStyle(input).borderLeftWidth) -\r\n                parseFloat(window.getComputedStyle(input).borderRightWidth)) * 100) / 100;\r\n            let aspectRatio = object.getBoundingClientRect().height / object.getBoundingClientRect().width;\r\n            let h = w / v.length * aspectRatio;\r\n            padding = Math.max((input.getBoundingClientRect().height - h) / 2, input.offsetHeight * 0.05);\r\n\r\n\r\n            if (!this.splitMode) this.padding[id] = padding;\r\n            else this.splitPadding[id][count] = padding;\r\n\r\n            this.animatedBorderWidth = parseFloat(window.getComputedStyle(input).borderTopWidth);\r\n        }\r\n\r\n        if (!animation) {\r\n            clearInterval(this.firstInterval);\r\n            clearInterval(this.secondInterval);\r\n            clearTimeout(this.firstTimeout);\r\n            return;\r\n        }\r\n\r\n        if (this.automaticPaddingAdjustment) {\r\n            this.automaticPaddingAnimation(input, false, false);\r\n        } else {\r\n            this.paddingAnimation(input);\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    splitGenders(currentWord: InflectedWord) {\r\n        this.splitMode = true;\r\n        this.commandMode = false;\r\n        let container = document.querySelector('#container') as HTMLDivElement;\r\n        this.automaticPaddingAdjustment = true;\r\n        let objectCount = 0;\r\n        let objectsLoaded = 0;\r\n        for (let i = 3; i < container.childElementCount; i++) {\r\n            let div = container.children[i] as HTMLDivElement;\r\n            let singular = this.currentWord.singular;\r\n            let tabulatorStyle = false;\r\n            let plural = this.currentWord.plural;\r\n            let divs: HTMLDivElement[] = Array.from({ length: 3 }, () => document.createElement('div'));\r\n            let z = 0;\r\n            let k = 0;\r\n            this.splitPadding.push(new Array(3).fill(undefined) as [number, number, number]);\r\n            if (i % 3 === 1) {\r\n                div.classList.add('split')\r\n                let array = Object.values(currentWord)[i % 3 - 1] as string[], n = Math.floor(i / 3) - 1;\r\n                if (array[n].search(mfANDn) === -1) array[n] = `^^m^^${array[n]}^^f^^^^n^^`;\r\n                let content = array[n].split(mfORn);\r\n                content.splice(0, 1);\r\n                if (singular[n].search(mfANDn) != -1) {\r\n                    divs[z].innerHTML = '';\r\n                    for (let ii = 5; ii < singular[n].length; ii++) {\r\n                        if (singular[n].slice(ii, ii + 5) === '^tab^') {\r\n                            tabulatorStyle = !tabulatorStyle;\r\n                            ii += 4;\r\n                        } else if (singular[n].slice(ii, ii + 5) == '^^n^^' || singular[n].slice(ii, ii + 5) == '^^f^^') {\r\n                            z++;\r\n                            ii += 4;\r\n                            k = 0;\r\n                        } else {\r\n                            let object = document.createElement('object');\r\n                            object.addEventListener('load', _ => {\r\n                                let svg = object.contentDocument;\r\n                                svg.querySelector('#tspan7').innerHTML = singular[n].charAt(ii);\r\n                                if (object.classList.contains('tabulator')) {\r\n                                    this.tabulatorAnimation(object);\r\n                                }\r\n                                objectsLoaded++;\r\n                                if (objectsLoaded === objectCount) {\r\n                                    document.querySelectorAll('object').forEach(o => o.hidden = false);\r\n                                    for (let i = 4; i < this.container.children.length; i++) {\r\n                                        if (i % 3 > 0) {\r\n                                            let div = <HTMLDivElement>this.container.children[i];\r\n                                            let array = Object.values(this.currentWord)[i % 3 - 1];\r\n                                            let n = Math.floor(i / 3) - 1;\r\n                                            let splitto = array[n].split(mfORn).slice(1);\r\n                                            splitto.forEach((s, o) => {\r\n                                                let input = <HTMLDivElement>div.children[o];\r\n                                                input.style.padding = 0.05 * input.offsetHeight + 'px';\r\n                                                this.adjustInputWidth(input, s, true);\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                }\r\n                            })\r\n                            object.data = './keys/Reversion_T.svg';\r\n                            object.id = `key${k}-inp${i}-sub${z}`;\r\n                            object.style.height = `100%`;\r\n                            divs[z].insertAdjacentElement('beforeend', object);\r\n                            if (tabulatorStyle) object.classList.add('tabulator');\r\n                            objectCount++;\r\n                            k++;\r\n                        }\r\n                    }\r\n                }\r\n                div.innerHTML = '';\r\n                divs.forEach((d) => div.appendChild(d));\r\n\r\n            } else if (i % 3 === 2) {\r\n                div.classList.add('split')\r\n                let array = Object.values(currentWord)[i % 3 - 1] as string[], n = Math.floor(i / 3) - 1;\r\n                if (array[n].search(mfANDn) === -1) array[n] = `^^m^^${array[n]}^^f^^^^n^^`;\r\n                let content = array[n].split(mfORn);\r\n                content.splice(0, 1);\r\n                if (plural[n].search(mfANDn) != 1) {\r\n                    this.container.children[i].innerHTML = '';\r\n                    divs[z].innerHTML = '';\r\n                    for (let ii = 5; ii < plural[n].length; ii++) {\r\n                        if (plural[n].slice(ii, ii + 5) === '^tab^') {\r\n                            tabulatorStyle = !tabulatorStyle;\r\n                            ii += 4;\r\n                        } else if (plural[n].slice(ii, ii + 5) == '^^n^^' || plural[n].slice(ii, ii + 5) == '^^f^^') {\r\n                            z++;\r\n                            ii += 4;\r\n                        } else {\r\n                            let object = document.createElement('object');\r\n                            object.addEventListener('load', _ => {\r\n                                let svg = object.contentDocument;\r\n                                svg.querySelector('#tspan7').innerHTML = plural[n].charAt(ii);\r\n                                if (object.classList.contains('tabulator')) {\r\n                                    this.tabulatorAnimation(object);\r\n                                }\r\n                                objectsLoaded++;\r\n                                if (objectsLoaded === objectCount) {\r\n                                    document.querySelectorAll('object').forEach(o => o.hidden = false);\r\n                                    for (let i = 4; i < this.container.children.length; i++) {\r\n                                        if (i % 3 > 0) {\r\n                                            let div = <HTMLDivElement>this.container.children[i];\r\n                                            let array = Object.values(this.currentWord)[i % 3 - 1];\r\n                                            let n = Math.floor(i / 3) - 1;\r\n                                            let splitto = array[n].split(mfORn).slice(1);\r\n                                            splitto.forEach((s, o) => {\r\n                                                let input = <HTMLDivElement>div.children[o];\r\n                                                input.style.padding = 0.05 * input.offsetHeight + 'px';\r\n                                                this.adjustInputWidth(input, s, true);\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            object.data = './keys/Reversion_T.svg';\r\n                            object.id = `key${ii}-inp${i}`;\r\n                            object.style.height = `100%`;\r\n                            divs[z].insertAdjacentElement('beforeend', object);\r\n                            objectCount++;\r\n                            if (tabulatorStyle) object.classList.add('tabulator');\r\n                        }\r\n                    }\r\n                }\r\n                div.innerHTML = '';\r\n                divs.forEach(d => div.appendChild(d));\r\n            }\r\n        }\r\n\r\n        let sel = this.selectedInput.firstChild as HTMLDivElement;\r\n        sel.classList.add('selectedElement');\r\n        this.inputSubIndex = 0;\r\n        this.genderSplitButton.style.display = 'none';\r\n        this.borderColor = 'orange';\r\n        this.changeSelectedInput();\r\n    }\r\n\r\n    emptySplit(knownCase: string, randi: number) {\r\n        for (let i = 3; i < this.container.childElementCount; i++) {\r\n            let div = this.container.children[i] as HTMLDivElement;\r\n            this.splitPadding[i] = new Array(3).fill(undefined) as [number, number, number];\r\n            if (div.classList.contains('editable')) {\r\n                div.classList.add('split');\r\n                div.innerHTML = Array.from({ length: 3 }, (v, ii) => `<div class=\"shadowDesign ${div.classList.contains('known-case') && ii === randi ? 'known-case' : ''}\">${div.classList.contains('known-case') && ii === randi ? '<span>' + knownCase + '</span>' : ''}</div>`).join('');\r\n                let array = Object.values(this.currentWord)[i % 3 - 1];\r\n                let n = Math.floor(i / 3) - 1;\r\n                array[n] = '^^m^^^^f^^^^n^^';\r\n                if (div.classList.contains('known-case')) {\r\n                    let splitto = ['', '', ''];\r\n                    splitto[randi] = knownCase;\r\n                    array[n] = `^^m^^${splitto[0]}^^f^^${splitto[1]}^^n^^${splitto[2]}`;\r\n                    div.classList.remove('known-case');\r\n                }\r\n            }\r\n        }\r\n        this.inputSubIndex = 0;\r\n        this.inputIndex = 4;\r\n        this.splitMode = true;\r\n        this.automaticPaddingAdjustment = true;\r\n        let singleResult = [];\r\n        let singleResult2 = [];\r\n        for (let i = 0; i < 6; i++) {\r\n            singleResult[i] = [undefined, undefined, undefined];\r\n            singleResult2[i] = [undefined, undefined, undefined];\r\n        }\r\n        let s = singleResult as SingleResult;\r\n        let s2 = singleResult2 as SingleResult;\r\n\r\n        this.result.singular = s;\r\n        this.result.plural = s2;\r\n        this.changeSelectedInput();\r\n    }\r\n}\r\n\r\ntype Parameter = 'nouns' | 'verbs' | 'add nouns' | 'add verbs';\r\n\r\ntype SingleResult = [boolean, boolean, boolean] |\r\n[boolean, boolean, boolean, boolean, boolean, boolean] |\r\n[\r\n    [boolean, boolean, boolean],\r\n    [boolean, boolean, boolean],\r\n    [boolean, boolean, boolean],\r\n    [boolean, boolean, boolean],\r\n    [boolean, boolean, boolean],\r\n    [boolean, boolean, boolean],\r\n    [boolean, boolean, boolean],\r\n]\r\ntype Result = {\r\n    singular: SingleResult,\r\n    plural: SingleResult\r\n}\r\n\r\nconst mfORn = /\\^\\^m\\^\\^|\\^\\^f\\^\\^|\\^\\^n\\^\\^/;\r\nconst mfANDn = /\\^\\^m\\^\\^.*\\^\\^f\\^\\^.*\\^\\^n\\^\\^/g;\r\nconst F = /\\^\\^f\\^\\^/g;\r\nconst N = /\\^\\^n\\^\\^/g;\r\n\r\nexport interface InflectedWord {\r\n    singular: [string, string, string, string, string, string] | [string, string, string];\r\n    plural: [string, string, string, string, string, string] | [string, string, string];\r\n    verb: boolean;\r\n    probability: number;\r\n}"],"names":["$5510b14661877595$export$acdc19bbe942e978","latinWord","inflections","germanTranslation","relatedForeignWords","probability","selected","$b9cb672cfbcff24a$var$mfORn","$b9cb672cfbcff24a$var$mfANDn","$b9cb672cfbcff24a$var$F","$b9cb672cfbcff24a$var$N","$543d6d2a56ed7d8d$export$331ff980f0d45cff","id","c","width","height","div","document","createElement","classList","add","style","$543d6d2a56ed7d8d$export$abeb1bd8b6f9168","constructor","vocabulary","wordIndex","enterMode","commandMode","automaticPaddingAdjustment","command","padding","undefined","inputIndex","keys","currentWord","animatedBorderWidth","upgradeNeeded","request","window","indexedDB","open","addEventListener","_","console","error","db","result","objectStoreNames","contains","objectStore","createObjectStore","autoIncrement","createIndex","unique","objectStore2","database","transaction","onerror","req","getAll","onsuccess","length","concat","writeTransaction","objSt","forEach","word","index","put","notImportantRequest_____yet","event","oncomplete","log","modifyDocument","container","querySelector","iconPlaceholder","navbar","body","backgroundImage","setAttribute","innerHTML","addVocabularyIcon","data","insertAdjacentElement","i","appendChild","offsetHeight","buttonLeft","homeButton","icon","contentDocument","buttonRight","type","animation","resizeFunction","clearTimeout","children","value","Object","values","adjustInputWidth","setTimeout","childElementCount","automaticPaddingAnimation","paddingAnimation","split","selectedInput","lastElementChild","remove","changeSelectedInput","buttonLeftFunction","filter","includes","replaceAll","ii","object","hidden","svg","charAt","objects","querySelectorAll","obj","get","idontcare","buttonRightFunction","keyDownFunction","forbiddenCharacters","key","endsWith","startsWith","percentage","parseInt","slice","Math","round","max","min","clientHeight","toLowerCase","w","getBoundingClientRect","parseFloat","getComputedStyle","paddingLeft","paddingRight","aspectRatio","h","defineProperty","borderLeftWidth","borderRightWidth","failureAnimation","borderTopWidth","commandAnimation","idleAnimation","secondTimeout","elem","border","transition","rect","text","animationKeyframes","stroke","offset","rotate","animationOptions","duration","animate","input","marginLeft","borderLeft","innerWidth","willChange","borderBottomWidth","borderStyle","borderColor","paddingTop","paddingBottom","adjustment","cancelable","timeout","interval1","interval2","clearIntervals","newPadding","borderWidth","$tepSize","stepSize","step","timeout1","intervalFunction1","animatedInputIndex","borderTop","clearInterval","firstInterval","firstTimeout","timeoutFunction","bind","removeAll","secondInterval","setInterval","intervalFunction2","removeEventListener","resizeHandler","passive","v","hasChildNodes","marginRight","firstElementChild","param","$543d6d2a56ed7d8d$export$927980128d33596b","containers","showVocabularyIcon","str","span","innerText","navbarClickFunction","renderVocabulary","ignFunction","attribute","preventDefault","stopPropagation","element","target","tagName","parentElement","blur","getElementById","ignWords","cdiv","img","src","append","selectFunction","headerFunction","header","openCursor","cursor","k","updatedData","continue","update","conFunction","unit","nextIndex","l","a","decoration","n_unit","push","transform","clickUnit","Cdiv","div1","div2","div3","div4","autoScaleInput","parentWidth","maxFontSize","innerHeight","fontSize","ctx","getContext","fontProps","fontStyle","fontVariant","fontWeight","fontFamily","join","font","placeholder","measureText","inputs","map","Boolean","i_unit","gridTemplateRows","wordList","inputList","getElementsByClassName","item","onblur","trim","onkeydown","onkeyup","letter","checkboxDivList","indicator","mouseover","clickFunction","deleteWord","e","indexOf","hiddenWords","hWord","display","shownWords","sWord","splice","delete","$543d6d2a56ed7d8d$export$e73a7799776ae73d","totalAttempts","totalPoints","time","backgroundColor","inp","firstChild","movementAnimation","whiteSpace","scrollWidth","clientWidth","trainingIcon","classes","mouseOverFunction","homeDiv","hd","button","inputStyling","offsetY","mode","maxLength","returnLastElement","changeMade","currentWordIndex","replaceWith","floor","fixedAnimation","isNaN","successAnimation","emptyLines","resultStyling","toLocaleString","addition","startNewTrainingRound","lowestDifference","savedProperty","isEmpty","alert","overallProbabilty","randomNumber","random","lastProbability","abs","rn","t","fill","scrollHeight","color","$543d6d2a56ed7d8d$export$82d34e6fb29a1ab3","tabMode","splitMode","tabulator","tabCount","splitPadding","failures","badColor","inflectVocabularyIcon","tabIndex","homeFunction","cancelTabMode","singular","plural","el","deletionButton","genderSplitButton","splitGenders","array","n","j","splitto","count","source","q","inputSubIndex","empty","verb","keydownFunction","p","removeChild","enter","sub","phrase","objectCount","objectsLoaded","tabulatorAnimation","pad","attemptList","solutionList","attempt","solution","compare","replace","m","wrd","sol","iii","compareObjects","Array","isArray","every","search","childNodes","prev","focus","deletionMode","deletionFunction","vocab1","vocab2","wi1","findLastIndex","wi2","findIndex","overallIndexes","tabulatorStyle","tabulatorIndexes","find","indexes","deletionAnimation","from","broken","wi","vocab","resizeBy","previous","ID","subID","at","regex","RegExp","matches","match","start","end","tabbedContent","findMostUsedTabulator","inflectedWord","tabulators","tabs","checkedTabs","tab","sort","b","knownCase","randi","s","validWords","reduce","sum","runningSum","specificationDiv","emptySplit","string1","string2","obj1","obj2","object1","JSON","parse","stringify","object2","direction","boxShadow","animatedInputSubIndex","divs","z","content","o","d","sel","singleResult","singleResult2","$543d6d2a56ed7d8d$export$d12a05a2da93ee73","loaded","version","svgDoc","groups","g","wrapper","createElementNS","parent","parentNode","replaceChild","transformBox","transformOrigin","opacity","idx","anim","delay","finished","then","catch","reduceMotion","matchMedia","warn","getGroup","nodeName","l5","l6","prep","SVG_NS","tailChildren","tailIds","x","tail","tileWidth","ref","l1","getBBox","insertBefore","child","ease","cubicBezier","p0","p1","p2","p3","cy","by","ay","animateTranslateAttr","fromX","toX","performance","now","requestAnimationFrame","fade","usedWAAPI","easing","fadeDelay","beginElement","once","$543d6d2a56ed7d8d$export$7aa98d28c688390a"],"version":3,"file":"index.5e43ba58.js.map"}