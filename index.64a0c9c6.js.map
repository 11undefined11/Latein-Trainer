{"mappings":"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","sources":["<anon>","index.e3b80da5.js","index.ts","src/add-vocabulary.ts","src/home-menu.ts","src/show-vocabulary.ts","src/vocabulary-training.ts","src/inflect-vocabulary.ts"],"sourcesContent":["\nclass $4d277e047e39cff6$export$69a62912f7243a04 {\n    constructor(){\n        this.vocabulary = [];\n        this.wordIndex = 0;\n        this.enterMode = false;\n        const request = window.indexedDB.open('Vocabulary', 1);\n        request.addEventListener('error', (_)=>{\n            console.error('There is an error. Have fun fixing it. Details:' + request.error);\n        });\n        request.addEventListener('success', (_)=>{\n            this.database = request.result;\n            const transaction = this.database.transaction('vocabulary', 'readonly');\n            transaction.onerror = (_)=>console.error(transaction.error);\n            const objectStore = transaction.objectStore('vocabulary');\n            const req = objectStore.getAll();\n            req.onerror = (_)=>console.error(req.error);\n            req.onsuccess = (_)=>{\n                this.vocabulary = req.result;\n                this.wordIndex = this.vocabulary.length;\n            };\n        });\n        request.addEventListener('upgradeneeded', (event)=>{\n            const db = request.result;\n            const objectStore = db.createObjectStore(`vocabulary`, {\n                autoIncrement: true\n            });\n            objectStore.createIndex(\"latinWord\", \"latinWord\", {\n                unique: false\n            });\n            objectStore.createIndex(\"inflections\", \"inflections\", {\n                unique: false\n            });\n            objectStore.createIndex(\"germanTranslation\", \"germanTranslation\", {\n                unique: false\n            });\n            objectStore.createIndex(\"relatedForeignWords\", \"relatedForeignWords\", {\n                unique: false\n            });\n            objectStore.createIndex(\"selected\", \"selected\", {\n                unique: false\n            });\n            objectStore.createIndex(\"probability\", \"probability\", {\n                unique: false\n            });\n            const objectStore2 = db.createObjectStore(`inflected vocabulary`, {\n                autoIncrement: true\n            });\n            objectStore2.createIndex(\"singular\", \"singular\", {\n                unique: false\n            });\n            objectStore2.createIndex(\"plural\", \"plural\", {\n                unique: false\n            });\n            objectStore2.createIndex(\"verb\", \"verb\", {\n                unique: false\n            });\n            objectStore2.createIndex(\"probability\", \"probability\", {\n                unique: false\n            });\n            this.database = request.result;\n        });\n        const notImportantRequest_____yet = window.indexedDB.open('player data', 1);\n        notImportantRequest_____yet.addEventListener('upgradeneeded', (event)=>{\n            const db = notImportantRequest_____yet.result;\n            if (!db.objectStoreNames.contains('versions played')) db.createObjectStore('versions played', {\n                autoIncrement: true\n            });\n            notImportantRequest_____yet.addEventListener('success', (event)=>{\n                const db = notImportantRequest_____yet.result;\n                const transaction = db.transaction('versions played', 'readwrite');\n                const objectStore = transaction.objectStore('versions played');\n                objectStore.add('Beta');\n                transaction.oncomplete = ()=>{\n                    console.log('Data added successfully');\n                };\n                transaction.onerror = (event)=>{\n                    console.error('Transaction error:', notImportantRequest_____yet.error);\n                };\n            });\n            notImportantRequest_____yet.addEventListener('error', (event)=>{\n                console.error('Database error:', notImportantRequest_____yet.error);\n            });\n        });\n    }\n    modifyDocument() {\n        const request = window.indexedDB.open('Vocabulary', 1);\n        request.addEventListener('error', (_)=>{\n            console.error('There is an error. Have fun fixing it. Details:' + request.error);\n        });\n        request.addEventListener('success', (_)=>{\n            this.database = request.result;\n            const transaction = this.database.transaction('vocabulary', 'readonly');\n            transaction.onerror = (_)=>console.error(transaction.error);\n            const objectStore = transaction.objectStore('vocabulary');\n            const req = objectStore.getAll();\n            req.onerror = (_)=>console.error(req.error);\n            req.onsuccess = (_)=>{\n                this.vocabulary = req.result;\n                this.wordIndex = this.vocabulary.length;\n                this.container = document.querySelector('#container');\n                this.iconPlaceholder = document.querySelector('#icon-placeholder');\n                this.navbar = document.querySelector('#navbar');\n                this.container.style.padding = '0';\n                document.body.style.backgroundImage = 'none';\n                document.body.setAttribute('class', '');\n                this.container.setAttribute('class', '');\n                this.iconPlaceholder.setAttribute('class', '');\n                this.navbar.setAttribute('class', '');\n                this.container.innerHTML = '';\n                this.iconPlaceholder.innerHTML = '';\n                this.navbar.innerHTML = '';\n                document.querySelector('body').classList.add('addVocabularyBody');\n                this.iconPlaceholder.classList.add('addVocabularyIconPlaceholder');\n                let addVocabularyIcon = document.createElement('object');\n                addVocabularyIcon.data = './add_vocabulary.svg';\n                addVocabularyIcon.id = 'addVocabularyIcon';\n                this.iconPlaceholder.insertAdjacentElement('beforeend', addVocabularyIcon);\n                this.container.classList.add('addVocabularyContainer');\n                let classes = 'inp bg inp bg inp bg inp'.split(' ');\n                for(let i = 0; i < classes.length; i++){\n                    let div = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`div${i}`, `${classes[i]}`, `100%`, `${100 / classes.length}%`);\n                    this.container.appendChild(div);\n                    div.style.padding = `${0.05 * div.offsetHeight}px`;\n                }\n                this.navbar.classList.add('addVocabularyNavbar');\n                this.buttonLeft = document.createElement('button');\n                this.buttonLeft.classList.add('navButton');\n                this.buttonLeft.innerHTML = '<';\n                this.navbar.appendChild(this.buttonLeft);\n                this.homeButton = document.createElement('button');\n                this.homeButton.classList.add('navButton');\n                let icon = document.createElement('object');\n                icon.classList.add('homeIcon');\n                icon.data = './home.svg';\n                icon.style.height = '9vh';\n                icon.addEventListener('load', (_)=>{\n                    icon.contentDocument.addEventListener('click', (_)=>{\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n                    });\n                });\n                this.homeButton.insertAdjacentElement('beforeend', icon);\n                this.navbar.appendChild(this.homeButton);\n                this.buttonRight = document.createElement('button');\n                this.buttonRight.classList.add('navButton');\n                this.buttonRight.innerHTML = '>';\n                this.navbar.appendChild(this.buttonRight);\n                this.type();\n            };\n        });\n    }\n    type() {\n        let inputs = [\n            0,\n            2,\n            4,\n            6\n        ];\n        let inputIndex = 0;\n        let keys = 0;\n        let selectedInput;\n        let currentWord = {\n            latinWord: '',\n            inflections: '',\n            germanTranslation: '',\n            relatedForeignWords: '',\n            selected: true,\n            probability: 1\n        };\n        for(let i = 0; i < this.container.childElementCount; i += 2)this.container.children[i].addEventListener('click', (_)=>{\n            for(let ii = 0; ii < this.container.childElementCount; ii += 2)if (this.container.children[ii] === this.container.children[i]) {\n                inputIndex = ii / 2;\n                selectedInput = this.container.children[ii];\n                selectedInput.classList.add('selected');\n                keys = selectedInput.childElementCount;\n            } else this.container.children[ii].classList.remove('selected');\n        });\n        this.container.children[inputs[inputIndex]].classList.add('selected');\n        selectedInput = this.container.children[inputs[inputIndex]];\n        let object = selectedInput.appendChild((0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)('temporary'));\n        let width = selectedInput.offsetHeight - (selectedInput.clientHeight - object.clientHeight) - parseFloat(selectedInput.style.padding);\n        this.maxCharacters = Math.floor(window.innerWidth / width);\n        object.remove();\n        this.homeButton.addEventListener('click', (_)=>{\n            (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n            (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n        });\n        this.buttonLeft.addEventListener('mousedown', (_)=>{\n            for(let i = 0; i < this.container.childElementCount; i += 2){\n                this.container.children[i].classList.add('shadow');\n                this.buttonLeft.classList.add('clicked');\n            }\n        });\n        this.buttonRight.addEventListener('mousedown', (_)=>{\n            for(let i = 0; i < this.container.childElementCount; i += 2){\n                this.container.children[i].classList.add('shadow');\n                this.buttonRight.classList.add('clicked');\n            }\n        });\n        this.buttonLeft.addEventListener('mouseout', (_)=>{\n            for(let i = 0; i < this.container.childElementCount; i += 2){\n                this.container.children[i].classList.remove('shadow');\n                this.buttonLeft.classList.remove('clicked');\n            }\n        });\n        this.buttonRight.addEventListener('mouseout', (_)=>{\n            for(let i = 0; i < this.container.childElementCount; i += 2){\n                this.container.children[i].classList.remove('shadow');\n                this.buttonRight.classList.remove('clicked');\n            }\n        });\n        this.buttonLeft.addEventListener('mouseup', (_)=>{\n            if (this.vocabulary[this.wordIndex - 1]) {\n                if (Object.values(currentWord).filter((value)=>value === '').length === 4 && this.wordIndex === this.vocabulary.length) {\n                    for(let i = 0; i < this.container.childElementCount; i += 2)this.container.children[i].classList.remove('shadow');\n                    this.wordIndex--;\n                    currentWord = this.vocabulary[this.wordIndex];\n                    for(let i = 0; i < this.container.childElementCount; i += 2){\n                        let value = Object.values(currentWord)[i / 2];\n                        this.container.children[i].innerHTML = '';\n                        for(let ii = 0; ii < value.length; ii++){\n                            let object = document.createElement('object');\n                            object.data = './keys/OG_T.svg';\n                            object.id = `key${ii}-inp${i / 2}`;\n                            object.style.height = `100%`;\n                            this.container.children[i].insertAdjacentElement('beforeend', object);\n                            object.addEventListener('load', (_)=>{\n                                let svg = object.contentDocument;\n                                svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\n                            });\n                        }\n                    }\n                } else {\n                    this.vocabulary[this.wordIndex] = currentWord;\n                    const transaction = this.database.transaction(`vocabulary`, 'readwrite');\n                    transaction.onerror = (_)=>console.error(transaction.error);\n                    const objectStore = transaction.objectStore(`vocabulary`);\n                    const req = objectStore.get(this.wordIndex);\n                    req.onerror = (_)=>console.error(req.error);\n                    req.onsuccess = (_)=>{\n                        for(let i = 0; i < this.container.childElementCount; i += 2)this.container.children[i].classList.remove('shadow');\n                        const idontcare = objectStore.put(currentWord, this.wordIndex + 1);\n                        idontcare.onerror = (_)=>console.error(idontcare.error);\n                        this.wordIndex--;\n                        currentWord = this.vocabulary[this.wordIndex];\n                        for(let i = 0; i < this.container.childElementCount; i += 2){\n                            let value = Object.values(currentWord)[i / 2];\n                            this.container.children[i].innerHTML = '';\n                            for(let ii = 0; ii < value.length; ii++){\n                                let object = document.createElement('object');\n                                object.data = './keys/OG_T.svg';\n                                object.id = `key${ii}-inp${i / 2}`;\n                                object.style.height = `100%`;\n                                this.container.children[i].insertAdjacentElement('beforeend', object);\n                                object.addEventListener('load', (_)=>{\n                                    let svg = object.contentDocument;\n                                    svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\n                                });\n                            }\n                        }\n                    };\n                }\n            }\n        });\n        this.buttonRight.addEventListener('mouseup', (_)=>{\n            this.buttonRight.classList.remove('clicked');\n            if (!this.vocabulary[this.wordIndex + 1]) {\n                this.vocabulary[this.wordIndex] = currentWord;\n                const transaction = this.database.transaction(`vocabulary`, 'readwrite');\n                transaction.onerror = (_)=>console.error(transaction.error);\n                const objectStore = transaction.objectStore(`vocabulary`);\n                const req = objectStore.put(currentWord, this.wordIndex + 1);\n                req.onerror = (_)=>console.error(req.error);\n                transaction.oncomplete = (_)=>{\n                    for(let i = 0; i < this.container.childElementCount; i += 2)this.container.children[i].classList.remove('shadow');\n                    this.wordIndex++;\n                    keys = 0;\n                    currentWord = {\n                        latinWord: '',\n                        inflections: '',\n                        germanTranslation: '',\n                        relatedForeignWords: '',\n                        selected: true,\n                        probability: 1\n                    };\n                    for(let i = 0; i < this.container.childElementCount; i += 2){\n                        this.container.children[i].innerHTML = '';\n                        inputIndex = 0;\n                        selectedInput = this.container.children[0];\n                        selectedInput.classList.add('selected');\n                        if (i != 0) this.container.children[i].classList.remove('selected');\n                    }\n                };\n            } else {\n                this.vocabulary[this.wordIndex] = currentWord;\n                for(let i = 0; i < this.container.childElementCount; i += 2)this.container.children[i].classList.remove('shadow');\n                const transaction = this.database.transaction(`vocabulary`, 'readwrite');\n                transaction.onerror = (_)=>console.error(transaction.error);\n                const objectStore = transaction.objectStore(`vocabulary`);\n                const req = objectStore.get(this.wordIndex);\n                req.onerror = (_)=>console.error(req.error);\n                req.onsuccess = (_)=>{\n                    const idontcare = objectStore.put(currentWord, this.wordIndex + 1);\n                    idontcare.onerror = (_)=>console.log(idontcare.error);\n                    this.wordIndex++;\n                    currentWord = this.vocabulary[this.wordIndex];\n                    for(let i = 0; i < this.container.childElementCount; i += 2){\n                        let value = Object.values(currentWord)[i / 2];\n                        this.container.children[i].innerHTML = '';\n                        for(let ii = 0; ii < value.length; ii++){\n                            let object = document.createElement('object');\n                            object.data = './keys/OG_T.svg';\n                            object.id = `key${ii}-inp${i / 2}`;\n                            object.style.height = `100%`;\n                            this.container.children[i].insertAdjacentElement('beforeend', object);\n                            object.addEventListener('load', (_)=>{\n                                let svg = object.contentDocument;\n                                svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\n                            });\n                        }\n                    }\n                };\n            }\n        });\n        this.keyDownFunction = (event)=>{\n            let forbiddenCharacters = [\n                '<',\n                \"\\xb4\",\n                '`',\n                '^'\n            ];\n            if (event.key === 'Backspace') {\n                if (selectedInput.lastElementChild) {\n                    selectedInput.lastElementChild.remove();\n                    Object.defineProperty(currentWord, Object.keys(currentWord)[inputIndex], {\n                        value: Object.values(currentWord)[inputIndex].slice(0, keys - 1)\n                    });\n                    keys--;\n                }\n                return;\n            } else if (event.key === 'Enter' || event.key === 'ArrowDown') {\n                if (inputIndex + 1 < 4) {\n                    inputIndex++;\n                    selectedInput = this.container.children[inputs[inputIndex]];\n                    for(let i = 0; i < this.container.childElementCount; i++)if (this.container.children[i] != selectedInput) this.container.children[i].classList.remove('selected');\n                    else {\n                        selectedInput.classList.add('selected');\n                        keys = selectedInput.childElementCount;\n                    }\n                } else {\n                    for(let i = 0; i < this.container.childElementCount; i += 2)this.container.children[i].classList.add('shadow');\n                    if (this.enterMode) {\n                        this.buttonRight.classList.remove('clicked');\n                        if (!this.vocabulary[this.wordIndex + 1]) {\n                            this.vocabulary[this.wordIndex] = currentWord;\n                            const transaction = this.database.transaction(`vocabulary`, 'readwrite');\n                            transaction.onerror = (_)=>console.error(transaction.error);\n                            const objectStore = transaction.objectStore(`vocabulary`);\n                            const req = objectStore.put(currentWord, this.wordIndex + 1);\n                            req.onerror = (_)=>console.error(req.error);\n                            transaction.oncomplete = (_)=>{\n                                for(let i = 0; i < this.container.childElementCount; i += 2)this.container.children[i].classList.remove('shadow');\n                                this.wordIndex++;\n                                keys = 0;\n                                currentWord = {\n                                    latinWord: '',\n                                    inflections: '',\n                                    germanTranslation: '',\n                                    relatedForeignWords: '',\n                                    selected: true,\n                                    probability: 1\n                                };\n                                for(let i = 0; i < this.container.childElementCount; i += 2){\n                                    this.container.children[i].innerHTML = '';\n                                    inputIndex = 0;\n                                    selectedInput = this.container.children[0];\n                                    selectedInput.classList.add('selected');\n                                    if (i != 0) this.container.children[i].classList.remove('selected');\n                                }\n                            };\n                        } else {\n                            this.vocabulary[this.wordIndex] = currentWord;\n                            for(let i = 0; i < this.container.childElementCount; i += 2)this.container.children[i].classList.remove('shadow');\n                            const transaction = this.database.transaction(`vocabulary`, 'readwrite');\n                            transaction.onerror = (_)=>console.error(transaction.error);\n                            const objectStore = transaction.objectStore(`vocabulary`);\n                            const req = objectStore.get(this.wordIndex);\n                            req.onerror = (_)=>console.error(req.error);\n                            req.onsuccess = (_)=>{\n                                const idontcare = objectStore.put(currentWord, this.wordIndex + 1);\n                                idontcare.onerror = (_)=>console.log(idontcare.error);\n                                this.wordIndex++;\n                                currentWord = this.vocabulary[this.wordIndex];\n                                for(let i = 0; i < this.container.childElementCount; i += 2){\n                                    let value = Object.values(currentWord)[i / 2];\n                                    this.container.children[i].innerHTML = '';\n                                    for(let ii = 0; ii < value.length; ii++){\n                                        let object = document.createElement('object');\n                                        object.data = './keys/OG_T.svg';\n                                        object.id = `key${ii}-inp${i / 2}`;\n                                        object.style.height = `100%`;\n                                        this.container.children[i].insertAdjacentElement('beforeend', object);\n                                        object.addEventListener('load', (_)=>{\n                                            let svg = object.contentDocument;\n                                            svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\n                                        });\n                                    }\n                                }\n                            };\n                        }\n                        this.enterMode = false;\n                    } else this.enterMode = true;\n                    const transaction = this.database.transaction(`vocabulary`, 'readwrite');\n                    transaction.onerror = (_)=>console.error(transaction.error);\n                    const objectStore = transaction.objectStore(`vocabulary`);\n                    const req = objectStore.put(currentWord, this.wordIndex + 1);\n                    req.onerror = (_)=>console.error(req.error);\n                    setTimeout((_)=>{\n                        for(let i = 0; i < this.container.childElementCount; i += 2)this.container.children[i].classList.remove('shadow');\n                    }, 250);\n                }\n                return;\n            } else if (event.key === 'ArrowUp') {\n                if (inputIndex > 0) inputIndex--;\n                selectedInput = this.container.children[inputs[inputIndex]];\n                for(let i = 0; i < this.container.childElementCount; i++)if (this.container.children[i] != selectedInput) this.container.children[i].classList.remove('selected');\n                else {\n                    selectedInput.classList.add('selected');\n                    keys = selectedInput.childElementCount;\n                }\n                return;\n            } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) return;\n            let object = document.createElement('object');\n            object.data = './keys/OG_T.svg';\n            object.id = `key${keys}-inp${inputIndex}`;\n            object.style.height = `100%`;\n            selectedInput.insertAdjacentElement('beforeend', object);\n            let width = object.clientHeight;\n            object.hidden = true;\n            object.addEventListener('load', (_)=>{\n                if (keys >= Math.floor(window.innerWidth / width)) {\n                    object.remove();\n                    for(let i = 0; i < keys; i++)this.failureAnimation(selectedInput.children[i]);\n                    return;\n                }\n                object.hidden = false;\n                let svg = object.contentDocument;\n                svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\n                Object.defineProperty(currentWord, Object.keys(currentWord)[inputIndex], {\n                    value: Object.values(currentWord)[inputIndex] + event.key.charAt(0)\n                });\n                keys++;\n                this.idleAnimation(object);\n            });\n        };\n        document.addEventListener('keydown', this.keyDownFunction);\n    }\n    failureAnimation(object) {\n        if (!object) return;\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = [\n            {\n                stroke: \"rgb(186, 2, 70)\",\n                offset: 0.025\n            },\n            {\n                rotate: \"10deg z\",\n                offset: 0.25\n            },\n            {\n                rotate: \"0deg z\",\n                offset: 0.5\n            },\n            {\n                rotate: \"-10deg z\",\n                offset: 0.75,\n                stroke: \"rgb(186, 2, 70)\"\n            },\n            {\n                stroke: \"#eeeeeeff\",\n                offset: 0.925\n            },\n            {\n                rotate: \"0deg z\",\n                offset: 1\n            }\n        ];\n        let animationOptions = {\n            duration: 500\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    idleAnimation(object) {\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#8f8f8f',\n                '#fff',\n                '#eeeeeeff'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 250\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n}\n\n\n\nclass $0605b9bc60daa790$export$70f2439247e54615 {\n    constructor(){\n        this.command = '';\n        this.modifyDocument();\n    }\n    modifyDocument() {\n        this.resizeFunction = ()=>this.movementAnimation();\n        window.addEventListener('resize', this.resizeFunction);\n        this.input = document.querySelector('#container');\n        this.iconPlaceholder = document.querySelector('#icon-placeholder');\n        this.navbar = document.querySelector('#navbar');\n        if (document.querySelector('.homeDiv')) {\n            let homeDiv = document.querySelector('.homeDiv');\n            homeDiv.remove();\n        }\n        document.body.style.backgroundImage = 'none';\n        document.body.style.backgroundImage = 'linear-gradient(180deg, #140063 0%, #06011b 65%, #06011b 77%, #140063 100%)';\n        document.body.setAttribute('class', '');\n        this.input.setAttribute('class', '');\n        this.iconPlaceholder.setAttribute('class', '');\n        this.navbar.setAttribute('class', '');\n        this.input.innerHTML = '';\n        this.iconPlaceholder.innerHTML = '';\n        this.navbar.innerHTML = '';\n        let icon = document.createElement('object');\n        icon.data = './icon.svg';\n        icon.id = 'icon';\n        this.iconPlaceholder.insertAdjacentElement('beforeend', icon);\n        let version = document.createElement('object');\n        version.data = './version.svg';\n        version.id = 'version';\n        this.iconPlaceholder.insertAdjacentElement('beforeend', version);\n        document.body.classList.add('homeBody');\n        this.input.classList.add('homeInput');\n        this.iconPlaceholder.classList.add('homeIconPlaceholder');\n        this.navbar.classList.add('homeNavbar');\n        this.type();\n    }\n    type() {\n        let keys = 0;\n        this.keyDownFunction = (event)=>{\n            let forbiddenCharacters = [\n                '<',\n                \"\\xb4\",\n                '`',\n                '^'\n            ];\n            if (event.key === 'Backspace' && this.input.lastElementChild) {\n                this.input.lastElementChild.remove();\n                this.movementAnimation();\n                this.command = this.command.slice(0, this.command.length - 1);\n                keys--;\n                return;\n            } else if (event.key === 'Enter') {\n                switch(this.command){\n                    case 'add vocabulary':\n                    case 'add':\n                    case 'add vocabulary':\n                    case 'neu':\n                    case \"hinzuf\\xfcgen\":\n                    case 'neues wort':\n                    case 'neues Wort':\n                    case \"Vokabeln hinzuf\\xfcgen\":\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).modifyDocument();\n                        break;\n                    case 'show vocabulary':\n                    case 'show':\n                    case 'tabelle':\n                    case 'Tabelle':\n                    case 'Vokabeln anzeigen':\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$927980128d33596b).modifyDocument();\n                        break;\n                    case 'training':\n                    case 'Training':\n                    case 'trainer':\n                    case 'Training':\n                    case \"\\xfcben\":\n                    case \"\\xdcben\":\n                    case 'vocabuary training':\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$e73a7799776ae73d).modifyDocument();\n                        break;\n                    case 'declinations':\n                    case 'deklinationen':\n                    case 'Deklinationen':\n                    case 'conj':\n                    case 'add declinations':\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$82d34e6fb29a1ab3).modifyDocument('add nouns');\n                        break;\n                    case 'deklinieren':\n                    case 'deklinationstraining':\n                    case 'Deklinationstraining':\n                    case 'decline nouns':\n                    case 'decline':\n                    case 'ct':\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$82d34e6fb29a1ab3).modifyDocument('nouns');\n                        break;\n                    case 'v':\n                    case 'conjugations':\n                    case 'konjugationen':\n                    case 'Konjugationen':\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$82d34e6fb29a1ab3).modifyDocument('add verbs');\n                        break;\n                    case 'conjugate':\n                    case 'konjugieren':\n                    case 'konjugationstraining':\n                    case 'Konjugationstraining':\n                    case 'vt':\n                        (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                        (0, $543d6d2a56ed7d8d$export$82d34e6fb29a1ab3).modifyDocument('verbs');\n                        break;\n                    default:\n                        break;\n                }\n                this.command = '';\n                keys = 0;\n                this.input.innerHTML = '';\n                return;\n            } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) return;\n            let object = document.createElement('object');\n            object.data = './keys/OG_T.svg';\n            object.id = `key${keys}`;\n            object.style.height = `100%`;\n            this.input.insertAdjacentElement('beforeend', object);\n            let width = object.clientHeight;\n            object.hidden = true;\n            object.addEventListener('load', (_)=>{\n                if (keys >= Math.floor(window.innerWidth / width)) {\n                    object.remove();\n                    for(let i = 0; i < keys; i++)this.failureAnimation(this.input.children[i]);\n                    return;\n                }\n                object.hidden = false;\n                let svg = object.contentDocument;\n                svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\n                this.command += event.key;\n                keys++;\n                this.idleAnimation(object);\n                this.movementAnimation();\n            });\n        };\n        document.addEventListener('keydown', this.keyDownFunction);\n    }\n    idleAnimation(object) {\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#8f8f8f',\n                '#fff',\n                '#eeeeeeff'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 250\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    failureAnimation(object) {\n        if (!object) return;\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = [\n            {\n                stroke: \"rgb(186, 2, 70)\",\n                offset: 0.025\n            },\n            {\n                rotate: \"10deg z\",\n                offset: 0.25\n            },\n            {\n                rotate: \"0deg z\",\n                offset: 0.5\n            },\n            {\n                rotate: \"-10deg z\",\n                offset: 0.75,\n                stroke: \"rgb(186, 2, 70)\"\n            },\n            {\n                stroke: \"#eeeeeeff\",\n                offset: 0.925\n            },\n            {\n                rotate: \"0deg z\",\n                offset: 1\n            }\n        ];\n        let animationOptions = {\n            duration: 500\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    movementAnimation() {\n        if (!this.input) return;\n        let object = this.input.firstChild;\n        let inp = this.input;\n        if (object) {\n            if (inp.childElementCount > 1) inp.style.transition = 'padding 250ms';\n            inp.style.paddingLeft = `${(window.innerWidth - inp.childElementCount * object.clientHeight) / 2}px`;\n        }\n    }\n}\n\n\n\nclass $5e3b93ee4c6a7549$export$d5e53f8bbb738c78 {\n    constructor(){}\n    modifyDocument() {\n        const request = window.indexedDB.open('Vocabulary', 1);\n        request.addEventListener('error', (_)=>{\n            this.vocabulary = [];\n            this.modifyDocument();\n            console.error(request.error);\n        });\n        request.addEventListener('success', (_)=>{\n            this.database = request.result;\n            const transaction = this.database.transaction('vocabulary', 'readonly');\n            transaction.onerror = (_)=>console.error(transaction.error);\n            const objectStore = transaction.objectStore('vocabulary');\n            const req = objectStore.getAll();\n            req.onerror = (_)=>console.error(req.error);\n            req.onsuccess = (_)=>{\n                this.vocabulary = req.result;\n                this.container = document.querySelector('#container');\n                this.iconPlaceholder = document.querySelector('#icon-placeholder');\n                this.navbar = document.querySelector('#navbar');\n                this.container.style.padding = '0';\n                document.body.style.backgroundImage = 'none';\n                document.body.setAttribute('class', '');\n                this.container.setAttribute('class', '');\n                this.iconPlaceholder.setAttribute('class', '');\n                this.navbar.setAttribute('class', '');\n                this.container.innerHTML = '';\n                this.iconPlaceholder.innerHTML = '';\n                this.navbar.innerHTML = '';\n                let showVocabularyIcon = document.createElement('object');\n                showVocabularyIcon.data = './show_vocabulary.svg';\n                showVocabularyIcon.id = 'showVocabularyIcon';\n                this.iconPlaceholder.insertAdjacentElement('beforeend', showVocabularyIcon);\n                for(let i = 0, str = 'HOME MENU'; i < str.length; i++){\n                    let span = document.createElement('span');\n                    span.innerText = str[i];\n                    this.navbar.insertAdjacentElement('beforeend', span);\n                }\n                let navbarClickFunction = (_)=>{\n                    (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                    this.navbar.removeEventListener('click', navbarClickFunction);\n                    (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n                };\n                this.navbar.addEventListener('click', navbarClickFunction);\n                document.body.classList.add('showVocabularyBody');\n                this.container.classList.add('showVocabularyContainer');\n                this.iconPlaceholder.classList.add('showVocabularyIconPlaceholder');\n                this.navbar.classList.add('showVocabularyNavbar');\n                let str = '';\n                this.vocabulary.forEach((word, i)=>{\n                    str += 'auto ';\n                    let Cdiv = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`checkboxDiv${i}`, 'word');\n                    let div1 = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`latinWord${i}`, 'word');\n                    let div2 = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`inflections${i}`, 'word');\n                    let div3 = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`germanTranslation${i}`, 'word');\n                    let div4 = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`relatedForeignWords${i}`, 'word');\n                    Cdiv.classList.add('cdiv');\n                    Cdiv.innerHTML = `<input type=\"checkbox\" id=\"C${i}\" class=\"checkbox\" ${word.selected ? \"checked\" : ''}></input>`;\n                    div1.innerHTML = `<input type=\"text\" id=\"0-${i}\" class=\"edit\" value=\"${word.latinWord === '' ? ' ' : word.latinWord}\" maxlength=\"${word.latinWord.length > (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).maxCharacters ? word.latinWord.length : (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).maxCharacters}\"></input>`;\n                    div2.innerHTML = `<input type=\"text\" id=\"1-${i}\" class=\"edit\" value=\"${word.inflections === '' ? ' ' : word.inflections}\" maxlength=\"${word.inflections.length > (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).maxCharacters ? word.inflections.length : (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).maxCharacters}\"></input>`;\n                    div3.innerHTML = `<input type=\"text\" id=\"2-${i}\" class=\"edit\" value=\"${word.germanTranslation === '' ? ' ' : word.germanTranslation}\" maxlength=\"${word.germanTranslation.length > (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).maxCharacters ? word.germanTranslation.length : (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).maxCharacters}\"></input>`;\n                    div4.innerHTML = `<input type=\"text\" id=\"3-${i}\" class=\"edit\" value=\"${word.relatedForeignWords === '' ? ' ' : word.relatedForeignWords}\" maxlength=\"${word.relatedForeignWords.length > (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).maxCharacters ? word.relatedForeignWords.length : (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).maxCharacters}\"></input>`;\n                    this.container.append(Cdiv, div1, div2, div3, div4);\n                });\n                this.container.style.gridTemplateRows = str;\n                let inputList = document.getElementsByClassName('edit');\n                for(let i = 0; i < inputList.length; i++){\n                    let input = inputList.item(i);\n                    input.size = input.maxLength;\n                    input.onblur = (_)=>{\n                        const transaction = this.database.transaction('vocabulary', 'readwrite');\n                        transaction.onerror = (_)=>console.error(transaction.error);\n                        const objectStore = transaction.objectStore('vocabulary');\n                        const request = objectStore.get(parseInt(input.id.split('-')[1]) + 1);\n                        request.onerror = (_)=>console.error(request.error);\n                        request.onsuccess = (_)=>{\n                            const data = request.result;\n                            Object.defineProperty(data, Object.keys(data)[parseInt(input.id.split('-')[0])], {\n                                value: input.value.trim()\n                            });\n                            const req = objectStore.put(data, parseInt(input.id.split('-')[1]) + 1);\n                            req.onerror = (_)=>console.error(req.error);\n                        };\n                    };\n                    input.onkeydown = (event)=>{\n                        if (event.key === 'Enter') input.blur();\n                    };\n                    input.onkeyup = (_)=>{\n                        if (input.value.includes('^')) {\n                            let str = '';\n                            input.value.split('').forEach((letter)=>{\n                                if (letter != '^') str += letter;\n                            });\n                            input.value = str;\n                        }\n                    };\n                }\n                let checkboxList = document.getElementsByClassName('checkbox');\n                for(let i = 0; i < checkboxList.length; i++){\n                    let input = checkboxList.item(i);\n                    input.addEventListener('change', (_)=>{\n                        const transaction = this.database.transaction('vocabulary', 'readwrite');\n                        transaction.onerror = (_)=>console.error(transaction.error);\n                        const objectStore = transaction.objectStore('vocabulary');\n                        const request = objectStore.get(parseInt(input.id.slice(1)) + 1);\n                        request.onerror = (_)=>console.error(request.error);\n                        request.onsuccess = (_)=>{\n                            const data = request.result;\n                            Object.defineProperty(data, 'selected', {\n                                value: input.checked\n                            });\n                            const req = objectStore.put(data, parseInt(input.id.slice(1)) + 1);\n                            req.onerror = (_)=>console.error(req.error);\n                            this.vocabulary[i].selected = this.vocabulary[i].selected ? false : true;\n                        };\n                    });\n                }\n                let checkboxDivList = document.getElementsByClassName('cdiv');\n                for(let i = 0; i < checkboxDivList.length; i++){\n                    let element = checkboxDivList[i];\n                    let mouseover = false;\n                    let saved;\n                    let clickFunction = (event)=>{\n                        let cdiv = event.target;\n                        let index = parseInt(cdiv.id.slice(11));\n                        this.deleteWord(index);\n                    };\n                    let indicator;\n                    element.addEventListener('mousemove', (event)=>{\n                        if (event.target === element.querySelector('input')) {\n                            mouseover = false;\n                            element.classList.remove('mouseon');\n                            clearTimeout(indicator);\n                            element.removeEventListener('click', clickFunction);\n                            document.querySelectorAll('.danger').forEach((e)=>e.classList.remove('danger'));\n                        } else if (!mouseover) {\n                            mouseover = true;\n                            saved = element.innerHTML;\n                            element.classList.add('mouseon');\n                            indicator = setTimeout((_)=>{\n                                if (mouseover) {\n                                    element.innerHTML = '<span>X</span>';\n                                    element.addEventListener('click', clickFunction);\n                                    document.querySelector(`#latinWord${i}`).classList.add('danger');\n                                    document.querySelector(`#inflections${i}`).classList.add('danger');\n                                    document.querySelector(`#germanTranslation${i}`).classList.add('danger');\n                                    document.querySelector(`#relatedForeignWords${i}`).classList.add('danger');\n                                }\n                            }, 1500);\n                        }\n                    });\n                    element.addEventListener('mouseleave', (_)=>{\n                        mouseover = false;\n                        element.classList.remove('mouseon');\n                        clearTimeout(indicator);\n                        document.querySelectorAll('.danger').forEach((e)=>e.classList.remove('danger'));\n                        if (saved && !element.querySelector('input')) {\n                            element.innerHTML = saved;\n                            let input = element.querySelector('input');\n                            input.checked = this.vocabulary[i].selected;\n                            input.addEventListener('change', (_)=>{\n                                const transaction = this.database.transaction('vocabulary', 'readwrite');\n                                transaction.onerror = (_)=>console.error(transaction.error);\n                                const objectStore = transaction.objectStore('vocabulary');\n                                const request = objectStore.get(parseInt(input.id[input.id.length - 1]) + 1);\n                                request.onerror = (_)=>console.error(request.error);\n                                request.onsuccess = (_)=>{\n                                    const data = request.result;\n                                    Object.defineProperty(data, 'selected', {\n                                        value: input.checked\n                                    });\n                                    const req = objectStore.put(data, parseInt(input.id[input.id.length - 1]) + 1);\n                                    req.onerror = (_)=>console.error(req.error);\n                                    this.vocabulary[i].selected = input.checked;\n                                };\n                            });\n                        }\n                        element.removeEventListener('click', clickFunction);\n                    });\n                }\n            };\n        });\n    }\n    deleteWord(key) {\n        this.vocabulary.splice(key, 1);\n        const transaction = this.database.transaction('vocabulary', 'readwrite');\n        const objectStore = transaction.objectStore('vocabulary');\n        const request = objectStore.openCursor();\n        request.onsuccess = (_)=>{\n            let cursor = request.result;\n            if (cursor) {\n                let k = cursor.key;\n                let word = this.vocabulary[k - 1];\n                if (word) {\n                    const updatedData = cursor.value;\n                    updatedData.latinWord = word.latinWord;\n                    updatedData.inflections = word.inflections;\n                    updatedData.germanTranslation = word.germanTranslation;\n                    updatedData.relatedForeignWords = word.relatedForeignWords;\n                    updatedData.selected = word.selected;\n                    updatedData.probability = word.probability;\n                    cursor.update(updatedData);\n                    cursor.continue();\n                } else {\n                    cursor.delete();\n                    (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                    this.modifyDocument();\n                }\n            }\n        };\n    }\n}\n\n\n\nclass $b6fe10105ad30798$export$564a2d2b8c542ee9 {\n    constructor(){\n        this.totalAttempts = 0;\n        this.totalPoints = 0;\n        this.commandMode = false;\n        this.command = '';\n        this.inputIndex = 0;\n        this.time = 0;\n        this.round = 0;\n        this.backgroundColor = '#140063';\n        setInterval((_)=>this.time += 1, 1);\n        this.resizeFunction = (_)=>{\n            let inputs = document.querySelectorAll('.inp');\n            inputs.forEach((inp)=>{\n                if (inp.firstChild && !inp.classList.contains('not-editable')) this.movementAnimation();\n            });\n        };\n    }\n    modifyDocument() {\n        window.addEventListener('resize', this.resizeFunction);\n        const request = window.indexedDB.open('Vocabulary', 1);\n        request.addEventListener('error', (_)=>{\n            this.vocabulary = [];\n            this.modifyDocument();\n            console.error(request.error);\n        });\n        request.addEventListener('success', (_)=>{\n            this.database = request.result;\n            const transaction = this.database.transaction('vocabulary', 'readonly');\n            transaction.onerror = (_)=>console.error(transaction.error);\n            const objectStore = transaction.objectStore('vocabulary');\n            const req = objectStore.getAll();\n            req.onerror = (_)=>console.error(req.error);\n            req.onsuccess = (_)=>{\n                this.vocabulary = req.result;\n                this.backgroundColor = '#140063';\n                this.container = document.querySelector('#container');\n                this.iconPlaceholder = document.querySelector('#icon-placeholder');\n                this.navbar = document.querySelector('#navbar');\n                this.container.style.padding = '0';\n                document.body.style.backgroundImage = 'none';\n                document.body.setAttribute('class', '');\n                this.container.setAttribute('class', '');\n                this.iconPlaceholder.setAttribute('class', '');\n                this.navbar.setAttribute('class', '');\n                this.container.innerHTML = '';\n                this.iconPlaceholder.innerHTML = '';\n                this.navbar.innerHTML = '';\n                let trainingIcon = document.createElement('object');\n                trainingIcon.data = './training.svg';\n                trainingIcon.id = 'trainingIcon';\n                this.iconPlaceholder.insertAdjacentElement('beforeend', trainingIcon);\n                document.body.classList.add(\"trainingBody\");\n                this.container.classList.add(\"trainingContainer\");\n                this.iconPlaceholder.classList.add(\"trainingIconPlaceholder\");\n                this.navbar.classList.add(\"trainingNavbar\");\n                let classes = 'inp bg inp bg inp bg inp'.split(' ');\n                for(let i = 0; i < classes.length; i++){\n                    let div = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`div${i}`, `${classes[i]}`, `100%`, `${100 / classes.length}%`);\n                    div.classList.add('t');\n                    this.container.appendChild(div);\n                    div.style.padding = `${0.05 * div.offsetHeight}px`;\n                }\n                let height;\n                this.mouseOverFunction = (event)=>{\n                    let homeDiv = document.querySelector('.homeDiv');\n                    if (homeDiv && homeDiv != event.target && event.target != this.navbar && !(document.querySelector('.homeButton') && event.target === document.querySelector('.homeButton')) && event.target != document.querySelector('.homeIcon')) {\n                        homeDiv.classList.remove('moveUp');\n                        setTimeout((_)=>homeDiv.classList.add('moveDown'), 0);\n                    } else if (!(event.target != this.navbar && !(document.querySelector('.homeButton') && event.target === document.querySelector('.homeButton')) && event.target != document.querySelector('.homeIcon'))) {\n                        if (!homeDiv.classList.contains('moveUp')) {\n                            homeDiv.classList.remove('moveDown');\n                            homeDiv.classList.add('moveUp');\n                        }\n                    }\n                    if (!homeDiv) {\n                        let hd = document.createElement('div');\n                        hd.setAttribute('class', 'homeDiv');\n                        this.navbar.insertAdjacentElement('afterend', hd);\n                        let button = document.createElement('div');\n                        button.classList.add('homeButton');\n                        let icon = document.createElement('object');\n                        icon.classList.add('homeIcon');\n                        icon.data = './home.svg';\n                        icon.style.height = '6vh';\n                        hd.insertAdjacentElement('beforeend', button);\n                        button.insertAdjacentElement('beforeend', icon);\n                        let clickFunction = (_)=>{\n                            (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                            (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n                            return;\n                        };\n                        button.addEventListener('click', clickFunction);\n                        icon.addEventListener('load', (_)=>{\n                            icon.contentDocument.addEventListener('click', clickFunction);\n                        });\n                    }\n                };\n                document.addEventListener('mouseover', this.mouseOverFunction);\n                this.type();\n            };\n        });\n    }\n    type() {\n        let inputs = [\n            0,\n            2,\n            4,\n            6\n        ];\n        let keys = 0;\n        for(let i = 0; i < this.container.childElementCount; i += 2)this.container.children[i].addEventListener('click', (_)=>{\n            this.inputIndex = i / 2;\n            this.selectedInput = this.container.children[i];\n            this.inputStyling();\n            keys = this.selectedInput.childElementCount;\n        });\n        for(let i = 1; i < this.container.childElementCount; i += 2)this.container.children[i].addEventListener('click', (event)=>{\n            if (event.offsetY > this.container.children[i].clientHeight / 2) {\n                this.inputIndex = (i + 1) / 2;\n                this.selectedInput = this.container.children[i + 1];\n                this.inputStyling();\n                keys = this.selectedInput.childElementCount;\n            } else {\n                this.inputIndex = (i - 1) / 2;\n                this.selectedInput = this.container.children[i - 1];\n                this.inputStyling();\n                keys = this.selectedInput.childElementCount;\n            }\n        });\n        this.selectedInput = this.container.children[inputs[this.inputIndex]];\n        this.inputStyling();\n        this.keyDownFunction = (event)=>{\n            let mode = this.commandMode;\n            let forbiddenCharacters = [\n                '<',\n                \"\\xb4\",\n                '`',\n                '^'\n            ];\n            if (this.commandMode) {\n                if (event.key === 'Enter') {\n                    switch(this.command){\n                        case '#hint':\n                        case '#t':\n                        case '#tip':\n                        case '#tipp':\n                        case '#Tipp':\n                            this.command.split('').forEach((_)=>{\n                                this.returnLastElement(this.selectedInput).remove();\n                                keys--;\n                                if (this.selectedInput.firstChild) this.movementAnimation();\n                            });\n                            let object = document.createElement('object');\n                            object.data = './keys/OG_T.svg';\n                            object.id = `key${keys}-inp${this.inputIndex}`;\n                            object.style.height = `100%`;\n                            let width = object.clientHeight;\n                            let index = 0;\n                            let word = Object.values(this.currentWord)[this.inputIndex];\n                            let str = '';\n                            let maxLength;\n                            let changeMade = false;\n                            for(let i = 0; i < word.length; i++)if (word[i] != Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex][i] && !changeMade) {\n                                index = i;\n                                if (this.vocabulary[this.currentWordIndex][Object.keys(this.vocabulary[this.currentWordIndex])[this.inputIndex]][index]) str += this.vocabulary[this.currentWordIndex][Object.keys(this.vocabulary[this.currentWordIndex])[this.inputIndex]][index];\n                                else maxLength = word.length - 1;\n                                changeMade = true;\n                            } else str += word[i];\n                            this.currentWord[Object.keys(this.currentWord)[this.inputIndex]] = maxLength ? str.slice(0, maxLength) : str;\n                            word = maxLength ? str.slice(0, maxLength) : str;\n                            if (maxLength) {\n                                this.returnLastElement(this.selectedInput).remove();\n                                this.movementAnimation();\n                                keys--;\n                                mode = false;\n                                this.commandMode = false;\n                                break;\n                            }\n                            if (!changeMade) {\n                                index = word.length;\n                                if (word.length < Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex].length) this.currentWord[Object.keys(this.currentWord)[this.inputIndex]] += Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex][index];\n                                else {\n                                    mode = false;\n                                    this.commandMode = false;\n                                    break;\n                                }\n                            }\n                            if (word.length > 0 && index < word.length) {\n                                this.selectedInput.children[index].replaceWith(object);\n                                keys--;\n                                object.hidden = true;\n                            } else {\n                                this.selectedInput.insertAdjacentElement('beforeend', object);\n                                object.hidden = true;\n                            }\n                            object.addEventListener('load', (_)=>{\n                                if (keys >= Math.floor(window.innerWidth / width)) {\n                                    object.remove();\n                                    for(let i = 0; i < keys; i++)(0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).failureAnimation(this.selectedInput.children[i]);\n                                    return;\n                                }\n                                object.hidden = false;\n                                keys++;\n                                let svg = object.contentDocument;\n                                svg.querySelector('#tspan7').innerHTML = Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex][index];\n                                this.fixedAnimation(object);\n                                this.movementAnimation();\n                            });\n                            break;\n                        case '#pensionistenmodus':\n                        case '#Pensionistenmodus':\n                            this.backgroundColor = '#7a4aff';\n                            this.inputStyling();\n                            this.command.split('').forEach((_)=>{\n                                this.returnLastElement(this.selectedInput).remove();\n                                keys--;\n                                if (this.selectedInput.firstChild) this.movementAnimation();\n                            });\n                            break;\n                        default:\n                            this.command.split('').forEach((_)=>{\n                                this.returnLastElement(this.selectedInput).remove();\n                                keys--;\n                                if (this.selectedInput.firstChild) this.movementAnimation();\n                            });\n                            if (this.inputIndex + 1 < 4) {\n                                this.inputIndex++;\n                                this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                                if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\n                                    this.inputIndex += 1;\n                                    this.selectedInput = this.container.children[this.inputIndex];\n                                }\n                                keys = this.selectedInput.childElementCount;\n                                this.inputStyling();\n                            }\n                    }\n                    this.command = '';\n                    this.commandMode = false;\n                } else if (event.key === 'ArrowUp') {\n                    this.command.split('').forEach((_)=>{\n                        this.returnLastElement(this.selectedInput).remove();\n                        keys--;\n                        if (this.selectedInput.firstChild) this.movementAnimation();\n                    });\n                    this.command = '';\n                    this.commandMode = false;\n                } else if (event.key === 'ArrowDown') {\n                    this.command.split('').forEach((_)=>{\n                        this.returnLastElement(this.selectedInput).remove();\n                        keys--;\n                        if (this.selectedInput.firstChild) this.movementAnimation();\n                    });\n                    this.command = '';\n                    this.commandMode = false;\n                    if (this.inputIndex + 1 < 4) {\n                        this.inputIndex++;\n                        this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                        if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\n                            this.inputIndex += 1;\n                            this.selectedInput = this.container.children[this.inputIndex];\n                        }\n                        keys = this.selectedInput.childElementCount;\n                        this.inputStyling();\n                    }\n                } else if (event.key === 'Backspace') {\n                    if (this.returnLastElement(this.selectedInput)) {\n                        this.returnLastElement(this.selectedInput).remove();\n                        this.command = this.command.slice(0, this.command.length - 1);\n                        keys--;\n                        if (this.selectedInput.firstChild) this.movementAnimation();\n                        if (this.command === '') this.commandMode = false;\n                    }\n                }\n                if (this.commandMode && (this.selectedInput.classList.contains('not-editable') || forbiddenCharacters.includes(event.key) || event.key.length > 1)) return;\n            }\n            if (!this.commandMode) {\n                //TODO: space styling: style empty lines in green when right and red when wrong\n                if ((event.key === 'Enter' || event.key === 'ArrowDown') && !mode) {\n                    if (this.currentWord && !isNaN(this.currentWordIndex) && event.key === 'Enter') {\n                        if (Object.values(this.currentWord)[this.inputIndex] === Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex] || Object.values(this.currentWord)[this.inputIndex] === '') {\n                            for(let i = 0; i < keys; i++)if (this.selectedInput.children[i] && !this.selectedInput.classList.contains('not-editable')) this.successAnimation(this.selectedInput.children[i]);\n                            if (!this.selectedInput.classList.contains('not-editable')) {\n                                if (this.result[this.inputIndex] === undefined) this.result[this.inputIndex] = true;\n                            }\n                            if (this.inputIndex + 1 < 4) {\n                                this.inputIndex++;\n                                this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                                if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\n                                    this.inputIndex += 1;\n                                    this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                                }\n                                keys = this.selectedInput.childElementCount;\n                                this.inputStyling();\n                            } else if (this.inputIndex + 1 === 4) {\n                                let emptyLines = [\n                                    undefined,\n                                    undefined,\n                                    undefined,\n                                    undefined\n                                ];\n                                Object.values(this.currentWord).slice(0, 4).forEach((value, i)=>{\n                                    if (!document.querySelector(`#div${inputs[i]}`).classList.contains('not-editable')) {\n                                        if (value === Object.values(this.vocabulary[this.currentWordIndex])[i]) {\n                                            let inp = document.querySelector(`#div${inputs[i]}`);\n                                            for(let ii = 0; ii < inp.childElementCount; ii++){\n                                                let obj = inp.children[ii];\n                                                this.successAnimation(obj);\n                                            }\n                                            if (value === '') emptyLines[i] = true;\n                                            if (this.result[i] === undefined) this.result[i] = true;\n                                        } else {\n                                            let inp = document.querySelector(`#div${inputs[i]}`);\n                                            for(let ii = 0; ii < inp.childElementCount; ii++){\n                                                let obj = inp.children[ii];\n                                                (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).failureAnimation(obj);\n                                            }\n                                            if (value === '') emptyLines[i] = false;\n                                            if (this.result[i] === undefined) this.result[i] = false;\n                                        }\n                                    }\n                                });\n                                this.resultStyling(emptyLines);\n                                if (Object.values(this.currentWord).toLocaleString() === Object.values(this.vocabulary[this.currentWordIndex]).toLocaleString()) {\n                                    let addition = this.result.filter((w)=>w === true).length;\n                                    this.totalAttempts += 3;\n                                    this.totalPoints += addition;\n                                    if (addition === 3) this.vocabulary[this.currentWordIndex].probability *= 0.8;\n                                    else this.vocabulary[this.currentWordIndex].probability *= 1.2;\n                                    const transaction = this.database.transaction('vocabulary', 'readwrite');\n                                    transaction.onerror = (_)=>console.error(transaction.error);\n                                    const objectStore = transaction.objectStore('vocabulary');\n                                    const request = objectStore.get(this.currentWordIndex + 1);\n                                    request.onerror = (_)=>console.error(request.error);\n                                    request.onsuccess = (_)=>{\n                                        const req = objectStore.put(this.vocabulary[this.currentWordIndex], this.currentWordIndex + 1);\n                                        req.onerror = (_)=>console.error(req.error);\n                                    };\n                                    setTimeout((_)=>{\n                                        this.inputIndex = 0;\n                                        this.selectedInput = document.querySelector(`#div${inputs[this.inputIndex]}`);\n                                        keys = 0;\n                                        this.inputStyling();\n                                        this.startNewTrainingRound();\n                                    }, 500);\n                                } else setTimeout((_)=>this.inputStyling(), 500);\n                            }\n                        } else if (this.selectedInput.classList.contains('not-editable')) {\n                            if (this.inputIndex + 1 < 4) {\n                                this.inputIndex++;\n                                this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                                if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\n                                    this.inputIndex += 1;\n                                    this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                                }\n                                keys = this.selectedInput.childElementCount;\n                                this.inputStyling();\n                            }\n                            return;\n                        } else {\n                            if (this.inputIndex === 3) {\n                                let emptyLines = [\n                                    undefined,\n                                    undefined,\n                                    undefined,\n                                    undefined\n                                ];\n                                Object.values(this.currentWord).slice(0, 4).forEach((value, i)=>{\n                                    if (!document.querySelector(`#div${inputs[i]}`).classList.contains('not-editable')) {\n                                        if (value === Object.values(this.vocabulary[this.currentWordIndex])[i]) {\n                                            let inp = document.querySelector(`#div${inputs[i]}`);\n                                            for(let ii = 0; ii < inp.childElementCount; ii++){\n                                                let obj = inp.children[ii];\n                                                this.successAnimation(obj);\n                                            }\n                                            if (value === '') emptyLines[i] = true;\n                                            if (this.result[i] === undefined) this.result[i] = true;\n                                        } else {\n                                            let inp = document.querySelector(`#div${inputs[i]}`);\n                                            for(let ii = 0; ii < inp.childElementCount; ii++){\n                                                let obj = inp.children[ii];\n                                                (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).failureAnimation(obj);\n                                            }\n                                            if (value === '') emptyLines[i] = false;\n                                            if (this.result[i] === undefined) this.result[i] = false;\n                                        }\n                                    }\n                                });\n                                this.resultStyling(emptyLines);\n                                setTimeout((_)=>this.inputStyling(), 500);\n                            } else for(let i = 0; i < this.selectedInput.childElementCount; i++)(0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).failureAnimation(this.selectedInput.children[i]);\n                            if (this.result[this.inputIndex] === undefined) this.result[this.inputIndex] = true;\n                            this.result[this.inputIndex] = false;\n                        }\n                    } else if (event.key === 'ArrowDown') {\n                        if (this.inputIndex + 1 < 4) {\n                            this.inputIndex++;\n                            this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                            if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\n                                this.inputIndex += 1;\n                                this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                            }\n                            keys = this.selectedInput.childElementCount;\n                            this.inputStyling();\n                        }\n                        return;\n                    }\n                    return;\n                } else if (event.key === 'ArrowUp') {\n                    if (this.inputIndex > 0) this.inputIndex--;\n                    this.selectedInput = this.container.children[inputs[this.inputIndex]];\n                    keys = this.selectedInput.childElementCount;\n                    this.inputStyling();\n                    return;\n                } else if (this.selectedInput.classList.contains('not-editable')) return;\n                else if (event.key === 'Backspace' && !mode) {\n                    if (this.returnLastElement(this.selectedInput)) {\n                        this.returnLastElement(this.selectedInput).remove();\n                        keys--;\n                        if (this.selectedInput.firstChild) this.movementAnimation();\n                        if (this.currentWord && !isNaN(this.currentWordIndex) && !this.commandMode) Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex], {\n                            value: Object.values(this.currentWord)[this.inputIndex].slice(0, keys)\n                        });\n                    }\n                    return;\n                } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) return;\n                else if (event.key === '#') this.commandMode = true;\n            }\n            let object = document.createElement('object');\n            object.data = './keys/OG_T.svg';\n            object.id = `key${keys}-inp${this.inputIndex}`;\n            object.style.height = `100%`;\n            this.selectedInput.insertAdjacentElement('beforeend', object);\n            let width = object.clientHeight;\n            object.hidden = true;\n            object.addEventListener('load', (_)=>{\n                if (keys >= Math.floor(window.innerWidth / width)) {\n                    object.remove();\n                    for(let i = 0; i < keys; i++)(0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).failureAnimation(this.selectedInput.children[i]);\n                    return;\n                }\n                object.hidden = false;\n                let svg = object.contentDocument;\n                svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\n                if (this.currentWord && !isNaN(this.currentWordIndex) && !this.commandMode) Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex], {\n                    value: Object.values(this.currentWord)[this.inputIndex] + event.key.charAt(0)\n                });\n                keys++;\n                (0, $543d6d2a56ed7d8d$export$abeb1bd8b6f9168).idleAnimation(object);\n                this.movementAnimation();\n                if (this.commandMode) {\n                    this.commandAnimation(object);\n                    this.command += event.key;\n                }\n            });\n        };\n        document.addEventListener('keydown', this.keyDownFunction);\n        this.startNewTrainingRound();\n    }\n    startNewTrainingRound() {\n        if (this.vocabulary.length === 0) {\n            setTimeout((_)=>alert('Keine Vokabeln!'), 50);\n            return;\n        }\n        this.round++;\n        let overallProbabilty = 0;\n        this.vocabulary.forEach((word)=>{\n            if (word.selected) overallProbabilty += word.probability;\n        });\n        let randomNumber = Math.floor(Math.random() * overallProbabilty * 10) / 10;\n        let lowestDifference;\n        let lastProbability = 0;\n        this.vocabulary.forEach((word, i)=>{\n            if (word.selected) {\n                if (lowestDifference === undefined) {\n                    lowestDifference = Math.abs(randomNumber - (lastProbability + word.probability));\n                    this.currentWord = word;\n                    this.currentWordIndex = i;\n                } else if (Math.abs(randomNumber - (lastProbability + word.probability)) < lowestDifference) {\n                    lowestDifference = Math.abs(randomNumber - (lastProbability + word.probability));\n                    this.currentWordIndex = i;\n                    if (Object.values(word).toLocaleString().slice(0, 4) === Object.values(this.currentWord).toLocaleString().slice(0, 4)) word.probability = Math.max(0, word.probability - 1);\n                    this.currentWord = word;\n                }\n                lastProbability += word.probability;\n            }\n        });\n        let savedProperty;\n        do {\n            let rn = Math.random();\n            if (rn <= 0.5) {\n                savedProperty = [\n                    'latinWord',\n                    {\n                        value: this.currentWord.latinWord\n                    }\n                ];\n                this.inputIndex = 1;\n                this.selectedInput = this.container.children[this.inputIndex + 1];\n                this.inputStyling();\n            } else if (rn <= 0.7) savedProperty = [\n                'inflections',\n                {\n                    value: this.currentWord.inflections\n                }\n            ];\n            else if (rn <= 0.95) savedProperty = [\n                'germanTranslation',\n                {\n                    value: this.currentWord.germanTranslation\n                }\n            ];\n            else savedProperty = [\n                'relatedForeignWords',\n                {\n                    value: this.currentWord.relatedForeignWords\n                }\n            ];\n        }while (savedProperty[1].value.trim() === '');\n        this.currentWord = {\n            latinWord: '',\n            inflections: '',\n            germanTranslation: '',\n            relatedForeignWords: '',\n            selected: true,\n            probability: this.currentWord.probability\n        };\n        Object.defineProperty(this.currentWord, savedProperty[0], savedProperty[1]);\n        let previousFixedDiv = document.querySelector('.not-editable');\n        if (previousFixedDiv) previousFixedDiv.classList.remove('not-editable');\n        document.querySelectorAll('.t').forEach((t)=>t.innerHTML = '');\n        let specificationDiv = document.getElementById(`div${Object.keys(this.currentWord).findIndex((k)=>k === savedProperty[0]) * 2}`);\n        specificationDiv.classList.add('not-editable');\n        specificationDiv.innerHTML = `<span style=\"font-size:${specificationDiv.clientHeight * 0.6}px\">${savedProperty[1].value}</span>`;\n        this.result = [\n            undefined,\n            undefined,\n            undefined,\n            undefined\n        ];\n    }\n    movementAnimation() {\n        let object = this.selectedInput.firstChild;\n        let inp = this.selectedInput;\n        if (this.selectedInput.firstChild) {\n            if (inp.childElementCount > 1) inp.style.transition = 'padding 250ms';\n            inp.style.paddingLeft = `${(window.innerWidth - inp.childElementCount * object.clientHeight) / 2}px`;\n        }\n    }\n    commandAnimation(object) {\n        if (!object) return;\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#eeeeeeff',\n                '#ffa500'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 500,\n            fill: 'forwards'\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    fixedAnimation(object) {\n        if (!object) return;\n        object.classList.add('fixed');\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#eeeeeeff',\n                '#ffff00'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 500,\n            fill: 'forwards'\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    successAnimation(object) {\n        if (!object) return;\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#eeeeeeff',\n                '#08a000',\n                '#eeeeeeff'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 500\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    returnLastElement(input) {\n        if (input.childElementCount > 0) {\n            if (!input.lastElementChild.classList.contains('fixed')) return input.lastElementChild;\n        }\n        return undefined;\n    }\n    inputStyling() {\n        document.body.style.backgroundImage = `\n            linear-gradient(180deg, \n                ${this.backgroundColor} 0%, \n                #06011b ${20 + this.inputIndex * 2 * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%,\n                #06011b ${20 + (this.inputIndex * 2 + 1) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%, \n                ${this.backgroundColor} ${window.innerHeight / document.body.scrollHeight * 100}%\n            )\n        `;\n    //#0d0043\n    //#440075\n    }\n    resultStyling(result) {\n        document.body.style.transition = 'background-image 250ms';\n        let str = `linear-gradient(180deg,`;\n        result.forEach((value, i)=>{\n            let color;\n            if (value === true) color = '#2be231';\n            else if (value === false) color = '#e80000';\n            else color = '#140063';\n            str += `#140063 ${20 + i * 2 * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%,\n                ${color} ${20 + (i * 2 + 0.5) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%, \n                #140063 ${20 + (i * 2 + 1) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%, `;\n        });\n        document.body.style.backgroundImage = str.slice(0, str.length - 2) + ')';\n    }\n}\n\n\n\nclass $b9cb672cfbcff24a$export$b0b374fde95c381e {\n    constructor(){\n        this.enterMode = false;\n        this.tabMode = false;\n        this.tabulator = \"\";\n        this.tabCount = 0;\n        this.v = 1;\n        this.round = 0;\n        this.failures = 0;\n        this.totalAttempts = 0;\n        this.totalPoints = 0;\n        this.badColor = 'rgb(186, 2, 70)';\n    }\n    //TODO: Remove greenShadowDesign in certain cases\n    modifyDocument(param) {\n        this.container = document.querySelector('#container');\n        this.iconPlaceholder = document.querySelector('#icon-placeholder');\n        this.navbar = document.querySelector('#navbar');\n        this.container.setAttribute('style', '');\n        document.body.style.backgroundImage = 'none';\n        document.body.setAttribute('class', '');\n        this.container.setAttribute('class', '');\n        this.iconPlaceholder.setAttribute('class', '');\n        this.navbar.setAttribute('class', '');\n        this.container.innerHTML = '';\n        this.iconPlaceholder.innerHTML = '';\n        this.navbar.innerHTML = '';\n        if (!param) param = 'add nouns';\n        let inflectVocabularyIcon;\n        inflectVocabularyIcon = document.createElement('object');\n        inflectVocabularyIcon.id = 'inflectVocabularyIcon';\n        this.v = 0;\n        this.badColor = 'rgb(186, 2, 70)';\n        switch(param){\n            case 'add verbs':\n            case 'verbs':\n                this.v = 9;\n                this.badColor = '#ff00d4';\n                if (param === 'add verbs') inflectVocabularyIcon.data = './conjugations.svg';\n                else inflectVocabularyIcon.data = './conjugate_verbs.svg';\n            case 'add nouns':\n            case 'nouns':\n            default:\n                const request = window.indexedDB.open('Vocabulary', 1);\n                request.onerror = (_)=>console.log(request.error);\n                request.onsuccess = (_)=>{\n                    this.database = request.result;\n                    this.tabulator = '';\n                    const transaction = this.database.transaction('inflected vocabulary', 'readonly');\n                    transaction.onerror = (_)=>console.error(transaction.error);\n                    const objectStore = transaction.objectStore('inflected vocabulary');\n                    const req = objectStore.getAll();\n                    req.onerror = (_)=>console.error(req.error);\n                    req.onsuccess = (_)=>{\n                        this.vocabulary = req.result;\n                        document.body.classList.add('inflectVocabularyBody');\n                        this.iconPlaceholder.classList.add('inflectVocabularyIconPlaceholder');\n                        if (param === 'add nouns') inflectVocabularyIcon.data = './declinations.svg';\n                        else if (param === 'nouns') inflectVocabularyIcon.data = './decline_nouns.svg';\n                        this.iconPlaceholder.insertAdjacentElement('beforeend', inflectVocabularyIcon);\n                        if (param === 'add verbs' || param === 'verbs') this.container.classList.add('inflectVocabularyContainer', 'verbs');\n                        else this.container.classList.add('inflectVocabularyContainer', 'nouns');\n                        this.navbar.classList.add('inflectVocabularyNavbar');\n                        this.container.tabIndex = 0;\n                        for(let i = 0; i < 21 - this.v; i++){\n                            let div = (0, $543d6d2a56ed7d8d$export$331ff980f0d45cff)(`div${i}`, 'editable');\n                            this.container.insertAdjacentElement('beforeend', div);\n                            if (i < 3) {\n                                div.classList.add('firstrow');\n                                div.classList.remove('editable');\n                                div.style.fontSize = `${div.offsetHeight * 0.75}px`;\n                                if (i === 1) div.innerHTML = 'Singular';\n                                else if (i === 2) div.innerHTML = 'Plural';\n                            }\n                            if (i % 3 === 0) {\n                                div.classList.add('firstcolumn');\n                                div.classList.remove('editable');\n                                div.style.fontSize = `${0.25 * div.offsetHeight}px`;\n                                if (i > 0) div.innerHTML = `${i / 3}. ${param.includes('verb') ? 'P' : 'F'}.`;\n                            }\n                            if (!(i < 3 || i % 3 === 0)) {\n                                div.style.padding = `${0.05 * div.offsetHeight}px`;\n                                if (!param.includes('add')) div.classList.add('shadowDesign');\n                            }\n                            if (param.includes('verb')) div.classList.add('v');\n                        }\n                        if (param.startsWith('add')) {\n                            this.buttonLeft = document.createElement('button');\n                            this.buttonLeft.classList.add('roundButton', 'c');\n                            this.buttonLeft.innerHTML = '<';\n                            this.navbar.appendChild(this.buttonLeft);\n                        }\n                        this.homeButton = document.createElement('button');\n                        this.homeButton.classList.add('roundButton');\n                        this.homeButton.tabIndex = -1;\n                        let icon = document.createElement('object');\n                        icon.classList.add('homeIcon');\n                        icon.data = './home.svg';\n                        icon.style.height = '7.5vh';\n                        icon.addEventListener('load', (_)=>{\n                            icon.contentDocument.addEventListener('click', (_)=>{\n                                (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                                if (this.tabMode) this.cancelTabMode();\n                                (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n                            });\n                        });\n                        this.homeButton.onclick = (_)=>{\n                            (0, $543d6d2a56ed7d8d$export$7aa98d28c688390a)();\n                            if (this.tabMode) this.cancelTabMode();\n                            (0, $543d6d2a56ed7d8d$export$d12a05a2da93ee73).modifyDocument();\n                        };\n                        this.homeButton.insertAdjacentElement('beforeend', icon);\n                        this.navbar.appendChild(this.homeButton);\n                        if (param.startsWith('add')) {\n                            this.deletionButton = document.createElement('button');\n                            this.deletionButton.classList.add('roundButton', 'deletionButton');\n                            this.deletionButton.innerHTML = 'X';\n                            this.deletionButton.tabIndex = -1;\n                            if (param.includes('verb')) this.deletionButton.classList.add('v');\n                            this.navbar.appendChild(this.deletionButton);\n                            this.buttonRight = document.createElement('button');\n                            this.buttonRight.classList.add('roundButton', 'c');\n                            this.buttonRight.innerHTML = '>';\n                            this.buttonRight.tabIndex = -1;\n                            this.navbar.appendChild(this.buttonRight);\n                        }\n                        if (param) this.type(param);\n                        else this.type();\n                    };\n                };\n                break;\n        }\n    }\n    type(param) {\n        switch(param){\n            case 'verbs':\n            case 'nouns':\n                this.keys = 0;\n                document.querySelectorAll('.editable').forEach((element)=>{\n                    element.addEventListener('click', (_)=>{\n                        this.selectedInput = element;\n                        this.keys = this.selectedInput.childElementCount;\n                        document.querySelectorAll('.selectedElement').forEach((elem)=>elem.classList.remove('selectedElement'));\n                        element.classList.add('selectedElement');\n                        this.inputIndex = parseInt(element.id.slice(3));\n                    });\n                });\n                this.selectedInput = document.getElementById('div4');\n                this.selectedInput.classList.add('selectedElement');\n                this.inputIndex = 4;\n                this.wordIndex = this.vocabulary.length;\n                this.currentWord = {\n                    singular: this.empty(param),\n                    plural: this.empty(param),\n                    verb: param.includes('verb'),\n                    probability: 1\n                };\n                this.keydownFunction = (event)=>{\n                    let forbiddenCharacters = [\n                        '<',\n                        \"\\xb4\",\n                        '`',\n                        '^'\n                    ];\n                    if (event.key === 'ArrowRight') {\n                        if (this.inputIndex < 20 - this.v) {\n                            this.inputIndex++;\n                            if (this.inputIndex % 3 === 0) this.inputIndex++;\n                            this.changeSelectedInput();\n                            this.keys = this.selectedInput.childElementCount;\n                        }\n                        return;\n                    } else if (event.key === 'ArrowLeft') {\n                        if (this.inputIndex > 4) {\n                            this.inputIndex--;\n                            if (this.inputIndex % 3 === 0) this.inputIndex--;\n                            this.changeSelectedInput();\n                            this.keys = this.selectedInput.childElementCount;\n                        }\n                        return;\n                    } else if (event.key === 'ArrowDown' || event.key === 'Enter') {\n                        if (this.inputIndex < 20 - this.v) {\n                            if (event.key === 'Enter' && !this.selectedInput.classList.contains('known-case')) {\n                                if (this.compare(Object.values(this.currentWord)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1], Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1])) {\n                                    for(let i = 0; i < this.selectedInput.childElementCount; i++){\n                                        let object = this.selectedInput.children[i];\n                                        this.successAnimation(object);\n                                    }\n                                    if (Object.values(this.result)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1] === undefined) {\n                                        let array = Object.values(this.result)[this.inputIndex % 3 - 1];\n                                        array[Math.floor(this.inputIndex / 3) - 1] = true;\n                                        Object.defineProperty(this.result, Object.keys(this.result)[this.inputIndex % 3 - 1], {\n                                            value: array\n                                        });\n                                        let inp = this.selectedInput;\n                                        setTimeout((_)=>{\n                                            inp.classList.remove('shadowDesign');\n                                            inp.classList.add('greenShadowDesign');\n                                        }, 500);\n                                    }\n                                } else {\n                                    for(let i = 0; i < this.selectedInput.childElementCount; i++){\n                                        let object = this.selectedInput.children[i];\n                                        this.failureAnimation(object);\n                                    }\n                                    if (Object.values(this.result)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1] === undefined) {\n                                        let array = Object.values(this.result)[this.inputIndex % 3 - 1];\n                                        array[Math.floor(this.inputIndex / 3) - 1] = false;\n                                        Object.defineProperty(this.result, Object.keys(this.result)[this.inputIndex % 3 - 1], {\n                                            value: array\n                                        });\n                                    }\n                                    let inp = this.selectedInput;\n                                    setTimeout((_)=>{\n                                        inp.classList.remove('shadowDesign');\n                                        inp.classList.add('redShadowDesign');\n                                    }, 500);\n                                }\n                            }\n                        }\n                        if (this.inputIndex < 18 - this.v) {\n                            this.inputIndex += 3;\n                            this.changeSelectedInput();\n                            this.keys = this.selectedInput.childElementCount;\n                            if (event.key === 'Enter' && this.selectedInput.classList.contains('known-case')) {\n                                if (this.inputIndex < 18 - this.v) {\n                                    this.inputIndex += 3;\n                                    this.changeSelectedInput();\n                                    this.keys = this.selectedInput.childElementCount;\n                                } else if (this.inputIndex === 19 - this.v) {\n                                    this.inputIndex = 5;\n                                    this.changeSelectedInput();\n                                    this.keys = this.selectedInput.childElementCount;\n                                }\n                            }\n                        } else if (event.key === 'Enter' && this.inputIndex === 19 - this.v) {\n                            this.inputIndex = 5;\n                            this.changeSelectedInput();\n                            this.keys = this.selectedInput.childElementCount;\n                        } else if (event.key === 'Enter' && this.inputIndex === 20 - this.v) {\n                            this.currentWord.singular.forEach((word, i)=>{\n                                let index = 1 + (i + 1) * 3;\n                                if (this.compare(word, Object.values(this.vocabulary[this.currentWordIndex])[index % 3 - 1][Math.floor(index / 3) - 1])) {\n                                    for(let ii = 0; ii < this.container.children[index].childElementCount; ii++)if (index % 3 != 0 && !this.container.children[index].classList.contains('known-case')) {\n                                        let object = this.container.children[index].children[ii];\n                                        this.successAnimation(object);\n                                    }\n                                    if (Object.values(this.result)[index % 3 - 1][Math.floor(index / 3) - 1] === undefined) {\n                                        let array = Object.values(this.result)[this.inputIndex % 3 - 1];\n                                        array[Math.floor(this.inputIndex / 3) - 1] = true;\n                                        Object.defineProperty(this.result, Object.keys(this.result)[index % 3 - 1], {\n                                            value: array\n                                        });\n                                    }\n                                } else {\n                                    for(let ii = 0; ii < this.container.children[index].childElementCount; ii++)if (index % 3 != 0 && !this.container.children[index].classList.contains('known-case')) {\n                                        let object = this.container.children[index].children[ii];\n                                        this.failureAnimation(object);\n                                    }\n                                    if (Object.values(this.result)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1] === undefined) {\n                                        let array = Object.values(this.result)[this.inputIndex % 3 - 1];\n                                        array[Math.floor(this.inputIndex / 3) - 1] = false;\n                                        Object.defineProperty(this.result, Object.keys(this.result)[this.inputIndex % 3 - 1], {\n                                            value: array\n                                        });\n                                    }\n                                }\n                            });\n                            this.currentWord.plural.forEach((word, i)=>{\n                                let index = 2 + (i + 1) * 3;\n                                if (this.compare(word, Object.values(this.vocabulary[this.currentWordIndex])[index % 3 - 1][Math.floor(index / 3) - 1])) {\n                                    for(let ii = 0; ii < this.container.children[index].childElementCount; ii++)if (index % 3 != 0 && !this.container.children[index].classList.contains('known-case')) {\n                                        let object = this.container.children[index].children[ii];\n                                        this.successAnimation(object);\n                                    }\n                                    if (Object.values(this.result)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1] === undefined) {\n                                        let array = Object.values(this.result)[this.inputIndex % 3 - 1];\n                                        array[Math.floor(this.inputIndex / 3) - 1] = true;\n                                        Object.defineProperty(this.result, Object.keys(this.result)[this.inputIndex % 3 - 1], {\n                                            value: array\n                                        });\n                                    }\n                                } else {\n                                    for(let ii = 0; ii < this.container.children[index].childElementCount; ii++)if (index % 3 != 0 && !this.container.children[index].classList.contains('known-case')) {\n                                        let object = this.container.children[index].children[ii];\n                                        this.failureAnimation(object);\n                                    }\n                                    if (Object.values(this.result)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1] === undefined) {\n                                        let array = Object.values(this.result)[this.inputIndex % 3 - 1];\n                                        array[Math.floor(this.inputIndex / 3) - 1] = false;\n                                        Object.defineProperty(this.result, Object.keys(this.result)[this.inputIndex % 3 - 1], {\n                                            value: array\n                                        });\n                                    }\n                                }\n                            });\n                            if (this.compareObjects(this.currentWord, this.vocabulary[this.currentWordIndex])) {\n                                this.totalAttempts += 11 - this.v / 3 * 2;\n                                let addition = this.result.singular.filter((w)=>w === true).length + this.result.plural.filter((w)=>w === true).length;\n                                this.totalPoints += addition;\n                                if (addition != 12 - this.v / 3 * 2) this.vocabulary[this.currentWordIndex].probability *= 0.8;\n                                else this.vocabulary[this.currentWordIndex].probability *= 1.2;\n                                const transaction = this.database.transaction('inflected vocabulary', 'readwrite');\n                                const objectStore = transaction.objectStore('inflected vocabulary');\n                                const request = objectStore.put(this.vocabulary[this.currentWordIndex], this.currentWordIndex + 1);\n                                request.onerror = (_)=>console.error(request.error);\n                                setTimeout((_)=>{\n                                    document.querySelectorAll('.selectedElement').forEach((div)=>{\n                                        div.classList.remove('selectedElement');\n                                    });\n                                    this.keys = 0;\n                                    this.inputIndex = 4;\n                                    this.selectedInput = document.querySelector('#div4');\n                                    this.selectedInput.classList.add('selectedElement');\n                                    this.startNewTrainingRound(param || 'nouns');\n                                }, 500);\n                            }\n                        }\n                        return;\n                    } else if (event.key === 'ArrowUp') {\n                        if (this.inputIndex > 6) {\n                            this.inputIndex -= 3;\n                            this.changeSelectedInput();\n                            this.keys = this.selectedInput.childElementCount;\n                        }\n                        return;\n                    } else if (event.key === 'Backspace') {\n                        if (this.selectedInput.lastElementChild) {\n                            this.selectedInput.lastElementChild.remove();\n                            let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                            array[Math.floor(this.inputIndex / 3) - 1] = array[Math.floor(this.inputIndex / 3) - 1].slice(0, this.keys - 1);\n                            Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                value: array\n                            });\n                            this.keys--;\n                        }\n                        return;\n                    } else if (this.selectedInput.classList.contains('known-case')) return;\n                    else if (event.key == 'Tab') {\n                        if (this.tabulator) {\n                            if (this.keys + this.tabulator.length >= this.selectedInput.clientWidth / (this.selectedInput.clientHeight - parseFloat(this.selectedInput.style.padding))) this.selectedInput.childNodes.forEach((v, i)=>{\n                                this.failureAnimation(this.selectedInput.children[i]);\n                            });\n                            else {\n                                let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                let n = Math.floor(this.inputIndex / 3) - 1;\n                                array[n] += this.tabulator;\n                                Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                    value: array\n                                });\n                                this.tabulator.split('').forEach((letter)=>{\n                                    let object = document.createElement('object');\n                                    object.data = './keys/OG_T.svg';\n                                    object.id = `key${this.keys}-inp${this.inputIndex}`;\n                                    object.style.height = `100%`;\n                                    this.selectedInput.insertAdjacentElement('beforeend', object);\n                                    object.hidden = true;\n                                    object.addEventListener('load', (_)=>{\n                                        object.hidden = false;\n                                        let svg = object.contentDocument;\n                                        svg.querySelector('#tspan7').innerHTML = letter;\n                                        this.keys++;\n                                        this.tabulatorAnimation(object);\n                                    });\n                                });\n                            }\n                        }\n                        return;\n                    } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) return;\n                    let object = document.createElement('object');\n                    object.data = './keys/OG_T.svg';\n                    object.id = `key${this.keys}-inp${this.inputIndex}`;\n                    object.style.height = `100%`;\n                    this.selectedInput.insertAdjacentElement('beforeend', object);\n                    let width = object.clientHeight;\n                    object.hidden = true;\n                    object.addEventListener('load', (_)=>{\n                        if (this.keys + 1 >= Math.floor(this.selectedInput.clientWidth / width)) {\n                            object.remove();\n                            for(let i = 0; i < this.keys; i++)this.failureAnimation(this.selectedInput.children[i]);\n                            return;\n                        }\n                        object.hidden = false;\n                        let svg = object.contentDocument;\n                        svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\n                        let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                        array[Math.floor(this.inputIndex / 3) - 1] += event.key;\n                        Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                            value: array\n                        });\n                        this.keys++;\n                        this.idleAnimation(object);\n                    });\n                };\n                document.addEventListener('keydown', this.keydownFunction);\n                window.onkeyup = (event)=>{\n                    if (event.key === 'Tab') this.container.focus();\n                };\n                this.startNewTrainingRound(param ? param : 'nouns');\n                break;\n            case 'add verbs':\n            case 'add nouns':\n                this.keys = 0;\n                document.querySelectorAll('.editable').forEach((element)=>{\n                    element.addEventListener('click', (_)=>{\n                        if (this.tabMode) this.cancelTabMode();\n                        this.inputIndex = parseInt(element.id.slice(3));\n                        this.changeSelectedInput();\n                        this.keys = this.selectedInput.childElementCount;\n                    });\n                });\n                this.selectedInput = document.getElementById('div4');\n                this.selectedInput.classList.add('selectedElement');\n                this.inputIndex = 4;\n                this.wordIndex = this.vocabulary.length;\n                this.currentWord = {\n                    singular: this.empty(param),\n                    plural: this.empty(param),\n                    verb: param.includes('verb'),\n                    probability: 1\n                };\n                let deletionMode = false;\n                let indicator;\n                let deletionFunction = (_)=>{\n                    this.vocabulary.splice(this.wordIndex, 1);\n                    const transaction = this.database.transaction('inflected vocabulary', 'readwrite');\n                    const objectStore = transaction.objectStore('inflected vocabulary');\n                    const request = objectStore.openCursor();\n                    request.onsuccess = (_)=>{\n                        let cursor = request.result;\n                        if (cursor) {\n                            let k = cursor.key;\n                            let word = this.vocabulary[k - 1];\n                            if (word) {\n                                const updatedData = cursor.value;\n                                updatedData.singular = word.singular;\n                                updatedData.plural = word.plural;\n                                updatedData.verb = word.verb;\n                                updatedData.probability = word.probability;\n                                cursor.update(updatedData);\n                                cursor.continue();\n                            } else {\n                                cursor.delete();\n                                let vocab1 = this.vocabulary.slice(0, this.wordIndex);\n                                let vocab2 = this.vocabulary.slice(this.wordIndex);\n                                let wi1 = vocab1.findLastIndex((w)=>w.verb === param.includes('verb'));\n                                let wi2 = vocab2.findIndex((w)=>w.verb === param.includes('verb')) + this.wordIndex;\n                                if (this.vocabulary[wi1]) {\n                                    this.wordIndex = wi1;\n                                    this.currentWord = this.vocabulary[wi1];\n                                    let overallIndexes = [];\n                                    let tabulatorStyle = false;\n                                    for(let i = 3; i < this.container.childElementCount; i++){\n                                        let tabulatorIndexes = [];\n                                        let n = Math.floor(i / 3) - 1;\n                                        let singular = this.currentWord.singular;\n                                        let plural = this.currentWord.plural;\n                                        if (i % 3 === 1) {\n                                            this.container.children[i].innerHTML = '';\n                                            for(let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++)if (singular[n].slice(ii, ii + 5) === '^tab^') {\n                                                tabulatorStyle = !tabulatorStyle;\n                                                ii += 4;\n                                            } else {\n                                                let object = document.createElement('object');\n                                                object.data = './keys/OG_T.svg';\n                                                object.id = `key${ii}-inp${i}`;\n                                                object.style.height = `100%`;\n                                                this.container.children[i].insertAdjacentElement('beforeend', object);\n                                                if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                                object.addEventListener('load', (_)=>{\n                                                    let svg = object.contentDocument;\n                                                    svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\n                                                    if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                        this.tabulatorAnimation(object);\n                                                        object.classList.add('tabulator');\n                                                    }\n                                                });\n                                            }\n                                            overallIndexes.push([\n                                                i,\n                                                tabulatorIndexes\n                                            ]);\n                                        } else if (i % 3 === 2) {\n                                            this.container.children[i].innerHTML = '';\n                                            for(let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++)if (plural[n].slice(ii, ii + 5) === '^tab^') {\n                                                tabulatorStyle = !tabulatorStyle;\n                                                ii += 4;\n                                            } else {\n                                                let object = document.createElement('object');\n                                                object.data = './keys/OG_T.svg';\n                                                object.id = `key${ii}-inp${i}`;\n                                                object.style.height = `100%`;\n                                                this.container.children[i].insertAdjacentElement('beforeend', object);\n                                                if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                                object.addEventListener('load', (_)=>{\n                                                    let svg = object.contentDocument;\n                                                    svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\n                                                    if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                        this.tabulatorAnimation(object);\n                                                        object.classList.add('tabulator');\n                                                    }\n                                                });\n                                            }\n                                        }\n                                        overallIndexes.push([\n                                            i,\n                                            tabulatorIndexes\n                                        ]);\n                                    }\n                                    this.changeSelectedInput();\n                                } else if (this.vocabulary[wi2]) {\n                                    this.currentWord = this.vocabulary[wi2];\n                                    let overallIndexes = [];\n                                    let tabulatorStyle = false;\n                                    for(let i = 3; i < this.container.childElementCount; i++){\n                                        let tabulatorIndexes = [];\n                                        let n = Math.floor(i / 3) - 1;\n                                        let singular = this.currentWord.singular;\n                                        let plural = this.currentWord.plural;\n                                        if (i % 3 === 1) {\n                                            this.container.children[i].innerHTML = '';\n                                            for(let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++)if (singular[n].slice(ii, ii + 5) === '^tab^') {\n                                                tabulatorStyle = !tabulatorStyle;\n                                                ii += 4;\n                                            } else {\n                                                let object = document.createElement('object');\n                                                object.data = './keys/OG_T.svg';\n                                                object.id = `key${ii}-inp${i}`;\n                                                object.style.height = `100%`;\n                                                this.container.children[i].insertAdjacentElement('beforeend', object);\n                                                if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                                object.addEventListener('load', (_)=>{\n                                                    let svg = object.contentDocument;\n                                                    svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\n                                                    if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                        this.tabulatorAnimation(object);\n                                                        object.classList.add('tabulator');\n                                                    }\n                                                });\n                                            }\n                                            overallIndexes.push([\n                                                i,\n                                                tabulatorIndexes\n                                            ]);\n                                        } else if (i % 3 === 2) {\n                                            this.container.children[i].innerHTML = '';\n                                            for(let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++)if (plural[n].slice(ii, ii + 5) === '^tab^') {\n                                                tabulatorStyle = !tabulatorStyle;\n                                                ii += 4;\n                                            } else {\n                                                let object = document.createElement('object');\n                                                object.data = './keys/OG_T.svg';\n                                                object.id = `key${ii}-inp${i}`;\n                                                object.style.height = `100%`;\n                                                this.container.children[i].insertAdjacentElement('beforeend', object);\n                                                if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                                object.addEventListener('load', (_)=>{\n                                                    let svg = object.contentDocument;\n                                                    svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\n                                                    if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                        this.tabulatorAnimation(object);\n                                                        object.classList.add('tabulator');\n                                                    }\n                                                });\n                                            }\n                                            overallIndexes.push([\n                                                i,\n                                                tabulatorIndexes\n                                            ]);\n                                        }\n                                    }\n                                    this.changeSelectedInput();\n                                } else {\n                                    this.keys = 0;\n                                    this.currentWord = {\n                                        singular: this.empty(param),\n                                        plural: this.empty(param),\n                                        verb: param.includes('verb'),\n                                        probability: 1\n                                    };\n                                    for(let i = 0; i < this.container.childElementCount; i++){\n                                        if (i % 3 != 0) this.container.children[i].innerHTML = '';\n                                        this.container.children[i].classList.remove('selectedElement');\n                                    }\n                                    this.inputIndex = 4;\n                                    this.selectedInput = this.container.children[4];\n                                    this.tabCount = 0;\n                                    this.selectedInput.classList.add('selectedElement');\n                                }\n                            }\n                        }\n                    };\n                    deletionMode = false;\n                    this.deletionButton.removeEventListener('click', deletionFunction);\n                    this.deletionButton.classList.remove('click');\n                    document.querySelectorAll('object').forEach((object)=>{\n                        if (object.contentDocument.getElementById('tspan7')) this.deletionAnimation(object, 1, 'reverse');\n                    });\n                    Array.from(document.getElementsByClassName('editable')).forEach((div)=>{\n                        div.classList.remove('redShadowDesign');\n                    });\n                };\n                this.deletionButton.addEventListener('mousemove', (_)=>{\n                    if (deletionMode) return;\n                    deletionMode = true;\n                    this.deletionAnimation(this.deletionButton, 2000, 'normal');\n                    let broken = false;\n                    this.container.querySelectorAll('object').forEach((object)=>{\n                        if (object.contentDocument.getElementById('tspan7')) this.deletionAnimation(object, 2000, 'normal');\n                        else {\n                            broken = true;\n                            return;\n                        }\n                    });\n                    if (broken) this.container.querySelectorAll('object').forEach((object)=>{\n                        if (object.contentDocument.getElementById('tspan7')) this.deletionAnimation(object, 1, 'reverse');\n                    });\n                    indicator = setTimeout((_)=>{\n                        if (deletionMode) {\n                            this.deletionButton.addEventListener('click', deletionFunction);\n                            Array.from(document.getElementsByClassName('editable')).forEach((div)=>{\n                                div.classList.add('redShadowDesign');\n                            });\n                        }\n                    }, 2000);\n                });\n                this.deletionButton.addEventListener('mouseleave', (_)=>{\n                    clearTimeout(indicator);\n                    deletionMode = false;\n                    this.deletionAnimation(this.deletionButton, 1, 'reverse');\n                    this.container.querySelectorAll('object').forEach((object)=>{\n                        if (object.contentDocument.getElementById('tspan7')) this.deletionAnimation(object, 1, 'reverse');\n                    });\n                    Array.from(document.getElementsByClassName('editable')).forEach((div)=>{\n                        div.classList.remove('redShadowDesign');\n                    });\n                    this.deletionButton.removeEventListener('click', deletionFunction);\n                });\n                document.querySelectorAll('.c').forEach((element)=>{\n                    element.addEventListener('mousedown', (_)=>{\n                        element.classList.add('click');\n                        document.querySelectorAll('.editable').forEach((div)=>{\n                            div.classList.add('savedElement');\n                        });\n                    });\n                    element.addEventListener('mouseout', (_)=>{\n                        element.classList.remove('click');\n                        document.querySelectorAll('.editable').forEach((div)=>{\n                            div.classList.remove('savedElement');\n                        });\n                    });\n                });\n                this.buttonLeft.addEventListener('mouseup', (_)=>{\n                    console.log('left', this.vocabulary.map((w)=>w.singular[0]));\n                    if (this.tabMode) this.cancelTabMode();\n                    let vocab = this.vocabulary.slice(0, this.wordIndex);\n                    let wi = vocab.findLastIndex((w)=>w.verb === param.includes('verb'));\n                    if (this.vocabulary[wi]) {\n                        if (this.currentWord.singular.filter((value)=>value === '').length === (param.includes('verb') ? 3 : 6) && this.currentWord.plural.filter((value)=>value === '').length === (param.includes('verb') ? 3 : 6) && this.wordIndex === this.vocabulary.length) {\n                            for(let i = 0; i < this.container.childElementCount; i++){\n                                this.container.children[i].classList.remove('savedElement');\n                                this.buttonLeft.classList.remove('click');\n                            }\n                            this.wordIndex = wi;\n                            this.currentWord = this.vocabulary[wi];\n                            let overallIndexes = [];\n                            let tabulatorStyle = false;\n                            for(let i = 3; i < this.container.childElementCount; i++){\n                                let tabulatorIndexes = [];\n                                let n = Math.floor(i / 3) - 1;\n                                let singular = this.currentWord.singular;\n                                let plural = this.currentWord.plural;\n                                if (i % 3 === 1) {\n                                    this.container.children[i].innerHTML = '';\n                                    for(let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++)if (singular[n].slice(ii, ii + 5) === '^tab^') {\n                                        tabulatorStyle = !tabulatorStyle;\n                                        ii += 4;\n                                    } else {\n                                        let object = document.createElement('object');\n                                        object.data = './keys/OG_T.svg';\n                                        object.id = `key${ii}-inp${i}`;\n                                        object.style.height = `100%`;\n                                        this.container.children[i].insertAdjacentElement('beforeend', object);\n                                        if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                        object.addEventListener('load', (_)=>{\n                                            let svg = object.contentDocument;\n                                            svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\n                                            if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                this.tabulatorAnimation(object);\n                                                object.classList.add('tabulator');\n                                            }\n                                        });\n                                    }\n                                    overallIndexes.push([\n                                        i,\n                                        tabulatorIndexes\n                                    ]);\n                                } else if (i % 3 === 2) {\n                                    this.container.children[i].innerHTML = '';\n                                    for(let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++)if (plural[n].slice(ii, ii + 5) === '^tab^') {\n                                        tabulatorStyle = !tabulatorStyle;\n                                        ii += 4;\n                                    } else {\n                                        let object = document.createElement('object');\n                                        object.data = './keys/OG_T.svg';\n                                        object.id = `key${ii}-inp${i}`;\n                                        object.style.height = `100%`;\n                                        this.container.children[i].insertAdjacentElement('beforeend', object);\n                                        if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                        object.addEventListener('load', (_)=>{\n                                            let svg = object.contentDocument;\n                                            svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\n                                            if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                this.tabulatorAnimation(object);\n                                                object.classList.add('tabulator');\n                                            }\n                                        });\n                                    }\n                                }\n                                overallIndexes.push([\n                                    i,\n                                    tabulatorIndexes\n                                ]);\n                            }\n                            this.changeSelectedInput();\n                        } else {\n                            this.vocabulary[this.wordIndex] = this.currentWord;\n                            const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\n                            transaction.onerror = (_)=>console.error(transaction.error);\n                            const objectStore = transaction.objectStore(`inflected vocabulary`);\n                            const req = objectStore.get(this.wordIndex);\n                            req.onerror = (_)=>console.error(req.error);\n                            req.onsuccess = (_)=>{\n                                for(let i = 0; i < this.container.childElementCount; i++){\n                                    this.container.children[i].classList.remove('savedElement');\n                                    this.buttonLeft.classList.remove('click');\n                                }\n                                const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\n                                idontcare.onerror = (_)=>console.error(idontcare.error);\n                                this.wordIndex = wi;\n                                let tabulatorStyle = false;\n                                this.currentWord = this.vocabulary[wi];\n                                let overallIndexes = [];\n                                for(let i = 3; i < this.container.childElementCount; i++){\n                                    let tabulatorIndexes = [];\n                                    let n = Math.floor(i / 3) - 1;\n                                    let singular = this.currentWord.singular;\n                                    let plural = this.currentWord.plural;\n                                    if (i % 3 === 1) {\n                                        this.container.children[i].innerHTML = '';\n                                        for(let ii = 0; ii < singular[n].length; ii++)if (singular[n].slice(ii, ii + 5) === '^tab^') {\n                                            tabulatorStyle = !tabulatorStyle;\n                                            ii += 4;\n                                        } else {\n                                            let object = document.createElement('object');\n                                            object.data = './keys/OG_T.svg';\n                                            object.id = `key${ii}-inp${i}`;\n                                            object.style.height = `100%`;\n                                            this.container.children[i].insertAdjacentElement('beforeend', object);\n                                            if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                            object.addEventListener('load', (_)=>{\n                                                let svg = object.contentDocument;\n                                                svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\n                                                if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                    this.tabulatorAnimation(object);\n                                                    object.classList.add('tabulator');\n                                                }\n                                            });\n                                        }\n                                        overallIndexes.push([\n                                            i,\n                                            tabulatorIndexes\n                                        ]);\n                                    } else if (i % 3 === 2) {\n                                        this.container.children[i].innerHTML = '';\n                                        for(let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++)if (plural[n].slice(ii, ii + 5) === '^tab^') {\n                                            tabulatorStyle = !tabulatorStyle;\n                                            ii += 4;\n                                        } else {\n                                            let object = document.createElement('object');\n                                            object.data = './keys/OG_T.svg';\n                                            object.id = `key${ii}-inp${i}`;\n                                            object.style.height = `100%`;\n                                            this.container.children[i].insertAdjacentElement('beforeend', object);\n                                            if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                            object.addEventListener('load', (_)=>{\n                                                let svg = object.contentDocument;\n                                                svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\n                                                if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                    this.tabulatorAnimation(object);\n                                                    object.classList.add('tabulator');\n                                                }\n                                            });\n                                        }\n                                        overallIndexes.push([\n                                            i,\n                                            tabulatorIndexes\n                                        ]);\n                                    }\n                                }\n                            };\n                        }\n                    }\n                    console.log('left end', this.vocabulary.map((w)=>w.singular[0]));\n                });\n                this.buttonRight.addEventListener('mouseup', (_)=>{\n                    console.log('right', this.vocabulary.map((w)=>w.singular[0]));\n                    if (this.tabMode) this.cancelTabMode();\n                    let vocab = this.vocabulary.slice(this.wordIndex + 1);\n                    let wi = vocab.findIndex((w)=>w.verb === param.includes('verb')) >= 0 ? vocab.findIndex((w)=>w.verb === param.includes('verb')) + this.wordIndex + 1 : -1;\n                    if (!this.vocabulary[wi]) {\n                        console.log('!this.vocabulary[wi]');\n                        this.vocabulary[this.wordIndex] = this.currentWord;\n                        const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\n                        transaction.onerror = (_)=>console.error(transaction.error);\n                        const objectStore = transaction.objectStore(`inflected vocabulary`);\n                        const req = objectStore.put(this.currentWord, this.wordIndex + 1);\n                        req.onerror = (_)=>console.error(req.error);\n                        transaction.oncomplete = (_)=>{\n                            for(let i = 0; i < this.container.childElementCount; i++){\n                                this.container.children[i].classList.remove('savedElement');\n                                this.buttonRight.classList.remove('click');\n                            }\n                            this.wordIndex = this.vocabulary.length;\n                            this.keys = 0;\n                            this.currentWord = {\n                                singular: this.empty(param),\n                                plural: this.empty(param),\n                                verb: param.includes('verb'),\n                                probability: 1\n                            };\n                            for(let i = 3; i < this.container.childElementCount; i++){\n                                if (i % 3 != 0) this.container.children[i].innerHTML = '';\n                                this.container.children[i].classList.remove('selectedElement');\n                            }\n                            this.inputIndex = 4;\n                            this.selectedInput = this.container.children[4];\n                            this.tabCount = 0;\n                            this.selectedInput.classList.add('selectedElement');\n                        };\n                    } else {\n                        console.log('this.vocabulary[wi]');\n                        this.vocabulary[this.wordIndex] = this.currentWord;\n                        for(let i = 0; i < this.container.childElementCount; i++){\n                            this.container.children[i].classList.remove('savedElement');\n                            this.buttonRight.classList.remove('click');\n                        }\n                        const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\n                        transaction.onerror = (_)=>console.error(transaction.error);\n                        const objectStore = transaction.objectStore(`inflected vocabulary`);\n                        const req = objectStore.get(this.wordIndex);\n                        req.onerror = (_)=>console.error(req.error);\n                        req.onsuccess = (_)=>{\n                            const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\n                            idontcare.onerror = (_)=>console.error(idontcare.error);\n                            this.wordIndex = wi;\n                            this.currentWord = this.vocabulary[wi];\n                            let overallIndexes = [];\n                            let tabulatorStyle = false;\n                            for(let i = 3; i < this.container.childElementCount; i++){\n                                let tabulatorIndexes = [];\n                                let n = Math.floor(i / 3) - 1;\n                                let singular = this.currentWord.singular;\n                                let plural = this.currentWord.plural;\n                                if (i % 3 === 1) {\n                                    this.container.children[i].innerHTML = '';\n                                    for(let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++)if (singular[n].slice(ii, ii + 5) === '^tab^') {\n                                        tabulatorStyle = !tabulatorStyle;\n                                        ii += 4;\n                                    } else {\n                                        let object = document.createElement('object');\n                                        object.data = './keys/OG_T.svg';\n                                        object.id = `key${ii}-inp${i}`;\n                                        object.style.height = `100%`;\n                                        this.container.children[i].insertAdjacentElement('beforeend', object);\n                                        if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                        object.addEventListener('load', (_)=>{\n                                            let svg = object.contentDocument;\n                                            svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\n                                            if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                this.tabulatorAnimation(object);\n                                                object.classList.add('tabulator');\n                                            }\n                                        });\n                                    }\n                                    overallIndexes.push([\n                                        i,\n                                        tabulatorIndexes\n                                    ]);\n                                } else if (i % 3 === 2) {\n                                    this.container.children[i].innerHTML = '';\n                                    for(let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++)if (plural[n].slice(ii, ii + 5) === '^tab^') {\n                                        tabulatorStyle = !tabulatorStyle;\n                                        ii += 4;\n                                    } else {\n                                        let object = document.createElement('object');\n                                        object.data = './keys/OG_T.svg';\n                                        object.id = `key${ii}-inp${i}`;\n                                        object.style.height = `100%`;\n                                        this.container.children[i].insertAdjacentElement('beforeend', object);\n                                        if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                        object.addEventListener('load', (_)=>{\n                                            let svg = object.contentDocument;\n                                            svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\n                                            if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                this.tabulatorAnimation(object);\n                                                object.classList.add('tabulator');\n                                            }\n                                        });\n                                    }\n                                    overallIndexes.push([\n                                        i,\n                                        tabulatorIndexes\n                                    ]);\n                                }\n                                this.changeSelectedInput();\n                            }\n                        };\n                    }\n                    console.log('right end', this.vocabulary.map((w)=>w.singular[0]));\n                });\n                this.keydownFunction = (event)=>{\n                    let forbiddenCharacters = [\n                        '<',\n                        \"\\xb4\",\n                        '`',\n                        '^'\n                    ];\n                    if (event.key === 'ArrowRight') {\n                        if (this.tabMode) this.cancelTabMode();\n                        if (this.inputIndex < 20 - this.v) {\n                            this.inputIndex++;\n                            if (this.inputIndex % 3 === 0) this.inputIndex++;\n                            this.changeSelectedInput();\n                            this.keys = this.selectedInput.childElementCount;\n                        }\n                        return;\n                    } else if (event.key === 'ArrowLeft') {\n                        if (this.tabMode) this.cancelTabMode();\n                        if (this.inputIndex > 4) {\n                            this.inputIndex--;\n                            if (this.inputIndex % 3 === 0) this.inputIndex--;\n                            this.changeSelectedInput();\n                            this.keys = this.selectedInput.childElementCount;\n                        }\n                        return;\n                    } else if (event.key === 'ArrowDown' || event.key === 'Enter') {\n                        if (this.tabMode) {\n                            this.cancelTabMode();\n                            if (this.inputIndex === 19) return;\n                        }\n                        if (this.inputIndex < 18 - this.v) {\n                            this.inputIndex += 3;\n                            this.changeSelectedInput();\n                            this.keys = this.selectedInput.childElementCount;\n                        } else if (event.key === 'Enter' && this.inputIndex === 19 - this.v) {\n                            this.inputIndex = 5;\n                            this.changeSelectedInput();\n                            this.keys = this.selectedInput.childElementCount;\n                        } else if (event.key === 'Enter' && this.inputIndex === 20 - this.v) {\n                            document.querySelectorAll('.editable').forEach((element)=>{\n                                element.classList.add('savedElement');\n                            });\n                            if (this.enterMode) {\n                                let vocab = this.vocabulary.slice(this.wordIndex + 1);\n                                let wi = vocab.findIndex((w)=>w.verb === param.includes('verb'));\n                                if (!this.vocabulary[wi]) {\n                                    this.vocabulary[this.wordIndex] = this.currentWord;\n                                    const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\n                                    transaction.onerror = (_)=>console.error(transaction.error);\n                                    const objectStore = transaction.objectStore(`inflected vocabulary`);\n                                    const req = objectStore.put(this.currentWord, this.wordIndex + 1);\n                                    req.onerror = (_)=>console.error(req.error);\n                                    transaction.oncomplete = (_)=>{\n                                        for(let i = 0; i < this.container.childElementCount; i++)this.container.children[i].classList.remove('savedElement');\n                                        this.wordIndex++;\n                                        this.keys = 0;\n                                        this.currentWord = {\n                                            singular: this.empty(param),\n                                            plural: this.empty(param),\n                                            verb: param.includes('verb'),\n                                            probability: 1\n                                        };\n                                        for(let i = 0; i < this.container.childElementCount; i++){\n                                            if (i % 3 != 0) this.container.children[i].innerHTML = '';\n                                            this.container.children[i].classList.remove('selectedElement');\n                                        }\n                                        this.inputIndex = 4;\n                                        this.selectedInput = this.container.children[4];\n                                        this.tabCount = 0;\n                                        this.selectedInput.classList.add('selectedElement');\n                                    };\n                                } else {\n                                    this.vocabulary[this.wordIndex] = this.currentWord;\n                                    for(let i = 0; i < this.container.childElementCount; i++)this.container.children[i].classList.remove('savedElement');\n                                    const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\n                                    transaction.onerror = (_)=>console.error(transaction.error);\n                                    const objectStore = transaction.objectStore(`inflected vocabulary`);\n                                    const req = objectStore.get(this.wordIndex);\n                                    req.onerror = (_)=>console.error(req.error);\n                                    req.onsuccess = (_)=>{\n                                        const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\n                                        idontcare.onerror = (_)=>console.log(idontcare.error);\n                                        this.wordIndex = wi;\n                                        this.currentWord = this.vocabulary[wi];\n                                        let overallIndexes = [];\n                                        let tabulatorStyle = false;\n                                        for(let i = 3; i < this.container.childElementCount; i++){\n                                            let tabulatorIndexes = [];\n                                            let n = Math.floor(i / 3) - 1;\n                                            let singular = this.currentWord.singular;\n                                            let plural = this.currentWord.plural;\n                                            if (i % 3 === 1) {\n                                                this.container.children[i].innerHTML = '';\n                                                for(let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++)if (singular[n].slice(ii, ii + 5) === '^tab^') {\n                                                    tabulatorStyle = !tabulatorStyle;\n                                                    ii += 4;\n                                                } else {\n                                                    let object = document.createElement('object');\n                                                    object.data = './keys/OG_T.svg';\n                                                    object.id = `key${ii}-inp${i}`;\n                                                    object.style.height = `100%`;\n                                                    this.container.children[i].insertAdjacentElement('beforeend', object);\n                                                    if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                                    object.addEventListener('load', (_)=>{\n                                                        let svg = object.contentDocument;\n                                                        svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\n                                                        if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                            this.tabulatorAnimation(object);\n                                                            object.classList.add('tabulator');\n                                                        }\n                                                    });\n                                                }\n                                                overallIndexes.push([\n                                                    i,\n                                                    tabulatorIndexes\n                                                ]);\n                                            } else if (i % 3 === 2) {\n                                                this.container.children[i].innerHTML = '';\n                                                for(let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++)if (plural[n].slice(ii, ii + 5) === '^tab^') {\n                                                    tabulatorStyle = !tabulatorStyle;\n                                                    ii += 4;\n                                                } else {\n                                                    let object = document.createElement('object');\n                                                    object.data = './keys/OG_T.svg';\n                                                    object.id = `key${ii}-inp${i}`;\n                                                    object.style.height = `100%`;\n                                                    this.container.children[i].insertAdjacentElement('beforeend', object);\n                                                    if (tabulatorStyle) tabulatorIndexes.push(ii);\n                                                    object.addEventListener('load', (_)=>{\n                                                        let svg = object.contentDocument;\n                                                        svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\n                                                        if (overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3))) && overallIndexes.find((indexes)=>indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))) {\n                                                            this.tabulatorAnimation(object);\n                                                            object.classList.add('tabulator');\n                                                        }\n                                                    });\n                                                }\n                                                overallIndexes.push([\n                                                    i,\n                                                    tabulatorIndexes\n                                                ]);\n                                            }\n                                            this.changeSelectedInput();\n                                        }\n                                    };\n                                }\n                                this.enterMode = false;\n                            } else this.enterMode = true;\n                            const transaction = this.database.transaction('inflected vocabulary', 'readwrite');\n                            const objectStore = transaction.objectStore('inflected vocabulary');\n                            const req = objectStore.put(this.currentWord, this.wordIndex + 1);\n                            req.onerror = (_)=>console.error(req.error);\n                            setTimeout((_)=>{\n                                for(let i = 0; i < this.container.childElementCount; i++)this.container.children[i].classList.remove('savedElement');\n                            }, 250);\n                        }\n                        return;\n                    } else if (event.key === 'ArrowUp') {\n                        if (this.tabMode) this.cancelTabMode();\n                        if (this.inputIndex > 6) {\n                            this.inputIndex -= 3;\n                            this.changeSelectedInput();\n                            this.keys = this.selectedInput.childElementCount;\n                        }\n                        return;\n                    } else if (event.key === 'Backspace') {\n                        if (this.selectedInput.lastElementChild) {\n                            this.selectedInput.lastElementChild.remove();\n                            let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                            let n = Math.floor(this.inputIndex / 3) - 1;\n                            if (array[n].slice(-5) === '^tab^') {\n                                array[n] = array[n].slice(0, array[n].length - 6);\n                                if (this.tabCount > 1) this.tabCount--;\n                                this.tabMode = !this.tabMode;\n                                this.selectedInput.classList.add('tab');\n                                if (!this.tabMode) this.selectedInput.classList.remove('tab');\n                            } else array[n] = array[n].slice(0, array[n].length - 1);\n                            Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                value: array\n                            });\n                            this.keys--;\n                            if (this.tabMode) this.tabulator = this.tabulator.slice(0, this.tabulator.length - 1);\n                        } else if (this.tabMode) this.cancelTabMode();\n                        return;\n                    } else if (event.key === 'Tab') {\n                        if (!this.tabMode) {\n                            if (this.tabCount >= 2) {\n                                let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                let n = Math.floor(this.inputIndex / 3) - 1;\n                                let index;\n                                while(array[n].search('\\\\^tab\\\\^') !== -1){\n                                    let c = array[n].search('\\\\^tab\\\\^');\n                                    if (index === undefined) index = c;\n                                    array[n] = array[n].slice(0, c) + array[n].slice(c + 5, array[n].length);\n                                }\n                                array[n] = array[n].slice(0, index) + '^tab^' + array[n].slice(index, array[n].length);\n                                Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                    value: array\n                                });\n                                let tabulatorStyle = false;\n                                for(let i = 0; i < array[n].length; i++){\n                                    if (array[n].slice(i, i + 5) === '^tab^') {\n                                        tabulatorStyle = !tabulatorStyle;\n                                        i += 4;\n                                    } else if (this.selectedInput.children[i > index ? i - 5 : i]) {\n                                        let object = this.selectedInput.children[i > index ? i - 5 : i];\n                                        let svg = object.contentDocument;\n                                        svg.querySelector('#tspan7').innerHTML = array[n].charAt(i);\n                                        if (tabulatorStyle) {\n                                            this.tabulatorAnimation(object);\n                                            object.classList.add('tabulator');\n                                        } else object.classList.remove('tabulator');\n                                        this.selectedInput.children[i];\n                                    }\n                                }\n                                this.tabulator = array[n].slice(index + 5, array[n].length);\n                                this.tabCount = 1;\n                                this.tabMode = true;\n                                this.selectedInput.classList.add('tab');\n                            } else {\n                                this.tabMode = true;\n                                this.selectedInput.classList.add('tab');\n                                let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                array[Math.floor(this.inputIndex / 3) - 1] += \"^tab^\";\n                                Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                    value: array\n                                });\n                                this.tabCount++;\n                            }\n                        } else if (this.tabulator.length > 0) {\n                            if (Object.values(this.currentWord)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1].slice(-5) != '^tab^') {\n                                this.tabMode = false;\n                                this.selectedInput.classList.remove('tab');\n                                let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                array[Math.floor(this.inputIndex / 3) - 1] += \"^tab^\";\n                                Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                    value: array\n                                });\n                                this.tabCount++;\n                            } else {\n                                let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                                let n = Math.floor(this.inputIndex / 3) - 1;\n                                array[n] += this.tabulator + \"^tab^\";\n                                let index = array[n].search(this.tabulator);\n                                if (index === -1) index = 0;\n                                if (this.keys + this.tabulator.length <= Math.floor(this.selectedInput.clientWidth / (this.selectedInput.clientHeight - parseFloat(this.selectedInput.style.padding)))) for(let i = 0; i < this.tabulator.length; i++){\n                                    let object = document.createElement('object');\n                                    object.data = './keys/OG_T.svg';\n                                    object.id = `key${this.keys}-inp${this.inputIndex}`;\n                                    object.style.height = `100%`;\n                                    this.selectedInput.insertAdjacentElement('beforeend', object);\n                                    object.hidden = true;\n                                    object.addEventListener('load', (_)=>{\n                                        object.hidden = false;\n                                        this.tabulatorAnimation(object);\n                                        object.classList.add('tabulator');\n                                        let svg = object.contentDocument;\n                                        svg.querySelector('#tspan7').innerHTML = this.tabulator.charAt(i);\n                                        this.tabulator.length;\n                                    });\n                                    this.keys++;\n                                }\n                                else {\n                                    for(let ii = 0; ii < this.keys; ii++)this.failureAnimation(this.selectedInput.children[ii]);\n                                    return;\n                                }\n                                Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                                    value: array\n                                });\n                                this.tabMode = false;\n                                this.tabCount++;\n                                this.selectedInput.classList.remove('tab');\n                            }\n                        } else {\n                            this.tabCount = 0;\n                            this.cancelTabMode();\n                        }\n                        return;\n                    } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) return;\n                    this.enterMode = false;\n                    let object = document.createElement('object');\n                    object.data = './keys/OG_T.svg';\n                    object.id = `key${this.keys}-inp${this.inputIndex}`;\n                    object.style.height = `100%`;\n                    this.selectedInput.insertAdjacentElement('beforeend', object);\n                    let width = object.clientHeight;\n                    object.hidden = true;\n                    object.addEventListener('load', (_)=>{\n                        if (this.keys + 1 >= Math.floor(this.selectedInput.clientWidth / width)) {\n                            object.remove();\n                            for(let i = 0; i < this.keys; i++)this.failureAnimation(this.selectedInput.children[i]);\n                            return;\n                        }\n                        object.hidden = false;\n                        let svg = object.contentDocument;\n                        svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\n                        let n = Math.floor(this.inputIndex / 3) - 1;\n                        let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n                        array[n] += event.key;\n                        Object.defineProperty(this.currentWord, Object.keys(this.currentWord)[this.inputIndex % 3 - 1], {\n                            value: array\n                        });\n                        if (this.tabMode) {\n                            if (array[n].slice(-6, -1) === '^tab^') this.tabulator = '';\n                            this.tabulator += event.key;\n                            this.tabulatorAnimation(object);\n                            object.classList.add('tabulator');\n                        } else this.idleAnimation(object);\n                        this.keys++;\n                    });\n                };\n                document.addEventListener('keydown', this.keydownFunction);\n                window.onkeyup = (event)=>{\n                    if (event.key === 'Tab') this.container.focus();\n                };\n                break;\n            default:\n                break;\n        }\n    }\n    empty(param) {\n        let l = param.includes('verb') ? 3 : 6;\n        let array = [];\n        for(let i = 0; i < l; i++)array.push('');\n        return array;\n    }\n    changeSelectedInput() {\n        document.querySelectorAll('.selectedElement').forEach((elem)=>elem.classList.remove('selectedElement'));\n        this.selectedInput = document.getElementById(`div${this.inputIndex}`);\n        let word = Object.values(this.currentWord)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1];\n        let regex = new RegExp('\\\\^tab\\\\^', 'g');\n        let matches = word.match(regex);\n        this.tabCount = matches ? matches.length : 0;\n        if (!matches ? false : matches.length % 2 === 0) this.selectedInput.classList.remove('tab');\n        this.selectedInput.classList.add('selectedElement');\n    }\n    cancelTabMode() {\n        let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\n        let n = Math.floor(this.inputIndex / 3) - 1;\n        if (array[n].includes('^tab^')) {\n            let start_end = [];\n            while(array[n].search('\\\\^tab\\\\^') >= 0){\n                let c = array[n].search('\\\\^tab\\\\^');\n                array[n] = array[n].slice(0, c) + array[n].slice(c + 5, array[n].length);\n                start_end.push(c);\n            }\n            if (start_end.length === 1) start_end.push(array[n].length);\n            let tab = array[n].slice(start_end[0], start_end[1]);\n            for(let i = 0; i < tab.length; i++)this.selectedInput.children[start_end[0]].remove();\n            array[n] = array[n].slice(0, start_end[0]) + array[n].slice(start_end[1], array[n].length);\n            this.keys -= tab.length;\n        }\n        this.tabMode = false;\n        this.selectedInput.classList.remove('tab');\n    }\n    findMostUsedTabulator(inflectedWord) {\n        if (inflectedWord.singular) {\n            let tabs = inflectedWord.singular.map((word)=>{\n                if (word.includes('^tab^')) {\n                    let w = word;\n                    let start;\n                    let end = w.length;\n                    while(w.includes('^tab^')){\n                        let index = w.search('\\\\^tab\\\\^');\n                        w = w.slice(0, index) + w.slice(index + 5, end);\n                        if (start === undefined) start = index;\n                        else end = index;\n                    }\n                    return w.slice(start ? start : 0, end);\n                }\n            }).concat(inflectedWord.plural.map((word)=>{\n                if (word.includes('^tab^')) {\n                    let w = word;\n                    let start;\n                    let end = w.length;\n                    while(w.includes('^tab^')){\n                        let index = w.search('\\\\^tab\\\\^');\n                        w = w.slice(0, index) + w.slice(index + 5, end);\n                        if (start === undefined) start = index;\n                        else end = index;\n                    }\n                    return w.slice(start ? start : 0, end);\n                }\n            })).filter((word)=>word != undefined);\n            let checkedTabs = [];\n            tabs.forEach((tab)=>{\n                if (!checkedTabs.map((t)=>t[0]).includes(tab)) checkedTabs.push([\n                    tab,\n                    1\n                ]);\n                else {\n                    let i = checkedTabs.findIndex((t)=>t[0] === tab);\n                    checkedTabs[i] = [\n                        tab,\n                        checkedTabs[i][1] + 1\n                    ];\n                }\n            });\n            for(let i = 0; i < checkedTabs.length; i++)checkedTabs.sort((a, b)=>b[1] - a[1]);\n            return checkedTabs.length > 0 ? checkedTabs[0][0] : undefined;\n        } else return undefined;\n    }\n    startNewTrainingRound(param) {\n        let vocab = this.vocabulary.filter((w)=>w.verb === param.includes('verb'));\n        if (vocab.length === 0) {\n            setTimeout((_)=>alert(`Keine ${param.includes('verb') ? 'Konjugationen' : 'Deklinationen'}!`), 250);\n            return;\n        } else if (vocab.filter((w)=>!isEmpty(w)).length === 0) {\n            setTimeout((_)=>alert(`Nur leere ${param.includes('verb') ? 'Konjugationen' : 'Deklinationen'}!`), 250);\n            return;\n        }\n        function isEmpty(w) {\n            return w.singular.filter((s)=>s.trim() === '').length === (param.includes('verb') ? 6 : 3) && w.plural.filter((p)=>p.trim() === '').length === (param.includes('verb') ? 6 : 3);\n        }\n        this.round++;\n        let overallProbabilty = 0;\n        vocab.forEach((word)=>{\n            if (!isEmpty(word)) overallProbabilty += word.probability;\n        });\n        let randomNumber = Math.floor(Math.random() * overallProbabilty * 10) / 10;\n        let lowestDifference;\n        let lastProbability = 0;\n        this.failures = 0;\n        this.vocabulary.forEach((word, i)=>{\n            if (!isEmpty(word) && word.verb === param.includes('verb')) {\n                if (lowestDifference === undefined) {\n                    lowestDifference = Math.abs(randomNumber - (lastProbability + word.probability));\n                    this.currentWord = word;\n                    this.currentWordIndex = i;\n                } else if (Math.abs(randomNumber - (lastProbability + word.probability)) < lowestDifference) {\n                    lowestDifference = Math.abs(randomNumber - (lastProbability + word.probability));\n                    this.currentWordIndex = i;\n                    this.currentWord = word;\n                }\n                lastProbability += word.probability;\n            }\n        });\n        this.tabulator = this.findMostUsedTabulator(this.currentWord);\n        document.querySelectorAll('.editable').forEach((div)=>{\n            div.innerHTML = '';\n            div.classList.remove('redShadowDesign');\n            div.classList.remove('greenShadowDesign');\n            div.classList.remove('known-case');\n            div.classList.add('shadowDesign');\n        });\n        let knownCase;\n        let rn;\n        let v = this.v / 3;\n        do {\n            rn = Math.floor(Math.random() * (param.includes('verb') ? 6 : 12));\n            knownCase = Object.values(this.vocabulary[this.currentWordIndex])[rn > 5 - v ? 1 : 0][rn > 5 - v ? rn - 6 + v : rn];\n        }while (knownCase === '');\n        while(knownCase.includes('^tab^')){\n            let index = knownCase.search('\\\\^tab\\\\^');\n            knownCase = knownCase.slice(0, index) + knownCase.slice(index + 5, knownCase.length);\n        }\n        let specificationDiv = document.getElementById(`div${rn > 5 - v ? 2 + (rn - 5 + v) * 3 : 1 + (rn + 1) * 3}`);\n        specificationDiv.classList.add('known-case');\n        specificationDiv.innerHTML = `<span>${knownCase}</span>`;\n        let array = this.empty(param);\n        array[rn > 5 - v ? rn - 6 + v : rn] = knownCase;\n        this.currentWord = {\n            singular: rn <= 5 - v ? array : this.empty(param),\n            plural: rn > 5 - v ? array : this.empty(param),\n            verb: param.includes('verb'),\n            probability: this.currentWord.probability\n        };\n        this.result = {\n            singular: param.includes('verb') ? [\n                undefined,\n                undefined,\n                undefined\n            ] : [\n                undefined,\n                undefined,\n                undefined,\n                undefined,\n                undefined,\n                undefined\n            ],\n            plural: param.includes('verb') ? [\n                undefined,\n                undefined,\n                undefined\n            ] : [\n                undefined,\n                undefined,\n                undefined,\n                undefined,\n                undefined,\n                undefined\n            ]\n        };\n    }\n    compare(string1, string2) {\n        while(string1.includes('^tab^')){\n            let index = string1.search('\\\\^tab\\\\^');\n            string1 = string1.slice(0, index) + string1.slice(index + 5, string1.length);\n        }\n        while(string2.includes('^tab^')){\n            let index = string2.search('\\\\^tab\\\\^');\n            string2 = string2.slice(0, index) + string2.slice(index + 5, string2.length);\n        }\n        return string1 === string2;\n    }\n    compareObjects(obj1, obj2) {\n        let object1 = JSON.parse(JSON.stringify(obj1));\n        let object2 = JSON.parse(JSON.stringify(obj2));\n        object1.singular.forEach((word, i)=>{\n            while(word.includes('^tab^')){\n                let index = word.search('\\\\^tab\\\\^');\n                word = word.slice(0, index) + word.slice(index + 5, word.length);\n            }\n            object1.singular[i] = word;\n        });\n        object1.plural.forEach((word, i)=>{\n            while(word.includes('^tab^')){\n                let index = word.search('\\\\^tab\\\\^');\n                word = word.slice(0, index) + word.slice(index + 5, word.length);\n            }\n            object1.plural[i] = word;\n        });\n        object2.singular.forEach((word, i)=>{\n            while(word.includes('^tab^')){\n                let index = word.search('\\\\^tab\\\\^');\n                word = word.slice(0, index) + word.slice(index + 5, word.length);\n            }\n            object2.singular[i] = word;\n        });\n        object2.plural.forEach((word, i)=>{\n            while(word.includes('^tab^')){\n                let index = word.search('\\\\^tab\\\\^');\n                word = word.slice(0, index) + word.slice(index + 5, word.length);\n            }\n            object2.plural[i] = word;\n        });\n        return Object.values(object1).slice(0, 3).toLocaleString() === Object.values(object2).slice(0, 3).toLocaleString();\n    }\n    failureAnimation(object) {\n        if (!object) return;\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = [\n            {\n                stroke: this.badColor,\n                offset: 0.025\n            },\n            {\n                rotate: \"10deg z\",\n                offset: 0.25\n            },\n            {\n                rotate: \"0deg z\",\n                offset: 0.5\n            },\n            {\n                rotate: \"-10deg z\",\n                offset: 0.75,\n                stroke: this.badColor\n            },\n            {\n                stroke: \"#eeeeeeff\",\n                offset: 0.925\n            },\n            {\n                rotate: \"0deg z\",\n                offset: 1\n            }\n        ];\n        let animationOptions = {\n            duration: 500\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    idleAnimation(object) {\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#8f8f8f',\n                '#fff',\n                '#eeeeeeff'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 250\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    tabulatorAnimation(object) {\n        if (!object) return;\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#eeeeeeff',\n                this.badColor === 'rgb(186, 2, 70)' ? '#4400ff' : 'rgb(211, 0, 0)'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 250,\n            fill: 'forwards'\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    successAnimation(object) {\n        if (!object) return;\n        let svg = object.contentDocument;\n        let rect = svg.querySelector('#mainRect');\n        let text = svg.querySelector('#text7');\n        let animationKeyframes = {\n            stroke: [\n                '#eeeeeeff',\n                '#08a000',\n                '#eeeeeeff'\n            ],\n            offset: [\n                0,\n                1\n            ]\n        };\n        let animationOptions = {\n            duration: 500\n        };\n        rect.animate(animationKeyframes, animationOptions);\n        text.animate(animationKeyframes, animationOptions);\n    }\n    deletionAnimation(element, duration, direction) {\n        if (element.tagName === 'OBJECT') {\n            let object = element;\n            let svg = object.contentDocument;\n            let rect = svg.querySelector('#mainRect');\n            let text = svg.querySelector('#text7');\n            let animationKeyframes = {\n                stroke: [\n                    object.classList.contains('tabulator') ? this.badColor === 'rgb(186, 2, 70)' ? '#4400ff' : 'rgb(211, 0, 0)' : '#eeeeeeff',\n                    this.badColor\n                ],\n                offset: [\n                    0,\n                    1\n                ]\n            };\n            let animationOptions = {\n                duration: duration,\n                fill: 'forwards',\n                direction: direction\n            };\n            rect.animate(animationKeyframes, animationOptions);\n            text.animate(animationKeyframes, animationOptions);\n        } else if (element.tagName === 'BUTTON') {\n            let animationKeyframes = {\n                backgroundColor: [\n                    this.badColor === 'rgb(186, 2, 70)' ? '#ff0000' : this.badColor,\n                    this.badColor === 'rgb(186, 2, 70)' ? '#ba0303' : '#ad0668'\n                ],\n                boxShadow: [\n                    `0 0 0 0 ${this.badColor === 'rgb(186, 2, 70)' ? '#ba0303' : '#ad0668'}`,\n                    `0 0 1vh 1vh ${this.badColor === 'rgb(186, 2, 70)' ? '#ff0000' : this.badColor}`\n                ],\n                color: [\n                    '#ffffff',\n                    '#eeffff'\n                ],\n                border: [\n                    'none',\n                    'none'\n                ],\n                offset: [\n                    0,\n                    1\n                ]\n            };\n            let animationOptions = {\n                duration: duration,\n                fill: 'forwards',\n                direction: direction\n            };\n            element.animate(animationKeyframes, animationOptions);\n        }\n    }\n}\n\n\nfunction $543d6d2a56ed7d8d$export$331ff980f0d45cff(id, c, width, height) {\n    let div = document.createElement('div');\n    if (id) div.id = id;\n    if (c) div.classList.add(c);\n    if (height && width) {\n        div.style.height = height;\n        div.style.width = width;\n    }\n    return div;\n}\nconst $543d6d2a56ed7d8d$export$abeb1bd8b6f9168 = new (0, $4d277e047e39cff6$export$69a62912f7243a04)();\nconst $543d6d2a56ed7d8d$export$927980128d33596b = new (0, $5e3b93ee4c6a7549$export$d5e53f8bbb738c78)();\nconst $543d6d2a56ed7d8d$export$e73a7799776ae73d = new (0, $b6fe10105ad30798$export$564a2d2b8c542ee9)();\nconst $543d6d2a56ed7d8d$export$82d34e6fb29a1ab3 = new (0, $b9cb672cfbcff24a$export$b0b374fde95c381e)();\nconst $543d6d2a56ed7d8d$export$d12a05a2da93ee73 = new (0, $0605b9bc60daa790$export$70f2439247e54615)();\nfunction $543d6d2a56ed7d8d$export$7aa98d28c688390a() {\n    document.removeEventListener('keydown', $543d6d2a56ed7d8d$export$abeb1bd8b6f9168.keyDownFunction);\n    document.removeEventListener('keydown', $543d6d2a56ed7d8d$export$e73a7799776ae73d.keyDownFunction);\n    document.removeEventListener('keydown', $543d6d2a56ed7d8d$export$d12a05a2da93ee73.keyDownFunction);\n    document.removeEventListener('keydown', $543d6d2a56ed7d8d$export$82d34e6fb29a1ab3.keydownFunction);\n    document.removeEventListener('mouseover', $543d6d2a56ed7d8d$export$e73a7799776ae73d.mouseOverFunction);\n    window.removeEventListener('resize', $543d6d2a56ed7d8d$export$d12a05a2da93ee73.resizeFunction);\n    window.removeEventListener('resize', $543d6d2a56ed7d8d$export$e73a7799776ae73d.resizeFunction);\n}\n\n\n//# sourceMappingURL=index.e3b80da5.js.map\n","function e(e,t,n,i){let s=document.createElement(\"div\");return e&&(s.id=e),t&&s.classList.add(t),i&&n&&(s.style.height=i,s.style.width=n),s}const t=new class{constructor(){this.vocabulary=[],this.wordIndex=0,this.enterMode=!1;let e=window.indexedDB.open(\"Vocabulary\",1);e.addEventListener(\"error\",t=>{console.error(\"There is an error. Have fun fixing it. Details:\"+e.error)}),e.addEventListener(\"success\",t=>{this.database=e.result;let n=this.database.transaction(\"vocabulary\",\"readonly\");n.onerror=e=>console.error(n.error);let i=n.objectStore(\"vocabulary\").getAll();i.onerror=e=>console.error(i.error),i.onsuccess=e=>{this.vocabulary=i.result,this.wordIndex=this.vocabulary.length}}),e.addEventListener(\"upgradeneeded\",t=>{let n=e.result,i=n.createObjectStore(\"vocabulary\",{autoIncrement:!0});i.createIndex(\"latinWord\",\"latinWord\",{unique:!1}),i.createIndex(\"inflections\",\"inflections\",{unique:!1}),i.createIndex(\"germanTranslation\",\"germanTranslation\",{unique:!1}),i.createIndex(\"relatedForeignWords\",\"relatedForeignWords\",{unique:!1}),i.createIndex(\"selected\",\"selected\",{unique:!1}),i.createIndex(\"probability\",\"probability\",{unique:!1});let s=n.createObjectStore(\"inflected vocabulary\",{autoIncrement:!0});s.createIndex(\"singular\",\"singular\",{unique:!1}),s.createIndex(\"plural\",\"plural\",{unique:!1}),s.createIndex(\"verb\",\"verb\",{unique:!1}),s.createIndex(\"probability\",\"probability\",{unique:!1}),this.database=e.result});let t=window.indexedDB.open(\"player data\",1);t.addEventListener(\"upgradeneeded\",e=>{let n=t.result;n.objectStoreNames.contains(\"versions played\")||n.createObjectStore(\"versions played\",{autoIncrement:!0}),t.addEventListener(\"success\",e=>{let n=t.result.transaction(\"versions played\",\"readwrite\");n.objectStore(\"versions played\").add(\"Beta\"),n.oncomplete=()=>{console.log(\"Data added successfully\")},n.onerror=e=>{console.error(\"Transaction error:\",t.error)}}),t.addEventListener(\"error\",e=>{console.error(\"Database error:\",t.error)})})}modifyDocument(){let t=window.indexedDB.open(\"Vocabulary\",1);t.addEventListener(\"error\",e=>{console.error(\"There is an error. Have fun fixing it. Details:\"+t.error)}),t.addEventListener(\"success\",n=>{this.database=t.result;let i=this.database.transaction(\"vocabulary\",\"readonly\");i.onerror=e=>console.error(i.error);let s=i.objectStore(\"vocabulary\").getAll();s.onerror=e=>console.error(s.error),s.onsuccess=t=>{this.vocabulary=s.result,this.wordIndex=this.vocabulary.length,this.container=document.querySelector(\"#container\"),this.iconPlaceholder=document.querySelector(\"#icon-placeholder\"),this.navbar=document.querySelector(\"#navbar\"),this.container.style.padding=\"0\",document.body.style.backgroundImage=\"none\",document.body.setAttribute(\"class\",\"\"),this.container.setAttribute(\"class\",\"\"),this.iconPlaceholder.setAttribute(\"class\",\"\"),this.navbar.setAttribute(\"class\",\"\"),this.container.innerHTML=\"\",this.iconPlaceholder.innerHTML=\"\",this.navbar.innerHTML=\"\",document.querySelector(\"body\").classList.add(\"addVocabularyBody\"),this.iconPlaceholder.classList.add(\"addVocabularyIconPlaceholder\");let n=document.createElement(\"object\");n.data=\"./add_vocabulary.svg\",n.id=\"addVocabularyIcon\",this.iconPlaceholder.insertAdjacentElement(\"beforeend\",n),this.container.classList.add(\"addVocabularyContainer\");let i=\"inp bg inp bg inp bg inp\".split(\" \");for(let t=0;t<i.length;t++){let n=e(`div${t}`,`${i[t]}`,\"100%\",`${100/i.length}%`);this.container.appendChild(n),n.style.padding=`${.05*n.offsetHeight}px`}this.navbar.classList.add(\"addVocabularyNavbar\"),this.buttonLeft=document.createElement(\"button\"),this.buttonLeft.classList.add(\"navButton\"),this.buttonLeft.innerHTML=\"<\",this.navbar.appendChild(this.buttonLeft),this.homeButton=document.createElement(\"button\"),this.homeButton.classList.add(\"navButton\");let l=document.createElement(\"object\");l.classList.add(\"homeIcon\"),l.data=\"./home.svg\",l.style.height=\"9vh\",l.addEventListener(\"load\",e=>{l.contentDocument.addEventListener(\"click\",e=>{o(),r.modifyDocument()})}),this.homeButton.insertAdjacentElement(\"beforeend\",l),this.navbar.appendChild(this.homeButton),this.buttonRight=document.createElement(\"button\"),this.buttonRight.classList.add(\"navButton\"),this.buttonRight.innerHTML=\">\",this.navbar.appendChild(this.buttonRight),this.type()}})}type(){let t,n=[0,2,4,6],i=0,s=0,l={latinWord:\"\",inflections:\"\",germanTranslation:\"\",relatedForeignWords:\"\",selected:!0,probability:1};for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].addEventListener(\"click\",n=>{for(let n=0;n<this.container.childElementCount;n+=2)this.container.children[n]===this.container.children[e]?(i=n/2,(t=this.container.children[n]).classList.add(\"selected\"),s=t.childElementCount):this.container.children[n].classList.remove(\"selected\")});this.container.children[n[i]].classList.add(\"selected\");let a=(t=this.container.children[n[i]]).appendChild(e(\"temporary\")),c=t.offsetHeight-(t.clientHeight-a.clientHeight)-parseFloat(t.style.padding);this.maxCharacters=Math.floor(window.innerWidth/c),a.remove(),this.homeButton.addEventListener(\"click\",e=>{o(),r.modifyDocument()}),this.buttonLeft.addEventListener(\"mousedown\",e=>{for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].classList.add(\"shadow\"),this.buttonLeft.classList.add(\"clicked\")}),this.buttonRight.addEventListener(\"mousedown\",e=>{for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].classList.add(\"shadow\"),this.buttonRight.classList.add(\"clicked\")}),this.buttonLeft.addEventListener(\"mouseout\",e=>{for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].classList.remove(\"shadow\"),this.buttonLeft.classList.remove(\"clicked\")}),this.buttonRight.addEventListener(\"mouseout\",e=>{for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].classList.remove(\"shadow\"),this.buttonRight.classList.remove(\"clicked\")}),this.buttonLeft.addEventListener(\"mouseup\",e=>{if(this.vocabulary[this.wordIndex-1]){if(4===Object.values(l).filter(e=>\"\"===e).length&&this.wordIndex===this.vocabulary.length){for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].classList.remove(\"shadow\");this.wordIndex--,l=this.vocabulary[this.wordIndex];for(let e=0;e<this.container.childElementCount;e+=2){let t=Object.values(l)[e/2];this.container.children[e].innerHTML=\"\";for(let n=0;n<t.length;n++){let i=document.createElement(\"object\");i.data=\"./keys/OG_T.svg\",i.id=`key${n}-inp${e/2}`,i.style.height=\"100%\",this.container.children[e].insertAdjacentElement(\"beforeend\",i),i.addEventListener(\"load\",e=>{i.contentDocument.querySelector(\"#tspan7\").innerHTML=t.charAt(n)})}}}else{this.vocabulary[this.wordIndex]=l;let e=this.database.transaction(\"vocabulary\",\"readwrite\");e.onerror=t=>console.error(e.error);let t=e.objectStore(\"vocabulary\"),n=t.get(this.wordIndex);n.onerror=e=>console.error(n.error),n.onsuccess=e=>{for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].classList.remove(\"shadow\");let n=t.put(l,this.wordIndex+1);n.onerror=e=>console.error(n.error),this.wordIndex--,l=this.vocabulary[this.wordIndex];for(let e=0;e<this.container.childElementCount;e+=2){let t=Object.values(l)[e/2];this.container.children[e].innerHTML=\"\";for(let n=0;n<t.length;n++){let i=document.createElement(\"object\");i.data=\"./keys/OG_T.svg\",i.id=`key${n}-inp${e/2}`,i.style.height=\"100%\",this.container.children[e].insertAdjacentElement(\"beforeend\",i),i.addEventListener(\"load\",e=>{i.contentDocument.querySelector(\"#tspan7\").innerHTML=t.charAt(n)})}}}}}}),this.buttonRight.addEventListener(\"mouseup\",e=>{if(this.buttonRight.classList.remove(\"clicked\"),this.vocabulary[this.wordIndex+1]){this.vocabulary[this.wordIndex]=l;for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].classList.remove(\"shadow\");let e=this.database.transaction(\"vocabulary\",\"readwrite\");e.onerror=t=>console.error(e.error);let t=e.objectStore(\"vocabulary\"),n=t.get(this.wordIndex);n.onerror=e=>console.error(n.error),n.onsuccess=e=>{let n=t.put(l,this.wordIndex+1);n.onerror=e=>console.log(n.error),this.wordIndex++,l=this.vocabulary[this.wordIndex];for(let e=0;e<this.container.childElementCount;e+=2){let t=Object.values(l)[e/2];this.container.children[e].innerHTML=\"\";for(let n=0;n<t.length;n++){let i=document.createElement(\"object\");i.data=\"./keys/OG_T.svg\",i.id=`key${n}-inp${e/2}`,i.style.height=\"100%\",this.container.children[e].insertAdjacentElement(\"beforeend\",i),i.addEventListener(\"load\",e=>{i.contentDocument.querySelector(\"#tspan7\").innerHTML=t.charAt(n)})}}}}else{this.vocabulary[this.wordIndex]=l;let e=this.database.transaction(\"vocabulary\",\"readwrite\");e.onerror=t=>console.error(e.error);let n=e.objectStore(\"vocabulary\").put(l,this.wordIndex+1);n.onerror=e=>console.error(n.error),e.oncomplete=e=>{for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].classList.remove(\"shadow\");this.wordIndex++,s=0,l={latinWord:\"\",inflections:\"\",germanTranslation:\"\",relatedForeignWords:\"\",selected:!0,probability:1};for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].innerHTML=\"\",i=0,(t=this.container.children[0]).classList.add(\"selected\"),0!=e&&this.container.children[e].classList.remove(\"selected\")}}}),this.keyDownFunction=e=>{if(\"Backspace\"===e.key){t.lastElementChild&&(t.lastElementChild.remove(),Object.defineProperty(l,Object.keys(l)[i],{value:Object.values(l)[i].slice(0,s-1)}),s--);return}if(\"Enter\"===e.key||\"ArrowDown\"===e.key){if(i+1<4){i++,t=this.container.children[n[i]];for(let e=0;e<this.container.childElementCount;e++)this.container.children[e]!=t?this.container.children[e].classList.remove(\"selected\"):(t.classList.add(\"selected\"),s=t.childElementCount)}else{for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].classList.add(\"shadow\");if(this.enterMode){if(this.buttonRight.classList.remove(\"clicked\"),this.vocabulary[this.wordIndex+1]){this.vocabulary[this.wordIndex]=l;for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].classList.remove(\"shadow\");let e=this.database.transaction(\"vocabulary\",\"readwrite\");e.onerror=t=>console.error(e.error);let t=e.objectStore(\"vocabulary\"),n=t.get(this.wordIndex);n.onerror=e=>console.error(n.error),n.onsuccess=e=>{let n=t.put(l,this.wordIndex+1);n.onerror=e=>console.log(n.error),this.wordIndex++,l=this.vocabulary[this.wordIndex];for(let e=0;e<this.container.childElementCount;e+=2){let t=Object.values(l)[e/2];this.container.children[e].innerHTML=\"\";for(let n=0;n<t.length;n++){let i=document.createElement(\"object\");i.data=\"./keys/OG_T.svg\",i.id=`key${n}-inp${e/2}`,i.style.height=\"100%\",this.container.children[e].insertAdjacentElement(\"beforeend\",i),i.addEventListener(\"load\",e=>{i.contentDocument.querySelector(\"#tspan7\").innerHTML=t.charAt(n)})}}}}else{this.vocabulary[this.wordIndex]=l;let e=this.database.transaction(\"vocabulary\",\"readwrite\");e.onerror=t=>console.error(e.error);let n=e.objectStore(\"vocabulary\").put(l,this.wordIndex+1);n.onerror=e=>console.error(n.error),e.oncomplete=e=>{for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].classList.remove(\"shadow\");this.wordIndex++,s=0,l={latinWord:\"\",inflections:\"\",germanTranslation:\"\",relatedForeignWords:\"\",selected:!0,probability:1};for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].innerHTML=\"\",i=0,(t=this.container.children[0]).classList.add(\"selected\"),0!=e&&this.container.children[e].classList.remove(\"selected\")}}this.enterMode=!1}else this.enterMode=!0;let e=this.database.transaction(\"vocabulary\",\"readwrite\");e.onerror=t=>console.error(e.error);let n=e.objectStore(\"vocabulary\").put(l,this.wordIndex+1);n.onerror=e=>console.error(n.error),setTimeout(e=>{for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].classList.remove(\"shadow\")},250)}return}if(\"ArrowUp\"===e.key){i>0&&i--,t=this.container.children[n[i]];for(let e=0;e<this.container.childElementCount;e++)this.container.children[e]!=t?this.container.children[e].classList.remove(\"selected\"):(t.classList.add(\"selected\"),s=t.childElementCount);return}if([\"<\",\"´\",\"`\",\"^\"].includes(e.key)||e.key.length>1)return;let r=document.createElement(\"object\");r.data=\"./keys/OG_T.svg\",r.id=`key${s}-inp${i}`,r.style.height=\"100%\",t.insertAdjacentElement(\"beforeend\",r);let o=r.clientHeight;r.hidden=!0,r.addEventListener(\"load\",n=>{if(s>=Math.floor(window.innerWidth/o)){r.remove();for(let e=0;e<s;e++)this.failureAnimation(t.children[e]);return}r.hidden=!1,r.contentDocument.querySelector(\"#tspan7\").innerHTML=e.key.charAt(0),Object.defineProperty(l,Object.keys(l)[i],{value:Object.values(l)[i]+e.key.charAt(0)}),s++,this.idleAnimation(r)})},document.addEventListener(\"keydown\",this.keyDownFunction)}failureAnimation(e){if(!e)return;let t=e.contentDocument,n=t.querySelector(\"#mainRect\"),i=t.querySelector(\"#text7\"),s=[{stroke:\"rgb(186, 2, 70)\",offset:.025},{rotate:\"10deg z\",offset:.25},{rotate:\"0deg z\",offset:.5},{rotate:\"-10deg z\",offset:.75,stroke:\"rgb(186, 2, 70)\"},{stroke:\"#eeeeeeff\",offset:.925},{rotate:\"0deg z\",offset:1}],r={duration:500};n.animate(s,r),i.animate(s,r)}idleAnimation(e){let t=e.contentDocument,n=t.querySelector(\"#mainRect\"),i=t.querySelector(\"#text7\"),s={stroke:[\"#8f8f8f\",\"#fff\",\"#eeeeeeff\"],offset:[0,1]},r={duration:250};n.animate(s,r),i.animate(s,r)}},n=new class{constructor(){}modifyDocument(){let n=window.indexedDB.open(\"Vocabulary\",1);n.addEventListener(\"error\",e=>{this.vocabulary=[],this.modifyDocument(),console.error(n.error)}),n.addEventListener(\"success\",i=>{this.database=n.result;let s=this.database.transaction(\"vocabulary\",\"readonly\");s.onerror=e=>console.error(s.error);let l=s.objectStore(\"vocabulary\").getAll();l.onerror=e=>console.error(l.error),l.onsuccess=n=>{this.vocabulary=l.result,this.container=document.querySelector(\"#container\"),this.iconPlaceholder=document.querySelector(\"#icon-placeholder\"),this.navbar=document.querySelector(\"#navbar\"),this.container.style.padding=\"0\",document.body.style.backgroundImage=\"none\",document.body.setAttribute(\"class\",\"\"),this.container.setAttribute(\"class\",\"\"),this.iconPlaceholder.setAttribute(\"class\",\"\"),this.navbar.setAttribute(\"class\",\"\"),this.container.innerHTML=\"\",this.iconPlaceholder.innerHTML=\"\",this.navbar.innerHTML=\"\";let i=document.createElement(\"object\");i.data=\"./show_vocabulary.svg\",i.id=\"showVocabularyIcon\",this.iconPlaceholder.insertAdjacentElement(\"beforeend\",i);for(let e=0,t=\"HOME MENU\";e<t.length;e++){let n=document.createElement(\"span\");n.innerText=t[e],this.navbar.insertAdjacentElement(\"beforeend\",n)}let s=e=>{o(),this.navbar.removeEventListener(\"click\",s),r.modifyDocument()};this.navbar.addEventListener(\"click\",s),document.body.classList.add(\"showVocabularyBody\"),this.container.classList.add(\"showVocabularyContainer\"),this.iconPlaceholder.classList.add(\"showVocabularyIconPlaceholder\"),this.navbar.classList.add(\"showVocabularyNavbar\");let a=\"\";this.vocabulary.forEach((n,i)=>{a+=\"auto \";let s=e(`checkboxDiv${i}`,\"word\"),r=e(`latinWord${i}`,\"word\"),o=e(`inflections${i}`,\"word\"),l=e(`germanTranslation${i}`,\"word\"),c=e(`relatedForeignWords${i}`,\"word\");s.classList.add(\"cdiv\"),s.innerHTML=`<input type=\"checkbox\" id=\"C${i}\" class=\"checkbox\" ${n.selected?\"checked\":\"\"}></input>`,r.innerHTML=`<input type=\"text\" id=\"0-${i}\" class=\"edit\" value=\"${\"\"===n.latinWord?\" \":n.latinWord}\" maxlength=\"${n.latinWord.length>t.maxCharacters?n.latinWord.length:t.maxCharacters}\"></input>`,o.innerHTML=`<input type=\"text\" id=\"1-${i}\" class=\"edit\" value=\"${\"\"===n.inflections?\" \":n.inflections}\" maxlength=\"${n.inflections.length>t.maxCharacters?n.inflections.length:t.maxCharacters}\"></input>`,l.innerHTML=`<input type=\"text\" id=\"2-${i}\" class=\"edit\" value=\"${\"\"===n.germanTranslation?\" \":n.germanTranslation}\" maxlength=\"${n.germanTranslation.length>t.maxCharacters?n.germanTranslation.length:t.maxCharacters}\"></input>`,c.innerHTML=`<input type=\"text\" id=\"3-${i}\" class=\"edit\" value=\"${\"\"===n.relatedForeignWords?\" \":n.relatedForeignWords}\" maxlength=\"${n.relatedForeignWords.length>t.maxCharacters?n.relatedForeignWords.length:t.maxCharacters}\"></input>`,this.container.append(s,r,o,l,c)}),this.container.style.gridTemplateRows=a;let c=document.getElementsByClassName(\"edit\");for(let e=0;e<c.length;e++){let t=c.item(e);t.size=t.maxLength,t.onblur=e=>{let n=this.database.transaction(\"vocabulary\",\"readwrite\");n.onerror=e=>console.error(n.error);let i=n.objectStore(\"vocabulary\"),s=i.get(parseInt(t.id.split(\"-\")[1])+1);s.onerror=e=>console.error(s.error),s.onsuccess=e=>{let n=s.result;Object.defineProperty(n,Object.keys(n)[parseInt(t.id.split(\"-\")[0])],{value:t.value.trim()});let r=i.put(n,parseInt(t.id.split(\"-\")[1])+1);r.onerror=e=>console.error(r.error)}},t.onkeydown=e=>{\"Enter\"===e.key&&t.blur()},t.onkeyup=e=>{if(t.value.includes(\"^\")){let e=\"\";t.value.split(\"\").forEach(t=>{\"^\"!=t&&(e+=t)}),t.value=e}}}let d=document.getElementsByClassName(\"checkbox\");for(let e=0;e<d.length;e++){let t=d.item(e);t.addEventListener(\"change\",n=>{let i=this.database.transaction(\"vocabulary\",\"readwrite\");i.onerror=e=>console.error(i.error);let s=i.objectStore(\"vocabulary\"),r=s.get(parseInt(t.id.slice(1))+1);r.onerror=e=>console.error(r.error),r.onsuccess=n=>{let i=r.result;Object.defineProperty(i,\"selected\",{value:t.checked});let o=s.put(i,parseInt(t.id.slice(1))+1);o.onerror=e=>console.error(o.error),this.vocabulary[e].selected=!this.vocabulary[e].selected}})}let h=document.getElementsByClassName(\"cdiv\");for(let e=0;e<h.length;e++){let t,n,i=h[e],s=!1,r=e=>{let t=parseInt(e.target.id.slice(11));this.deleteWord(t)};i.addEventListener(\"mousemove\",o=>{o.target===i.querySelector(\"input\")?(s=!1,i.classList.remove(\"mouseon\"),clearTimeout(n),i.removeEventListener(\"click\",r),document.querySelectorAll(\".danger\").forEach(e=>e.classList.remove(\"danger\"))):s||(s=!0,t=i.innerHTML,i.classList.add(\"mouseon\"),n=setTimeout(t=>{s&&(i.innerHTML=\"<span>X</span>\",i.addEventListener(\"click\",r),document.querySelector(`#latinWord${e}`).classList.add(\"danger\"),document.querySelector(`#inflections${e}`).classList.add(\"danger\"),document.querySelector(`#germanTranslation${e}`).classList.add(\"danger\"),document.querySelector(`#relatedForeignWords${e}`).classList.add(\"danger\"))},1500))}),i.addEventListener(\"mouseleave\",o=>{if(s=!1,i.classList.remove(\"mouseon\"),clearTimeout(n),document.querySelectorAll(\".danger\").forEach(e=>e.classList.remove(\"danger\")),t&&!i.querySelector(\"input\")){i.innerHTML=t;let n=i.querySelector(\"input\");n.checked=this.vocabulary[e].selected,n.addEventListener(\"change\",t=>{let i=this.database.transaction(\"vocabulary\",\"readwrite\");i.onerror=e=>console.error(i.error);let s=i.objectStore(\"vocabulary\"),r=s.get(parseInt(n.id[n.id.length-1])+1);r.onerror=e=>console.error(r.error),r.onsuccess=t=>{let i=r.result;Object.defineProperty(i,\"selected\",{value:n.checked});let o=s.put(i,parseInt(n.id[n.id.length-1])+1);o.onerror=e=>console.error(o.error),this.vocabulary[e].selected=n.checked}})}i.removeEventListener(\"click\",r)})}}})}deleteWord(e){this.vocabulary.splice(e,1);let t=this.database.transaction(\"vocabulary\",\"readwrite\").objectStore(\"vocabulary\").openCursor();t.onsuccess=e=>{let n=t.result;if(n){let e=n.key,t=this.vocabulary[e-1];if(t){let e=n.value;e.latinWord=t.latinWord,e.inflections=t.inflections,e.germanTranslation=t.germanTranslation,e.relatedForeignWords=t.relatedForeignWords,e.selected=t.selected,e.probability=t.probability,n.update(e),n.continue()}else n.delete(),o(),this.modifyDocument()}}}},i=new class{constructor(){this.totalAttempts=0,this.totalPoints=0,this.commandMode=!1,this.command=\"\",this.inputIndex=0,this.time=0,this.round=0,this.backgroundColor=\"#140063\",setInterval(e=>this.time+=1,1),this.resizeFunction=e=>{document.querySelectorAll(\".inp\").forEach(e=>{e.firstChild&&!e.classList.contains(\"not-editable\")&&this.movementAnimation()})}}modifyDocument(){window.addEventListener(\"resize\",this.resizeFunction);let t=window.indexedDB.open(\"Vocabulary\",1);t.addEventListener(\"error\",e=>{this.vocabulary=[],this.modifyDocument(),console.error(t.error)}),t.addEventListener(\"success\",n=>{this.database=t.result;let i=this.database.transaction(\"vocabulary\",\"readonly\");i.onerror=e=>console.error(i.error);let s=i.objectStore(\"vocabulary\").getAll();s.onerror=e=>console.error(s.error),s.onsuccess=t=>{this.vocabulary=s.result,this.backgroundColor=\"#140063\",this.container=document.querySelector(\"#container\"),this.iconPlaceholder=document.querySelector(\"#icon-placeholder\"),this.navbar=document.querySelector(\"#navbar\"),this.container.style.padding=\"0\",document.body.style.backgroundImage=\"none\",document.body.setAttribute(\"class\",\"\"),this.container.setAttribute(\"class\",\"\"),this.iconPlaceholder.setAttribute(\"class\",\"\"),this.navbar.setAttribute(\"class\",\"\"),this.container.innerHTML=\"\",this.iconPlaceholder.innerHTML=\"\",this.navbar.innerHTML=\"\";let n=document.createElement(\"object\");n.data=\"./training.svg\",n.id=\"trainingIcon\",this.iconPlaceholder.insertAdjacentElement(\"beforeend\",n),document.body.classList.add(\"trainingBody\"),this.container.classList.add(\"trainingContainer\"),this.iconPlaceholder.classList.add(\"trainingIconPlaceholder\"),this.navbar.classList.add(\"trainingNavbar\");let i=\"inp bg inp bg inp bg inp\".split(\" \");for(let t=0;t<i.length;t++){let n=e(`div${t}`,`${i[t]}`,\"100%\",`${100/i.length}%`);n.classList.add(\"t\"),this.container.appendChild(n),n.style.padding=`${.05*n.offsetHeight}px`}this.mouseOverFunction=e=>{let t=document.querySelector(\".homeDiv\");if(t&&t!=e.target&&e.target!=this.navbar&&!(document.querySelector(\".homeButton\")&&e.target===document.querySelector(\".homeButton\"))&&e.target!=document.querySelector(\".homeIcon\")?(t.classList.remove(\"moveUp\"),setTimeout(e=>t.classList.add(\"moveDown\"),0)):e.target!=this.navbar&&!(document.querySelector(\".homeButton\")&&e.target===document.querySelector(\".homeButton\"))&&e.target!=document.querySelector(\".homeIcon\")||t.classList.contains(\"moveUp\")||(t.classList.remove(\"moveDown\"),t.classList.add(\"moveUp\")),!t){let e=document.createElement(\"div\");e.setAttribute(\"class\",\"homeDiv\"),this.navbar.insertAdjacentElement(\"afterend\",e);let t=document.createElement(\"div\");t.classList.add(\"homeButton\");let n=document.createElement(\"object\");n.classList.add(\"homeIcon\"),n.data=\"./home.svg\",n.style.height=\"6vh\",e.insertAdjacentElement(\"beforeend\",t),t.insertAdjacentElement(\"beforeend\",n);let i=e=>{o(),r.modifyDocument()};t.addEventListener(\"click\",i),n.addEventListener(\"load\",e=>{n.contentDocument.addEventListener(\"click\",i)})}},document.addEventListener(\"mouseover\",this.mouseOverFunction),this.type()}})}type(){let e=[0,2,4,6],n=0;for(let e=0;e<this.container.childElementCount;e+=2)this.container.children[e].addEventListener(\"click\",t=>{this.inputIndex=e/2,this.selectedInput=this.container.children[e],this.inputStyling(),n=this.selectedInput.childElementCount});for(let e=1;e<this.container.childElementCount;e+=2)this.container.children[e].addEventListener(\"click\",t=>{t.offsetY>this.container.children[e].clientHeight/2?(this.inputIndex=(e+1)/2,this.selectedInput=this.container.children[e+1]):(this.inputIndex=(e-1)/2,this.selectedInput=this.container.children[e-1]),this.inputStyling(),n=this.selectedInput.childElementCount});this.selectedInput=this.container.children[e[this.inputIndex]],this.inputStyling(),this.keyDownFunction=i=>{let s=this.commandMode,r=[\"<\",\"´\",\"`\",\"^\"];if(this.commandMode){if(\"Enter\"===i.key){switch(this.command){case\"#hint\":case\"#t\":case\"#tip\":case\"#tipp\":case\"#Tipp\":let i;this.command.split(\"\").forEach(e=>{this.returnLastElement(this.selectedInput).remove(),n--,this.selectedInput.firstChild&&this.movementAnimation()});let r=document.createElement(\"object\");r.data=\"./keys/OG_T.svg\",r.id=`key${n}-inp${this.inputIndex}`,r.style.height=\"100%\";let o=r.clientHeight,l=0,a=Object.values(this.currentWord)[this.inputIndex],c=\"\",d=!1;for(let e=0;e<a.length;e++)a[e]==Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex][e]||d?c+=a[e]:(l=e,this.vocabulary[this.currentWordIndex][Object.keys(this.vocabulary[this.currentWordIndex])[this.inputIndex]][l]?c+=this.vocabulary[this.currentWordIndex][Object.keys(this.vocabulary[this.currentWordIndex])[this.inputIndex]][l]:i=a.length-1,d=!0);if(this.currentWord[Object.keys(this.currentWord)[this.inputIndex]]=i?c.slice(0,i):c,a=i?c.slice(0,i):c,i){this.returnLastElement(this.selectedInput).remove(),this.movementAnimation(),n--,s=!1,this.commandMode=!1;break}if(!d){if(l=a.length,a.length<Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex].length)this.currentWord[Object.keys(this.currentWord)[this.inputIndex]]+=Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex][l];else{s=!1,this.commandMode=!1;break}}a.length>0&&l<a.length?(this.selectedInput.children[l].replaceWith(r),n--):this.selectedInput.insertAdjacentElement(\"beforeend\",r),r.hidden=!0,r.addEventListener(\"load\",e=>{if(n>=Math.floor(window.innerWidth/o)){r.remove();for(let e=0;e<n;e++)t.failureAnimation(this.selectedInput.children[e]);return}r.hidden=!1,n++,r.contentDocument.querySelector(\"#tspan7\").innerHTML=Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex][l],this.fixedAnimation(r),this.movementAnimation()});break;case\"#pensionistenmodus\":case\"#Pensionistenmodus\":this.backgroundColor=\"#7a4aff\",this.inputStyling(),this.command.split(\"\").forEach(e=>{this.returnLastElement(this.selectedInput).remove(),n--,this.selectedInput.firstChild&&this.movementAnimation()});break;default:this.command.split(\"\").forEach(e=>{this.returnLastElement(this.selectedInput).remove(),n--,this.selectedInput.firstChild&&this.movementAnimation()}),this.inputIndex+1<4&&(this.inputIndex++,this.selectedInput=this.container.children[e[this.inputIndex]],this.inputIndex+1<4&&this.selectedInput.classList.contains(\"not-editable\")&&(this.inputIndex+=1,this.selectedInput=this.container.children[this.inputIndex]),n=this.selectedInput.childElementCount,this.inputStyling())}this.command=\"\",this.commandMode=!1}else\"ArrowUp\"===i.key?(this.command.split(\"\").forEach(e=>{this.returnLastElement(this.selectedInput).remove(),n--,this.selectedInput.firstChild&&this.movementAnimation()}),this.command=\"\",this.commandMode=!1):\"ArrowDown\"===i.key?(this.command.split(\"\").forEach(e=>{this.returnLastElement(this.selectedInput).remove(),n--,this.selectedInput.firstChild&&this.movementAnimation()}),this.command=\"\",this.commandMode=!1,this.inputIndex+1<4&&(this.inputIndex++,this.selectedInput=this.container.children[e[this.inputIndex]],this.inputIndex+1<4&&this.selectedInput.classList.contains(\"not-editable\")&&(this.inputIndex+=1,this.selectedInput=this.container.children[this.inputIndex]),n=this.selectedInput.childElementCount,this.inputStyling())):\"Backspace\"===i.key&&this.returnLastElement(this.selectedInput)&&(this.returnLastElement(this.selectedInput).remove(),this.command=this.command.slice(0,this.command.length-1),n--,this.selectedInput.firstChild&&this.movementAnimation(),\"\"===this.command&&(this.commandMode=!1));if(this.commandMode&&(this.selectedInput.classList.contains(\"not-editable\")||r.includes(i.key)||i.key.length>1))return}if(!this.commandMode){if(\"Enter\"!==i.key&&\"ArrowDown\"!==i.key||s){if(\"ArrowUp\"===i.key){this.inputIndex>0&&this.inputIndex--,this.selectedInput=this.container.children[e[this.inputIndex]],n=this.selectedInput.childElementCount,this.inputStyling();return}if(this.selectedInput.classList.contains(\"not-editable\"))return;if(\"Backspace\"!==i.key||s){if(r.includes(i.key)||i.key.length>1)return;\"#\"===i.key&&(this.commandMode=!0)}else{this.returnLastElement(this.selectedInput)&&(this.returnLastElement(this.selectedInput).remove(),n--,this.selectedInput.firstChild&&this.movementAnimation(),!this.currentWord||isNaN(this.currentWordIndex)||this.commandMode||Object.defineProperty(this.currentWord,Object.keys(this.currentWord)[this.inputIndex],{value:Object.values(this.currentWord)[this.inputIndex].slice(0,n)}));return}}else{if(this.currentWord&&!isNaN(this.currentWordIndex)&&\"Enter\"===i.key){if(Object.values(this.currentWord)[this.inputIndex]===Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex]||\"\"===Object.values(this.currentWord)[this.inputIndex]){for(let e=0;e<n;e++)this.selectedInput.children[e]&&!this.selectedInput.classList.contains(\"not-editable\")&&this.successAnimation(this.selectedInput.children[e]);if(this.selectedInput.classList.contains(\"not-editable\")||void 0!==this.result[this.inputIndex]||(this.result[this.inputIndex]=!0),this.inputIndex+1<4)this.inputIndex++,this.selectedInput=this.container.children[e[this.inputIndex]],this.inputIndex+1<4&&this.selectedInput.classList.contains(\"not-editable\")&&(this.inputIndex+=1,this.selectedInput=this.container.children[e[this.inputIndex]]),n=this.selectedInput.childElementCount,this.inputStyling();else if(this.inputIndex+1===4){let i=[void 0,void 0,void 0,void 0];if(Object.values(this.currentWord).slice(0,4).forEach((n,s)=>{if(!document.querySelector(`#div${e[s]}`).classList.contains(\"not-editable\")){if(n===Object.values(this.vocabulary[this.currentWordIndex])[s]){let t=document.querySelector(`#div${e[s]}`);for(let e=0;e<t.childElementCount;e++){let n=t.children[e];this.successAnimation(n)}\"\"===n&&(i[s]=!0),void 0===this.result[s]&&(this.result[s]=!0)}else{let r=document.querySelector(`#div${e[s]}`);for(let e=0;e<r.childElementCount;e++){let n=r.children[e];t.failureAnimation(n)}\"\"===n&&(i[s]=!1),void 0===this.result[s]&&(this.result[s]=!1)}}}),this.resultStyling(i),Object.values(this.currentWord).toLocaleString()===Object.values(this.vocabulary[this.currentWordIndex]).toLocaleString()){let t=this.result.filter(e=>!0===e).length;this.totalAttempts+=3,this.totalPoints+=t,3===t?this.vocabulary[this.currentWordIndex].probability*=.8:this.vocabulary[this.currentWordIndex].probability*=1.2;let i=this.database.transaction(\"vocabulary\",\"readwrite\");i.onerror=e=>console.error(i.error);let s=i.objectStore(\"vocabulary\"),r=s.get(this.currentWordIndex+1);r.onerror=e=>console.error(r.error),r.onsuccess=e=>{let t=s.put(this.vocabulary[this.currentWordIndex],this.currentWordIndex+1);t.onerror=e=>console.error(t.error)},setTimeout(t=>{this.inputIndex=0,this.selectedInput=document.querySelector(`#div${e[this.inputIndex]}`),n=0,this.inputStyling(),this.startNewTrainingRound()},500)}else setTimeout(e=>this.inputStyling(),500)}}else if(this.selectedInput.classList.contains(\"not-editable\"))this.inputIndex+1<4&&(this.inputIndex++,this.selectedInput=this.container.children[e[this.inputIndex]],this.inputIndex+1<4&&this.selectedInput.classList.contains(\"not-editable\")&&(this.inputIndex+=1,this.selectedInput=this.container.children[e[this.inputIndex]]),n=this.selectedInput.childElementCount,this.inputStyling());else{if(3===this.inputIndex){let n=[void 0,void 0,void 0,void 0];Object.values(this.currentWord).slice(0,4).forEach((i,s)=>{if(!document.querySelector(`#div${e[s]}`).classList.contains(\"not-editable\")){if(i===Object.values(this.vocabulary[this.currentWordIndex])[s]){let t=document.querySelector(`#div${e[s]}`);for(let e=0;e<t.childElementCount;e++){let n=t.children[e];this.successAnimation(n)}\"\"===i&&(n[s]=!0),void 0===this.result[s]&&(this.result[s]=!0)}else{let r=document.querySelector(`#div${e[s]}`);for(let e=0;e<r.childElementCount;e++){let n=r.children[e];t.failureAnimation(n)}\"\"===i&&(n[s]=!1),void 0===this.result[s]&&(this.result[s]=!1)}}}),this.resultStyling(n),setTimeout(e=>this.inputStyling(),500)}else for(let e=0;e<this.selectedInput.childElementCount;e++)t.failureAnimation(this.selectedInput.children[e]);void 0===this.result[this.inputIndex]&&(this.result[this.inputIndex]=!0),this.result[this.inputIndex]=!1}}else\"ArrowDown\"===i.key&&this.inputIndex+1<4&&(this.inputIndex++,this.selectedInput=this.container.children[e[this.inputIndex]],this.inputIndex+1<4&&this.selectedInput.classList.contains(\"not-editable\")&&(this.inputIndex+=1,this.selectedInput=this.container.children[e[this.inputIndex]]),n=this.selectedInput.childElementCount,this.inputStyling());return}}let o=document.createElement(\"object\");o.data=\"./keys/OG_T.svg\",o.id=`key${n}-inp${this.inputIndex}`,o.style.height=\"100%\",this.selectedInput.insertAdjacentElement(\"beforeend\",o);let l=o.clientHeight;o.hidden=!0,o.addEventListener(\"load\",e=>{if(n>=Math.floor(window.innerWidth/l)){o.remove();for(let e=0;e<n;e++)t.failureAnimation(this.selectedInput.children[e]);return}o.hidden=!1,o.contentDocument.querySelector(\"#tspan7\").innerHTML=i.key.charAt(0),!this.currentWord||isNaN(this.currentWordIndex)||this.commandMode||Object.defineProperty(this.currentWord,Object.keys(this.currentWord)[this.inputIndex],{value:Object.values(this.currentWord)[this.inputIndex]+i.key.charAt(0)}),n++,t.idleAnimation(o),this.movementAnimation(),this.commandMode&&(this.commandAnimation(o),this.command+=i.key)})},document.addEventListener(\"keydown\",this.keyDownFunction),this.startNewTrainingRound()}startNewTrainingRound(){let e,t;if(0===this.vocabulary.length){setTimeout(e=>alert(\"Keine Vokabeln!\"),50);return}this.round++;let n=0;this.vocabulary.forEach(e=>{e.selected&&(n+=e.probability)});let i=Math.floor(Math.random()*n*10)/10,s=0;this.vocabulary.forEach((t,n)=>{t.selected&&(void 0===e?(e=Math.abs(i-(s+t.probability)),this.currentWord=t,this.currentWordIndex=n):Math.abs(i-(s+t.probability))<e&&(e=Math.abs(i-(s+t.probability)),this.currentWordIndex=n,Object.values(t).toLocaleString().slice(0,4)===Object.values(this.currentWord).toLocaleString().slice(0,4)&&(t.probability=Math.max(0,t.probability-1)),this.currentWord=t),s+=t.probability)});do{let e=Math.random();e<=.5?(t=[\"latinWord\",{value:this.currentWord.latinWord}],this.inputIndex=1,this.selectedInput=this.container.children[this.inputIndex+1],this.inputStyling()):t=e<=.7?[\"inflections\",{value:this.currentWord.inflections}]:e<=.95?[\"germanTranslation\",{value:this.currentWord.germanTranslation}]:[\"relatedForeignWords\",{value:this.currentWord.relatedForeignWords}]}while(\"\"===t[1].value.trim())this.currentWord={latinWord:\"\",inflections:\"\",germanTranslation:\"\",relatedForeignWords:\"\",selected:!0,probability:this.currentWord.probability},Object.defineProperty(this.currentWord,t[0],t[1]);let r=document.querySelector(\".not-editable\");r&&r.classList.remove(\"not-editable\"),document.querySelectorAll(\".t\").forEach(e=>e.innerHTML=\"\");let o=document.getElementById(`div${2*Object.keys(this.currentWord).findIndex(e=>e===t[0])}`);o.classList.add(\"not-editable\"),o.innerHTML=`<span style=\"font-size:${.6*o.clientHeight}px\">${t[1].value}</span>`,this.result=[void 0,void 0,void 0,void 0]}movementAnimation(){let e=this.selectedInput.firstChild,t=this.selectedInput;this.selectedInput.firstChild&&(t.childElementCount>1&&(t.style.transition=\"padding 250ms\"),t.style.paddingLeft=`${(window.innerWidth-t.childElementCount*e.clientHeight)/2}px`)}commandAnimation(e){if(!e)return;let t=e.contentDocument,n=t.querySelector(\"#mainRect\"),i=t.querySelector(\"#text7\"),s={stroke:[\"#eeeeeeff\",\"#ffa500\"],offset:[0,1]},r={duration:500,fill:\"forwards\"};n.animate(s,r),i.animate(s,r)}fixedAnimation(e){if(!e)return;e.classList.add(\"fixed\");let t=e.contentDocument,n=t.querySelector(\"#mainRect\"),i=t.querySelector(\"#text7\"),s={stroke:[\"#eeeeeeff\",\"#ffff00\"],offset:[0,1]},r={duration:500,fill:\"forwards\"};n.animate(s,r),i.animate(s,r)}successAnimation(e){if(!e)return;let t=e.contentDocument,n=t.querySelector(\"#mainRect\"),i=t.querySelector(\"#text7\"),s={stroke:[\"#eeeeeeff\",\"#08a000\",\"#eeeeeeff\"],offset:[0,1]},r={duration:500};n.animate(s,r),i.animate(s,r)}returnLastElement(e){if(e.childElementCount>0&&!e.lastElementChild.classList.contains(\"fixed\"))return e.lastElementChild}inputStyling(){document.body.style.backgroundImage=`\n            linear-gradient(180deg, \n                ${this.backgroundColor} 0%, \n                #06011b ${20+2*this.inputIndex*(window.innerHeight/document.body.scrollHeight)*(65/7)}%,\n                #06011b ${20+(2*this.inputIndex+1)*(window.innerHeight/document.body.scrollHeight)*(65/7)}%, \n                ${this.backgroundColor} ${window.innerHeight/document.body.scrollHeight*100}%\n            )\n        `}resultStyling(e){document.body.style.transition=\"background-image 250ms\";let t=\"linear-gradient(180deg,\";e.forEach((e,n)=>{let i;i=!0===e?\"#2be231\":!1===e?\"#e80000\":\"#140063\",t+=`#140063 ${20+2*n*(window.innerHeight/document.body.scrollHeight)*(65/7)}%,\n                ${i} ${20+(2*n+.5)*(window.innerHeight/document.body.scrollHeight)*(65/7)}%, \n                #140063 ${20+(2*n+1)*(window.innerHeight/document.body.scrollHeight)*(65/7)}%, `}),document.body.style.backgroundImage=t.slice(0,t.length-2)+\")\"}},s=new class{constructor(){this.enterMode=!1,this.tabMode=!1,this.tabulator=\"\",this.tabCount=0,this.v=1,this.round=0,this.failures=0,this.totalAttempts=0,this.totalPoints=0,this.badColor=\"rgb(186, 2, 70)\"}modifyDocument(t){let n;switch(this.container=document.querySelector(\"#container\"),this.iconPlaceholder=document.querySelector(\"#icon-placeholder\"),this.navbar=document.querySelector(\"#navbar\"),this.container.setAttribute(\"style\",\"\"),document.body.style.backgroundImage=\"none\",document.body.setAttribute(\"class\",\"\"),this.container.setAttribute(\"class\",\"\"),this.iconPlaceholder.setAttribute(\"class\",\"\"),this.navbar.setAttribute(\"class\",\"\"),this.container.innerHTML=\"\",this.iconPlaceholder.innerHTML=\"\",this.navbar.innerHTML=\"\",t||(t=\"add nouns\"),(n=document.createElement(\"object\")).id=\"inflectVocabularyIcon\",this.v=0,this.badColor=\"rgb(186, 2, 70)\",t){case\"add verbs\":case\"verbs\":this.v=9,this.badColor=\"#ff00d4\",\"add verbs\"===t?n.data=\"./conjugations.svg\":n.data=\"./conjugate_verbs.svg\";default:let i=window.indexedDB.open(\"Vocabulary\",1);i.onerror=e=>console.log(i.error),i.onsuccess=s=>{this.database=i.result,this.tabulator=\"\";let l=this.database.transaction(\"inflected vocabulary\",\"readonly\");l.onerror=e=>console.error(l.error);let a=l.objectStore(\"inflected vocabulary\").getAll();a.onerror=e=>console.error(a.error),a.onsuccess=i=>{this.vocabulary=a.result,document.body.classList.add(\"inflectVocabularyBody\"),this.iconPlaceholder.classList.add(\"inflectVocabularyIconPlaceholder\"),\"add nouns\"===t?n.data=\"./declinations.svg\":\"nouns\"===t&&(n.data=\"./decline_nouns.svg\"),this.iconPlaceholder.insertAdjacentElement(\"beforeend\",n),\"add verbs\"===t||\"verbs\"===t?this.container.classList.add(\"inflectVocabularyContainer\",\"verbs\"):this.container.classList.add(\"inflectVocabularyContainer\",\"nouns\"),this.navbar.classList.add(\"inflectVocabularyNavbar\"),this.container.tabIndex=0;for(let n=0;n<21-this.v;n++){let i=e(`div${n}`,\"editable\");this.container.insertAdjacentElement(\"beforeend\",i),n<3&&(i.classList.add(\"firstrow\"),i.classList.remove(\"editable\"),i.style.fontSize=`${.75*i.offsetHeight}px`,1===n?i.innerHTML=\"Singular\":2===n&&(i.innerHTML=\"Plural\")),n%3==0&&(i.classList.add(\"firstcolumn\"),i.classList.remove(\"editable\"),i.style.fontSize=`${.25*i.offsetHeight}px`,n>0&&(i.innerHTML=`${n/3}. ${t.includes(\"verb\")?\"P\":\"F\"}.`)),n<3||n%3==0||(i.style.padding=`${.05*i.offsetHeight}px`,t.includes(\"add\")||i.classList.add(\"shadowDesign\")),t.includes(\"verb\")&&i.classList.add(\"v\")}t.startsWith(\"add\")&&(this.buttonLeft=document.createElement(\"button\"),this.buttonLeft.classList.add(\"roundButton\",\"c\"),this.buttonLeft.innerHTML=\"<\",this.navbar.appendChild(this.buttonLeft)),this.homeButton=document.createElement(\"button\"),this.homeButton.classList.add(\"roundButton\"),this.homeButton.tabIndex=-1;let s=document.createElement(\"object\");s.classList.add(\"homeIcon\"),s.data=\"./home.svg\",s.style.height=\"7.5vh\",s.addEventListener(\"load\",e=>{s.contentDocument.addEventListener(\"click\",e=>{o(),this.tabMode&&this.cancelTabMode(),r.modifyDocument()})}),this.homeButton.onclick=e=>{o(),this.tabMode&&this.cancelTabMode(),r.modifyDocument()},this.homeButton.insertAdjacentElement(\"beforeend\",s),this.navbar.appendChild(this.homeButton),t.startsWith(\"add\")&&(this.deletionButton=document.createElement(\"button\"),this.deletionButton.classList.add(\"roundButton\",\"deletionButton\"),this.deletionButton.innerHTML=\"X\",this.deletionButton.tabIndex=-1,t.includes(\"verb\")&&this.deletionButton.classList.add(\"v\"),this.navbar.appendChild(this.deletionButton),this.buttonRight=document.createElement(\"button\"),this.buttonRight.classList.add(\"roundButton\",\"c\"),this.buttonRight.innerHTML=\">\",this.buttonRight.tabIndex=-1,this.navbar.appendChild(this.buttonRight)),t?this.type(t):this.type()}}}}type(e){switch(e){case\"verbs\":case\"nouns\":this.keys=0,document.querySelectorAll(\".editable\").forEach(e=>{e.addEventListener(\"click\",t=>{this.selectedInput=e,this.keys=this.selectedInput.childElementCount,document.querySelectorAll(\".selectedElement\").forEach(e=>e.classList.remove(\"selectedElement\")),e.classList.add(\"selectedElement\"),this.inputIndex=parseInt(e.id.slice(3))})}),this.selectedInput=document.getElementById(\"div4\"),this.selectedInput.classList.add(\"selectedElement\"),this.inputIndex=4,this.wordIndex=this.vocabulary.length,this.currentWord={singular:this.empty(e),plural:this.empty(e),verb:e.includes(\"verb\"),probability:1},this.keydownFunction=t=>{if(\"ArrowRight\"===t.key){this.inputIndex<20-this.v&&(this.inputIndex++,this.inputIndex%3==0&&this.inputIndex++,this.changeSelectedInput(),this.keys=this.selectedInput.childElementCount);return}if(\"ArrowLeft\"===t.key){this.inputIndex>4&&(this.inputIndex--,this.inputIndex%3==0&&this.inputIndex--,this.changeSelectedInput(),this.keys=this.selectedInput.childElementCount);return}if(\"ArrowDown\"===t.key||\"Enter\"===t.key){if(this.inputIndex<20-this.v&&\"Enter\"===t.key&&!this.selectedInput.classList.contains(\"known-case\")){if(this.compare(Object.values(this.currentWord)[this.inputIndex%3-1][Math.floor(this.inputIndex/3)-1],Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex%3-1][Math.floor(this.inputIndex/3)-1])){for(let e=0;e<this.selectedInput.childElementCount;e++){let t=this.selectedInput.children[e];this.successAnimation(t)}if(void 0===Object.values(this.result)[this.inputIndex%3-1][Math.floor(this.inputIndex/3)-1]){let e=Object.values(this.result)[this.inputIndex%3-1];e[Math.floor(this.inputIndex/3)-1]=!0,Object.defineProperty(this.result,Object.keys(this.result)[this.inputIndex%3-1],{value:e});let t=this.selectedInput;setTimeout(e=>{t.classList.remove(\"shadowDesign\"),t.classList.add(\"greenShadowDesign\")},500)}}else{for(let e=0;e<this.selectedInput.childElementCount;e++){let t=this.selectedInput.children[e];this.failureAnimation(t)}if(void 0===Object.values(this.result)[this.inputIndex%3-1][Math.floor(this.inputIndex/3)-1]){let e=Object.values(this.result)[this.inputIndex%3-1];e[Math.floor(this.inputIndex/3)-1]=!1,Object.defineProperty(this.result,Object.keys(this.result)[this.inputIndex%3-1],{value:e})}let e=this.selectedInput;setTimeout(t=>{e.classList.remove(\"shadowDesign\"),e.classList.add(\"redShadowDesign\")},500)}}if(this.inputIndex<18-this.v)this.inputIndex+=3,this.changeSelectedInput(),this.keys=this.selectedInput.childElementCount,\"Enter\"===t.key&&this.selectedInput.classList.contains(\"known-case\")&&(this.inputIndex<18-this.v?(this.inputIndex+=3,this.changeSelectedInput(),this.keys=this.selectedInput.childElementCount):this.inputIndex===19-this.v&&(this.inputIndex=5,this.changeSelectedInput(),this.keys=this.selectedInput.childElementCount));else if(\"Enter\"===t.key&&this.inputIndex===19-this.v)this.inputIndex=5,this.changeSelectedInput(),this.keys=this.selectedInput.childElementCount;else if(\"Enter\"===t.key&&this.inputIndex===20-this.v&&(this.currentWord.singular.forEach((e,t)=>{let n=1+(t+1)*3;if(this.compare(e,Object.values(this.vocabulary[this.currentWordIndex])[n%3-1][Math.floor(n/3)-1])){for(let e=0;e<this.container.children[n].childElementCount;e++)if(n%3!=0&&!this.container.children[n].classList.contains(\"known-case\")){let t=this.container.children[n].children[e];this.successAnimation(t)}if(void 0===Object.values(this.result)[n%3-1][Math.floor(n/3)-1]){let e=Object.values(this.result)[this.inputIndex%3-1];e[Math.floor(this.inputIndex/3)-1]=!0,Object.defineProperty(this.result,Object.keys(this.result)[n%3-1],{value:e})}}else{for(let e=0;e<this.container.children[n].childElementCount;e++)if(n%3!=0&&!this.container.children[n].classList.contains(\"known-case\")){let t=this.container.children[n].children[e];this.failureAnimation(t)}if(void 0===Object.values(this.result)[this.inputIndex%3-1][Math.floor(this.inputIndex/3)-1]){let e=Object.values(this.result)[this.inputIndex%3-1];e[Math.floor(this.inputIndex/3)-1]=!1,Object.defineProperty(this.result,Object.keys(this.result)[this.inputIndex%3-1],{value:e})}}}),this.currentWord.plural.forEach((e,t)=>{let n=2+(t+1)*3;if(this.compare(e,Object.values(this.vocabulary[this.currentWordIndex])[n%3-1][Math.floor(n/3)-1])){for(let e=0;e<this.container.children[n].childElementCount;e++)if(n%3!=0&&!this.container.children[n].classList.contains(\"known-case\")){let t=this.container.children[n].children[e];this.successAnimation(t)}if(void 0===Object.values(this.result)[this.inputIndex%3-1][Math.floor(this.inputIndex/3)-1]){let e=Object.values(this.result)[this.inputIndex%3-1];e[Math.floor(this.inputIndex/3)-1]=!0,Object.defineProperty(this.result,Object.keys(this.result)[this.inputIndex%3-1],{value:e})}}else{for(let e=0;e<this.container.children[n].childElementCount;e++)if(n%3!=0&&!this.container.children[n].classList.contains(\"known-case\")){let t=this.container.children[n].children[e];this.failureAnimation(t)}if(void 0===Object.values(this.result)[this.inputIndex%3-1][Math.floor(this.inputIndex/3)-1]){let e=Object.values(this.result)[this.inputIndex%3-1];e[Math.floor(this.inputIndex/3)-1]=!1,Object.defineProperty(this.result,Object.keys(this.result)[this.inputIndex%3-1],{value:e})}}}),this.compareObjects(this.currentWord,this.vocabulary[this.currentWordIndex]))){this.totalAttempts+=11-this.v/3*2;let t=this.result.singular.filter(e=>!0===e).length+this.result.plural.filter(e=>!0===e).length;this.totalPoints+=t,t!=12-this.v/3*2?this.vocabulary[this.currentWordIndex].probability*=.8:this.vocabulary[this.currentWordIndex].probability*=1.2;let n=this.database.transaction(\"inflected vocabulary\",\"readwrite\").objectStore(\"inflected vocabulary\").put(this.vocabulary[this.currentWordIndex],this.currentWordIndex+1);n.onerror=e=>console.error(n.error),setTimeout(t=>{document.querySelectorAll(\".selectedElement\").forEach(e=>{e.classList.remove(\"selectedElement\")}),this.keys=0,this.inputIndex=4,this.selectedInput=document.querySelector(\"#div4\"),this.selectedInput.classList.add(\"selectedElement\"),this.startNewTrainingRound(e||\"nouns\")},500)}return}if(\"ArrowUp\"===t.key){this.inputIndex>6&&(this.inputIndex-=3,this.changeSelectedInput(),this.keys=this.selectedInput.childElementCount);return}if(\"Backspace\"===t.key){if(this.selectedInput.lastElementChild){this.selectedInput.lastElementChild.remove();let e=Object.values(this.currentWord)[this.inputIndex%3-1];e[Math.floor(this.inputIndex/3)-1]=e[Math.floor(this.inputIndex/3)-1].slice(0,this.keys-1),Object.defineProperty(this.currentWord,Object.keys(this.currentWord)[this.inputIndex%3-1],{value:e}),this.keys--}return}if(this.selectedInput.classList.contains(\"known-case\"))return;if(\"Tab\"==t.key){if(this.tabulator){if(this.keys+this.tabulator.length>=this.selectedInput.clientWidth/(this.selectedInput.clientHeight-parseFloat(this.selectedInput.style.padding)))this.selectedInput.childNodes.forEach((e,t)=>{this.failureAnimation(this.selectedInput.children[t])});else{let e=Object.values(this.currentWord)[this.inputIndex%3-1],t=Math.floor(this.inputIndex/3)-1;e[t]+=this.tabulator,Object.defineProperty(this.currentWord,Object.keys(this.currentWord)[this.inputIndex%3-1],{value:e}),this.tabulator.split(\"\").forEach(e=>{let t=document.createElement(\"object\");t.data=\"./keys/OG_T.svg\",t.id=`key${this.keys}-inp${this.inputIndex}`,t.style.height=\"100%\",this.selectedInput.insertAdjacentElement(\"beforeend\",t),t.hidden=!0,t.addEventListener(\"load\",n=>{t.hidden=!1,t.contentDocument.querySelector(\"#tspan7\").innerHTML=e,this.keys++,this.tabulatorAnimation(t)})})}}return}else if([\"<\",\"´\",\"`\",\"^\"].includes(t.key)||t.key.length>1)return;let n=document.createElement(\"object\");n.data=\"./keys/OG_T.svg\",n.id=`key${this.keys}-inp${this.inputIndex}`,n.style.height=\"100%\",this.selectedInput.insertAdjacentElement(\"beforeend\",n);let i=n.clientHeight;n.hidden=!0,n.addEventListener(\"load\",e=>{if(this.keys+1>=Math.floor(this.selectedInput.clientWidth/i)){n.remove();for(let e=0;e<this.keys;e++)this.failureAnimation(this.selectedInput.children[e]);return}n.hidden=!1,n.contentDocument.querySelector(\"#tspan7\").innerHTML=t.key.charAt(0);let s=Object.values(this.currentWord)[this.inputIndex%3-1];s[Math.floor(this.inputIndex/3)-1]+=t.key,Object.defineProperty(this.currentWord,Object.keys(this.currentWord)[this.inputIndex%3-1],{value:s}),this.keys++,this.idleAnimation(n)})},document.addEventListener(\"keydown\",this.keydownFunction),window.onkeyup=e=>{\"Tab\"===e.key&&this.container.focus()},this.startNewTrainingRound(e||\"nouns\");break;case\"add verbs\":case\"add nouns\":let t;this.keys=0,document.querySelectorAll(\".editable\").forEach(e=>{e.addEventListener(\"click\",t=>{this.tabMode&&this.cancelTabMode(),this.inputIndex=parseInt(e.id.slice(3)),this.changeSelectedInput(),this.keys=this.selectedInput.childElementCount})}),this.selectedInput=document.getElementById(\"div4\"),this.selectedInput.classList.add(\"selectedElement\"),this.inputIndex=4,this.wordIndex=this.vocabulary.length,this.currentWord={singular:this.empty(e),plural:this.empty(e),verb:e.includes(\"verb\"),probability:1};let n=!1,i=t=>{this.vocabulary.splice(this.wordIndex,1);let s=this.database.transaction(\"inflected vocabulary\",\"readwrite\").objectStore(\"inflected vocabulary\").openCursor();s.onsuccess=t=>{let n=s.result;if(n){let t=n.key,i=this.vocabulary[t-1];if(i){let e=n.value;e.singular=i.singular,e.plural=i.plural,e.verb=i.verb,e.probability=i.probability,n.update(e),n.continue()}else{n.delete();let t=this.vocabulary.slice(0,this.wordIndex),i=this.vocabulary.slice(this.wordIndex),s=t.findLastIndex(t=>t.verb===e.includes(\"verb\")),r=i.findIndex(t=>t.verb===e.includes(\"verb\"))+this.wordIndex;if(this.vocabulary[s]){this.wordIndex=s,this.currentWord=this.vocabulary[s];let e=[],t=!1;for(let n=3;n<this.container.childElementCount;n++){let i=[],s=Math.floor(n/3)-1,r=this.currentWord.singular,o=this.currentWord.plural;if(n%3==1){this.container.children[n].innerHTML=\"\";for(let o=0;o<r[Math.floor(n/3)-1].length;o++)if(\"^tab^\"===r[s].slice(o,o+5))t=!t,o+=4;else{let s=document.createElement(\"object\");s.data=\"./keys/OG_T.svg\",s.id=`key${o}-inp${n}`,s.style.height=\"100%\",this.container.children[n].insertAdjacentElement(\"beforeend\",s),t&&i.push(o),s.addEventListener(\"load\",t=>{s.contentDocument.querySelector(\"#tspan7\").innerHTML=r[Math.floor(n/3)-1].charAt(o),void 0!=e.find(e=>e[0]===parseInt(s.parentElement.id.slice(3)))&&e.find(e=>e[0]===parseInt(s.parentElement.id.slice(3)))[1].includes(parseInt(s.id.slice(3)))&&(this.tabulatorAnimation(s),s.classList.add(\"tabulator\"))})}e.push([n,i])}else if(n%3==2){this.container.children[n].innerHTML=\"\";for(let r=0;r<o[Math.floor(n/3)-1].length;r++)if(\"^tab^\"===o[s].slice(r,r+5))t=!t,r+=4;else{let s=document.createElement(\"object\");s.data=\"./keys/OG_T.svg\",s.id=`key${r}-inp${n}`,s.style.height=\"100%\",this.container.children[n].insertAdjacentElement(\"beforeend\",s),t&&i.push(r),s.addEventListener(\"load\",t=>{s.contentDocument.querySelector(\"#tspan7\").innerHTML=o[Math.floor(n/3)-1].charAt(r),void 0!=e.find(e=>e[0]===parseInt(s.parentElement.id.slice(3)))&&e.find(e=>e[0]===parseInt(s.parentElement.id.slice(3)))[1].includes(parseInt(s.id.slice(3)))&&(this.tabulatorAnimation(s),s.classList.add(\"tabulator\"))})}}e.push([n,i])}this.changeSelectedInput()}else if(this.vocabulary[r]){this.currentWord=this.vocabulary[r];let e=[],t=!1;for(let n=3;n<this.container.childElementCount;n++){let i=[],s=Math.floor(n/3)-1,r=this.currentWord.singular,o=this.currentWord.plural;if(n%3==1){this.container.children[n].innerHTML=\"\";for(let o=0;o<r[Math.floor(n/3)-1].length;o++)if(\"^tab^\"===r[s].slice(o,o+5))t=!t,o+=4;else{let s=document.createElement(\"object\");s.data=\"./keys/OG_T.svg\",s.id=`key${o}-inp${n}`,s.style.height=\"100%\",this.container.children[n].insertAdjacentElement(\"beforeend\",s),t&&i.push(o),s.addEventListener(\"load\",t=>{s.contentDocument.querySelector(\"#tspan7\").innerHTML=r[Math.floor(n/3)-1].charAt(o),e.find(e=>e[0]===parseInt(s.parentElement.id.slice(3)))&&e.find(e=>e[0]===parseInt(s.parentElement.id.slice(3)))[1].includes(parseInt(s.id.slice(3)))&&(this.tabulatorAnimation(s),s.classList.add(\"tabulator\"))})}e.push([n,i])}else if(n%3==2){this.container.children[n].innerHTML=\"\";for(let r=0;r<o[Math.floor(n/3)-1].length;r++)if(\"^tab^\"===o[s].slice(r,r+5))t=!t,r+=4;else{let s=document.createElement(\"object\");s.data=\"./keys/OG_T.svg\",s.id=`key${r}-inp${n}`,s.style.height=\"100%\",this.container.children[n].insertAdjacentElement(\"beforeend\",s),t&&i.push(r),s.addEventListener(\"load\",t=>{s.contentDocument.querySelector(\"#tspan7\").innerHTML=o[Math.floor(n/3)-1].charAt(r),e.find(e=>e[0]===parseInt(s.parentElement.id.slice(3)))&&e.find(e=>e[0]===parseInt(s.parentElement.id.slice(3)))[1].includes(parseInt(s.id.slice(3)))&&(this.tabulatorAnimation(s),s.classList.add(\"tabulator\"))})}e.push([n,i])}}this.changeSelectedInput()}else{this.keys=0,this.currentWord={singular:this.empty(e),plural:this.empty(e),verb:e.includes(\"verb\"),probability:1};for(let e=0;e<this.container.childElementCount;e++)e%3!=0&&(this.container.children[e].innerHTML=\"\"),this.container.children[e].classList.remove(\"selectedElement\");this.inputIndex=4,this.selectedInput=this.container.children[4],this.tabCount=0,this.selectedInput.classList.add(\"selectedElement\")}}}},n=!1,this.deletionButton.removeEventListener(\"click\",i),this.deletionButton.classList.remove(\"click\"),document.querySelectorAll(\"object\").forEach(e=>{e.contentDocument.getElementById(\"tspan7\")&&this.deletionAnimation(e,1,\"reverse\")}),Array.from(document.getElementsByClassName(\"editable\")).forEach(e=>{e.classList.remove(\"redShadowDesign\")})};this.deletionButton.addEventListener(\"mousemove\",e=>{if(n)return;n=!0,this.deletionAnimation(this.deletionButton,2e3,\"normal\");let s=!1;this.container.querySelectorAll(\"object\").forEach(e=>{if(e.contentDocument.getElementById(\"tspan7\"))this.deletionAnimation(e,2e3,\"normal\");else{s=!0;return}}),s&&this.container.querySelectorAll(\"object\").forEach(e=>{e.contentDocument.getElementById(\"tspan7\")&&this.deletionAnimation(e,1,\"reverse\")}),t=setTimeout(e=>{n&&(this.deletionButton.addEventListener(\"click\",i),Array.from(document.getElementsByClassName(\"editable\")).forEach(e=>{e.classList.add(\"redShadowDesign\")}))},2e3)}),this.deletionButton.addEventListener(\"mouseleave\",e=>{clearTimeout(t),n=!1,this.deletionAnimation(this.deletionButton,1,\"reverse\"),this.container.querySelectorAll(\"object\").forEach(e=>{e.contentDocument.getElementById(\"tspan7\")&&this.deletionAnimation(e,1,\"reverse\")}),Array.from(document.getElementsByClassName(\"editable\")).forEach(e=>{e.classList.remove(\"redShadowDesign\")}),this.deletionButton.removeEventListener(\"click\",i)}),document.querySelectorAll(\".c\").forEach(e=>{e.addEventListener(\"mousedown\",t=>{e.classList.add(\"click\"),document.querySelectorAll(\".editable\").forEach(e=>{e.classList.add(\"savedElement\")})}),e.addEventListener(\"mouseout\",t=>{e.classList.remove(\"click\"),document.querySelectorAll(\".editable\").forEach(e=>{e.classList.remove(\"savedElement\")})})}),this.buttonLeft.addEventListener(\"mouseup\",t=>{console.log(\"left\",this.vocabulary.map(e=>e.singular[0])),this.tabMode&&this.cancelTabMode();let n=this.vocabulary.slice(0,this.wordIndex).findLastIndex(t=>t.verb===e.includes(\"verb\"));if(this.vocabulary[n]){if(this.currentWord.singular.filter(e=>\"\"===e).length===(e.includes(\"verb\")?3:6)&&this.currentWord.plural.filter(e=>\"\"===e).length===(e.includes(\"verb\")?3:6)&&this.wordIndex===this.vocabulary.length){for(let e=0;e<this.container.childElementCount;e++)this.container.children[e].classList.remove(\"savedElement\"),this.buttonLeft.classList.remove(\"click\");this.wordIndex=n,this.currentWord=this.vocabulary[n];let e=[],t=!1;for(let n=3;n<this.container.childElementCount;n++){let i=[],s=Math.floor(n/3)-1,r=this.currentWord.singular,o=this.currentWord.plural;if(n%3==1){this.container.children[n].innerHTML=\"\";for(let o=0;o<r[Math.floor(n/3)-1].length;o++)if(\"^tab^\"===r[s].slice(o,o+5))t=!t,o+=4;else{let s=document.createElement(\"object\");s.data=\"./keys/OG_T.svg\",s.id=`key${o}-inp${n}`,s.style.height=\"100%\",this.container.children[n].insertAdjacentElement(\"beforeend\",s),t&&i.push(o),s.addEventListener(\"load\",t=>{s.contentDocument.querySelector(\"#tspan7\").innerHTML=r[Math.floor(n/3)-1].charAt(o),void 0!=e.find(e=>e[0]===parseInt(s.parentElement.id.slice(3)))&&e.find(e=>e[0]===parseInt(s.parentElement.id.slice(3)))[1].includes(parseInt(s.id.slice(3)))&&(this.tabulatorAnimation(s),s.classList.add(\"tabulator\"))})}e.push([n,i])}else if(n%3==2){this.container.children[n].innerHTML=\"\";for(let r=0;r<o[Math.floor(n/3)-1].length;r++)if(\"^tab^\"===o[s].slice(r,r+5))t=!t,r+=4;else{let s=document.createElement(\"object\");s.data=\"./keys/OG_T.svg\",s.id=`key${r}-inp${n}`,s.style.height=\"100%\",this.container.children[n].insertAdjacentElement(\"beforeend\",s),t&&i.push(r),s.addEventListener(\"load\",t=>{s.contentDocument.querySelector(\"#tspan7\").innerHTML=o[Math.floor(n/3)-1].charAt(r),void 0!=e.find(e=>e[0]===parseInt(s.parentElement.id.slice(3)))&&e.find(e=>e[0]===parseInt(s.parentElement.id.slice(3)))[1].includes(parseInt(s.id.slice(3)))&&(this.tabulatorAnimation(s),s.classList.add(\"tabulator\"))})}}e.push([n,i])}this.changeSelectedInput()}else{this.vocabulary[this.wordIndex]=this.currentWord;let e=this.database.transaction(\"inflected vocabulary\",\"readwrite\");e.onerror=t=>console.error(e.error);let t=e.objectStore(\"inflected vocabulary\"),i=t.get(this.wordIndex);i.onerror=e=>console.error(i.error),i.onsuccess=e=>{for(let e=0;e<this.container.childElementCount;e++)this.container.children[e].classList.remove(\"savedElement\"),this.buttonLeft.classList.remove(\"click\");let i=t.put(this.currentWord,this.wordIndex+1);i.onerror=e=>console.error(i.error),this.wordIndex=n;let s=!1;this.currentWord=this.vocabulary[n];let r=[];for(let e=3;e<this.container.childElementCount;e++){let t=[],n=Math.floor(e/3)-1,i=this.currentWord.singular,o=this.currentWord.plural;if(e%3==1){this.container.children[e].innerHTML=\"\";for(let o=0;o<i[n].length;o++)if(\"^tab^\"===i[n].slice(o,o+5))s=!s,o+=4;else{let n=document.createElement(\"object\");n.data=\"./keys/OG_T.svg\",n.id=`key${o}-inp${e}`,n.style.height=\"100%\",this.container.children[e].insertAdjacentElement(\"beforeend\",n),s&&t.push(o),n.addEventListener(\"load\",t=>{n.contentDocument.querySelector(\"#tspan7\").innerHTML=i[Math.floor(e/3)-1].charAt(o),void 0!=r.find(e=>e[0]===parseInt(n.parentElement.id.slice(3)))&&r.find(e=>e[0]===parseInt(n.parentElement.id.slice(3)))[1].includes(parseInt(n.id.slice(3)))&&(this.tabulatorAnimation(n),n.classList.add(\"tabulator\"))})}r.push([e,t])}else if(e%3==2){this.container.children[e].innerHTML=\"\";for(let i=0;i<o[Math.floor(e/3)-1].length;i++)if(\"^tab^\"===o[n].slice(i,i+5))s=!s,i+=4;else{let n=document.createElement(\"object\");n.data=\"./keys/OG_T.svg\",n.id=`key${i}-inp${e}`,n.style.height=\"100%\",this.container.children[e].insertAdjacentElement(\"beforeend\",n),s&&t.push(i),n.addEventListener(\"load\",t=>{n.contentDocument.querySelector(\"#tspan7\").innerHTML=o[Math.floor(e/3)-1].charAt(i),void 0!=r.find(e=>e[0]===parseInt(n.parentElement.id.slice(3)))&&r.find(e=>e[0]===parseInt(n.parentElement.id.slice(3)))[1].includes(parseInt(n.id.slice(3)))&&(this.tabulatorAnimation(n),n.classList.add(\"tabulator\"))})}r.push([e,t])}}}}}console.log(\"left end\",this.vocabulary.map(e=>e.singular[0]))}),this.buttonRight.addEventListener(\"mouseup\",t=>{console.log(\"right\",this.vocabulary.map(e=>e.singular[0])),this.tabMode&&this.cancelTabMode();let n=this.vocabulary.slice(this.wordIndex+1),i=n.findIndex(t=>t.verb===e.includes(\"verb\"))>=0?n.findIndex(t=>t.verb===e.includes(\"verb\"))+this.wordIndex+1:-1;if(this.vocabulary[i]){console.log(\"this.vocabulary[wi]\"),this.vocabulary[this.wordIndex]=this.currentWord;for(let e=0;e<this.container.childElementCount;e++)this.container.children[e].classList.remove(\"savedElement\"),this.buttonRight.classList.remove(\"click\");let e=this.database.transaction(\"inflected vocabulary\",\"readwrite\");e.onerror=t=>console.error(e.error);let t=e.objectStore(\"inflected vocabulary\"),n=t.get(this.wordIndex);n.onerror=e=>console.error(n.error),n.onsuccess=e=>{let n=t.put(this.currentWord,this.wordIndex+1);n.onerror=e=>console.error(n.error),this.wordIndex=i,this.currentWord=this.vocabulary[i];let s=[],r=!1;for(let e=3;e<this.container.childElementCount;e++){let t=[],n=Math.floor(e/3)-1,i=this.currentWord.singular,o=this.currentWord.plural;if(e%3==1){this.container.children[e].innerHTML=\"\";for(let o=0;o<i[Math.floor(e/3)-1].length;o++)if(\"^tab^\"===i[n].slice(o,o+5))r=!r,o+=4;else{let n=document.createElement(\"object\");n.data=\"./keys/OG_T.svg\",n.id=`key${o}-inp${e}`,n.style.height=\"100%\",this.container.children[e].insertAdjacentElement(\"beforeend\",n),r&&t.push(o),n.addEventListener(\"load\",t=>{n.contentDocument.querySelector(\"#tspan7\").innerHTML=i[Math.floor(e/3)-1].charAt(o),s.find(e=>e[0]===parseInt(n.parentElement.id.slice(3)))&&s.find(e=>e[0]===parseInt(n.parentElement.id.slice(3)))[1].includes(parseInt(n.id.slice(3)))&&(this.tabulatorAnimation(n),n.classList.add(\"tabulator\"))})}s.push([e,t])}else if(e%3==2){this.container.children[e].innerHTML=\"\";for(let i=0;i<o[Math.floor(e/3)-1].length;i++)if(\"^tab^\"===o[n].slice(i,i+5))r=!r,i+=4;else{let n=document.createElement(\"object\");n.data=\"./keys/OG_T.svg\",n.id=`key${i}-inp${e}`,n.style.height=\"100%\",this.container.children[e].insertAdjacentElement(\"beforeend\",n),r&&t.push(i),n.addEventListener(\"load\",t=>{n.contentDocument.querySelector(\"#tspan7\").innerHTML=o[Math.floor(e/3)-1].charAt(i),s.find(e=>e[0]===parseInt(n.parentElement.id.slice(3)))&&s.find(e=>e[0]===parseInt(n.parentElement.id.slice(3)))[1].includes(parseInt(n.id.slice(3)))&&(this.tabulatorAnimation(n),n.classList.add(\"tabulator\"))})}s.push([e,t])}this.changeSelectedInput()}}}else{console.log(\"!this.vocabulary[wi]\"),this.vocabulary[this.wordIndex]=this.currentWord;let t=this.database.transaction(\"inflected vocabulary\",\"readwrite\");t.onerror=e=>console.error(t.error);let n=t.objectStore(\"inflected vocabulary\").put(this.currentWord,this.wordIndex+1);n.onerror=e=>console.error(n.error),t.oncomplete=t=>{for(let e=0;e<this.container.childElementCount;e++)this.container.children[e].classList.remove(\"savedElement\"),this.buttonRight.classList.remove(\"click\");this.wordIndex=this.vocabulary.length,this.keys=0,this.currentWord={singular:this.empty(e),plural:this.empty(e),verb:e.includes(\"verb\"),probability:1};for(let e=3;e<this.container.childElementCount;e++)e%3!=0&&(this.container.children[e].innerHTML=\"\"),this.container.children[e].classList.remove(\"selectedElement\");this.inputIndex=4,this.selectedInput=this.container.children[4],this.tabCount=0,this.selectedInput.classList.add(\"selectedElement\")}}console.log(\"right end\",this.vocabulary.map(e=>e.singular[0]))}),this.keydownFunction=t=>{if(\"ArrowRight\"===t.key){this.tabMode&&this.cancelTabMode(),this.inputIndex<20-this.v&&(this.inputIndex++,this.inputIndex%3==0&&this.inputIndex++,this.changeSelectedInput(),this.keys=this.selectedInput.childElementCount);return}if(\"ArrowLeft\"===t.key){this.tabMode&&this.cancelTabMode(),this.inputIndex>4&&(this.inputIndex--,this.inputIndex%3==0&&this.inputIndex--,this.changeSelectedInput(),this.keys=this.selectedInput.childElementCount);return}if(\"ArrowDown\"===t.key||\"Enter\"===t.key){if(this.tabMode&&(this.cancelTabMode(),19===this.inputIndex))return;if(this.inputIndex<18-this.v)this.inputIndex+=3,this.changeSelectedInput(),this.keys=this.selectedInput.childElementCount;else if(\"Enter\"===t.key&&this.inputIndex===19-this.v)this.inputIndex=5,this.changeSelectedInput(),this.keys=this.selectedInput.childElementCount;else if(\"Enter\"===t.key&&this.inputIndex===20-this.v){if(document.querySelectorAll(\".editable\").forEach(e=>{e.classList.add(\"savedElement\")}),this.enterMode){let t=this.vocabulary.slice(this.wordIndex+1).findIndex(t=>t.verb===e.includes(\"verb\"));if(this.vocabulary[t]){this.vocabulary[this.wordIndex]=this.currentWord;for(let e=0;e<this.container.childElementCount;e++)this.container.children[e].classList.remove(\"savedElement\");let e=this.database.transaction(\"inflected vocabulary\",\"readwrite\");e.onerror=t=>console.error(e.error);let n=e.objectStore(\"inflected vocabulary\"),i=n.get(this.wordIndex);i.onerror=e=>console.error(i.error),i.onsuccess=e=>{let i=n.put(this.currentWord,this.wordIndex+1);i.onerror=e=>console.log(i.error),this.wordIndex=t,this.currentWord=this.vocabulary[t];let s=[],r=!1;for(let e=3;e<this.container.childElementCount;e++){let t=[],n=Math.floor(e/3)-1,i=this.currentWord.singular,o=this.currentWord.plural;if(e%3==1){this.container.children[e].innerHTML=\"\";for(let o=0;o<i[Math.floor(e/3)-1].length;o++)if(\"^tab^\"===i[n].slice(o,o+5))r=!r,o+=4;else{let n=document.createElement(\"object\");n.data=\"./keys/OG_T.svg\",n.id=`key${o}-inp${e}`,n.style.height=\"100%\",this.container.children[e].insertAdjacentElement(\"beforeend\",n),r&&t.push(o),n.addEventListener(\"load\",t=>{n.contentDocument.querySelector(\"#tspan7\").innerHTML=i[Math.floor(e/3)-1].charAt(o),s.find(e=>e[0]===parseInt(n.parentElement.id.slice(3)))&&s.find(e=>e[0]===parseInt(n.parentElement.id.slice(3)))[1].includes(parseInt(n.id.slice(3)))&&(this.tabulatorAnimation(n),n.classList.add(\"tabulator\"))})}s.push([e,t])}else if(e%3==2){this.container.children[e].innerHTML=\"\";for(let i=0;i<o[Math.floor(e/3)-1].length;i++)if(\"^tab^\"===o[n].slice(i,i+5))r=!r,i+=4;else{let n=document.createElement(\"object\");n.data=\"./keys/OG_T.svg\",n.id=`key${i}-inp${e}`,n.style.height=\"100%\",this.container.children[e].insertAdjacentElement(\"beforeend\",n),r&&t.push(i),n.addEventListener(\"load\",t=>{n.contentDocument.querySelector(\"#tspan7\").innerHTML=o[Math.floor(e/3)-1].charAt(i),s.find(e=>e[0]===parseInt(n.parentElement.id.slice(3)))&&s.find(e=>e[0]===parseInt(n.parentElement.id.slice(3)))[1].includes(parseInt(n.id.slice(3)))&&(this.tabulatorAnimation(n),n.classList.add(\"tabulator\"))})}s.push([e,t])}this.changeSelectedInput()}}}else{this.vocabulary[this.wordIndex]=this.currentWord;let t=this.database.transaction(\"inflected vocabulary\",\"readwrite\");t.onerror=e=>console.error(t.error);let n=t.objectStore(\"inflected vocabulary\").put(this.currentWord,this.wordIndex+1);n.onerror=e=>console.error(n.error),t.oncomplete=t=>{for(let e=0;e<this.container.childElementCount;e++)this.container.children[e].classList.remove(\"savedElement\");this.wordIndex++,this.keys=0,this.currentWord={singular:this.empty(e),plural:this.empty(e),verb:e.includes(\"verb\"),probability:1};for(let e=0;e<this.container.childElementCount;e++)e%3!=0&&(this.container.children[e].innerHTML=\"\"),this.container.children[e].classList.remove(\"selectedElement\");this.inputIndex=4,this.selectedInput=this.container.children[4],this.tabCount=0,this.selectedInput.classList.add(\"selectedElement\")}}this.enterMode=!1}else this.enterMode=!0;let t=this.database.transaction(\"inflected vocabulary\",\"readwrite\").objectStore(\"inflected vocabulary\").put(this.currentWord,this.wordIndex+1);t.onerror=e=>console.error(t.error),setTimeout(e=>{for(let e=0;e<this.container.childElementCount;e++)this.container.children[e].classList.remove(\"savedElement\")},250)}return}if(\"ArrowUp\"===t.key){this.tabMode&&this.cancelTabMode(),this.inputIndex>6&&(this.inputIndex-=3,this.changeSelectedInput(),this.keys=this.selectedInput.childElementCount);return}if(\"Backspace\"===t.key){if(this.selectedInput.lastElementChild){this.selectedInput.lastElementChild.remove();let e=Object.values(this.currentWord)[this.inputIndex%3-1],t=Math.floor(this.inputIndex/3)-1;\"^tab^\"===e[t].slice(-5)?(e[t]=e[t].slice(0,e[t].length-6),this.tabCount>1&&this.tabCount--,this.tabMode=!this.tabMode,this.selectedInput.classList.add(\"tab\"),this.tabMode||this.selectedInput.classList.remove(\"tab\")):e[t]=e[t].slice(0,e[t].length-1),Object.defineProperty(this.currentWord,Object.keys(this.currentWord)[this.inputIndex%3-1],{value:e}),this.keys--,this.tabMode&&(this.tabulator=this.tabulator.slice(0,this.tabulator.length-1))}else this.tabMode&&this.cancelTabMode();return}if(\"Tab\"===t.key){if(this.tabMode){if(this.tabulator.length>0){if(\"^tab^\"!=Object.values(this.currentWord)[this.inputIndex%3-1][Math.floor(this.inputIndex/3)-1].slice(-5)){this.tabMode=!1,this.selectedInput.classList.remove(\"tab\");let e=Object.values(this.currentWord)[this.inputIndex%3-1];e[Math.floor(this.inputIndex/3)-1]+=\"^tab^\",Object.defineProperty(this.currentWord,Object.keys(this.currentWord)[this.inputIndex%3-1],{value:e}),this.tabCount++}else{let e=Object.values(this.currentWord)[this.inputIndex%3-1],t=Math.floor(this.inputIndex/3)-1;e[t]+=this.tabulator+\"^tab^\";let n=e[t].search(this.tabulator);if(-1===n&&(n=0),this.keys+this.tabulator.length<=Math.floor(this.selectedInput.clientWidth/(this.selectedInput.clientHeight-parseFloat(this.selectedInput.style.padding))))for(let e=0;e<this.tabulator.length;e++){let t=document.createElement(\"object\");t.data=\"./keys/OG_T.svg\",t.id=`key${this.keys}-inp${this.inputIndex}`,t.style.height=\"100%\",this.selectedInput.insertAdjacentElement(\"beforeend\",t),t.hidden=!0,t.addEventListener(\"load\",n=>{t.hidden=!1,this.tabulatorAnimation(t),t.classList.add(\"tabulator\"),t.contentDocument.querySelector(\"#tspan7\").innerHTML=this.tabulator.charAt(e),this.tabulator.length}),this.keys++}else{for(let e=0;e<this.keys;e++)this.failureAnimation(this.selectedInput.children[e]);return}Object.defineProperty(this.currentWord,Object.keys(this.currentWord)[this.inputIndex%3-1],{value:e}),this.tabMode=!1,this.tabCount++,this.selectedInput.classList.remove(\"tab\")}}else this.tabCount=0,this.cancelTabMode()}else if(this.tabCount>=2){let e,t=Object.values(this.currentWord)[this.inputIndex%3-1],n=Math.floor(this.inputIndex/3)-1;for(;-1!==t[n].search(\"\\\\^tab\\\\^\");){let i=t[n].search(\"\\\\^tab\\\\^\");void 0===e&&(e=i),t[n]=t[n].slice(0,i)+t[n].slice(i+5,t[n].length)}t[n]=t[n].slice(0,e)+\"^tab^\"+t[n].slice(e,t[n].length),Object.defineProperty(this.currentWord,Object.keys(this.currentWord)[this.inputIndex%3-1],{value:t});let i=!1;for(let s=0;s<t[n].length;s++)if(\"^tab^\"===t[n].slice(s,s+5))i=!i,s+=4;else if(this.selectedInput.children[s>e?s-5:s]){let r=this.selectedInput.children[s>e?s-5:s];r.contentDocument.querySelector(\"#tspan7\").innerHTML=t[n].charAt(s),i?(this.tabulatorAnimation(r),r.classList.add(\"tabulator\")):r.classList.remove(\"tabulator\"),this.selectedInput.children[s]}this.tabulator=t[n].slice(e+5,t[n].length),this.tabCount=1,this.tabMode=!0,this.selectedInput.classList.add(\"tab\")}else{this.tabMode=!0,this.selectedInput.classList.add(\"tab\");let e=Object.values(this.currentWord)[this.inputIndex%3-1];e[Math.floor(this.inputIndex/3)-1]+=\"^tab^\",Object.defineProperty(this.currentWord,Object.keys(this.currentWord)[this.inputIndex%3-1],{value:e}),this.tabCount++}return}if([\"<\",\"´\",\"`\",\"^\"].includes(t.key)||t.key.length>1)return;this.enterMode=!1;let n=document.createElement(\"object\");n.data=\"./keys/OG_T.svg\",n.id=`key${this.keys}-inp${this.inputIndex}`,n.style.height=\"100%\",this.selectedInput.insertAdjacentElement(\"beforeend\",n);let i=n.clientHeight;n.hidden=!0,n.addEventListener(\"load\",e=>{if(this.keys+1>=Math.floor(this.selectedInput.clientWidth/i)){n.remove();for(let e=0;e<this.keys;e++)this.failureAnimation(this.selectedInput.children[e]);return}n.hidden=!1,n.contentDocument.querySelector(\"#tspan7\").innerHTML=t.key.charAt(0);let s=Math.floor(this.inputIndex/3)-1,r=Object.values(this.currentWord)[this.inputIndex%3-1];r[s]+=t.key,Object.defineProperty(this.currentWord,Object.keys(this.currentWord)[this.inputIndex%3-1],{value:r}),this.tabMode?(\"^tab^\"===r[s].slice(-6,-1)&&(this.tabulator=\"\"),this.tabulator+=t.key,this.tabulatorAnimation(n),n.classList.add(\"tabulator\")):this.idleAnimation(n),this.keys++})},document.addEventListener(\"keydown\",this.keydownFunction),window.onkeyup=e=>{\"Tab\"===e.key&&this.container.focus()}}}empty(e){let t=e.includes(\"verb\")?3:6,n=[];for(let e=0;e<t;e++)n.push(\"\");return n}changeSelectedInput(){document.querySelectorAll(\".selectedElement\").forEach(e=>e.classList.remove(\"selectedElement\")),this.selectedInput=document.getElementById(`div${this.inputIndex}`);let e=Object.values(this.currentWord)[this.inputIndex%3-1][Math.floor(this.inputIndex/3)-1],t=RegExp(\"\\\\^tab\\\\^\",\"g\"),n=e.match(t);this.tabCount=n?n.length:0,n&&n.length%2==0&&this.selectedInput.classList.remove(\"tab\"),this.selectedInput.classList.add(\"selectedElement\")}cancelTabMode(){let e=Object.values(this.currentWord)[this.inputIndex%3-1],t=Math.floor(this.inputIndex/3)-1;if(e[t].includes(\"^tab^\")){let n=[];for(;e[t].search(\"\\\\^tab\\\\^\")>=0;){let i=e[t].search(\"\\\\^tab\\\\^\");e[t]=e[t].slice(0,i)+e[t].slice(i+5,e[t].length),n.push(i)}1===n.length&&n.push(e[t].length);let i=e[t].slice(n[0],n[1]);for(let e=0;e<i.length;e++)this.selectedInput.children[n[0]].remove();e[t]=e[t].slice(0,n[0])+e[t].slice(n[1],e[t].length),this.keys-=i.length}this.tabMode=!1,this.selectedInput.classList.remove(\"tab\")}findMostUsedTabulator(e){if(e.singular){let t=e.singular.map(e=>{if(e.includes(\"^tab^\")){let t,n=e,i=n.length;for(;n.includes(\"^tab^\");){let e=n.search(\"\\\\^tab\\\\^\");n=n.slice(0,e)+n.slice(e+5,i),void 0===t?t=e:i=e}return n.slice(t||0,i)}}).concat(e.plural.map(e=>{if(e.includes(\"^tab^\")){let t,n=e,i=n.length;for(;n.includes(\"^tab^\");){let e=n.search(\"\\\\^tab\\\\^\");n=n.slice(0,e)+n.slice(e+5,i),void 0===t?t=e:i=e}return n.slice(t||0,i)}})).filter(e=>void 0!=e),n=[];t.forEach(e=>{if(n.map(e=>e[0]).includes(e)){let t=n.findIndex(t=>t[0]===e);n[t]=[e,n[t][1]+1]}else n.push([e,1])});for(let e=0;e<n.length;e++)n.sort((e,t)=>t[1]-e[1]);return n.length>0?n[0][0]:void 0}}startNewTrainingRound(e){let t,n,i,s=this.vocabulary.filter(t=>t.verb===e.includes(\"verb\"));if(0===s.length){setTimeout(t=>alert(`Keine ${e.includes(\"verb\")?\"Konjugationen\":\"Deklinationen\"}!`),250);return}if(0===s.filter(e=>!r(e)).length){setTimeout(t=>alert(`Nur leere ${e.includes(\"verb\")?\"Konjugationen\":\"Deklinationen\"}!`),250);return}function r(t){return t.singular.filter(e=>\"\"===e.trim()).length===(e.includes(\"verb\")?6:3)&&t.plural.filter(e=>\"\"===e.trim()).length===(e.includes(\"verb\")?6:3)}this.round++;let o=0;s.forEach(e=>{r(e)||(o+=e.probability)});let l=Math.floor(Math.random()*o*10)/10,a=0;this.failures=0,this.vocabulary.forEach((n,i)=>{r(n)||n.verb!==e.includes(\"verb\")||(void 0===t?(t=Math.abs(l-(a+n.probability)),this.currentWord=n,this.currentWordIndex=i):Math.abs(l-(a+n.probability))<t&&(t=Math.abs(l-(a+n.probability)),this.currentWordIndex=i,this.currentWord=n),a+=n.probability)}),this.tabulator=this.findMostUsedTabulator(this.currentWord),document.querySelectorAll(\".editable\").forEach(e=>{e.innerHTML=\"\",e.classList.remove(\"redShadowDesign\"),e.classList.remove(\"greenShadowDesign\"),e.classList.remove(\"known-case\"),e.classList.add(\"shadowDesign\")});let c=this.v/3;do i=Math.floor(Math.random()*(e.includes(\"verb\")?6:12)),n=Object.values(this.vocabulary[this.currentWordIndex])[i>5-c?1:0][i>5-c?i-6+c:i];while(\"\"===n)for(;n.includes(\"^tab^\");){let e=n.search(\"\\\\^tab\\\\^\");n=n.slice(0,e)+n.slice(e+5,n.length)}let d=document.getElementById(`div${i>5-c?2+(i-5+c)*3:1+(i+1)*3}`);d.classList.add(\"known-case\"),d.innerHTML=`<span>${n}</span>`;let h=this.empty(e);h[i>5-c?i-6+c:i]=n,this.currentWord={singular:i<=5-c?h:this.empty(e),plural:i>5-c?h:this.empty(e),verb:e.includes(\"verb\"),probability:this.currentWord.probability},this.result={singular:e.includes(\"verb\")?[void 0,void 0,void 0]:[void 0,void 0,void 0,void 0,void 0,void 0],plural:e.includes(\"verb\")?[void 0,void 0,void 0]:[void 0,void 0,void 0,void 0,void 0,void 0]}}compare(e,t){for(;e.includes(\"^tab^\");){let t=e.search(\"\\\\^tab\\\\^\");e=e.slice(0,t)+e.slice(t+5,e.length)}for(;t.includes(\"^tab^\");){let e=t.search(\"\\\\^tab\\\\^\");t=t.slice(0,e)+t.slice(e+5,t.length)}return e===t}compareObjects(e,t){let n=JSON.parse(JSON.stringify(e)),i=JSON.parse(JSON.stringify(t));return n.singular.forEach((e,t)=>{for(;e.includes(\"^tab^\");){let t=e.search(\"\\\\^tab\\\\^\");e=e.slice(0,t)+e.slice(t+5,e.length)}n.singular[t]=e}),n.plural.forEach((e,t)=>{for(;e.includes(\"^tab^\");){let t=e.search(\"\\\\^tab\\\\^\");e=e.slice(0,t)+e.slice(t+5,e.length)}n.plural[t]=e}),i.singular.forEach((e,t)=>{for(;e.includes(\"^tab^\");){let t=e.search(\"\\\\^tab\\\\^\");e=e.slice(0,t)+e.slice(t+5,e.length)}i.singular[t]=e}),i.plural.forEach((e,t)=>{for(;e.includes(\"^tab^\");){let t=e.search(\"\\\\^tab\\\\^\");e=e.slice(0,t)+e.slice(t+5,e.length)}i.plural[t]=e}),Object.values(n).slice(0,3).toLocaleString()===Object.values(i).slice(0,3).toLocaleString()}failureAnimation(e){if(!e)return;let t=e.contentDocument,n=t.querySelector(\"#mainRect\"),i=t.querySelector(\"#text7\"),s=[{stroke:this.badColor,offset:.025},{rotate:\"10deg z\",offset:.25},{rotate:\"0deg z\",offset:.5},{rotate:\"-10deg z\",offset:.75,stroke:this.badColor},{stroke:\"#eeeeeeff\",offset:.925},{rotate:\"0deg z\",offset:1}],r={duration:500};n.animate(s,r),i.animate(s,r)}idleAnimation(e){let t=e.contentDocument,n=t.querySelector(\"#mainRect\"),i=t.querySelector(\"#text7\"),s={stroke:[\"#8f8f8f\",\"#fff\",\"#eeeeeeff\"],offset:[0,1]},r={duration:250};n.animate(s,r),i.animate(s,r)}tabulatorAnimation(e){if(!e)return;let t=e.contentDocument,n=t.querySelector(\"#mainRect\"),i=t.querySelector(\"#text7\"),s={stroke:[\"#eeeeeeff\",\"rgb(186, 2, 70)\"===this.badColor?\"#4400ff\":\"rgb(211, 0, 0)\"],offset:[0,1]},r={duration:250,fill:\"forwards\"};n.animate(s,r),i.animate(s,r)}successAnimation(e){if(!e)return;let t=e.contentDocument,n=t.querySelector(\"#mainRect\"),i=t.querySelector(\"#text7\"),s={stroke:[\"#eeeeeeff\",\"#08a000\",\"#eeeeeeff\"],offset:[0,1]},r={duration:500};n.animate(s,r),i.animate(s,r)}deletionAnimation(e,t,n){if(\"OBJECT\"===e.tagName){let i=e.contentDocument,s=i.querySelector(\"#mainRect\"),r=i.querySelector(\"#text7\"),o={stroke:[e.classList.contains(\"tabulator\")?\"rgb(186, 2, 70)\"===this.badColor?\"#4400ff\":\"rgb(211, 0, 0)\":\"#eeeeeeff\",this.badColor],offset:[0,1]},l={duration:t,fill:\"forwards\",direction:n};s.animate(o,l),r.animate(o,l)}else if(\"BUTTON\"===e.tagName){let i={backgroundColor:[\"rgb(186, 2, 70)\"===this.badColor?\"#ff0000\":this.badColor,\"rgb(186, 2, 70)\"===this.badColor?\"#ba0303\":\"#ad0668\"],boxShadow:[`0 0 0 0 ${\"rgb(186, 2, 70)\"===this.badColor?\"#ba0303\":\"#ad0668\"}`,`0 0 1vh 1vh ${\"rgb(186, 2, 70)\"===this.badColor?\"#ff0000\":this.badColor}`],color:[\"#ffffff\",\"#eeffff\"],border:[\"none\",\"none\"],offset:[0,1]};e.animate(i,{duration:t,fill:\"forwards\",direction:n})}}},r=new class{constructor(){this.command=\"\",this.modifyDocument()}modifyDocument(){this.resizeFunction=()=>this.movementAnimation(),window.addEventListener(\"resize\",this.resizeFunction),this.input=document.querySelector(\"#container\"),this.iconPlaceholder=document.querySelector(\"#icon-placeholder\"),this.navbar=document.querySelector(\"#navbar\"),document.querySelector(\".homeDiv\")&&document.querySelector(\".homeDiv\").remove(),document.body.style.backgroundImage=\"none\",document.body.style.backgroundImage=\"linear-gradient(180deg, #140063 0%, #06011b 65%, #06011b 77%, #140063 100%)\",document.body.setAttribute(\"class\",\"\"),this.input.setAttribute(\"class\",\"\"),this.iconPlaceholder.setAttribute(\"class\",\"\"),this.navbar.setAttribute(\"class\",\"\"),this.input.innerHTML=\"\",this.iconPlaceholder.innerHTML=\"\",this.navbar.innerHTML=\"\";let e=document.createElement(\"object\");e.data=\"./icon.svg\",e.id=\"icon\",this.iconPlaceholder.insertAdjacentElement(\"beforeend\",e);let t=document.createElement(\"object\");t.data=\"./version.svg\",t.id=\"version\",this.iconPlaceholder.insertAdjacentElement(\"beforeend\",t),document.body.classList.add(\"homeBody\"),this.input.classList.add(\"homeInput\"),this.iconPlaceholder.classList.add(\"homeIconPlaceholder\"),this.navbar.classList.add(\"homeNavbar\"),this.type()}type(){let e=0;this.keyDownFunction=r=>{if(\"Backspace\"===r.key&&this.input.lastElementChild){this.input.lastElementChild.remove(),this.movementAnimation(),this.command=this.command.slice(0,this.command.length-1),e--;return}if(\"Enter\"===r.key){switch(this.command){case\"add vocabulary\":case\"add\":case\"add vocabulary\":case\"neu\":case\"hinzufügen\":case\"neues wort\":case\"neues Wort\":case\"Vokabeln hinzufügen\":o(),t.modifyDocument();break;case\"show vocabulary\":case\"show\":case\"tabelle\":case\"Tabelle\":case\"Vokabeln anzeigen\":o(),n.modifyDocument();break;case\"training\":case\"Training\":case\"trainer\":case\"Training\":case\"üben\":case\"Üben\":case\"vocabuary training\":o(),i.modifyDocument();break;case\"declinations\":case\"deklinationen\":case\"Deklinationen\":case\"conj\":case\"add declinations\":o(),s.modifyDocument(\"add nouns\");break;case\"deklinieren\":case\"deklinationstraining\":case\"Deklinationstraining\":case\"decline nouns\":case\"decline\":case\"ct\":o(),s.modifyDocument(\"nouns\");break;case\"v\":case\"conjugations\":case\"konjugationen\":case\"Konjugationen\":o(),s.modifyDocument(\"add verbs\");break;case\"conjugate\":case\"konjugieren\":case\"konjugationstraining\":case\"Konjugationstraining\":case\"vt\":o(),s.modifyDocument(\"verbs\")}this.command=\"\",e=0,this.input.innerHTML=\"\";return}if([\"<\",\"´\",\"`\",\"^\"].includes(r.key)||r.key.length>1)return;let l=document.createElement(\"object\");l.data=\"./keys/OG_T.svg\",l.id=`key${e}`,l.style.height=\"100%\",this.input.insertAdjacentElement(\"beforeend\",l);let a=l.clientHeight;l.hidden=!0,l.addEventListener(\"load\",t=>{if(e>=Math.floor(window.innerWidth/a)){l.remove();for(let t=0;t<e;t++)this.failureAnimation(this.input.children[t]);return}l.hidden=!1,l.contentDocument.querySelector(\"#tspan7\").innerHTML=r.key.charAt(0),this.command+=r.key,e++,this.idleAnimation(l),this.movementAnimation()})},document.addEventListener(\"keydown\",this.keyDownFunction)}idleAnimation(e){let t=e.contentDocument,n=t.querySelector(\"#mainRect\"),i=t.querySelector(\"#text7\"),s={stroke:[\"#8f8f8f\",\"#fff\",\"#eeeeeeff\"],offset:[0,1]},r={duration:250};n.animate(s,r),i.animate(s,r)}failureAnimation(e){if(!e)return;let t=e.contentDocument,n=t.querySelector(\"#mainRect\"),i=t.querySelector(\"#text7\"),s=[{stroke:\"rgb(186, 2, 70)\",offset:.025},{rotate:\"10deg z\",offset:.25},{rotate:\"0deg z\",offset:.5},{rotate:\"-10deg z\",offset:.75,stroke:\"rgb(186, 2, 70)\"},{stroke:\"#eeeeeeff\",offset:.925},{rotate:\"0deg z\",offset:1}],r={duration:500};n.animate(s,r),i.animate(s,r)}movementAnimation(){if(!this.input)return;let e=this.input.firstChild,t=this.input;e&&(t.childElementCount>1&&(t.style.transition=\"padding 250ms\"),t.style.paddingLeft=`${(window.innerWidth-t.childElementCount*e.clientHeight)/2}px`)}};function o(){document.removeEventListener(\"keydown\",t.keyDownFunction),document.removeEventListener(\"keydown\",i.keyDownFunction),document.removeEventListener(\"keydown\",r.keyDownFunction),document.removeEventListener(\"keydown\",s.keydownFunction),document.removeEventListener(\"mouseover\",i.mouseOverFunction),window.removeEventListener(\"resize\",r.resizeFunction),window.removeEventListener(\"resize\",i.resizeFunction)}\n//# sourceMappingURL=index.e3b80da5.js.map\n","import { AddVocabulary, WordBundle } from \"./src/add-vocabulary\";\r\nimport { HomeMenu } from \"./src/home-menu\";\r\nimport { ShowVocabulary } from \"./src/show-vocabulary\";\r\nimport { VocabularyTraining } from \"./src/vocabulary-training\";\r\nimport { InflectVocabulary } from \"./src/inflect-vocabulary\"\r\n\r\nexport function createDiv(id?: string, c?: string, width?: string, height?: string): HTMLDivElement {\r\n    let div = document.createElement('div');\r\n    if (id) div.id = id;\r\n    if (c) div.classList.add(c);\r\n    if (height && width) {\r\n        div.style.height = height;\r\n        div.style.width = width;\r\n    }\r\n    return div;\r\n}\r\n\r\nexport const addVocabulary = new AddVocabulary();\r\n\r\nexport const showVocabulary = new ShowVocabulary();\r\n\r\nexport const training = new VocabularyTraining();\r\n\r\nexport const inflectVocabulary = new InflectVocabulary();\r\n\r\nexport const home = new HomeMenu();\r\n\r\nexport function removeAllEventListeners(): void {\r\n    document.removeEventListener('keydown', addVocabulary.keyDownFunction);\r\n    document.removeEventListener('keydown', training.keyDownFunction);\r\n    document.removeEventListener('keydown', home.keyDownFunction);\r\n    document.removeEventListener('keydown', inflectVocabulary.keydownFunction);\r\n    document.removeEventListener('mouseover', training.mouseOverFunction);\r\n    window.removeEventListener('resize', home.resizeFunction);\r\n    window.removeEventListener('resize', training.resizeFunction);\r\n}","import { createDiv, home, removeAllEventListeners } from \"..\";\r\n\r\nexport class AddVocabulary {\r\n    container: HTMLDivElement;\r\n    iconPlaceholder: HTMLDivElement;\r\n    navbar: HTMLDivElement;\r\n    buttonLeft: HTMLButtonElement\r\n    buttonRight: HTMLButtonElement;\r\n    homeButton: HTMLButtonElement;\r\n\r\n    vocabulary: WordBundle[] = [];\r\n    wordIndex = 0;\r\n    database: IDBDatabase;\r\n    enterMode = false;\r\n\r\n    keyDownFunction: EventListenerOrEventListenerObject;\r\n    maxCharacters: number;\r\n\r\n    constructor() {\r\n        const request = window.indexedDB.open('Vocabulary', 1);\r\n\r\n        request.addEventListener('error', _ => {\r\n            console.error('There is an error. Have fun fixing it. Details:' + request.error);\r\n        })\r\n\r\n        request.addEventListener('success', _ => {\r\n            this.database = request.result;\r\n\r\n            const transaction = this.database.transaction('vocabulary', 'readonly');\r\n            transaction.onerror = _ => console.error(transaction.error);\r\n            const objectStore = transaction.objectStore('vocabulary');\r\n            const req = objectStore.getAll();\r\n            req.onerror = _ => console.error(req.error);\r\n            req.onsuccess = _ => {\r\n                this.vocabulary = req.result;\r\n                this.wordIndex = this.vocabulary.length;\r\n            }\r\n        })\r\n\r\n        request.addEventListener('upgradeneeded', (event: IDBVersionChangeEvent) => {\r\n            const db = request.result;\r\n            const objectStore = db.createObjectStore(`vocabulary`, { autoIncrement: true });\r\n            objectStore.createIndex(\"latinWord\", \"latinWord\", { unique: false });\r\n            objectStore.createIndex(\"inflections\", \"inflections\", { unique: false });\r\n            objectStore.createIndex(\"germanTranslation\", \"germanTranslation\", { unique: false });\r\n            objectStore.createIndex(\"relatedForeignWords\", \"relatedForeignWords\", { unique: false });\r\n            objectStore.createIndex(\"selected\", \"selected\", { unique: false });\r\n            objectStore.createIndex(\"probability\", \"probability\", { unique: false });\r\n            const objectStore2 = db.createObjectStore(`inflected vocabulary`, { autoIncrement: true });\r\n            objectStore2.createIndex(\"singular\", \"singular\", { unique: false });\r\n            objectStore2.createIndex(\"plural\", \"plural\", { unique: false });\r\n            objectStore2.createIndex(\"verb\", \"verb\", { unique: false });\r\n            objectStore2.createIndex(\"probability\", \"probability\", { unique: false });\r\n            this.database = request.result;\r\n        })\r\n\r\n        const notImportantRequest_____yet = window.indexedDB.open('player data', 1);\r\n\r\n        notImportantRequest_____yet.addEventListener('upgradeneeded', (event) => {\r\n            const db = notImportantRequest_____yet.result;\r\n            if (!db.objectStoreNames.contains('versions played')) {\r\n                db.createObjectStore('versions played', { autoIncrement: true });\r\n            }\r\n\r\n            notImportantRequest_____yet.addEventListener('success', (event) => {\r\n                const db = notImportantRequest_____yet.result;\r\n                const transaction = db.transaction('versions played', 'readwrite');\r\n                const objectStore = transaction.objectStore('versions played');\r\n                objectStore.add('Beta');\r\n    \r\n                transaction.oncomplete = () => {\r\n                    console.log('Data added successfully');\r\n                };\r\n    \r\n                transaction.onerror = (event) => {\r\n                    console.error('Transaction error:', notImportantRequest_____yet.error);\r\n                };\r\n            });\r\n    \r\n            notImportantRequest_____yet.addEventListener('error', (event) => {\r\n                console.error('Database error:', notImportantRequest_____yet.error);\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    modifyDocument(): void {\r\n        const request = window.indexedDB.open('Vocabulary', 1);\r\n\r\n        request.addEventListener('error', _ => {\r\n            console.error('There is an error. Have fun fixing it. Details:' + request.error);\r\n        })\r\n\r\n        request.addEventListener('success', _ => {\r\n            this.database = request.result;\r\n\r\n            const transaction = this.database.transaction('vocabulary', 'readonly');\r\n            transaction.onerror = _ => console.error(transaction.error);\r\n            const objectStore = transaction.objectStore('vocabulary');\r\n            const req = objectStore.getAll();\r\n            req.onerror = _ => console.error(req.error);\r\n            req.onsuccess = _ => {\r\n                this.vocabulary = req.result;\r\n                this.wordIndex = this.vocabulary.length;\r\n\r\n\r\n                this.container = document.querySelector('#container');\r\n                this.iconPlaceholder = document.querySelector('#icon-placeholder');\r\n                this.navbar = document.querySelector('#navbar');\r\n\r\n                this.container.style.padding = '0';\r\n                document.body.style.backgroundImage = 'none';\r\n\r\n                document.body.setAttribute('class', '');\r\n                this.container.setAttribute('class', '');\r\n                this.iconPlaceholder.setAttribute('class', '');\r\n                this.navbar.setAttribute('class', '');\r\n\r\n                this.container.innerHTML = '';\r\n                this.iconPlaceholder.innerHTML = '';\r\n                this.navbar.innerHTML = '';\r\n\r\n                document.querySelector('body').classList.add('addVocabularyBody');\r\n\r\n                this.iconPlaceholder.classList.add('addVocabularyIconPlaceholder');\r\n                let addVocabularyIcon = document.createElement('object');\r\n                addVocabularyIcon.data = './add_vocabulary.svg';\r\n                addVocabularyIcon.id = 'addVocabularyIcon';\r\n                this.iconPlaceholder.insertAdjacentElement('beforeend', addVocabularyIcon);\r\n\r\n\r\n                this.container.classList.add('addVocabularyContainer');\r\n\r\n                let classes = 'inp bg inp bg inp bg inp'.split(' ');\r\n                for (let i = 0; i < classes.length; i++) {\r\n                    let div = createDiv(`div${i}`, `${classes[i]}`, `100%`, `${100 / classes.length}%`);\r\n                    this.container.appendChild(div);\r\n                    div.style.padding = `${0.05 * div.offsetHeight}px`;\r\n                }\r\n\r\n                this.navbar.classList.add('addVocabularyNavbar');\r\n\r\n                this.buttonLeft = document.createElement('button');\r\n                this.buttonLeft.classList.add('navButton');\r\n                this.buttonLeft.innerHTML = '<';\r\n                this.navbar.appendChild(this.buttonLeft);\r\n\r\n                this.homeButton = document.createElement('button');\r\n                this.homeButton.classList.add('navButton');\r\n                let icon = document.createElement('object');\r\n                icon.classList.add('homeIcon');\r\n                icon.data = './home.svg';\r\n                icon.style.height = '9vh';\r\n                icon.addEventListener('load', _ => {\r\n                    icon.contentDocument.addEventListener('click', _ => {\r\n                        removeAllEventListeners();\r\n                        home.modifyDocument();\r\n                    })\r\n                })\r\n                this.homeButton.insertAdjacentElement('beforeend', icon);\r\n                this.navbar.appendChild(this.homeButton);\r\n\r\n                this.buttonRight = document.createElement('button');\r\n                this.buttonRight.classList.add('navButton');\r\n                this.buttonRight.innerHTML = '>';\r\n                this.navbar.appendChild(this.buttonRight);\r\n\r\n                this.type();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    type(): void {\r\n        let inputs = [0, 2, 4, 6];\r\n        let inputIndex = 0;\r\n        let keys = 0;\r\n        let selectedInput: HTMLDivElement;\r\n        let currentWord: WordBundle = {\r\n            latinWord: '',\r\n            inflections: '',\r\n            germanTranslation: '',\r\n            relatedForeignWords: '',\r\n            selected: true,\r\n            probability: 1\r\n        }\r\n\r\n        for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n            this.container.children[i].addEventListener('click', _ => {\r\n                for (let ii = 0; ii < this.container.childElementCount; ii += 2) {\r\n                    if (this.container.children[ii] === this.container.children[i]) {\r\n                        inputIndex = ii / 2;\r\n                        selectedInput = <HTMLDivElement>this.container.children[ii];\r\n                        selectedInput.classList.add('selected');\r\n                        keys = selectedInput.childElementCount;\r\n                    } else {\r\n                        this.container.children[ii].classList.remove('selected');\r\n                    }\r\n                }\r\n            });\r\n        };\r\n\r\n        this.container.children[inputs[inputIndex]].classList.add('selected');\r\n        selectedInput = <HTMLDivElement>this.container.children[inputs[inputIndex]];\r\n\r\n        let object = selectedInput.appendChild(createDiv('temporary'));\r\n        let width = selectedInput.offsetHeight - (selectedInput.clientHeight - object.clientHeight) - parseFloat(selectedInput.style.padding);\r\n        this.maxCharacters = Math.floor(window.innerWidth / width);\r\n        object.remove();\r\n\r\n        this.homeButton.addEventListener('click', _ => {\r\n            removeAllEventListeners();\r\n            home.modifyDocument();\r\n        });\r\n\r\n        this.buttonLeft.addEventListener('mousedown', _ => {\r\n            for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                this.container.children[i].classList.add('shadow');\r\n                this.buttonLeft.classList.add('clicked');\r\n            }\r\n        })\r\n\r\n        this.buttonRight.addEventListener('mousedown', _ => {\r\n            for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                this.container.children[i].classList.add('shadow');\r\n                this.buttonRight.classList.add('clicked');\r\n            }\r\n        })\r\n\r\n        this.buttonLeft.addEventListener('mouseout', _ => {\r\n            for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                this.container.children[i].classList.remove('shadow');\r\n                this.buttonLeft.classList.remove('clicked');\r\n            }\r\n        })\r\n\r\n        this.buttonRight.addEventListener('mouseout', _ => {\r\n            for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                this.container.children[i].classList.remove('shadow');\r\n                this.buttonRight.classList.remove('clicked');\r\n            }\r\n        });\r\n\r\n        this.buttonLeft.addEventListener('mouseup', _ => {\r\n            if (this.vocabulary[this.wordIndex - 1]) {\r\n                if (\r\n                    Object.values(currentWord).filter((value) => value === '').length === 4\r\n                    && this.wordIndex === this.vocabulary.length\r\n                ) {\r\n                    for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                        this.container.children[i].classList.remove('shadow');\r\n                    }\r\n\r\n                    this.wordIndex--;\r\n                    currentWord = this.vocabulary[this.wordIndex];\r\n\r\n                    for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                        let value = Object.values(currentWord)[i / 2];\r\n                        this.container.children[i].innerHTML = '';\r\n                        for (let ii = 0; ii < value.length; ii++) {\r\n                            let object = document.createElement('object');\r\n                            object.data = './keys/OG_T.svg';\r\n                            object.id = `key${ii}-inp${i / 2}`;\r\n                            object.style.height = `100%`;\r\n                            this.container.children[i].insertAdjacentElement('beforeend', object);\r\n\r\n                            object.addEventListener('load', _ => {\r\n                                let svg = object.contentDocument;\r\n                                svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\r\n                            })\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.vocabulary[this.wordIndex] = currentWord;\r\n\r\n                    const transaction = this.database.transaction(`vocabulary`, 'readwrite');\r\n                    transaction.onerror = _ => console.error(transaction.error);\r\n                    const objectStore = transaction.objectStore(`vocabulary`);\r\n                    const req = objectStore.get(this.wordIndex);\r\n                    req.onerror = _ => console.error(req.error);\r\n                    req.onsuccess = _ => {\r\n                        for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                            this.container.children[i].classList.remove('shadow');\r\n                        }\r\n\r\n                        const idontcare = objectStore.put(currentWord, this.wordIndex + 1);\r\n                        idontcare.onerror = _ => console.error(idontcare.error);\r\n\r\n                        this.wordIndex--;\r\n\r\n                        currentWord = this.vocabulary[this.wordIndex];\r\n                        for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                            let value = Object.values(currentWord)[i / 2];\r\n                            this.container.children[i].innerHTML = '';\r\n                            for (let ii = 0; ii < value.length; ii++) {\r\n                                let object = document.createElement('object');\r\n                                object.data = './keys/OG_T.svg';\r\n                                object.id = `key${ii}-inp${i / 2}`;\r\n                                object.style.height = `100%`;\r\n                                this.container.children[i].insertAdjacentElement('beforeend', object);\r\n\r\n                                object.addEventListener('load', _ => {\r\n                                    let svg = object.contentDocument;\r\n                                    svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        this.buttonRight.addEventListener('mouseup', _ => {\r\n            this.buttonRight.classList.remove('clicked');\r\n            if (!this.vocabulary[this.wordIndex + 1]) {\r\n                this.vocabulary[this.wordIndex] = currentWord;\r\n\r\n                const transaction = this.database.transaction(`vocabulary`, 'readwrite');\r\n                transaction.onerror = _ => console.error(transaction.error);\r\n                const objectStore = transaction.objectStore(`vocabulary`);\r\n                const req = objectStore.put(currentWord, this.wordIndex + 1);\r\n                req.onerror = _ => console.error(req.error)\r\n                transaction.oncomplete = _ => {\r\n                    for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                        this.container.children[i].classList.remove('shadow');\r\n                    }\r\n\r\n                    this.wordIndex++;\r\n                    keys = 0;\r\n                    currentWord = {\r\n                        latinWord: '',\r\n                        inflections: '',\r\n                        germanTranslation: '',\r\n                        relatedForeignWords: '',\r\n                        selected: true,\r\n                        probability: 1\r\n                    };\r\n\r\n                    for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                        this.container.children[i].innerHTML = '';\r\n\r\n                        inputIndex = 0;\r\n                        selectedInput = <HTMLDivElement>this.container.children[0];\r\n                        selectedInput.classList.add('selected');\r\n                        if (i != 0) this.container.children[i].classList.remove('selected');\r\n                    }\r\n                }\r\n            } else {\r\n                this.vocabulary[this.wordIndex] = currentWord;\r\n\r\n                for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                    this.container.children[i].classList.remove('shadow');\r\n                }\r\n\r\n                const transaction = this.database.transaction(`vocabulary`, 'readwrite');\r\n                transaction.onerror = _ => console.error(transaction.error);\r\n                const objectStore = transaction.objectStore(`vocabulary`);\r\n                const req = objectStore.get(this.wordIndex);\r\n                req.onerror = _ => console.error(req.error);\r\n                req.onsuccess = _ => {\r\n                    const idontcare = objectStore.put(currentWord, this.wordIndex + 1);\r\n                    idontcare.onerror = _ => console.log(idontcare.error);\r\n\r\n                    this.wordIndex++;\r\n                    currentWord = this.vocabulary[this.wordIndex];\r\n\r\n                    for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                        let value = Object.values(currentWord)[i / 2];\r\n                        this.container.children[i].innerHTML = '';\r\n                        for (let ii = 0; ii < value.length; ii++) {\r\n                            let object = document.createElement('object');\r\n                            object.data = './keys/OG_T.svg';\r\n                            object.id = `key${ii}-inp${i / 2}`;\r\n                            object.style.height = `100%`;\r\n                            this.container.children[i].insertAdjacentElement('beforeend', object);\r\n\r\n                            object.addEventListener('load', _ => {\r\n                                let svg = object.contentDocument;\r\n                                svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n\r\n        this.keyDownFunction = (event: KeyboardEvent) => {\r\n            let forbiddenCharacters = ['<', '´', '`', '^'];\r\n            if (event.key === 'Backspace') {\r\n                if (selectedInput.lastElementChild) {\r\n                    selectedInput.lastElementChild.remove();\r\n\r\n                    Object.defineProperty(\r\n                        currentWord,\r\n                        Object.keys(currentWord)[inputIndex],\r\n                        { value: Object.values(currentWord)[inputIndex].slice(0, keys - 1) }\r\n                    );\r\n\r\n                    keys--;\r\n                }\r\n                return;\r\n            } else if (event.key === 'Enter' || event.key === 'ArrowDown') {\r\n                if (inputIndex + 1 < 4) {\r\n                    inputIndex++;\r\n                    selectedInput = <HTMLDivElement>this.container.children[inputs[inputIndex]];\r\n                    for (let i = 0; i < this.container.childElementCount; i++) {\r\n                        if (this.container.children[i] != selectedInput) {\r\n                            this.container.children[i].classList.remove('selected');\r\n                        } else {\r\n                            selectedInput.classList.add('selected');\r\n                            keys = selectedInput.childElementCount;\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                        this.container.children[i].classList.add('shadow');\r\n                    }\r\n\r\n                    if (this.enterMode) {\r\n                        this.buttonRight.classList.remove('clicked');\r\n                        if (!this.vocabulary[this.wordIndex + 1]) {\r\n                            this.vocabulary[this.wordIndex] = currentWord;\r\n\r\n                            const transaction = this.database.transaction(`vocabulary`, 'readwrite');\r\n                            transaction.onerror = _ => console.error(transaction.error);\r\n                            const objectStore = transaction.objectStore(`vocabulary`);\r\n                            const req = objectStore.put(currentWord, this.wordIndex + 1);\r\n                            req.onerror = _ => console.error(req.error)\r\n                            transaction.oncomplete = _ => {\r\n                                for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                                    this.container.children[i].classList.remove('shadow');\r\n                                }\r\n\r\n                                this.wordIndex++;\r\n                                keys = 0;\r\n                                currentWord = {\r\n                                    latinWord: '',\r\n                                    inflections: '',\r\n                                    germanTranslation: '',\r\n                                    relatedForeignWords: '',\r\n                                    selected: true,\r\n                                    probability: 1\r\n                                };\r\n\r\n                                for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                                    this.container.children[i].innerHTML = '';\r\n\r\n                                    inputIndex = 0;\r\n                                    selectedInput = <HTMLDivElement>this.container.children[0];\r\n                                    selectedInput.classList.add('selected');\r\n                                    if (i != 0) this.container.children[i].classList.remove('selected');\r\n                                }\r\n                            }\r\n                        } else {\r\n                            this.vocabulary[this.wordIndex] = currentWord;\r\n\r\n                            for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                                this.container.children[i].classList.remove('shadow');\r\n                            }\r\n\r\n                            const transaction = this.database.transaction(`vocabulary`, 'readwrite');\r\n                            transaction.onerror = _ => console.error(transaction.error);\r\n                            const objectStore = transaction.objectStore(`vocabulary`);\r\n                            const req = objectStore.get(this.wordIndex);\r\n                            req.onerror = _ => console.error(req.error);\r\n                            req.onsuccess = _ => {\r\n                                const idontcare = objectStore.put(currentWord, this.wordIndex + 1);\r\n                                idontcare.onerror = _ => console.log(idontcare.error);\r\n\r\n                                this.wordIndex++;\r\n                                currentWord = this.vocabulary[this.wordIndex];\r\n\r\n                                for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                                    let value = Object.values(currentWord)[i / 2];\r\n                                    this.container.children[i].innerHTML = '';\r\n                                    for (let ii = 0; ii < value.length; ii++) {\r\n                                        let object = document.createElement('object');\r\n                                        object.data = './keys/OG_T.svg';\r\n                                        object.id = `key${ii}-inp${i / 2}`;\r\n                                        object.style.height = `100%`;\r\n                                        this.container.children[i].insertAdjacentElement('beforeend', object);\r\n\r\n                                        object.addEventListener('load', _ => {\r\n                                            let svg = object.contentDocument;\r\n                                            svg.querySelector('#tspan7').innerHTML = value.charAt(ii);\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        this.enterMode = false;\r\n                    } else {\r\n                        this.enterMode = true;\r\n                    }\r\n\r\n                    const transaction = this.database.transaction(`vocabulary`, 'readwrite');\r\n                    transaction.onerror = _ => console.error(transaction.error);\r\n                    const objectStore = transaction.objectStore(`vocabulary`);\r\n                    const req = objectStore.put(currentWord, this.wordIndex + 1);\r\n                    req.onerror = _ => console.error(req.error);\r\n\r\n                    setTimeout(_ => {\r\n                        for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n                            this.container.children[i].classList.remove('shadow');\r\n                        }\r\n                    }, 250);\r\n                }\r\n\r\n                return;\r\n            } else if (event.key === 'ArrowUp') {\r\n                if (inputIndex > 0) inputIndex--;\r\n                selectedInput = <HTMLDivElement>this.container.children[inputs[inputIndex]];\r\n                for (let i = 0; i < this.container.childElementCount; i++) {\r\n                    if (this.container.children[i] != selectedInput) {\r\n                        this.container.children[i].classList.remove('selected');\r\n                    } else {\r\n                        selectedInput.classList.add('selected');\r\n                        keys = selectedInput.childElementCount;\r\n                    }\r\n                }\r\n                return;\r\n            } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) {\r\n                return;\r\n            }\r\n\r\n            let object = document.createElement('object');\r\n            object.data = './keys/OG_T.svg';\r\n            object.id = `key${keys}-inp${inputIndex}`;\r\n            object.style.height = `100%`;\r\n            selectedInput.insertAdjacentElement('beforeend', object);\r\n            let width = object.clientHeight;\r\n            object.hidden = true;\r\n\r\n            object.addEventListener('load', _ => {\r\n                if (keys >= Math.floor(window.innerWidth / width)) {\r\n                    object.remove();\r\n                    for (let i = 0; i < keys; i++) {\r\n                        this.failureAnimation(<HTMLObjectElement>selectedInput.children[i]);\r\n                    }\r\n                    return;\r\n                }\r\n                object.hidden = false;\r\n\r\n                let svg = object.contentDocument;\r\n                svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\r\n\r\n                Object.defineProperty(\r\n                    currentWord,\r\n                    Object.keys(currentWord)[inputIndex],\r\n                    { value: Object.values(currentWord)[inputIndex] + event.key.charAt(0) }\r\n                );\r\n\r\n                keys++;\r\n\r\n                this.idleAnimation(object);\r\n            });\r\n        }\r\n\r\n        document.addEventListener('keydown', this.keyDownFunction);\r\n\r\n    }\r\n\r\n    failureAnimation(object: HTMLObjectElement): void {\r\n        if (!object) {\r\n            return;\r\n        }\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: Keyframe[] = [\r\n            { stroke: \"rgb(186, 2, 70)\", offset: 0.025 },\r\n\r\n            { rotate: \"10deg z\", offset: 0.25 },\r\n\r\n            { rotate: \"0deg z\", offset: 0.5 },\r\n\r\n            { rotate: \"-10deg z\", offset: 0.75, stroke: \"rgb(186, 2, 70)\" },\r\n\r\n            { stroke: \"#eeeeeeff\", offset: 0.925 },\r\n\r\n            { rotate: \"0deg z\", offset: 1 }\r\n        ];\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 500\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    idleAnimation(object: HTMLObjectElement): void {\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#8f8f8f', '#fff', '#eeeeeeff'],\r\n            offset: [0, 1]\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 250\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n}\r\n\r\nexport interface WordBundle {\r\n    latinWord: string;\r\n    inflections: string;\r\n    germanTranslation: string;\r\n    relatedForeignWords: string;\r\n    selected: boolean;\r\n    probability: number;\r\n}","import { addVocabulary, removeAllEventListeners, showVocabulary, inflectVocabulary, training } from \"..\";\r\n\r\nexport class HomeMenu {\r\n    input: HTMLDivElement;\r\n    iconPlaceholder: HTMLDivElement;\r\n    navbar: HTMLDivElement;\r\n\r\n    command = '';\r\n    keyDownFunction: EventListenerOrEventListenerObject;\r\n    resizeFunction: EventListenerOrEventListenerObject;\r\n\r\n    constructor() {\r\n        this.modifyDocument();\r\n    }\r\n\r\n    modifyDocument(): void {\r\n        this.resizeFunction = () => this.movementAnimation();\r\n        window.addEventListener('resize', this.resizeFunction);\r\n        this.input = document.querySelector('#container');\r\n        this.iconPlaceholder = document.querySelector('#icon-placeholder');\r\n        this.navbar = document.querySelector('#navbar');\r\n\r\n        if (document.querySelector('.homeDiv')) {\r\n            let homeDiv = document.querySelector('.homeDiv');\r\n            homeDiv.remove();\r\n        }\r\n\r\n        document.body.style.backgroundImage = 'none';\r\n        document.body.style.backgroundImage = 'linear-gradient(180deg, #140063 0%, #06011b 65%, #06011b 77%, #140063 100%)';\r\n        document.body.setAttribute('class', '');\r\n        this.input.setAttribute('class', '');\r\n        this.iconPlaceholder.setAttribute('class', '');\r\n        this.navbar.setAttribute('class', '');\r\n        this.input.innerHTML = '';\r\n        this.iconPlaceholder.innerHTML = '';\r\n        this.navbar.innerHTML = '';\r\n\r\n        let icon = document.createElement('object');\r\n        icon.data = './icon.svg';\r\n        icon.id = 'icon';\r\n        this.iconPlaceholder.insertAdjacentElement('beforeend', icon);\r\n        let version = document.createElement('object');\r\n        version.data = './version.svg';\r\n        version.id = 'version';\r\n        this.iconPlaceholder.insertAdjacentElement('beforeend', version);\r\n\r\n        document.body.classList.add('homeBody');\r\n        this.input.classList.add('homeInput');\r\n        this.iconPlaceholder.classList.add('homeIconPlaceholder');\r\n        this.navbar.classList.add('homeNavbar');\r\n\r\n        this.type();\r\n    }\r\n\r\n    type(): void {\r\n        let keys = 0;\r\n        this.keyDownFunction = (event: KeyboardEvent) => {\r\n            let forbiddenCharacters = ['<', '´', '`', '^'];\r\n            if (event.key === 'Backspace' && this.input.lastElementChild) {\r\n                this.input.lastElementChild.remove();\r\n                this.movementAnimation();\r\n                this.command = this.command.slice(0, this.command.length - 1);\r\n                keys--;\r\n                return;\r\n            } else if (event.key === 'Enter') {\r\n                switch (this.command) {\r\n                    case 'add vocabulary':\r\n                    case 'add':\r\n                    case 'add vocabulary':\r\n                    case 'neu':\r\n                    case 'hinzufügen':\r\n                    case 'neues wort':\r\n                    case 'neues Wort':\r\n                    case 'Vokabeln hinzufügen':\r\n                        removeAllEventListeners();\r\n                        addVocabulary.modifyDocument();\r\n                        break;\r\n                    case 'show vocabulary':\r\n                    case 'show':\r\n                    case 'tabelle':\r\n                    case 'Tabelle':\r\n                    case 'Vokabeln anzeigen':\r\n                        removeAllEventListeners();\r\n                        showVocabulary.modifyDocument();\r\n                        break;\r\n                    case 'training':\r\n                    case 'Training':\r\n                    case 'trainer':\r\n                    case 'Training':\r\n                    case 'üben':\r\n                    case 'Üben':\r\n                    case 'vocabuary training':\r\n                        removeAllEventListeners();\r\n                        training.modifyDocument();\r\n                        break;\r\n                    case 'declinations':\r\n                    case 'deklinationen':\r\n                    case 'Deklinationen':\r\n                    case 'conj':\r\n                    case 'add declinations':\r\n                        removeAllEventListeners();\r\n                        inflectVocabulary.modifyDocument('add nouns');\r\n                        break;\r\n                    case 'deklinieren':\r\n                    case 'deklinationstraining':\r\n                    case 'Deklinationstraining':\r\n                    case 'decline nouns':\r\n                    case 'decline':\r\n                    case 'ct':\r\n                        removeAllEventListeners();\r\n                        inflectVocabulary.modifyDocument('nouns');\r\n                        break;\r\n                    case 'v':\r\n                    case 'conjugations':\r\n                    case 'konjugationen':\r\n                    case 'Konjugationen':\r\n                        removeAllEventListeners();\r\n                        inflectVocabulary.modifyDocument('add verbs');\r\n                        break;\r\n                    case 'conjugate':\r\n                    case 'konjugieren':\r\n                    case 'konjugationstraining':\r\n                    case 'Konjugationstraining':\r\n                    case 'vt':\r\n                        removeAllEventListeners();\r\n                        inflectVocabulary.modifyDocument('verbs');\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                this.command = '';\r\n                keys = 0;\r\n                this.input.innerHTML = '';\r\n                return;\r\n            } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) {\r\n                return;\r\n            }\r\n\r\n            let object = document.createElement('object');\r\n            object.data = './keys/OG_T.svg';\r\n            object.id = `key${keys}`;\r\n            object.style.height = `100%`;\r\n            this.input.insertAdjacentElement('beforeend', object);\r\n            let width = object.clientHeight;\r\n            object.hidden = true;\r\n\r\n            object.addEventListener('load', _ => {\r\n                if (keys >= Math.floor(window.innerWidth / width)) {\r\n                    object.remove();\r\n                    for (let i = 0; i < keys; i++) {\r\n                        this.failureAnimation(<HTMLObjectElement>this.input.children[i]);\r\n                    }\r\n                    return;\r\n                }\r\n                object.hidden = false;\r\n\r\n                let svg = object.contentDocument;\r\n                svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\r\n\r\n                this.command += event.key;\r\n\r\n                keys++;\r\n\r\n                this.idleAnimation(object);\r\n                this.movementAnimation();\r\n            });\r\n        }\r\n\r\n        document.addEventListener('keydown', this.keyDownFunction);\r\n    }\r\n\r\n    idleAnimation(object: HTMLObjectElement): void {\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#8f8f8f', '#fff', '#eeeeeeff'],\r\n            offset: [0, 1]\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 250\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    failureAnimation(object: HTMLObjectElement): void {\r\n        if (!object) {\r\n            return;\r\n        }\r\n\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: Keyframe[] = [\r\n            { stroke: \"rgb(186, 2, 70)\", offset: 0.025 },\r\n\r\n            { rotate: \"10deg z\", offset: 0.25 },\r\n\r\n            { rotate: \"0deg z\", offset: 0.5 },\r\n\r\n            { rotate: \"-10deg z\", offset: 0.75, stroke: \"rgb(186, 2, 70)\" },\r\n\r\n            { stroke: \"#eeeeeeff\", offset: 0.925 },\r\n\r\n            { rotate: \"0deg z\", offset: 1 }\r\n        ];\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 500\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    movementAnimation(): void {\r\n        if (!this.input) {\r\n            return;\r\n        }\r\n\r\n        let object = <HTMLObjectElement>this.input.firstChild;\r\n        let inp = this.input;\r\n        if (object) {\r\n            if (inp.childElementCount > 1) {\r\n                inp.style.transition = 'padding 250ms';\r\n            }\r\n            inp.style.paddingLeft = `${(window.innerWidth - inp.childElementCount * object.clientHeight) / 2}px`;\r\n        }\r\n    }\r\n}\r\n\r\n","import { addVocabulary, createDiv, home, removeAllEventListeners } from \"..\";\r\nimport { AddVocabulary, WordBundle } from \"./add-vocabulary\";\r\n\r\nexport class ShowVocabulary {\r\n    container: HTMLDivElement;\r\n    iconPlaceholder: HTMLDivElement;\r\n    navbar: HTMLDivElement;\r\n\r\n    vocabulary: WordBundle[];\r\n    database: IDBDatabase;\r\n\r\n    constructor() { }\r\n\r\n    modifyDocument(): void {\r\n        const request = window.indexedDB.open('Vocabulary', 1);\r\n\r\n        request.addEventListener('error', _ => {\r\n            this.vocabulary = [];\r\n            this.modifyDocument();\r\n            console.error(request.error);\r\n        });\r\n\r\n        request.addEventListener('success', _ => {\r\n            this.database = request.result;\r\n\r\n            const transaction = this.database.transaction('vocabulary', 'readonly');\r\n            transaction.onerror = _ => console.error(transaction.error);\r\n            const objectStore = transaction.objectStore('vocabulary');\r\n            const req = objectStore.getAll();\r\n            req.onerror = _ => console.error(req.error);\r\n            req.onsuccess = _ => {\r\n                this.vocabulary = req.result;\r\n                this.container = document.querySelector('#container');\r\n                this.iconPlaceholder = document.querySelector('#icon-placeholder');\r\n                this.navbar = document.querySelector('#navbar');\r\n\r\n                this.container.style.padding = '0';\r\n                document.body.style.backgroundImage = 'none';\r\n\r\n                document.body.setAttribute('class', '');\r\n                this.container.setAttribute('class', '');\r\n                this.iconPlaceholder.setAttribute('class', '');\r\n                this.navbar.setAttribute('class', '');\r\n\r\n                this.container.innerHTML = '';\r\n                this.iconPlaceholder.innerHTML = '';\r\n                this.navbar.innerHTML = '';\r\n\r\n                let showVocabularyIcon = document.createElement('object'); \r\n                showVocabularyIcon.data = './show_vocabulary.svg';\r\n                showVocabularyIcon.id = 'showVocabularyIcon';\r\n                this.iconPlaceholder.insertAdjacentElement('beforeend', showVocabularyIcon);\r\n\r\n                for (let i = 0, str = 'HOME MENU'; i < str.length; i++) {\r\n                    let span = document.createElement('span');\r\n                    span.innerText = str[i];\r\n                    this.navbar.insertAdjacentElement('beforeend', span);\r\n                }\r\n\r\n                let navbarClickFunction = _ => {\r\n                    removeAllEventListeners();\r\n                    this.navbar.removeEventListener('click', navbarClickFunction);\r\n                    home.modifyDocument();\r\n                }\r\n                this.navbar.addEventListener('click', navbarClickFunction);\r\n\r\n\r\n                document.body.classList.add('showVocabularyBody');\r\n                this.container.classList.add('showVocabularyContainer');\r\n                this.iconPlaceholder.classList.add('showVocabularyIconPlaceholder');\r\n                this.navbar.classList.add('showVocabularyNavbar');\r\n\r\n                let str = '';\r\n                this.vocabulary.forEach((word, i) => {\r\n                    str += 'auto ';\r\n\r\n                    let Cdiv = createDiv(`checkboxDiv${i}`, 'word');\r\n                    let div1 = createDiv(`latinWord${i}`, 'word');\r\n                    let div2 = createDiv(`inflections${i}`, 'word');\r\n                    let div3 = createDiv(`germanTranslation${i}`, 'word');\r\n                    let div4 = createDiv(`relatedForeignWords${i}`, 'word');\r\n\r\n                    Cdiv.classList.add('cdiv');\r\n\r\n                    Cdiv.innerHTML = `<input type=\"checkbox\" id=\"C${i}\" class=\"checkbox\" ${(word.selected) ? \"checked\" : ''}></input>`;\r\n                    div1.innerHTML = `<input type=\"text\" id=\"0-${i}\" class=\"edit\" value=\"${(word.latinWord === '') ? ' ' : word.latinWord}\" maxlength=\"${(word.latinWord.length > addVocabulary.maxCharacters) ? word.latinWord.length : addVocabulary.maxCharacters}\"></input>`;\r\n                    div2.innerHTML = `<input type=\"text\" id=\"1-${i}\" class=\"edit\" value=\"${(word.inflections === '') ? ' ' : word.inflections}\" maxlength=\"${(word.inflections.length > addVocabulary.maxCharacters) ? word.inflections.length : addVocabulary.maxCharacters}\"></input>`;\r\n                    div3.innerHTML = `<input type=\"text\" id=\"2-${i}\" class=\"edit\" value=\"${(word.germanTranslation === '') ? ' ' : word.germanTranslation}\" maxlength=\"${(word.germanTranslation.length > addVocabulary.maxCharacters) ? word.germanTranslation.length : addVocabulary.maxCharacters}\"></input>`;\r\n                    div4.innerHTML = `<input type=\"text\" id=\"3-${i}\" class=\"edit\" value=\"${(word.relatedForeignWords === '') ? ' ' : word.relatedForeignWords}\" maxlength=\"${(word.relatedForeignWords.length > addVocabulary.maxCharacters) ? word.relatedForeignWords.length : addVocabulary.maxCharacters}\"></input>`;\r\n\r\n                    this.container.append(Cdiv, div1, div2, div3, div4);\r\n                });\r\n                this.container.style.gridTemplateRows = str;\r\n\r\n                let inputList = document.getElementsByClassName('edit');\r\n                for (let i = 0; i < inputList.length; i++) {\r\n                    let input: HTMLInputElement = <HTMLInputElement>inputList.item(i);\r\n                    input.size = input.maxLength;\r\n\r\n                    input.onblur = _ => {\r\n                        const transaction = this.database.transaction('vocabulary', 'readwrite');\r\n                        transaction.onerror = _ => console.error(transaction.error);\r\n                        const objectStore = transaction.objectStore('vocabulary');\r\n                        const request = objectStore.get(parseInt(input.id.split('-')[1]) + 1);\r\n                        request.onerror = _ => console.error(request.error);\r\n                        request.onsuccess = _ => {\r\n                            const data = request.result;\r\n\r\n                            Object.defineProperty(\r\n                                data,\r\n                                Object.keys(data)[parseInt(input.id.split('-')[0])],\r\n                                { value: input.value.trim() }\r\n                            );\r\n\r\n                            const req = objectStore.put(data, parseInt(input.id.split('-')[1]) + 1);\r\n                            req.onerror = _ => console.error(req.error);\r\n                        }\r\n                    }\r\n\r\n                    input.onkeydown = (event: KeyboardEvent) => {\r\n                        if (event.key === 'Enter') {\r\n                            input.blur();\r\n                        }\r\n                    }\r\n\r\n                    input.onkeyup = _ => {\r\n                        if (input.value.includes('^')) {\r\n                            let str = '';\r\n                            input.value.split('').forEach(letter => {\r\n                                if (letter != '^') {\r\n                                    str += letter;\r\n                                }\r\n                            })\r\n                            input.value = str;\r\n                        }\r\n                    }   \r\n                }\r\n\r\n                let checkboxList = document.getElementsByClassName('checkbox');\r\n                for (let i = 0; i < checkboxList.length; i++) {\r\n                    let input: HTMLInputElement = <HTMLInputElement>checkboxList.item(i);\r\n                    input.addEventListener('change', _ => {\r\n                        const transaction = this.database.transaction('vocabulary', 'readwrite');\r\n                        transaction.onerror = _ => console.error(transaction.error);\r\n                        const objectStore = transaction.objectStore('vocabulary');\r\n                        const request = objectStore.get(parseInt(input.id.slice(1)) + 1);\r\n                        request.onerror = _ => console.error(request.error);\r\n                        request.onsuccess = _ => {\r\n                            const data = request.result;\r\n\r\n                            Object.defineProperty(\r\n                                data,\r\n                                'selected',\r\n                                { value: input.checked }\r\n                            );\r\n\r\n                            const req = objectStore.put(data, parseInt(input.id.slice(1)) + 1);\r\n                            req.onerror = _ => console.error(req.error);\r\n\r\n                            this.vocabulary[i].selected = this.vocabulary[i].selected ? false : true;\r\n                        }\r\n                    })\r\n                }\r\n\r\n                let checkboxDivList = document.getElementsByClassName('cdiv');\r\n                for (let i = 0; i < checkboxDivList.length; i++) {\r\n                    let element = <HTMLDivElement>checkboxDivList[i];\r\n                    let mouseover = false;\r\n                    let saved;\r\n                    let clickFunction = (event: MouseEvent) => {\r\n                        let cdiv = <HTMLDivElement>event.target;\r\n                        let index = parseInt(cdiv.id.slice(11));\r\n                        this.deleteWord(index);\r\n                    }\r\n\r\n                    let indicator;\r\n                    element.addEventListener('mousemove', (event) => {\r\n                        if (event.target === element.querySelector('input')) {\r\n                            mouseover = false;\r\n                            element.classList.remove('mouseon');\r\n                            clearTimeout(indicator);\r\n                            element.removeEventListener('click', clickFunction);\r\n                            document.querySelectorAll('.danger').forEach(e => e.classList.remove('danger'));\r\n                        } else if (!mouseover) {\r\n                            mouseover = true;\r\n                            saved = element.innerHTML;\r\n                            element.classList.add('mouseon');\r\n                            indicator = setTimeout(_ => {\r\n                                if (mouseover) {\r\n                                    element.innerHTML = '<span>X</span>';\r\n                                    element.addEventListener('click', clickFunction);\r\n                                    document.querySelector(`#latinWord${i}`).classList.add('danger');\r\n                                    document.querySelector(`#inflections${i}`).classList.add('danger');\r\n                                    document.querySelector(`#germanTranslation${i}`).classList.add('danger');\r\n                                    document.querySelector(`#relatedForeignWords${i}`).classList.add('danger');\r\n                                }\r\n                            }, 1500)\r\n                        }\r\n                    });\r\n\r\n                    element.addEventListener('mouseleave', _ => {\r\n                        mouseover = false;\r\n                        element.classList.remove('mouseon');\r\n                        clearTimeout(indicator);\r\n                        document.querySelectorAll('.danger').forEach(e => e.classList.remove('danger'));\r\n                        if (saved && !element.querySelector('input')) {\r\n                            element.innerHTML = saved;\r\n                            let input = element.querySelector('input');\r\n                            input.checked = this.vocabulary[i].selected;\r\n                            input.addEventListener('change', _ => {\r\n                                const transaction = this.database.transaction('vocabulary', 'readwrite');\r\n                                transaction.onerror = _ => console.error(transaction.error);\r\n                                const objectStore = transaction.objectStore('vocabulary');\r\n                                const request = objectStore.get(parseInt(input.id[input.id.length - 1]) + 1);\r\n                                request.onerror = _ => console.error(request.error);\r\n                                request.onsuccess = _ => {\r\n                                    const data = request.result;\r\n\r\n                                    Object.defineProperty(\r\n                                        data,\r\n                                        'selected',\r\n                                        { value: input.checked }\r\n                                    );\r\n\r\n                                    const req = objectStore.put(data, parseInt(input.id[input.id.length - 1]) + 1);\r\n                                    req.onerror = _ => console.error(req.error);\r\n                                    this.vocabulary[i].selected = input.checked;\r\n                                }\r\n                            })\r\n                        }\r\n                        element.removeEventListener('click', clickFunction);\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteWord(key: number): void {\r\n        this.vocabulary.splice(key, 1)\r\n        const transaction = this.database.transaction('vocabulary', 'readwrite');\r\n        const objectStore = transaction.objectStore('vocabulary');\r\n        const request = objectStore.openCursor();\r\n        request.onsuccess = _ => {\r\n            let cursor = request.result;\r\n            if (cursor) {\r\n                let k = <number>cursor.key;\r\n                let word = this.vocabulary[k - 1];\r\n                if (word) {\r\n                    const updatedData = cursor.value;\r\n                    updatedData.latinWord = word.latinWord;\r\n                    updatedData.inflections = word.inflections;\r\n                    updatedData.germanTranslation = word.germanTranslation;\r\n                    updatedData.relatedForeignWords = word.relatedForeignWords;\r\n                    updatedData.selected = word.selected;\r\n                    updatedData.probability = word.probability;\r\n                    cursor.update(updatedData);\r\n                    cursor.continue();\r\n                } else {\r\n                    cursor.delete();\r\n                    removeAllEventListeners();\r\n                    this.modifyDocument();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { addVocabulary, createDiv, home, removeAllEventListeners, training } from \"..\";\r\nimport { WordBundle } from \"./add-vocabulary\";\r\n\r\nexport class VocabularyTraining {\r\n    container: HTMLDivElement;\r\n    iconPlaceholder: HTMLDivElement;\r\n    navbar: HTMLDivElement;\r\n\r\n    vocabulary: WordBundle[];\r\n    database: IDBDatabase;\r\n\r\n    keyDownFunction: EventListenerOrEventListenerObject;\r\n    mouseOverFunction: EventListenerOrEventListenerObject;\r\n    resizeFunction: EventListenerOrEventListenerObject;\r\n\r\n    currentWord: WordBundle;\r\n    currentWordIndex: number;\r\n\r\n    totalAttempts = 0;\r\n    totalPoints = 0;\r\n    result: [boolean, boolean, boolean, boolean];\r\n\r\n    commandMode = false;\r\n    command = '';\r\n\r\n    selectedInput: HTMLDivElement;\r\n    inputIndex = 0;\r\n\r\n    time = 0;\r\n    round = 0;\r\n    backgroundColor = '#140063';\r\n\r\n    constructor() {\r\n        setInterval(_ => this.time += 1, 1);\r\n\r\n        this.resizeFunction = _ => {\r\n            let inputs = document.querySelectorAll('.inp');\r\n            inputs.forEach((inp: HTMLDivElement) => {\r\n                if (inp.firstChild && !inp.classList.contains('not-editable')) this.movementAnimation();\r\n            });\r\n        };\r\n    }\r\n\r\n    modifyDocument(): void {\r\n        window.addEventListener('resize', this.resizeFunction);\r\n\r\n        const request = window.indexedDB.open('Vocabulary', 1);\r\n\r\n        request.addEventListener('error', _ => {\r\n            this.vocabulary = [];\r\n            this.modifyDocument();\r\n            console.error(request.error);\r\n        });\r\n\r\n        request.addEventListener('success', _ => {\r\n            this.database = request.result;\r\n\r\n            const transaction = this.database.transaction('vocabulary', 'readonly');\r\n            transaction.onerror = _ => console.error(transaction.error);\r\n            const objectStore = transaction.objectStore('vocabulary');\r\n            const req = objectStore.getAll();\r\n            req.onerror = _ => console.error(req.error);\r\n            req.onsuccess = _ => {\r\n                this.vocabulary = req.result;\r\n                this.backgroundColor = '#140063'\r\n                this.container = document.querySelector('#container');\r\n                this.iconPlaceholder = document.querySelector('#icon-placeholder');\r\n                this.navbar = document.querySelector('#navbar');\r\n\r\n                this.container.style.padding = '0';\r\n                document.body.style.backgroundImage = 'none';\r\n\r\n                document.body.setAttribute('class', '');\r\n                this.container.setAttribute('class', '');\r\n                this.iconPlaceholder.setAttribute('class', '');\r\n                this.navbar.setAttribute('class', '');\r\n\r\n                this.container.innerHTML = '';\r\n                this.iconPlaceholder.innerHTML = '';\r\n                this.navbar.innerHTML = '';\r\n\r\n                let trainingIcon = document.createElement('object');\r\n                trainingIcon.data = './training.svg';\r\n                trainingIcon.id = 'trainingIcon';\r\n                this.iconPlaceholder.insertAdjacentElement('beforeend', trainingIcon);\r\n\r\n                document.body.classList.add(\"trainingBody\");\r\n                this.container.classList.add(\"trainingContainer\");\r\n                this.iconPlaceholder.classList.add(\"trainingIconPlaceholder\");\r\n                this.navbar.classList.add(\"trainingNavbar\");\r\n\r\n                let classes = 'inp bg inp bg inp bg inp'.split(' ');\r\n                for (let i = 0; i < classes.length; i++) {\r\n                    let div = createDiv(`div${i}`, `${classes[i]}`, `100%`, `${100 / classes.length}%`);\r\n                    div.classList.add('t');\r\n                    this.container.appendChild(div);\r\n                    div.style.padding = `${0.05 * div.offsetHeight}px`;\r\n                }\r\n\r\n                let height: number;\r\n                this.mouseOverFunction = (event: MouseEvent) => {\r\n                    let homeDiv = <HTMLDivElement>document.querySelector('.homeDiv');\r\n                    if (\r\n                        homeDiv &&\r\n                        homeDiv != event.target &&\r\n                        event.target != this.navbar &&\r\n                        !(\r\n                            document.querySelector('.homeButton') &&\r\n                            event.target === document.querySelector('.homeButton')\r\n                        ) &&\r\n                        event.target != document.querySelector('.homeIcon')\r\n                    ) {\r\n                        homeDiv.classList.remove('moveUp');\r\n                        setTimeout(_ => homeDiv.classList.add('moveDown'), 0);\r\n                    } else if (!(\r\n                        event.target != this.navbar &&\r\n                        !(\r\n                            document.querySelector('.homeButton') &&\r\n                            event.target === document.querySelector('.homeButton')\r\n                        ) &&\r\n                        event.target != document.querySelector('.homeIcon')\r\n                    )) {\r\n                        if (!homeDiv.classList.contains('moveUp')) {\r\n                            homeDiv.classList.remove('moveDown');\r\n                            homeDiv.classList.add('moveUp');\r\n                        }\r\n                    }\r\n                    if (!homeDiv) {\r\n                        let hd = document.createElement('div');\r\n                        hd.setAttribute('class', 'homeDiv');\r\n                        this.navbar.insertAdjacentElement('afterend', hd);\r\n\r\n                        let button = document.createElement('div');\r\n                        button.classList.add('homeButton');\r\n\r\n                        let icon = document.createElement('object');\r\n                        icon.classList.add('homeIcon');\r\n                        icon.data = './home.svg';\r\n                        icon.style.height = '6vh';\r\n\r\n                        hd.insertAdjacentElement('beforeend', button);\r\n                        button.insertAdjacentElement('beforeend', icon);\r\n\r\n                        let clickFunction = _ => {\r\n                            removeAllEventListeners();\r\n                            home.modifyDocument();\r\n                            return;\r\n                        }\r\n\r\n                        button.addEventListener('click', clickFunction);\r\n                        icon.addEventListener('load', _ => {\r\n                            icon.contentDocument.addEventListener('click', clickFunction);\r\n                        })\r\n                    }\r\n                }\r\n                document.addEventListener('mouseover', this.mouseOverFunction);\r\n\r\n                this.type();\r\n            }\r\n        });\r\n    }\r\n\r\n    type(): void {\r\n        let inputs = [0, 2, 4, 6];\r\n        let keys = 0;\r\n\r\n        for (let i = 0; i < this.container.childElementCount; i += 2) {\r\n            this.container.children[i].addEventListener('click', _ => {\r\n                this.inputIndex = i / 2;\r\n                this.selectedInput = <HTMLDivElement>this.container.children[i];\r\n                this.inputStyling();\r\n                keys = this.selectedInput.childElementCount;\r\n            });\r\n        };\r\n\r\n        for (let i = 1; i < this.container.childElementCount; i += 2) {\r\n            this.container.children[i].addEventListener('click', (event: MouseEvent) => {\r\n                if (event.offsetY > this.container.children[i].clientHeight / 2) {\r\n                    this.inputIndex = (i + 1) / 2;\r\n                    this.selectedInput = <HTMLDivElement>this.container.children[i + 1];\r\n                    this.inputStyling();\r\n                    keys = this.selectedInput.childElementCount;\r\n                } else {\r\n                    this.inputIndex = (i - 1) / 2;\r\n                    this.selectedInput = <HTMLDivElement>this.container.children[i - 1];\r\n                    this.inputStyling();\r\n                    keys = this.selectedInput.childElementCount;\r\n                }\r\n            });\r\n        }\r\n\r\n        this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n        this.inputStyling();\r\n\r\n        this.keyDownFunction = (event: KeyboardEvent) => {\r\n            let mode = this.commandMode;\r\n            let forbiddenCharacters = ['<', '´', '`', '^'];\r\n\r\n            if (this.commandMode) {\r\n                if (event.key === 'Enter') {\r\n                    switch (this.command) {\r\n                        case '#hint':\r\n                        case '#t':\r\n                        case '#tip':\r\n                        case '#tipp':\r\n                        case '#Tipp':\r\n                            this.command.split('').forEach(_ => {\r\n                                this.returnLastElement(this.selectedInput).remove();\r\n                                keys--;\r\n                                if (this.selectedInput.firstChild) {\r\n                                    this.movementAnimation();\r\n                                }\r\n                            });\r\n\r\n                            let object = document.createElement('object');\r\n                            object.data = './keys/OG_T.svg';\r\n                            object.id = `key${keys}-inp${this.inputIndex}`;\r\n                            object.style.height = `100%`;\r\n                            let width = object.clientHeight;\r\n\r\n                            let index = 0;\r\n                            let word = <string>Object.values(this.currentWord)[this.inputIndex];\r\n                            let str = '';\r\n                            let maxLength: number;\r\n                            let changeMade = false;\r\n                            for (let i = 0; i < word.length; i++) {\r\n\r\n                                if (word[i] != Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex][i] && !changeMade) {\r\n                                    index = i;\r\n                                    if (this.vocabulary[this.currentWordIndex][Object.keys(this.vocabulary[this.currentWordIndex])[this.inputIndex]][index]) {\r\n                                        str += this.vocabulary[this.currentWordIndex][Object.keys(this.vocabulary[this.currentWordIndex])[this.inputIndex]][index];\r\n                                    } else {\r\n                                        maxLength = word.length - 1;\r\n                                    }\r\n\r\n                                    changeMade = true;\r\n                                } else {\r\n                                    str += word[i];\r\n                                }\r\n                            }\r\n\r\n                            this.currentWord[Object.keys(this.currentWord)[this.inputIndex]] = (maxLength) ? str.slice(0, maxLength) : str;\r\n                            word = (maxLength) ? str.slice(0, maxLength) : str;\r\n\r\n                            if (maxLength) {\r\n                                this.returnLastElement(this.selectedInput).remove();\r\n                                this.movementAnimation();\r\n                                keys--;\r\n                                mode = false;\r\n                                this.commandMode = false;\r\n                                break;\r\n                            }\r\n\r\n                            if (!changeMade) {\r\n                                index = word.length;\r\n                                if (word.length < Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex].length) {\r\n                                    this.currentWord[Object.keys(this.currentWord)[this.inputIndex]] +=\r\n                                        Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex][index];\r\n                                } else {\r\n                                    mode = false;\r\n                                    this.commandMode = false;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            if (word.length > 0 && index < word.length) {\r\n                                this.selectedInput.children[index].replaceWith(object);\r\n                                keys--;\r\n                                object.hidden = true;\r\n                            } else {\r\n                                this.selectedInput.insertAdjacentElement('beforeend', object);\r\n                                object.hidden = true;\r\n                            }\r\n\r\n                            object.addEventListener('load', _ => {\r\n                                if (keys >= Math.floor(window.innerWidth / width)) {\r\n                                    object.remove();\r\n                                    for (let i = 0; i < keys; i++) {\r\n                                        addVocabulary.failureAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                                    }\r\n                                    return;\r\n                                }\r\n                                object.hidden = false;\r\n                                keys++;\r\n\r\n                                let svg = object.contentDocument;\r\n                                svg.querySelector('#tspan7').innerHTML = Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex][index];\r\n\r\n                                this.fixedAnimation(object);\r\n                                this.movementAnimation();\r\n                            });\r\n                            break;\r\n                        case '#pensionistenmodus':\r\n                        case '#Pensionistenmodus':\r\n                            this.backgroundColor = '#7a4aff';\r\n                            this.inputStyling();\r\n\r\n                            this.command.split('').forEach(_ => {\r\n                                this.returnLastElement(this.selectedInput).remove();\r\n                                keys--;\r\n                                if (this.selectedInput.firstChild) {\r\n                                    this.movementAnimation();\r\n                                }\r\n                            });\r\n                            break;\r\n                        default: {\r\n                            this.command.split('').forEach(_ => {\r\n                                this.returnLastElement(this.selectedInput).remove();\r\n                                keys--;\r\n                                if (this.selectedInput.firstChild) {\r\n                                    this.movementAnimation();\r\n                                }\r\n                            });\r\n\r\n                            if (this.inputIndex + 1 < 4) {\r\n                                this.inputIndex++;\r\n                                this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                                if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\r\n                                    this.inputIndex += 1;\r\n                                    this.selectedInput = <HTMLDivElement>this.container.children[this.inputIndex];\r\n                                }\r\n                                keys = this.selectedInput.childElementCount;\r\n                                this.inputStyling();\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n                    this.command = '';\r\n                    this.commandMode = false;\r\n                } else if (event.key === 'ArrowUp') {\r\n                    this.command.split('').forEach(_ => {\r\n                        this.returnLastElement(this.selectedInput).remove();\r\n                        keys--;\r\n                        if (this.selectedInput.firstChild) {\r\n                            this.movementAnimation();\r\n                        }\r\n                    });\r\n\r\n                    this.command = '';\r\n                    this.commandMode = false;\r\n                } else if (event.key === 'ArrowDown') {\r\n                    this.command.split('').forEach(_ => {\r\n                        this.returnLastElement(this.selectedInput).remove();\r\n                        keys--;\r\n                        if (this.selectedInput.firstChild) {\r\n                            this.movementAnimation();\r\n                        }\r\n                    });\r\n\r\n                    this.command = '';\r\n                    this.commandMode = false;\r\n\r\n                    if (this.inputIndex + 1 < 4) {\r\n                        this.inputIndex++;\r\n                        this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                        if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\r\n                            this.inputIndex += 1;\r\n                            this.selectedInput = <HTMLDivElement>this.container.children[this.inputIndex];\r\n                        }\r\n                        keys = this.selectedInput.childElementCount;\r\n                        this.inputStyling();\r\n                    }\r\n                } else if (event.key === 'Backspace') {\r\n                    if (this.returnLastElement(this.selectedInput)) {\r\n                        this.returnLastElement(this.selectedInput).remove();\r\n                        this.command = this.command.slice(0, this.command.length - 1);\r\n                        keys--;\r\n\r\n                        if (this.selectedInput.firstChild) {\r\n                            this.movementAnimation();\r\n                        }\r\n\r\n                        if (this.command === '') {\r\n                            this.commandMode = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    this.commandMode && (\r\n                        this.selectedInput.classList.contains('not-editable') ||\r\n                        forbiddenCharacters.includes(event.key) ||\r\n                        event.key.length > 1\r\n                    )\r\n                ) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (!this.commandMode) {\r\n                //TODO: space styling: style empty lines in green when right and red when wrong\r\n                if ((event.key === 'Enter' || event.key === 'ArrowDown') && !mode) {\r\n                    if (this.currentWord && !isNaN(this.currentWordIndex) && event.key === 'Enter') {\r\n                        if (\r\n                            Object.values(this.currentWord)[this.inputIndex] === Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex] ||\r\n                            Object.values(this.currentWord)[this.inputIndex] === ''\r\n                        ) {\r\n                            for (let i = 0; i < keys; i++) {\r\n                                if (this.selectedInput.children[i] && !this.selectedInput.classList.contains('not-editable')) {\r\n                                    this.successAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                                }\r\n                            }\r\n\r\n                            if (!this.selectedInput.classList.contains('not-editable')) {\r\n                                if (this.result[this.inputIndex] === undefined) {\r\n                                    this.result[this.inputIndex] = true;\r\n                                }\r\n                            }\r\n\r\n                            if (this.inputIndex + 1 < 4) {\r\n                                this.inputIndex++;\r\n                                this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                                if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\r\n                                    this.inputIndex += 1;\r\n                                    this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                                }\r\n                                keys = this.selectedInput.childElementCount;\r\n                                this.inputStyling();\r\n                            } else if (this.inputIndex + 1 === 4) {\r\n                                let emptyLines: [boolean, boolean, boolean, boolean] = [undefined, undefined, undefined, undefined];\r\n                                Object.values(this.currentWord).slice(0, 4).forEach((value, i) => {\r\n                                    if (!document.querySelector(`#div${inputs[i]}`).classList.contains('not-editable')) {\r\n                                        if (value === Object.values(this.vocabulary[this.currentWordIndex])[i]) {\r\n                                            let inp = <HTMLDivElement>document.querySelector(`#div${inputs[i]}`);\r\n                                            for (let ii = 0; ii < inp.childElementCount; ii++) {\r\n                                                let obj = <HTMLObjectElement>inp.children[ii];\r\n                                                this.successAnimation(obj);\r\n                                            }\r\n\r\n                                            if (value === '') {\r\n                                                emptyLines[i] = true;\r\n                                            }\r\n\r\n                                            if (this.result[i] === undefined) {\r\n                                                this.result[i] = true;\r\n                                            }\r\n                                        } else {\r\n                                            let inp = <HTMLDivElement>document.querySelector(`#div${inputs[i]}`);\r\n                                            for (let ii = 0; ii < inp.childElementCount; ii++) {\r\n                                                let obj = <HTMLObjectElement>inp.children[ii];\r\n                                                addVocabulary.failureAnimation(obj);\r\n                                            }\r\n\r\n                                            if (value === '') {\r\n                                                emptyLines[i] = false;\r\n                                            }\r\n\r\n                                            if (this.result[i] === undefined) {\r\n                                                this.result[i] = false;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                                this.resultStyling(emptyLines);\r\n\r\n                                if (Object.values(this.currentWord).toLocaleString() === Object.values(this.vocabulary[this.currentWordIndex]).toLocaleString()) {\r\n                                    let addition = this.result.filter(w => w === true).length;\r\n                                    this.totalAttempts += 3;\r\n                                    this.totalPoints += addition;\r\n                                    if (addition === 3) {\r\n                                        this.vocabulary[this.currentWordIndex].probability *= 0.8;\r\n                                    } else {\r\n                                        this.vocabulary[this.currentWordIndex].probability *= 1.2;\r\n                                    }\r\n\r\n                                    const transaction = this.database.transaction('vocabulary', 'readwrite');\r\n                                    transaction.onerror = _ => console.error(transaction.error);\r\n                                    const objectStore = transaction.objectStore('vocabulary');\r\n                                    const request = objectStore.get(this.currentWordIndex + 1);\r\n                                    request.onerror = _ => console.error(request.error);\r\n                                    request.onsuccess = _ => {\r\n                                        const req = objectStore.put(this.vocabulary[this.currentWordIndex], this.currentWordIndex + 1);\r\n                                        req.onerror = _ => console.error(req.error);\r\n                                    }\r\n\r\n                                    setTimeout(_ => {\r\n                                        this.inputIndex = 0;\r\n                                        this.selectedInput = <HTMLDivElement>document.querySelector(`#div${inputs[this.inputIndex]}`);\r\n                                        keys = 0;\r\n                                        this.inputStyling();\r\n                                        this.startNewTrainingRound();\r\n                                    }, 500);\r\n                                } else {\r\n                                    setTimeout(_ => this.inputStyling(), 500);\r\n                                }\r\n                            }\r\n                        } else if (this.selectedInput.classList.contains('not-editable')) {\r\n                            if (this.inputIndex + 1 < 4) {\r\n                                this.inputIndex++;\r\n                                this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                                if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\r\n                                    this.inputIndex += 1;\r\n                                    this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                                }\r\n                                keys = this.selectedInput.childElementCount;\r\n                                this.inputStyling();\r\n                            }\r\n                            return;\r\n                        } else {\r\n                            if (this.inputIndex === 3) {\r\n                                let emptyLines: [boolean, boolean, boolean, boolean] = [undefined, undefined, undefined, undefined];\r\n                                Object.values(this.currentWord).slice(0, 4).forEach((value, i) => {\r\n                                    if (!document.querySelector(`#div${inputs[i]}`).classList.contains('not-editable')) {\r\n                                        if (value === Object.values(this.vocabulary[this.currentWordIndex])[i]) {\r\n                                            let inp = <HTMLDivElement>document.querySelector(`#div${inputs[i]}`);\r\n                                            for (let ii = 0; ii < inp.childElementCount; ii++) {\r\n                                                let obj = <HTMLObjectElement>inp.children[ii];\r\n                                                this.successAnimation(obj);\r\n                                            }\r\n\r\n                                            if (value === '') {\r\n                                                emptyLines[i] = true;\r\n                                            }\r\n\r\n                                            if (this.result[i] === undefined) {\r\n                                                this.result[i] = true;\r\n                                            }\r\n                                        } else {\r\n                                            let inp = <HTMLDivElement>document.querySelector(`#div${inputs[i]}`);\r\n                                            for (let ii = 0; ii < inp.childElementCount; ii++) {\r\n                                                let obj = <HTMLObjectElement>inp.children[ii];\r\n                                                addVocabulary.failureAnimation(obj);\r\n                                            }\r\n\r\n                                            if (value === '') {\r\n                                                emptyLines[i] = false;\r\n                                            }\r\n\r\n                                            if (this.result[i] === undefined) {\r\n                                                this.result[i] = false;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                                this.resultStyling(emptyLines);\r\n                                setTimeout(_ => this.inputStyling(), 500);\r\n                            } else {\r\n                                for (let i = 0; i < this.selectedInput.childElementCount; i++) {\r\n                                    addVocabulary.failureAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                                }\r\n                            }\r\n\r\n\r\n                            if (this.result[this.inputIndex] === undefined) {\r\n                                this.result[this.inputIndex] = true;\r\n                            }\r\n\r\n                            this.result[this.inputIndex] = false;\r\n                        }\r\n                    } else if (event.key === 'ArrowDown') {\r\n                        if (this.inputIndex + 1 < 4) {\r\n                            this.inputIndex++;\r\n                            this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                            if (this.inputIndex + 1 < 4 && this.selectedInput.classList.contains('not-editable')) {\r\n                                this.inputIndex += 1;\r\n                                this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                            }\r\n                            keys = this.selectedInput.childElementCount;\r\n                            this.inputStyling();\r\n                        }\r\n                        return;\r\n                    }\r\n                    return;\r\n                } else if (event.key === 'ArrowUp') {\r\n                    if (this.inputIndex > 0) this.inputIndex--;\r\n                    this.selectedInput = <HTMLDivElement>this.container.children[inputs[this.inputIndex]];\r\n                    keys = this.selectedInput.childElementCount;\r\n                    this.inputStyling();\r\n                    return;\r\n                } else if (this.selectedInput.classList.contains('not-editable')) {\r\n                    return;\r\n                } else if (event.key === 'Backspace' && !mode) {\r\n                    if (this.returnLastElement(this.selectedInput)) {\r\n                        this.returnLastElement(this.selectedInput).remove();\r\n                        keys--;\r\n                        if (this.selectedInput.firstChild) {\r\n                            this.movementAnimation();\r\n                        }\r\n\r\n                        if (this.currentWord && !isNaN(this.currentWordIndex) && !this.commandMode) {\r\n                            Object.defineProperty(\r\n                                this.currentWord,\r\n                                Object.keys(this.currentWord)[this.inputIndex],\r\n                                { value: Object.values(this.currentWord)[this.inputIndex].slice(0, keys) }\r\n                            );\r\n                        }\r\n                    }\r\n                    return;\r\n                } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) {\r\n                    return;\r\n                } else if (event.key === '#') {\r\n                    this.commandMode = true;\r\n                }\r\n            }\r\n\r\n            let object = document.createElement('object');\r\n            object.data = './keys/OG_T.svg';\r\n            object.id = `key${keys}-inp${this.inputIndex}`;\r\n            object.style.height = `100%`;\r\n            this.selectedInput.insertAdjacentElement('beforeend', object);\r\n            let width = object.clientHeight;\r\n            object.hidden = true;\r\n\r\n            object.addEventListener('load', _ => {\r\n                if (keys >= Math.floor(window.innerWidth / width)) {\r\n                    object.remove();\r\n                    for (let i = 0; i < keys; i++) {\r\n                        addVocabulary.failureAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                    }\r\n                    return;\r\n                }\r\n                object.hidden = false;\r\n\r\n                let svg = object.contentDocument;\r\n                svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\r\n\r\n                if (this.currentWord && !isNaN(this.currentWordIndex) && !this.commandMode) {\r\n                    Object.defineProperty(\r\n                        this.currentWord,\r\n                        Object.keys(this.currentWord)[this.inputIndex],\r\n                        { value: Object.values(this.currentWord)[this.inputIndex] + event.key.charAt(0) }\r\n                    );\r\n                }\r\n\r\n                keys++;\r\n\r\n                addVocabulary.idleAnimation(object);\r\n                this.movementAnimation();\r\n\r\n                if (this.commandMode) {\r\n                    this.commandAnimation(object);\r\n                    this.command += event.key;\r\n                }\r\n            });\r\n        }\r\n\r\n        document.addEventListener('keydown', this.keyDownFunction);\r\n        this.startNewTrainingRound();\r\n    }\r\n\r\n    startNewTrainingRound(): void {\r\n        if (this.vocabulary.length === 0) {\r\n            setTimeout(_ => alert('Keine Vokabeln!'), 50);\r\n            return;\r\n        }\r\n\r\n        this.round++;\r\n\r\n        let overallProbabilty = 0;\r\n        this.vocabulary.forEach(word => { if (word.selected) { overallProbabilty += word.probability } });\r\n\r\n        let randomNumber = Math.floor(Math.random() * overallProbabilty * 10) / 10;\r\n        let lowestDifference: number;\r\n        let lastProbability = 0;\r\n\r\n        this.vocabulary.forEach((word, i) => {\r\n            if (word.selected) {\r\n                if (lowestDifference === undefined) {\r\n                    lowestDifference = Math.abs(randomNumber - (lastProbability + word.probability));\r\n                    this.currentWord = word;\r\n                    this.currentWordIndex = i;\r\n                } else if (Math.abs(randomNumber - (lastProbability + word.probability)) < lowestDifference) {\r\n                    lowestDifference = Math.abs(randomNumber - (lastProbability + word.probability));\r\n                    this.currentWordIndex = i;\r\n                    if (Object.values(word).toLocaleString().slice(0, 4) === Object.values(this.currentWord).toLocaleString().slice(0, 4)) {\r\n                        word.probability = Math.max(0, word.probability - 1);\r\n                    }\r\n                    this.currentWord = word;\r\n                }\r\n                lastProbability += word.probability;\r\n            }\r\n        });\r\n\r\n        let savedProperty: [string, { value: string }];\r\n        do {\r\n            let rn = Math.random();\r\n            if (rn <= 0.5) {\r\n                savedProperty = ['latinWord', { value: this.currentWord.latinWord }];\r\n                this.inputIndex = 1;\r\n                this.selectedInput = <HTMLDivElement>this.container.children[this.inputIndex + 1];\r\n                this.inputStyling();\r\n            } else if (rn <= 0.7) {\r\n                savedProperty = ['inflections', { value: this.currentWord.inflections }];\r\n            } else if (rn <= 0.95) {\r\n                savedProperty = ['germanTranslation', { value: this.currentWord.germanTranslation }];\r\n            } else {\r\n                savedProperty = ['relatedForeignWords', { value: this.currentWord.relatedForeignWords }];\r\n            }\r\n        } while (savedProperty[1].value.trim() === '');\r\n\r\n        this.currentWord = {\r\n            latinWord: '',\r\n            inflections: '',\r\n            germanTranslation: '',\r\n            relatedForeignWords: '',\r\n            selected: true,\r\n            probability: this.currentWord.probability\r\n        };\r\n\r\n        Object.defineProperty(this.currentWord, savedProperty[0], savedProperty[1]);\r\n\r\n        let previousFixedDiv = document.querySelector('.not-editable')\r\n        if (previousFixedDiv) {\r\n            previousFixedDiv.classList.remove('not-editable');\r\n        }\r\n\r\n        document.querySelectorAll('.t').forEach(t => t.innerHTML = '');\r\n\r\n        let specificationDiv = document.getElementById(`div${Object.keys(this.currentWord).findIndex(k => k === savedProperty[0]) * 2}`);\r\n        specificationDiv.classList.add('not-editable');\r\n\r\n        specificationDiv.innerHTML = `<span style=\"font-size:${specificationDiv.clientHeight * 0.6}px\">${savedProperty[1].value}</span>`;\r\n\r\n        this.result = [undefined, undefined, undefined, undefined];\r\n    }\r\n\r\n    movementAnimation(): void {\r\n        let object = <HTMLObjectElement>this.selectedInput.firstChild;\r\n        let inp = this.selectedInput;\r\n        if (this.selectedInput.firstChild) {\r\n            if (inp.childElementCount > 1) {\r\n                inp.style.transition = 'padding 250ms';\r\n            }\r\n            inp.style.paddingLeft = `${(window.innerWidth - inp.childElementCount * object.clientHeight) / 2}px`\r\n        }\r\n    }\r\n\r\n    commandAnimation(object: HTMLObjectElement): void {\r\n        if (!object) {\r\n            return;\r\n        }\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#eeeeeeff', '#ffa500'],\r\n            offset: [0, 1],\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 500,\r\n            fill: 'forwards'\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    fixedAnimation(object: HTMLObjectElement): void {\r\n        if (!object) {\r\n            return;\r\n        }\r\n        object.classList.add('fixed');\r\n\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#eeeeeeff', '#ffff00'],\r\n            offset: [0, 1],\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 500,\r\n            fill: 'forwards'\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    successAnimation(object: HTMLObjectElement): void {\r\n        if (!object) {\r\n            return;\r\n        }\r\n\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#eeeeeeff', '#08a000', '#eeeeeeff'],\r\n            offset: [0, 1]\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 500\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    private returnLastElement(input: HTMLDivElement): HTMLObjectElement {\r\n        if (input.childElementCount > 0) {\r\n            if (!input.lastElementChild.classList.contains('fixed')) {\r\n                return <HTMLObjectElement>input.lastElementChild;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private inputStyling(): void {\r\n        document.body.style.backgroundImage = `\r\n            linear-gradient(180deg, \r\n                ${this.backgroundColor} 0%, \r\n                #06011b ${20 + (this.inputIndex * 2) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%,\r\n                #06011b ${20 + (this.inputIndex * 2 + 1) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%, \r\n                ${this.backgroundColor} ${(window.innerHeight / document.body.scrollHeight) * 100}%\r\n            )\r\n        `;\r\n        //#0d0043\r\n        //#440075\r\n    }\r\n\r\n    private resultStyling(result: [boolean, boolean, boolean, boolean]): void {\r\n        document.body.style.transition = 'background-image 250ms';\r\n        let str = `linear-gradient(180deg,`;\r\n        result.forEach((value, i) => {\r\n            let color: string;\r\n            if (value === true) {\r\n                color = '#2be231';\r\n            } else if (value === false) {\r\n                color = '#e80000';\r\n            } else {\r\n                color = '#140063';\r\n            }\r\n\r\n            str +=\r\n                `#140063 ${20 + (i * 2) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%,\r\n                ${color} ${20 + (i * 2 + 0.5) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%, \r\n                #140063 ${20 + (i * 2 + 1) * (window.innerHeight / document.body.scrollHeight) * (65 / 7)}%, `;\r\n        });\r\n\r\n        document.body.style.backgroundImage = str.slice(0, str.length - 2) + ')';\r\n    }\r\n}","import { createDiv, home, removeAllEventListeners } from \"..\";\r\n\r\nexport class InflectVocabulary {\r\n    container: HTMLDivElement;\r\n    iconPlaceholder: HTMLDivElement;\r\n    navbar: HTMLDivElement;\r\n    buttonLeft: HTMLButtonElement;\r\n    buttonRight: HTMLButtonElement;\r\n    homeButton: HTMLButtonElement;\r\n    deletionButton: HTMLButtonElement;\r\n\r\n    keydownFunction: EventListenerOrEventListenerObject;\r\n    selectedInput: HTMLDivElement;\r\n    inputIndex: number;\r\n\r\n    currentWord: InflectedWord;\r\n    currentWordIndex: number;\r\n    wordIndex: number;\r\n    vocabulary: InflectedWord[];\r\n\r\n    database: IDBDatabase;\r\n\r\n    enterMode = false;\r\n    tabMode = false;\r\n    tabulator = \"\";\r\n    tabCount = 0;\r\n    keys: number;\r\n    v = 1;\r\n\r\n    round = 0;\r\n    failures = 0;\r\n    totalAttempts = 0;\r\n    totalPoints = 0;\r\n    result: {\r\n        singular: [boolean, boolean, boolean, boolean, boolean, boolean] | [boolean, boolean, boolean],\r\n        plural: [boolean, boolean, boolean, boolean, boolean, boolean] | [boolean, boolean, boolean],\r\n    };\r\n\r\n    badColor = 'rgb(186, 2, 70)';\r\n\r\n    constructor() {\r\n    }\r\n\r\n    //TODO: Remove greenShadowDesign in certain cases\r\n    modifyDocument(param?: Parameter): void {\r\n        this.container = document.querySelector('#container');\r\n        this.iconPlaceholder = document.querySelector('#icon-placeholder');\r\n        this.navbar = document.querySelector('#navbar');\r\n\r\n        this.container.setAttribute('style', '');\r\n        document.body.style.backgroundImage = 'none';\r\n\r\n        document.body.setAttribute('class', '');\r\n        this.container.setAttribute('class', '');\r\n        this.iconPlaceholder.setAttribute('class', '');\r\n        this.navbar.setAttribute('class', '');\r\n\r\n        this.container.innerHTML = '';\r\n        this.iconPlaceholder.innerHTML = '';\r\n        this.navbar.innerHTML = '';\r\n\r\n        if (!param) {\r\n            param = 'add nouns';\r\n        }\r\n\r\n        let inflectVocabularyIcon: HTMLObjectElement;\r\n        inflectVocabularyIcon = document.createElement('object');\r\n        inflectVocabularyIcon.id = 'inflectVocabularyIcon';\r\n\r\n        this.v = 0;\r\n        this.badColor = 'rgb(186, 2, 70)';\r\n        switch (param) {\r\n            case 'add verbs':\r\n            case 'verbs':\r\n                this.v = 9;\r\n                this.badColor = '#ff00d4';\r\n                if (param === 'add verbs') {\r\n                    inflectVocabularyIcon.data = './conjugations.svg';\r\n                } else {\r\n                    inflectVocabularyIcon.data = './conjugate_verbs.svg';\r\n                }\r\n            case 'add nouns':\r\n            case 'nouns':\r\n            default:\r\n                const request = window.indexedDB.open('Vocabulary', 1);\r\n                request.onerror = _ => console.log(request.error);\r\n                request.onsuccess = _ => {\r\n                    this.database = request.result;\r\n                    this.tabulator = '';\r\n\r\n                    const transaction = this.database.transaction('inflected vocabulary', 'readonly');\r\n                    transaction.onerror = _ => console.error(transaction.error);\r\n                    const objectStore = transaction.objectStore('inflected vocabulary');\r\n                    const req = objectStore.getAll();\r\n                    req.onerror = _ => console.error(req.error);\r\n                    req.onsuccess = _ => {\r\n                        this.vocabulary = req.result;\r\n\r\n                        document.body.classList.add('inflectVocabularyBody');\r\n                        this.iconPlaceholder.classList.add('inflectVocabularyIconPlaceholder');\r\n                        if (param === 'add nouns') {\r\n                            inflectVocabularyIcon.data = './declinations.svg';\r\n                        } else if (param === 'nouns') {\r\n                            inflectVocabularyIcon.data = './decline_nouns.svg';\r\n                        }\r\n                        this.iconPlaceholder.insertAdjacentElement('beforeend', inflectVocabularyIcon);\r\n\r\n                        if (param === 'add verbs' || param === 'verbs') {\r\n                            this.container.classList.add('inflectVocabularyContainer', 'verbs');\r\n                        } else {\r\n                            this.container.classList.add('inflectVocabularyContainer', 'nouns');\r\n                        }\r\n                        this.navbar.classList.add('inflectVocabularyNavbar');\r\n\r\n                        this.container.tabIndex = 0;\r\n                        for (let i = 0; i < 21 - this.v; i++) {\r\n                            let div = createDiv(`div${i}`, 'editable');\r\n                            this.container.insertAdjacentElement('beforeend', div);\r\n                            if (i < 3) {\r\n                                div.classList.add('firstrow');\r\n                                div.classList.remove('editable');\r\n                                div.style.fontSize = `${div.offsetHeight * 0.75}px`;\r\n                                if (i === 1) {\r\n                                    div.innerHTML = 'Singular';\r\n                                } else if (i === 2) {\r\n                                    div.innerHTML = 'Plural';\r\n                                }\r\n                            }\r\n                            if (i % 3 === 0) {\r\n                                div.classList.add('firstcolumn');\r\n                                div.classList.remove('editable');\r\n                                div.style.fontSize = `${0.25 * div.offsetHeight}px`;\r\n                                if (i > 0) div.innerHTML = `${i / 3}. ${param.includes('verb') ? 'P' : 'F'}.`;\r\n                            }\r\n                            if (!(i < 3 || i % 3 === 0)) {\r\n                                div.style.padding = `${0.05 * div.offsetHeight}px`;\r\n                                if (!param.includes('add')) {\r\n                                    div.classList.add('shadowDesign');\r\n                                }\r\n                            }\r\n\r\n                            if (param.includes('verb')) {\r\n                                div.classList.add('v');\r\n                            }\r\n                        }\r\n\r\n                        if (param.startsWith('add')) {\r\n                            this.buttonLeft = document.createElement('button');\r\n                            this.buttonLeft.classList.add('roundButton', 'c');\r\n                            this.buttonLeft.innerHTML = '<';\r\n                            this.navbar.appendChild(this.buttonLeft);\r\n                        }\r\n\r\n                        this.homeButton = document.createElement('button');\r\n                        this.homeButton.classList.add('roundButton');\r\n                        this.homeButton.tabIndex = -1;\r\n                        let icon = document.createElement('object');\r\n                        icon.classList.add('homeIcon');\r\n                        icon.data = './home.svg';\r\n                        icon.style.height = '7.5vh';\r\n                        icon.addEventListener('load', _ => {\r\n                            icon.contentDocument.addEventListener('click', _ => {\r\n                                removeAllEventListeners();\r\n                                if (this.tabMode) {\r\n                                    this.cancelTabMode();\r\n                                }\r\n                                home.modifyDocument();\r\n                            })\r\n                        })\r\n                        this.homeButton.onclick = _ => {\r\n                            removeAllEventListeners();\r\n                            if (this.tabMode) {\r\n                                this.cancelTabMode();\r\n                            }\r\n                            home.modifyDocument();\r\n                        }\r\n                        this.homeButton.insertAdjacentElement('beforeend', icon);\r\n                        this.navbar.appendChild(this.homeButton);\r\n\r\n                        if (param.startsWith('add')) {\r\n                            this.deletionButton = document.createElement('button');\r\n                            this.deletionButton.classList.add('roundButton', 'deletionButton');\r\n                            this.deletionButton.innerHTML = 'X';\r\n                            this.deletionButton.tabIndex = -1;\r\n                            if (param.includes('verb')) {\r\n                                this.deletionButton.classList.add('v');\r\n                            }\r\n                            this.navbar.appendChild(this.deletionButton);\r\n\r\n                            this.buttonRight = document.createElement('button');\r\n                            this.buttonRight.classList.add('roundButton', 'c');\r\n                            this.buttonRight.innerHTML = '>';\r\n                            this.buttonRight.tabIndex = -1;\r\n                            this.navbar.appendChild(this.buttonRight);\r\n                        }\r\n\r\n\r\n                        if (param) {\r\n                            this.type(param);\r\n                        } else {\r\n                            this.type();\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    type(param?: Parameter): void {\r\n        switch (param) {\r\n            case 'verbs':\r\n            case 'nouns':\r\n                this.keys = 0;\r\n\r\n                document.querySelectorAll('.editable').forEach((element: HTMLDivElement) => {\r\n                    element.addEventListener('click', _ => {\r\n                        this.selectedInput = element;\r\n                        this.keys = this.selectedInput.childElementCount;\r\n                        document.querySelectorAll('.selectedElement').forEach(elem => elem.classList.remove('selectedElement'));\r\n                        element.classList.add('selectedElement');\r\n                        this.inputIndex = parseInt(element.id.slice(3));\r\n                    });\r\n                });\r\n\r\n                this.selectedInput = <HTMLDivElement>document.getElementById('div4');\r\n                this.selectedInput.classList.add('selectedElement');\r\n                this.inputIndex = 4;\r\n                this.wordIndex = this.vocabulary.length;\r\n\r\n                this.currentWord = {\r\n                    singular: this.empty(param),\r\n                    plural: this.empty(param),\r\n                    verb: param.includes('verb'),\r\n                    probability: 1\r\n                }\r\n\r\n                this.keydownFunction = (event: KeyboardEvent) => {\r\n                    let forbiddenCharacters = ['<', '´', '`', '^'];\r\n                    if (event.key === 'ArrowRight') {\r\n                        if (this.inputIndex < 20 - this.v) {\r\n                            this.inputIndex++;\r\n                            if (this.inputIndex % 3 === 0) {\r\n                                this.inputIndex++;\r\n                            }\r\n                            this.changeSelectedInput();\r\n                            this.keys = this.selectedInput.childElementCount;\r\n                        }\r\n                        return;\r\n                    } else if (event.key === 'ArrowLeft') {\r\n                        if (this.inputIndex > 4) {\r\n                            this.inputIndex--;\r\n                            if (this.inputIndex % 3 === 0) {\r\n                                this.inputIndex--;\r\n                            }\r\n\r\n                            this.changeSelectedInput();\r\n                            this.keys = this.selectedInput.childElementCount;\r\n                        }\r\n                        return;\r\n                    } else if (event.key === 'ArrowDown' || event.key === 'Enter') {\r\n                        if (this.inputIndex < 20 - this.v) {\r\n                            if (event.key === 'Enter' && !this.selectedInput.classList.contains('known-case')) {\r\n                                if (this.compare(Object.values(this.currentWord)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1],\r\n                                    Object.values(this.vocabulary[this.currentWordIndex])[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1])\r\n                                ) {\r\n                                    for (let i = 0; i < this.selectedInput.childElementCount; i++) {\r\n                                        let object = <HTMLObjectElement>this.selectedInput.children[i];\r\n                                        this.successAnimation(object);\r\n                                    }\r\n                                    if (Object.values(this.result)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1] === undefined) {\r\n                                        let array = Object.values(this.result)[this.inputIndex % 3 - 1];\r\n                                        array[Math.floor(this.inputIndex / 3) - 1] = true;\r\n                                        Object.defineProperty(\r\n                                            this.result,\r\n                                            Object.keys(this.result)[this.inputIndex % 3 - 1],\r\n                                            { value: array }\r\n                                        );\r\n\r\n                                        let inp = this.selectedInput;\r\n                                        setTimeout(_ => {\r\n                                            inp.classList.remove('shadowDesign');\r\n                                            inp.classList.add('greenShadowDesign');\r\n                                        }, 500)\r\n                                    }\r\n                                } else {\r\n                                    for (let i = 0; i < this.selectedInput.childElementCount; i++) {\r\n                                        let object = <HTMLObjectElement>this.selectedInput.children[i];\r\n                                        this.failureAnimation(object);\r\n                                    }\r\n\r\n                                    if (Object.values(this.result)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1] === undefined) {\r\n                                        let array = Object.values(this.result)[this.inputIndex % 3 - 1];\r\n                                        array[Math.floor(this.inputIndex / 3) - 1] = false;\r\n                                        Object.defineProperty(\r\n                                            this.result,\r\n                                            Object.keys(this.result)[this.inputIndex % 3 - 1],\r\n                                            { value: array }\r\n                                        );\r\n                                    }\r\n\r\n                                    let inp = this.selectedInput;\r\n                                    setTimeout(_ => {\r\n                                        inp.classList.remove('shadowDesign');\r\n                                        inp.classList.add('redShadowDesign');\r\n                                    }, 500)\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (this.inputIndex < 18 - this.v) {\r\n                            this.inputIndex += 3;\r\n\r\n                            this.changeSelectedInput();\r\n                            this.keys = this.selectedInput.childElementCount;\r\n\r\n                            if (event.key === 'Enter' && this.selectedInput.classList.contains('known-case')) {\r\n                                if (this.inputIndex < 18 - this.v) {\r\n                                    this.inputIndex += 3;\r\n\r\n                                    this.changeSelectedInput();\r\n                                    this.keys = this.selectedInput.childElementCount;\r\n                                } else if (this.inputIndex === 19 - this.v) {\r\n                                    this.inputIndex = 5;\r\n\r\n                                    this.changeSelectedInput();\r\n                                    this.keys = this.selectedInput.childElementCount;\r\n                                }\r\n                            }\r\n\r\n                        } else if (event.key === 'Enter' && this.inputIndex === 19 - this.v) {\r\n                            this.inputIndex = 5;\r\n\r\n                            this.changeSelectedInput();\r\n                            this.keys = this.selectedInput.childElementCount;\r\n                        } else if (event.key === 'Enter' && this.inputIndex === 20 - this.v) {\r\n                            this.currentWord.singular.forEach((word, i) => {\r\n                                let index = 1 + (i + 1) * 3;\r\n                                if (this.compare(word, Object.values(this.vocabulary[this.currentWordIndex])[index % 3 - 1][Math.floor(index / 3) - 1])) {\r\n                                    for (let ii = 0; ii < this.container.children[index].childElementCount; ii++) {\r\n                                        if (index % 3 != 0 && !this.container.children[index].classList.contains('known-case')) {\r\n                                            let object = <HTMLObjectElement>this.container.children[index].children[ii];\r\n                                            this.successAnimation(object);\r\n                                        }\r\n                                    }\r\n                                    if (Object.values(this.result)[index % 3 - 1][Math.floor(index / 3) - 1] === undefined) {\r\n                                        let array = Object.values(this.result)[this.inputIndex % 3 - 1];\r\n                                        array[Math.floor(this.inputIndex / 3) - 1] = true;\r\n                                        Object.defineProperty(\r\n                                            this.result,\r\n                                            Object.keys(this.result)[index % 3 - 1],\r\n                                            { value: array }\r\n                                        )\r\n                                    }\r\n\r\n                                } else {\r\n                                    for (let ii = 0; ii < this.container.children[index].childElementCount; ii++) {\r\n                                        if (index % 3 != 0 && !this.container.children[index].classList.contains('known-case')) {\r\n                                            let object = <HTMLObjectElement>this.container.children[index].children[ii];\r\n                                            this.failureAnimation(object);\r\n                                        }\r\n                                    }\r\n\r\n                                    if (Object.values(this.result)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1] === undefined) {\r\n                                        let array = Object.values(this.result)[this.inputIndex % 3 - 1];\r\n                                        array[Math.floor(this.inputIndex / 3) - 1] = false;\r\n                                        Object.defineProperty(\r\n                                            this.result,\r\n                                            Object.keys(this.result)[this.inputIndex % 3 - 1],\r\n                                            { value: array }\r\n                                        )\r\n                                    }\r\n                                }\r\n                            })\r\n                            this.currentWord.plural.forEach((word, i) => {\r\n                                let index = 2 + (i + 1) * 3;\r\n                                if (this.compare(word, Object.values(this.vocabulary[this.currentWordIndex])[index % 3 - 1][Math.floor(index / 3) - 1])) {\r\n                                    for (let ii = 0; ii < this.container.children[index].childElementCount; ii++) {\r\n                                        if (index % 3 != 0 && !this.container.children[index].classList.contains('known-case')) {\r\n                                            let object = <HTMLObjectElement>this.container.children[index].children[ii];\r\n                                            this.successAnimation(object);\r\n                                        }\r\n                                    }\r\n\r\n                                    if (Object.values(this.result)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1] === undefined) {\r\n                                        let array = Object.values(this.result)[this.inputIndex % 3 - 1];\r\n                                        array[Math.floor(this.inputIndex / 3) - 1] = true;\r\n                                        Object.defineProperty(\r\n                                            this.result,\r\n                                            Object.keys(this.result)[this.inputIndex % 3 - 1],\r\n                                            { value: array }\r\n                                        )\r\n                                    }\r\n                                } else {\r\n                                    for (let ii = 0; ii < this.container.children[index].childElementCount; ii++) {\r\n                                        if (index % 3 != 0 && !this.container.children[index].classList.contains('known-case')) {\r\n                                            let object = <HTMLObjectElement>this.container.children[index].children[ii];\r\n                                            this.failureAnimation(object);\r\n                                        }\r\n                                    }\r\n\r\n                                    if (Object.values(this.result)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1] === undefined) {\r\n                                        let array = Object.values(this.result)[this.inputIndex % 3 - 1];\r\n                                        array[Math.floor(this.inputIndex / 3) - 1] = false;\r\n                                        Object.defineProperty(\r\n                                            this.result,\r\n                                            Object.keys(this.result)[this.inputIndex % 3 - 1],\r\n                                            { value: array }\r\n                                        )\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                            if (this.compareObjects(this.currentWord, this.vocabulary[this.currentWordIndex])) {\r\n                                this.totalAttempts += 11 - this.v / 3 * 2;\r\n                                let addition = this.result.singular.filter(w => w === true).length +\r\n                                    this.result.plural.filter(w => w === true).length;\r\n                                this.totalPoints += addition;\r\n                                if (addition != 12 - this.v / 3 * 2) {\r\n                                    this.vocabulary[this.currentWordIndex].probability *= 0.8;\r\n                                } else {\r\n                                    this.vocabulary[this.currentWordIndex].probability *= 1.2;\r\n                                }\r\n                                const transaction = this.database.transaction('inflected vocabulary', 'readwrite');\r\n                                const objectStore = transaction.objectStore('inflected vocabulary');\r\n                                const request = objectStore.put(this.vocabulary[this.currentWordIndex], this.currentWordIndex + 1);\r\n                                request.onerror = _ => console.error(request.error);\r\n\r\n                                setTimeout(_ => {\r\n                                    document.querySelectorAll('.selectedElement').forEach(div => {\r\n                                        div.classList.remove('selectedElement');\r\n                                    });\r\n                                    this.keys = 0;\r\n                                    this.inputIndex = 4;\r\n                                    this.selectedInput = <HTMLDivElement>document.querySelector('#div4');\r\n                                    this.selectedInput.classList.add('selectedElement');\r\n                                    this.startNewTrainingRound(param || 'nouns');\r\n                                }, 500);\r\n                            }\r\n                        }\r\n                        return;\r\n                    } else if (event.key === 'ArrowUp') {\r\n                        if (this.inputIndex > 6) {\r\n                            this.inputIndex -= 3;\r\n\r\n                            this.changeSelectedInput();\r\n                            this.keys = this.selectedInput.childElementCount;\r\n                        }\r\n                        return;\r\n                    } else if (event.key === 'Backspace') {\r\n                        if (this.selectedInput.lastElementChild) {\r\n                            this.selectedInput.lastElementChild.remove();\r\n\r\n                            let array = <string[]>Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                            array[Math.floor(this.inputIndex / 3) - 1] = array[Math.floor(this.inputIndex / 3) - 1].slice(0, this.keys - 1);\r\n                            Object.defineProperty(\r\n                                this.currentWord,\r\n                                Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                { value: array }\r\n                            );\r\n                            this.keys--;\r\n                        }\r\n                        return;\r\n                    } else if (this.selectedInput.classList.contains('known-case')) {\r\n                        return;\r\n                    } else if (event.key == 'Tab') {\r\n                        if (this.tabulator) {\r\n                            if (this.keys + this.tabulator.length >=\r\n                                this.selectedInput.clientWidth /\r\n                                (this.selectedInput.clientHeight - parseFloat(this.selectedInput.style.padding))\r\n                            ) {\r\n                                this.selectedInput.childNodes.forEach((v, i) => {\r\n                                    this.failureAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                                });\r\n                            } else {\r\n                                let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                                let n = Math.floor(this.inputIndex / 3) - 1;\r\n                                array[n] += this.tabulator;\r\n                                Object.defineProperty(\r\n                                    this.currentWord,\r\n                                    Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                    { value: array }\r\n                                );\r\n\r\n                                this.tabulator.split('').forEach(letter => {\r\n                                    let object = document.createElement('object');\r\n                                    object.data = './keys/OG_T.svg';\r\n                                    object.id = `key${this.keys}-inp${this.inputIndex}`;\r\n                                    object.style.height = `100%`;\r\n                                    this.selectedInput.insertAdjacentElement('beforeend', object);\r\n                                    object.hidden = true;\r\n\r\n                                    object.addEventListener('load', _ => {\r\n                                        object.hidden = false;\r\n\r\n                                        let svg = object.contentDocument;\r\n                                        svg.querySelector('#tspan7').innerHTML = letter;\r\n                                        this.keys++;\r\n\r\n                                        this.tabulatorAnimation(object);\r\n                                    });\r\n                                })\r\n                            }\r\n                        }\r\n                        return;\r\n                    } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) {\r\n                        return;\r\n                    }\r\n\r\n                    let object = document.createElement('object');\r\n                    object.data = './keys/OG_T.svg';\r\n                    object.id = `key${this.keys}-inp${this.inputIndex}`;\r\n                    object.style.height = `100%`;\r\n                    this.selectedInput.insertAdjacentElement('beforeend', object);\r\n                    let width = object.clientHeight;\r\n                    object.hidden = true;\r\n\r\n                    object.addEventListener('load', _ => {\r\n                        if (this.keys + 1 >= Math.floor(this.selectedInput.clientWidth / width)) {\r\n                            object.remove();\r\n                            for (let i = 0; i < this.keys; i++) {\r\n                                this.failureAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                            }\r\n                            return;\r\n                        }\r\n                        object.hidden = false;\r\n\r\n                        let svg = object.contentDocument;\r\n                        svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\r\n\r\n                        let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                        array[Math.floor(this.inputIndex / 3) - 1] += event.key;\r\n                        Object.defineProperty(\r\n                            this.currentWord,\r\n                            Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                            { value: array }\r\n                        );\r\n\r\n                        this.keys++;\r\n\r\n                        this.idleAnimation(object);\r\n                    });\r\n                }\r\n\r\n                document.addEventListener('keydown', this.keydownFunction);\r\n\r\n                window.onkeyup = event => {\r\n                    if (event.key === 'Tab') {\r\n                        this.container.focus();\r\n                    }\r\n                }\r\n\r\n                this.startNewTrainingRound(param ? param : 'nouns');\r\n                break;\r\n            case 'add verbs':\r\n            case 'add nouns':\r\n                this.keys = 0;\r\n\r\n                document.querySelectorAll('.editable').forEach((element: HTMLDivElement) => {\r\n                    element.addEventListener('click', _ => {\r\n                        if (this.tabMode) {\r\n                            this.cancelTabMode();\r\n                        }\r\n                        this.inputIndex = parseInt(element.id.slice(3));\r\n                        this.changeSelectedInput();\r\n                        this.keys = this.selectedInput.childElementCount;\r\n                    });\r\n                });\r\n\r\n                this.selectedInput = <HTMLDivElement>document.getElementById('div4');\r\n                this.selectedInput.classList.add('selectedElement');\r\n                this.inputIndex = 4;\r\n                this.wordIndex = this.vocabulary.length;\r\n\r\n                this.currentWord = {\r\n                    singular: this.empty(param),\r\n                    plural: this.empty(param),\r\n                    verb: param.includes('verb'),\r\n                    probability: 1\r\n                }\r\n\r\n                let deletionMode = false;\r\n                let indicator;\r\n                let deletionFunction = _ => {\r\n                    this.vocabulary.splice(this.wordIndex, 1);\r\n                    const transaction = this.database.transaction('inflected vocabulary', 'readwrite');\r\n                    const objectStore = transaction.objectStore('inflected vocabulary');\r\n                    const request = objectStore.openCursor();\r\n                    request.onsuccess = _ => {\r\n                        let cursor = request.result;\r\n                        if (cursor) {\r\n                            let k = <number>cursor.key;\r\n                            let word = this.vocabulary[k - 1];\r\n                            if (word) {\r\n                                const updatedData = cursor.value;\r\n                                updatedData.singular = word.singular;\r\n                                updatedData.plural = word.plural;\r\n                                updatedData.verb = word.verb;\r\n                                updatedData.probability = word.probability;\r\n                                cursor.update(updatedData);\r\n                                cursor.continue();\r\n                            } else {\r\n                                cursor.delete();\r\n\r\n                                let vocab1 = this.vocabulary.slice(0, this.wordIndex);\r\n                                let vocab2 = this.vocabulary.slice(this.wordIndex);\r\n                                let wi1 = vocab1.findLastIndex(w => w.verb === param.includes('verb'));\r\n                                let wi2 = vocab2.findIndex(w => w.verb === param.includes('verb')) + this.wordIndex;\r\n                                if (this.vocabulary[wi1]) {\r\n                                    this.wordIndex = wi1;\r\n\r\n                                    this.currentWord = this.vocabulary[wi1];\r\n                                    let overallIndexes: [number, number[]][] = [];\r\n\r\n                                    let tabulatorStyle = false;\r\n                                    for (let i = 3; i < this.container.childElementCount; i++) {\r\n                                        let tabulatorIndexes: number[] = [];\r\n                                        let n = Math.floor(i / 3) - 1;\r\n                                        let singular = this.currentWord.singular;\r\n                                        let plural = this.currentWord.plural;\r\n                                        if (i % 3 === 1) {\r\n                                            this.container.children[i].innerHTML = '';\r\n                                            for (let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++) {\r\n                                                if (singular[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                    tabulatorStyle = !tabulatorStyle;\r\n                                                    ii += 4;\r\n                                                } else {\r\n                                                    let object = document.createElement('object');\r\n                                                    object.data = './keys/OG_T.svg';\r\n                                                    object.id = `key${ii}-inp${i}`;\r\n                                                    object.style.height = `100%`;\r\n                                                    this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                    if (tabulatorStyle) tabulatorIndexes.push(ii)\r\n\r\n                                                    object.addEventListener('load', _ => {\r\n                                                        let svg = object.contentDocument;\r\n                                                        svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                        if (\r\n                                                            overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined &&\r\n                                                            overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                                .includes(parseInt(object.id.slice(3)))\r\n                                                        ) {\r\n                                                            this.tabulatorAnimation(object);\r\n                                                            object.classList.add('tabulator');\r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                            }\r\n                                            overallIndexes.push([i, tabulatorIndexes]);\r\n                                        } else if (i % 3 === 2) {\r\n                                            this.container.children[i].innerHTML = '';\r\n                                            for (let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++) {\r\n                                                if (plural[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                    tabulatorStyle = !tabulatorStyle;\r\n                                                    ii += 4;\r\n                                                } else {\r\n                                                    let object = document.createElement('object');\r\n                                                    object.data = './keys/OG_T.svg';\r\n                                                    object.id = `key${ii}-inp${i}`;\r\n                                                    object.style.height = `100%`;\r\n                                                    this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                    if (tabulatorStyle) tabulatorIndexes.push(ii);\r\n\r\n                                                    object.addEventListener('load', _ => {\r\n                                                        let svg = object.contentDocument;\r\n                                                        svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                        if (\r\n                                                            overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined &&\r\n                                                            overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                                .includes(parseInt(object.id.slice(3)))\r\n                                                        ) {\r\n                                                            this.tabulatorAnimation(object);\r\n                                                            object.classList.add('tabulator');\r\n                                                        }\r\n                                                    });\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        overallIndexes.push([i, tabulatorIndexes]);\r\n                                    }\r\n                                    this.changeSelectedInput();\r\n                                } else if (this.vocabulary[wi2]) {\r\n                                    this.currentWord = <InflectedWord>this.vocabulary[wi2];\r\n                                    let overallIndexes: [number, number[]][] = [];\r\n                                    let tabulatorStyle = false;\r\n                                    for (let i = 3; i < this.container.childElementCount; i++) {\r\n                                        let tabulatorIndexes: number[] = [];\r\n                                        let n = Math.floor(i / 3) - 1;\r\n                                        let singular = this.currentWord.singular;\r\n                                        let plural = this.currentWord.plural;\r\n                                        if (i % 3 === 1) {\r\n                                            this.container.children[i].innerHTML = '';\r\n                                            for (let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++) {\r\n                                                if (singular[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                    tabulatorStyle = !tabulatorStyle;\r\n                                                    ii += 4;\r\n                                                } else {\r\n                                                    let object = document.createElement('object');\r\n                                                    object.data = './keys/OG_T.svg';\r\n                                                    object.id = `key${ii}-inp${i}`;\r\n                                                    object.style.height = `100%`;\r\n                                                    this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                    if (tabulatorStyle) tabulatorIndexes.push(ii)\r\n\r\n                                                    object.addEventListener('load', _ => {\r\n                                                        let svg = object.contentDocument;\r\n                                                        svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                        if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) &&\r\n                                                            overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                                .includes(parseInt(object.id.slice(3)))\r\n                                                        ) {\r\n                                                            this.tabulatorAnimation(object);\r\n                                                            object.classList.add('tabulator');\r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                            }\r\n                                            overallIndexes.push([i, tabulatorIndexes]);\r\n                                        } else if (i % 3 === 2) {\r\n                                            this.container.children[i].innerHTML = '';\r\n                                            for (let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++) {\r\n                                                if (plural[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                    tabulatorStyle = !tabulatorStyle;\r\n                                                    ii += 4;\r\n                                                } else {\r\n                                                    let object = document.createElement('object');\r\n                                                    object.data = './keys/OG_T.svg';\r\n                                                    object.id = `key${ii}-inp${i}`;\r\n                                                    object.style.height = `100%`;\r\n                                                    this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                    if (tabulatorStyle) tabulatorIndexes.push(ii);\r\n\r\n                                                    object.addEventListener('load', _ => {\r\n                                                        let svg = object.contentDocument;\r\n                                                        svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                        if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) &&\r\n                                                            overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                                .includes(parseInt(object.id.slice(3)))\r\n                                                        ) {\r\n                                                            this.tabulatorAnimation(object);\r\n                                                            object.classList.add('tabulator');\r\n                                                        }\r\n                                                    });\r\n                                                }\r\n                                            }\r\n                                            overallIndexes.push([i, tabulatorIndexes]);\r\n                                        }\r\n                                    }\r\n                                    this.changeSelectedInput();\r\n                                } else {\r\n                                    this.keys = 0;\r\n                                    this.currentWord = {\r\n                                        singular: this.empty(param),\r\n                                        plural: this.empty(param),\r\n                                        verb: param.includes('verb'),\r\n                                        probability: 1\r\n                                    };\r\n\r\n                                    for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                        if (i % 3 != 0) {\r\n                                            this.container.children[i].innerHTML = '';\r\n                                        }\r\n\r\n                                        this.container.children[i].classList.remove('selectedElement');\r\n                                    }\r\n                                    this.inputIndex = 4;\r\n                                    this.selectedInput = <HTMLDivElement>this.container.children[4];\r\n                                    this.tabCount = 0;\r\n                                    this.selectedInput.classList.add('selectedElement');\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    deletionMode = false;\r\n                    this.deletionButton.removeEventListener('click', deletionFunction);\r\n                    this.deletionButton.classList.remove('click');\r\n                    document.querySelectorAll('object').forEach(object => {\r\n                        if (object.contentDocument.getElementById('tspan7')) {\r\n                            this.deletionAnimation(object, 1, 'reverse');\r\n                        }\r\n                    });\r\n                    Array.from(document.getElementsByClassName('editable')).forEach((div: HTMLDivElement) => {\r\n                        div.classList.remove('redShadowDesign');\r\n                    });\r\n                }\r\n\r\n                this.deletionButton.addEventListener('mousemove', _ => {\r\n                    if (deletionMode) {\r\n                        return;\r\n                    }\r\n                    deletionMode = true;\r\n\r\n                    this.deletionAnimation(this.deletionButton, 2000, 'normal');\r\n                    let broken = false;\r\n                    this.container.querySelectorAll('object').forEach((object) => {\r\n                        if (object.contentDocument.getElementById('tspan7')) {\r\n                            this.deletionAnimation(object, 2000, 'normal');\r\n                        } else {\r\n                            broken = true;\r\n                            return;\r\n                        }\r\n                    });\r\n\r\n                    if (broken) {\r\n                        this.container.querySelectorAll('object').forEach((object) => {\r\n                            if (object.contentDocument.getElementById('tspan7')) {\r\n                                this.deletionAnimation(object, 1, 'reverse');\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    indicator = setTimeout(_ => {\r\n                        if (deletionMode) {\r\n                            this.deletionButton.addEventListener('click', deletionFunction);\r\n                            Array.from(document.getElementsByClassName('editable')).forEach((div: HTMLDivElement) => {\r\n                                div.classList.add('redShadowDesign');\r\n                            });\r\n                        }\r\n                    }, 2000);\r\n                });\r\n\r\n                this.deletionButton.addEventListener('mouseleave', _ => {\r\n                    clearTimeout(indicator);\r\n                    deletionMode = false;\r\n                    this.deletionAnimation(this.deletionButton, 1, 'reverse');\r\n                    this.container.querySelectorAll('object').forEach((object) => {\r\n                        if (object.contentDocument.getElementById('tspan7')) {\r\n                            this.deletionAnimation(object, 1, 'reverse');\r\n                        }\r\n                    });\r\n                    Array.from(document.getElementsByClassName('editable')).forEach((div: HTMLDivElement) => {\r\n                        div.classList.remove('redShadowDesign');\r\n                    });\r\n                    this.deletionButton.removeEventListener('click', deletionFunction);\r\n                });\r\n\r\n                document.querySelectorAll('.c').forEach((element: HTMLButtonElement) => {\r\n                    element.addEventListener('mousedown', _ => {\r\n                        element.classList.add('click');\r\n                        document.querySelectorAll('.editable').forEach((div: HTMLDivElement) => {\r\n                            div.classList.add('savedElement');\r\n                        });\r\n                    });\r\n\r\n                    element.addEventListener('mouseout', _ => {\r\n                        element.classList.remove('click');\r\n                        document.querySelectorAll('.editable').forEach((div: HTMLDivElement) => {\r\n                            div.classList.remove('savedElement');\r\n                        });\r\n                    });\r\n                });\r\n\r\n                this.buttonLeft.addEventListener('mouseup', _ => {\r\n                    console.log('left', this.vocabulary.map(w => w.singular[0]));\r\n                    if (this.tabMode) {\r\n                        this.cancelTabMode();\r\n                    }\r\n\r\n                    let vocab = this.vocabulary.slice(0, this.wordIndex);\r\n                    let wi = vocab.findLastIndex(w => w.verb === param.includes('verb'));\r\n\r\n                    if (this.vocabulary[wi]) {\r\n                        if (\r\n                            this.currentWord.singular.filter((value) => value === '').length === (param.includes('verb') ? 3 : 6) &&\r\n                            this.currentWord.plural.filter((value) => value === '').length === (param.includes('verb') ? 3 : 6) &&\r\n                            this.wordIndex === this.vocabulary.length\r\n                        ) {\r\n                            for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                this.container.children[i].classList.remove('savedElement');\r\n                                this.buttonLeft.classList.remove('click');\r\n                            }\r\n\r\n                            this.wordIndex = wi;\r\n                            this.currentWord = this.vocabulary[wi];\r\n                            let overallIndexes: [number, number[]][] = [];\r\n\r\n                            let tabulatorStyle = false;\r\n                            for (let i = 3; i < this.container.childElementCount; i++) {\r\n                                let tabulatorIndexes: number[] = [];\r\n                                let n = Math.floor(i / 3) - 1;\r\n                                let singular = this.currentWord.singular;\r\n                                let plural = this.currentWord.plural;\r\n                                if (i % 3 === 1) {\r\n                                    this.container.children[i].innerHTML = '';\r\n                                    for (let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++) {\r\n                                        if (singular[n].slice(ii, ii + 5) === '^tab^') {\r\n                                            tabulatorStyle = !tabulatorStyle;\r\n                                            ii += 4;\r\n                                        } else {\r\n                                            let object = document.createElement('object');\r\n                                            object.data = './keys/OG_T.svg';\r\n                                            object.id = `key${ii}-inp${i}`;\r\n                                            object.style.height = `100%`;\r\n                                            this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                            if (tabulatorStyle) tabulatorIndexes.push(ii)\r\n\r\n                                            object.addEventListener('load', _ => {\r\n                                                let svg = object.contentDocument;\r\n                                                svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                if (\r\n                                                    overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined &&\r\n                                                    overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1].includes(parseInt(object.id.slice(3)))\r\n                                                ) {\r\n                                                    this.tabulatorAnimation(object);\r\n                                                    object.classList.add('tabulator');\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                    overallIndexes.push([i, tabulatorIndexes]);\r\n                                } else if (i % 3 === 2) {\r\n                                    this.container.children[i].innerHTML = '';\r\n                                    for (let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++) {\r\n                                        if (plural[n].slice(ii, ii + 5) === '^tab^') {\r\n                                            tabulatorStyle = !tabulatorStyle;\r\n                                            ii += 4;\r\n                                        } else {\r\n                                            let object = document.createElement('object');\r\n                                            object.data = './keys/OG_T.svg';\r\n                                            object.id = `key${ii}-inp${i}`;\r\n                                            object.style.height = `100%`;\r\n                                            this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                            if (tabulatorStyle) tabulatorIndexes.push(ii);\r\n\r\n                                            object.addEventListener('load', _ => {\r\n                                                let svg = object.contentDocument;\r\n                                                svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                if (\r\n                                                    overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined &&\r\n                                                    overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                        .includes(parseInt(object.id.slice(3)))\r\n                                                ) {\r\n                                                    this.tabulatorAnimation(object);\r\n                                                    object.classList.add('tabulator');\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                }\r\n                                overallIndexes.push([i, tabulatorIndexes]);\r\n                            }\r\n                            this.changeSelectedInput();\r\n                        } else {\r\n                            this.vocabulary[this.wordIndex] = this.currentWord;\r\n\r\n                            const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\r\n                            transaction.onerror = _ => console.error(transaction.error);\r\n                            const objectStore = transaction.objectStore(`inflected vocabulary`);\r\n                            const req = objectStore.get(this.wordIndex);\r\n                            req.onerror = _ => console.error(req.error);\r\n                            req.onsuccess = _ => {\r\n                                for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                    this.container.children[i].classList.remove('savedElement');\r\n                                    this.buttonLeft.classList.remove('click');\r\n                                }\r\n\r\n                                const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                                idontcare.onerror = _ => console.error(idontcare.error);\r\n\r\n                                this.wordIndex = wi;\r\n\r\n                                let tabulatorStyle = false;\r\n                                this.currentWord = this.vocabulary[wi];\r\n                                let overallIndexes: [number, number[]][] = [];\r\n                                for (let i = 3; i < this.container.childElementCount; i++) {\r\n                                    let tabulatorIndexes: number[] = [];\r\n                                    let n = Math.floor(i / 3) - 1;\r\n                                    let singular = this.currentWord.singular;\r\n                                    let plural = this.currentWord.plural;\r\n                                    if (i % 3 === 1) {\r\n                                        this.container.children[i].innerHTML = '';\r\n                                        for (let ii = 0; ii < singular[n].length; ii++) {\r\n                                            if (singular[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                tabulatorStyle = !tabulatorStyle;\r\n                                                ii += 4;\r\n                                            } else {\r\n                                                let object = document.createElement('object');\r\n                                                object.data = './keys/OG_T.svg';\r\n                                                object.id = `key${ii}-inp${i}`;\r\n                                                object.style.height = `100%`;\r\n                                                this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                if (tabulatorStyle) tabulatorIndexes.push(ii)\r\n\r\n                                                object.addEventListener('load', _ => {\r\n                                                    let svg = object.contentDocument;\r\n                                                    svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                    if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined &&\r\n                                                        overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                            .includes(parseInt(object.id.slice(3)))\r\n                                                    ) {\r\n                                                        this.tabulatorAnimation(object);\r\n                                                        object.classList.add('tabulator');\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        }\r\n                                        overallIndexes.push([i, tabulatorIndexes]);\r\n                                    } else if (i % 3 === 2) {\r\n                                        this.container.children[i].innerHTML = '';\r\n                                        for (let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++) {\r\n                                            if (plural[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                tabulatorStyle = !tabulatorStyle;\r\n                                                ii += 4;\r\n                                            } else {\r\n                                                let object = document.createElement('object');\r\n                                                object.data = './keys/OG_T.svg';\r\n                                                object.id = `key${ii}-inp${i}`;\r\n                                                object.style.height = `100%`;\r\n                                                this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                if (tabulatorStyle) tabulatorIndexes.push(ii);\r\n\r\n                                                object.addEventListener('load', _ => {\r\n                                                    let svg = object.contentDocument;\r\n                                                    svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                    if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) != undefined &&\r\n                                                        overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                            .includes(parseInt(object.id.slice(3)))\r\n                                                    ) {\r\n                                                        this.tabulatorAnimation(object);\r\n                                                        object.classList.add('tabulator');\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        overallIndexes.push([i, tabulatorIndexes]);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    console.log('left end', this.vocabulary.map(w => w.singular[0]));\r\n                });\r\n\r\n                this.buttonRight.addEventListener('mouseup', _ => {\r\n                    console.log('right', this.vocabulary.map(w => w.singular[0]));\r\n                    if (this.tabMode) {\r\n                        this.cancelTabMode();\r\n                    }\r\n\r\n                    let vocab = this.vocabulary.slice(this.wordIndex + 1);\r\n                    let wi = (vocab.findIndex(w => w.verb === param.includes('verb'))) >= 0 ? vocab.findIndex(w => w.verb === param.includes('verb')) + this.wordIndex + 1 : -1;\r\n\r\n                    if (!this.vocabulary[wi]) {\r\n                        console.log('!this.vocabulary[wi]');\r\n                        this.vocabulary[this.wordIndex] = this.currentWord;\r\n\r\n                        const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\r\n                        transaction.onerror = _ => console.error(transaction.error);\r\n                        const objectStore = transaction.objectStore(`inflected vocabulary`);\r\n                        const req = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                        req.onerror = _ => console.error(req.error)\r\n                        transaction.oncomplete = _ => {\r\n                            for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                this.container.children[i].classList.remove('savedElement');\r\n                                this.buttonRight.classList.remove('click');\r\n                            }\r\n\r\n                            this.wordIndex = this.vocabulary.length;\r\n                            this.keys = 0;\r\n                            this.currentWord = {\r\n                                singular: this.empty(param),\r\n                                plural: this.empty(param),\r\n                                verb: param.includes('verb'),\r\n                                probability: 1\r\n                            };\r\n\r\n                            for (let i = 3; i < this.container.childElementCount; i++) {\r\n                                if (i % 3 != 0) {\r\n                                    this.container.children[i].innerHTML = '';\r\n                                }\r\n\r\n                                this.container.children[i].classList.remove('selectedElement');\r\n                            }\r\n                            this.inputIndex = 4;\r\n                            this.selectedInput = <HTMLDivElement>this.container.children[4];\r\n                            this.tabCount = 0;\r\n                            this.selectedInput.classList.add('selectedElement');\r\n                        }\r\n                    } else {\r\n                        console.log('this.vocabulary[wi]');\r\n                        this.vocabulary[this.wordIndex] = this.currentWord;\r\n\r\n                        for (let i = 0; i < this.container.childElementCount; i++) {\r\n                            this.container.children[i].classList.remove('savedElement');\r\n                            this.buttonRight.classList.remove('click');\r\n                        }\r\n\r\n                        const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\r\n                        transaction.onerror = _ => console.error(transaction.error);\r\n                        const objectStore = transaction.objectStore(`inflected vocabulary`);\r\n                        const req = objectStore.get(this.wordIndex);\r\n                        req.onerror = _ => console.error(req.error);\r\n                        req.onsuccess = _ => {\r\n                            const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                            idontcare.onerror = _ => console.error(idontcare.error);\r\n\r\n                            this.wordIndex = wi;\r\n                            this.currentWord = <InflectedWord>this.vocabulary[wi];\r\n                            let overallIndexes: [number, number[]][] = [];\r\n                            let tabulatorStyle = false;\r\n                            for (let i = 3; i < this.container.childElementCount; i++) {\r\n                                let tabulatorIndexes: number[] = [];\r\n                                let n = Math.floor(i / 3) - 1;\r\n                                let singular = this.currentWord.singular;\r\n                                let plural = this.currentWord.plural;\r\n                                if (i % 3 === 1) {\r\n                                    this.container.children[i].innerHTML = '';\r\n                                    for (let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++) {\r\n                                        if (singular[n].slice(ii, ii + 5) === '^tab^') {\r\n                                            tabulatorStyle = !tabulatorStyle;\r\n                                            ii += 4;\r\n                                        } else {\r\n                                            let object = document.createElement('object');\r\n                                            object.data = './keys/OG_T.svg';\r\n                                            object.id = `key${ii}-inp${i}`;\r\n                                            object.style.height = `100%`;\r\n                                            this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                            if (tabulatorStyle) tabulatorIndexes.push(ii)\r\n\r\n                                            object.addEventListener('load', _ => {\r\n                                                let svg = object.contentDocument;\r\n                                                svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) &&\r\n                                                    overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                        .includes(parseInt(object.id.slice(3)))\r\n                                                ) {\r\n                                                    this.tabulatorAnimation(object);\r\n                                                    object.classList.add('tabulator');\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                    overallIndexes.push([i, tabulatorIndexes]);\r\n                                } else if (i % 3 === 2) {\r\n                                    this.container.children[i].innerHTML = '';\r\n                                    for (let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++) {\r\n                                        if (plural[n].slice(ii, ii + 5) === '^tab^') {\r\n                                            tabulatorStyle = !tabulatorStyle;\r\n                                            ii += 4;\r\n                                        } else {\r\n                                            let object = document.createElement('object');\r\n                                            object.data = './keys/OG_T.svg';\r\n                                            object.id = `key${ii}-inp${i}`;\r\n                                            object.style.height = `100%`;\r\n                                            this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                            if (tabulatorStyle) tabulatorIndexes.push(ii);\r\n\r\n                                            object.addEventListener('load', _ => {\r\n                                                let svg = object.contentDocument;\r\n                                                svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) &&\r\n                                                    overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                        .includes(parseInt(object.id.slice(3)))\r\n                                                ) {\r\n                                                    this.tabulatorAnimation(object);\r\n                                                    object.classList.add('tabulator');\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                    overallIndexes.push([i, tabulatorIndexes]);\r\n                                }\r\n                                this.changeSelectedInput();\r\n                            }\r\n                        }\r\n                    }\r\n                    console.log('right end', this.vocabulary.map(w => w.singular[0]));\r\n                });\r\n\r\n                this.keydownFunction = (event: KeyboardEvent) => {\r\n                    let forbiddenCharacters = ['<', '´', '`', '^'];\r\n                    if (event.key === 'ArrowRight') {\r\n                        if (this.tabMode) {\r\n                            this.cancelTabMode();\r\n                        }\r\n\r\n                        if (this.inputIndex < 20 - this.v) {\r\n                            this.inputIndex++;\r\n                            if (this.inputIndex % 3 === 0) {\r\n                                this.inputIndex++;\r\n                            }\r\n                            this.changeSelectedInput();\r\n                            this.keys = this.selectedInput.childElementCount;\r\n                        }\r\n\r\n                        return;\r\n                    } else if (event.key === 'ArrowLeft') {\r\n                        if (this.tabMode) {\r\n                            this.cancelTabMode();\r\n                        }\r\n\r\n                        if (this.inputIndex > 4) {\r\n                            this.inputIndex--;\r\n                            if (this.inputIndex % 3 === 0) {\r\n                                this.inputIndex--;\r\n                            }\r\n\r\n                            this.changeSelectedInput();\r\n                            this.keys = this.selectedInput.childElementCount;\r\n                        }\r\n                        return;\r\n                    } else if (event.key === 'ArrowDown' || event.key === 'Enter') {\r\n                        if (this.tabMode) {\r\n                            this.cancelTabMode();\r\n                            if (this.inputIndex === 19) {\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        if (this.inputIndex < 18 - this.v) {\r\n                            this.inputIndex += 3;\r\n\r\n                            this.changeSelectedInput();\r\n                            this.keys = this.selectedInput.childElementCount;\r\n                        } else if (event.key === 'Enter' && this.inputIndex === 19 - this.v) {\r\n                            this.inputIndex = 5;\r\n\r\n                            this.changeSelectedInput();\r\n                            this.keys = this.selectedInput.childElementCount;\r\n                        } else if (event.key === 'Enter' && this.inputIndex === 20 - this.v) {\r\n                            document.querySelectorAll('.editable').forEach((element: HTMLDivElement) => {\r\n                                element.classList.add('savedElement');\r\n                            });\r\n\r\n                            if (this.enterMode) {\r\n                                let vocab = this.vocabulary.slice(this.wordIndex + 1);\r\n                                let wi = vocab.findIndex(w => w.verb === param.includes('verb'));\r\n\r\n                                if (!this.vocabulary[wi]) {\r\n                                    this.vocabulary[this.wordIndex] = this.currentWord;\r\n\r\n                                    const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\r\n                                    transaction.onerror = _ => console.error(transaction.error);\r\n                                    const objectStore = transaction.objectStore(`inflected vocabulary`);\r\n                                    const req = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                                    req.onerror = _ => console.error(req.error)\r\n                                    transaction.oncomplete = _ => {\r\n                                        for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                            this.container.children[i].classList.remove('savedElement');\r\n                                        }\r\n\r\n                                        this.wordIndex++;\r\n                                        this.keys = 0;\r\n                                        this.currentWord = {\r\n                                            singular: this.empty(param),\r\n                                            plural: this.empty(param),\r\n                                            verb: param.includes('verb'),\r\n                                            probability: 1\r\n                                        };\r\n\r\n                                        for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                            if (i % 3 != 0) {\r\n                                                this.container.children[i].innerHTML = '';\r\n                                            }\r\n\r\n                                            this.container.children[i].classList.remove('selectedElement');\r\n                                        }\r\n                                        this.inputIndex = 4;\r\n                                        this.selectedInput = <HTMLDivElement>this.container.children[4];\r\n                                        this.tabCount = 0;\r\n                                        this.selectedInput.classList.add('selectedElement');\r\n                                    }\r\n                                } else {\r\n                                    this.vocabulary[this.wordIndex] = this.currentWord;\r\n\r\n                                    for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                        this.container.children[i].classList.remove('savedElement');\r\n                                    }\r\n\r\n                                    const transaction = this.database.transaction(`inflected vocabulary`, 'readwrite');\r\n                                    transaction.onerror = _ => console.error(transaction.error);\r\n                                    const objectStore = transaction.objectStore(`inflected vocabulary`);\r\n                                    const req = objectStore.get(this.wordIndex);\r\n                                    req.onerror = _ => console.error(req.error);\r\n                                    req.onsuccess = _ => {\r\n                                        const idontcare = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                                        idontcare.onerror = _ => console.log(idontcare.error);\r\n\r\n                                        this.wordIndex = wi;\r\n                                        this.currentWord = <InflectedWord>this.vocabulary[wi];\r\n                                        let overallIndexes: [number, number[]][] = [];\r\n                                        let tabulatorStyle = false;\r\n                                        for (let i = 3; i < this.container.childElementCount; i++) {\r\n                                            let tabulatorIndexes: number[] = [];\r\n                                            let n = Math.floor(i / 3) - 1;\r\n                                            let singular = this.currentWord.singular;\r\n                                            let plural = this.currentWord.plural;\r\n                                            if (i % 3 === 1) {\r\n                                                this.container.children[i].innerHTML = '';\r\n                                                for (let ii = 0; ii < singular[Math.floor(i / 3) - 1].length; ii++) {\r\n                                                    if (singular[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                        tabulatorStyle = !tabulatorStyle;\r\n                                                        ii += 4;\r\n                                                    } else {\r\n                                                        let object = document.createElement('object');\r\n                                                        object.data = './keys/OG_T.svg';\r\n                                                        object.id = `key${ii}-inp${i}`;\r\n                                                        object.style.height = `100%`;\r\n                                                        this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                        if (tabulatorStyle) tabulatorIndexes.push(ii)\r\n\r\n                                                        object.addEventListener('load', _ => {\r\n                                                            let svg = object.contentDocument;\r\n                                                            svg.querySelector('#tspan7').innerHTML = singular[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                            if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) &&\r\n                                                                overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                                    .includes(parseInt(object.id.slice(3)))\r\n                                                            ) {\r\n                                                                this.tabulatorAnimation(object);\r\n                                                                object.classList.add('tabulator');\r\n                                                            }\r\n                                                        })\r\n                                                    }\r\n                                                }\r\n                                                overallIndexes.push([i, tabulatorIndexes]);\r\n                                            } else if (i % 3 === 2) {\r\n                                                this.container.children[i].innerHTML = '';\r\n                                                for (let ii = 0; ii < plural[Math.floor(i / 3) - 1].length; ii++) {\r\n                                                    if (plural[n].slice(ii, ii + 5) === '^tab^') {\r\n                                                        tabulatorStyle = !tabulatorStyle;\r\n                                                        ii += 4;\r\n                                                    } else {\r\n                                                        let object = document.createElement('object');\r\n                                                        object.data = './keys/OG_T.svg';\r\n                                                        object.id = `key${ii}-inp${i}`;\r\n                                                        object.style.height = `100%`;\r\n                                                        this.container.children[i].insertAdjacentElement('beforeend', object);\r\n                                                        if (tabulatorStyle) tabulatorIndexes.push(ii);\r\n\r\n                                                        object.addEventListener('load', _ => {\r\n                                                            let svg = object.contentDocument;\r\n                                                            svg.querySelector('#tspan7').innerHTML = plural[Math.floor(i / 3) - 1].charAt(ii);\r\n                                                            if (overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3))) &&\r\n                                                                overallIndexes.find(indexes => indexes[0] === parseInt(object.parentElement.id.slice(3)))[1]\r\n                                                                    .includes(parseInt(object.id.slice(3)))\r\n                                                            ) {\r\n                                                                this.tabulatorAnimation(object);\r\n                                                                object.classList.add('tabulator');\r\n                                                            }\r\n                                                        });\r\n                                                    }\r\n                                                }\r\n                                                overallIndexes.push([i, tabulatorIndexes]);\r\n                                            }\r\n                                            this.changeSelectedInput();\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                this.enterMode = false;\r\n                            } else {\r\n                                this.enterMode = true;\r\n                            }\r\n\r\n                            const transaction = this.database.transaction('inflected vocabulary', 'readwrite');\r\n                            const objectStore = transaction.objectStore('inflected vocabulary');\r\n                            const req = objectStore.put(this.currentWord, this.wordIndex + 1);\r\n                            req.onerror = _ => console.error(req.error);\r\n                            setTimeout(_ => {\r\n                                for (let i = 0; i < this.container.childElementCount; i++) {\r\n                                    this.container.children[i].classList.remove('savedElement');\r\n                                }\r\n                            }, 250);\r\n                        }\r\n\r\n                        return;\r\n                    } else if (event.key === 'ArrowUp') {\r\n                        if (this.tabMode) {\r\n                            this.cancelTabMode();\r\n                        }\r\n                        if (this.inputIndex > 6) {\r\n                            this.inputIndex -= 3;\r\n\r\n                            this.changeSelectedInput();\r\n                            this.keys = this.selectedInput.childElementCount;\r\n                        }\r\n\r\n                        return;\r\n                    } else if (event.key === 'Backspace') {\r\n                        if (this.selectedInput.lastElementChild) {\r\n                            this.selectedInput.lastElementChild.remove();\r\n\r\n                            let array = <string[]>Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                            let n = Math.floor(this.inputIndex / 3) - 1;\r\n                            if (array[n].slice(-5) === '^tab^') {\r\n                                array[n] = array[n].slice(0, array[n].length - 6);\r\n                                if (this.tabCount > 1) this.tabCount--;\r\n                                this.tabMode = !this.tabMode;\r\n                                this.selectedInput.classList.add('tab');\r\n                                if (!this.tabMode) {\r\n                                    this.selectedInput.classList.remove('tab');\r\n                                }\r\n                            } else {\r\n                                array[n] = array[n].slice(0, array[n].length - 1);\r\n                            }\r\n                            Object.defineProperty(\r\n                                this.currentWord,\r\n                                Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                { value: array }\r\n                            );\r\n                            this.keys--;\r\n\r\n                            if (this.tabMode) {\r\n                                this.tabulator = this.tabulator.slice(0, this.tabulator.length - 1);\r\n                            }\r\n                        } else if (this.tabMode) {\r\n                            this.cancelTabMode();\r\n                        }\r\n\r\n                        return;\r\n                    } else if (event.key === 'Tab') {\r\n                        if (!this.tabMode) {\r\n                            if (this.tabCount >= 2) {\r\n                                let array = <string[]>Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                                let n = Math.floor(this.inputIndex / 3) - 1;\r\n                                let index: number;\r\n                                while (array[n].search('\\\\^tab\\\\^') !== -1) {\r\n                                    let c = array[n].search('\\\\^tab\\\\^');\r\n                                    if (index === undefined) index = c;\r\n                                    array[n] = array[n].slice(0, c) + array[n].slice(c + 5, array[n].length);\r\n                                }\r\n\r\n                                array[n] = array[n].slice(0, index) + '^tab^' + array[n].slice(index, array[n].length);\r\n                                Object.defineProperty(\r\n                                    this.currentWord,\r\n                                    Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                    { value: array }\r\n                                );\r\n\r\n                                let tabulatorStyle = false;\r\n                                for (let i = 0; i < array[n].length; i++) {\r\n                                    if (array[n].slice(i, i + 5) === '^tab^') {\r\n                                        tabulatorStyle = !tabulatorStyle;\r\n                                        i += 4;\r\n                                    } else if (this.selectedInput.children[i > index ? i - 5 : i]) {\r\n                                        let object = <HTMLObjectElement>this.selectedInput.children[i > index ? i - 5 : i];\r\n                                        let svg = object.contentDocument;\r\n                                        svg.querySelector('#tspan7').innerHTML = array[n].charAt(i);\r\n                                        if (tabulatorStyle) {\r\n                                            this.tabulatorAnimation(object);\r\n                                            object.classList.add('tabulator');\r\n                                        } else {\r\n                                            object.classList.remove('tabulator');\r\n                                        }\r\n                                        this.selectedInput.children[i]\r\n                                    }\r\n                                }\r\n                                this.tabulator = array[n].slice(index + 5, array[n].length);\r\n                                this.tabCount = 1;\r\n                                this.tabMode = true;\r\n                                this.selectedInput.classList.add('tab');\r\n                            } else {\r\n                                this.tabMode = true;\r\n                                this.selectedInput.classList.add('tab');\r\n                                let array = <string[]>Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                                array[Math.floor(this.inputIndex / 3) - 1] += \"^tab^\";\r\n                                Object.defineProperty(\r\n                                    this.currentWord,\r\n                                    Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                    { value: array }\r\n                                );\r\n                                this.tabCount++;\r\n                            }\r\n                        } else if (this.tabulator.length > 0) {\r\n                            if (Object.values(this.currentWord)[this.inputIndex % 3 - 1][Math.floor(this.inputIndex / 3) - 1].slice(-5) != '^tab^') {\r\n                                this.tabMode = false;\r\n                                this.selectedInput.classList.remove('tab');\r\n                                let array = <string[]>Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                                array[Math.floor(this.inputIndex / 3) - 1] += \"^tab^\";\r\n                                Object.defineProperty(\r\n                                    this.currentWord,\r\n                                    Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                    { value: array }\r\n                                );\r\n                                this.tabCount++;\r\n                            } else {\r\n                                let array = <string[]>Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                                let n = Math.floor(this.inputIndex / 3) - 1\r\n                                array[n] += this.tabulator + \"^tab^\";\r\n                                let index = array[n].search(this.tabulator);\r\n                                if (index === -1) { index = 0; }\r\n                                if (\r\n                                    this.keys + this.tabulator.length <=\r\n                                    Math.floor(this.selectedInput.clientWidth / (this.selectedInput.clientHeight - parseFloat(this.selectedInput.style.padding)))\r\n                                ) {\r\n                                    for (let i = 0; i < this.tabulator.length; i++) {\r\n                                        let object = document.createElement('object');\r\n                                        object.data = './keys/OG_T.svg';\r\n                                        object.id = `key${this.keys}-inp${this.inputIndex}`;\r\n                                        object.style.height = `100%`;\r\n                                        this.selectedInput.insertAdjacentElement('beforeend', object);\r\n                                        object.hidden = true;\r\n                                        object.addEventListener('load', _ => {\r\n                                            object.hidden = false;\r\n                                            this.tabulatorAnimation(object);\r\n                                            object.classList.add('tabulator');\r\n                                            let svg = object.contentDocument;\r\n                                            svg.querySelector('#tspan7').innerHTML = this.tabulator.charAt(i);\r\n                                            if (i === this.tabulator.length - 1) {\r\n                                            }\r\n                                        });\r\n                                        this.keys++;\r\n                                    }\r\n                                } else {\r\n                                    for (let ii = 0; ii < this.keys; ii++) {\r\n                                        this.failureAnimation(<HTMLObjectElement>this.selectedInput.children[ii]);\r\n                                    }\r\n                                    return;\r\n                                }\r\n\r\n\r\n                                Object.defineProperty(\r\n                                    this.currentWord,\r\n                                    Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                                    { value: array }\r\n                                );\r\n                                this.tabMode = false;\r\n                                this.tabCount++;\r\n                                this.selectedInput.classList.remove('tab');\r\n                            }\r\n                        } else {\r\n                            this.tabCount = 0;\r\n                            this.cancelTabMode();\r\n                        }\r\n                        return;\r\n                    } else if (forbiddenCharacters.includes(event.key) || event.key.length > 1) {\r\n                        return;\r\n                    }\r\n                    this.enterMode = false;\r\n\r\n                    let object = document.createElement('object');\r\n                    object.data = './keys/OG_T.svg';\r\n                    object.id = `key${this.keys}-inp${this.inputIndex}`;\r\n                    object.style.height = `100%`;\r\n                    this.selectedInput.insertAdjacentElement('beforeend', object);\r\n                    let width = object.clientHeight;\r\n                    object.hidden = true;\r\n\r\n                    object.addEventListener('load', _ => {\r\n                        if (this.keys + 1 >= Math.floor(this.selectedInput.clientWidth / width)) {\r\n                            object.remove();\r\n                            for (let i = 0; i < this.keys; i++) {\r\n                                this.failureAnimation(<HTMLObjectElement>this.selectedInput.children[i]);\r\n                            }\r\n                            return;\r\n                        }\r\n                        object.hidden = false;\r\n\r\n                        let svg = object.contentDocument;\r\n                        svg.querySelector('#tspan7').innerHTML = event.key.charAt(0);\r\n\r\n                        let n = Math.floor(this.inputIndex / 3) - 1\r\n                        let array = Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n                        array[n] += event.key;\r\n                        Object.defineProperty(\r\n                            this.currentWord,\r\n                            Object.keys(this.currentWord)[this.inputIndex % 3 - 1],\r\n                            { value: array }\r\n                        );\r\n\r\n                        if (this.tabMode) {\r\n                            if (array[n].slice(-6, -1) === '^tab^') {\r\n                                this.tabulator = '';\r\n                            }\r\n                            this.tabulator += event.key;\r\n                            this.tabulatorAnimation(object);\r\n                            object.classList.add('tabulator');\r\n                        } else {\r\n                            this.idleAnimation(object);\r\n                        }\r\n\r\n                        this.keys++;\r\n                    });\r\n                }\r\n\r\n                document.addEventListener('keydown', this.keydownFunction);\r\n\r\n                window.onkeyup = event => {\r\n                    if (event.key === 'Tab') {\r\n                        this.container.focus();\r\n                    }\r\n                }\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    empty(param: Parameter): [string, string, string] | [string, string, string, string, string, string] {\r\n        let l = param.includes('verb') ? 3 : 6;\r\n        let array = [];\r\n        for (let i = 0; i < l; i++) {\r\n            array.push('');\r\n        }\r\n        return <[string, string, string] | [string, string, string, string, string, string]>array;\r\n    }\r\n\r\n    changeSelectedInput(): void {\r\n        document.querySelectorAll('.selectedElement').forEach(elem => elem.classList.remove('selectedElement'));\r\n        this.selectedInput = <HTMLDivElement>document.getElementById(`div${this.inputIndex}`);\r\n        let word = <string>Object.values(this.currentWord)[this.inputIndex % 3 - 1][(Math.floor(this.inputIndex / 3) - 1)];\r\n        let regex = new RegExp('\\\\^tab\\\\^', 'g');\r\n        let matches = word.match(regex);\r\n        this.tabCount = matches ? matches.length : 0;\r\n        if (!matches ? false : matches.length % 2 === 0) {\r\n            this.selectedInput.classList.remove('tab');\r\n        }\r\n        this.selectedInput.classList.add('selectedElement');\r\n    }\r\n\r\n    cancelTabMode(): void {\r\n        let array = <[string, string, string, string, string, string]>Object.values(this.currentWord)[this.inputIndex % 3 - 1];\r\n        let n = Math.floor(this.inputIndex / 3) - 1;\r\n        if (array[n].includes('^tab^')) {\r\n            let start_end: number[] = [];\r\n            while (array[n].search('\\\\^tab\\\\^') >= 0) {\r\n                let c = array[n].search('\\\\^tab\\\\^');\r\n                array[n] = array[n].slice(0, c) + array[n].slice(c + 5, array[n].length);\r\n                start_end.push(c);\r\n            }\r\n\r\n            if (start_end.length === 1) {\r\n                start_end.push(array[n].length);\r\n            }\r\n            let tab = array[n].slice(start_end[0], start_end[1]);\r\n\r\n            for (let i = 0; i < tab.length; i++) {\r\n                this.selectedInput.children[start_end[0]].remove();\r\n            }\r\n            array[n] = array[n].slice(0, start_end[0]) + array[n].slice(start_end[1], array[n].length);\r\n            this.keys -= tab.length;\r\n        }\r\n        this.tabMode = false;\r\n        this.selectedInput.classList.remove('tab');\r\n    }\r\n\r\n    findMostUsedTabulator(inflectedWord: InflectedWord): string {\r\n        if (inflectedWord.singular) {\r\n            let tabs =\r\n                inflectedWord.singular.map(word => {\r\n                    if (word.includes('^tab^')) {\r\n                        let w = word;\r\n                        let start: number;\r\n                        let end = w.length;\r\n                        while (w.includes('^tab^')) {\r\n                            let index = w.search('\\\\^tab\\\\^');\r\n                            w = w.slice(0, index) + w.slice(index + 5, end);\r\n                            if (start === undefined) {\r\n                                start = index;\r\n                            } else {\r\n                                end = index;\r\n                            }\r\n                        }\r\n                        return w.slice(start ? start : 0, end);\r\n                    }\r\n                }).concat(\r\n                    inflectedWord.plural.map(word => {\r\n                        if (word.includes('^tab^')) {\r\n                            let w = word;\r\n                            let start: number;\r\n                            let end = w.length;\r\n                            while (w.includes('^tab^')) {\r\n                                let index = w.search('\\\\^tab\\\\^');\r\n                                w = w.slice(0, index) + w.slice(index + 5, end);\r\n                                if (start === undefined) {\r\n                                    start = index;\r\n                                } else {\r\n                                    end = index;\r\n                                }\r\n                            }\r\n                            return w.slice(start ? start : 0, end);\r\n                        }\r\n                    })\r\n                ).filter(word => word != undefined);\r\n\r\n            let checkedTabs: [string, number][] = [];\r\n            tabs.forEach((tab) => {\r\n                if (!checkedTabs.map(t => t[0]).includes(tab)) {\r\n                    checkedTabs.push([tab, 1]);\r\n                } else {\r\n                    let i = checkedTabs.findIndex(t => t[0] === tab);\r\n                    checkedTabs[i] = [tab, checkedTabs[i][1] + 1];\r\n                }\r\n            });\r\n\r\n            for (let i = 0; i < checkedTabs.length; i++) {\r\n                checkedTabs.sort((a, b) => b[1] - a[1]);\r\n            }\r\n\r\n            return checkedTabs.length > 0 ? checkedTabs[0][0] : undefined;\r\n        } else return undefined;\r\n    }\r\n\r\n    startNewTrainingRound(param: Parameter): void {\r\n        let vocab = this.vocabulary.filter(w => w.verb === param.includes('verb'));\r\n        if (vocab.length === 0) {\r\n            setTimeout(_ => alert(`Keine ${param.includes('verb') ? 'Konjugationen' : 'Deklinationen'}!`), 250);\r\n            return;\r\n        } else if (vocab.filter(w => !isEmpty(w)).length === 0) {\r\n            setTimeout(_ => alert(`Nur leere ${param.includes('verb') ? 'Konjugationen' : 'Deklinationen'}!`), 250);\r\n            return;\r\n        }\r\n\r\n        function isEmpty(w: InflectedWord) {\r\n            return w.singular.filter(s => s.trim() === '').length === (param.includes('verb') ? 6 : 3) &&\r\n                w.plural.filter(p => p.trim() === '').length === (param.includes('verb') ? 6 : 3);\r\n        }\r\n\r\n        this.round++;\r\n        let overallProbabilty = 0;\r\n        vocab.forEach(word => { if (!isEmpty(word)) overallProbabilty += word.probability });\r\n\r\n        let randomNumber = Math.floor(Math.random() * overallProbabilty * 10) / 10;\r\n        let lowestDifference: number;\r\n        let lastProbability = 0;\r\n        this.failures = 0;\r\n\r\n        this.vocabulary.forEach((word, i) => {\r\n            if (!isEmpty(word) && word.verb === param.includes('verb')) {\r\n                if (lowestDifference === undefined) {\r\n                    lowestDifference = Math.abs(randomNumber - (lastProbability + word.probability));\r\n                    this.currentWord = word;\r\n                    this.currentWordIndex = i;\r\n                } else if (Math.abs(randomNumber - (lastProbability + word.probability)) < lowestDifference) {\r\n                    lowestDifference = Math.abs(randomNumber - (lastProbability + word.probability));\r\n                    this.currentWordIndex = i;\r\n                    this.currentWord = word;\r\n                }\r\n                lastProbability += word.probability;\r\n            }\r\n        });\r\n\r\n        this.tabulator = this.findMostUsedTabulator(this.currentWord);\r\n        document.querySelectorAll('.editable').forEach(div => {\r\n            div.innerHTML = '';\r\n            div.classList.remove('redShadowDesign');\r\n            div.classList.remove('greenShadowDesign');\r\n            div.classList.remove('known-case');\r\n            div.classList.add('shadowDesign');\r\n        });\r\n\r\n        let knownCase: string;\r\n        let rn: number;\r\n        let v = this.v / 3;\r\n        do {\r\n            rn = Math.floor(Math.random() * (param.includes('verb') ? 6 : 12));\r\n            knownCase = Object.values(this.vocabulary[this.currentWordIndex])[rn > 5 - v ? 1 : 0][rn > 5 - v ? rn - 6 + v : rn];\r\n        } while (knownCase === '');\r\n\r\n        while (knownCase.includes('^tab^')) {\r\n            let index = knownCase.search('\\\\^tab\\\\^');\r\n            knownCase = knownCase.slice(0, index) + knownCase.slice(index + 5, knownCase.length);\r\n        }\r\n\r\n        let specificationDiv = document.getElementById(`div${rn > 5 - v ? 2 + (rn - 5 + v) * 3 : 1 + (rn + 1) * 3}`);\r\n        specificationDiv.classList.add('known-case');\r\n        specificationDiv.innerHTML = `<span>${knownCase}</span>`;\r\n\r\n        let array = this.empty(param);\r\n        array[rn > 5 - v ? rn - 6 + v : rn] = knownCase;\r\n        this.currentWord = {\r\n            singular: rn <= 5 - v ? array : this.empty(param),\r\n            plural: rn > 5 - v ? array : this.empty(param),\r\n            verb: param.includes('verb'),\r\n            probability: this.currentWord.probability\r\n        };\r\n\r\n        this.result = {\r\n            singular: param.includes('verb') ? [undefined, undefined, undefined] : [undefined, undefined, undefined, undefined, undefined, undefined],\r\n            plural: param.includes('verb') ? [undefined, undefined, undefined] : [undefined, undefined, undefined, undefined, undefined, undefined]\r\n        }\r\n    }\r\n\r\n    compare(string1: string, string2: string): boolean {\r\n        while (string1.includes('^tab^')) {\r\n            let index = string1.search('\\\\^tab\\\\^');\r\n            string1 = string1.slice(0, index) + string1.slice(index + 5, string1.length);\r\n        }\r\n\r\n        while (string2.includes('^tab^')) {\r\n            let index = string2.search('\\\\^tab\\\\^');\r\n            string2 = string2.slice(0, index) + string2.slice(index + 5, string2.length);\r\n        }\r\n        return string1 === string2;\r\n    }\r\n\r\n    compareObjects(obj1: InflectedWord, obj2: InflectedWord): boolean {\r\n        let object1 = JSON.parse(JSON.stringify(obj1));\r\n        let object2 = JSON.parse(JSON.stringify(obj2));\r\n\r\n        object1.singular.forEach((word, i) => {\r\n            while (word.includes('^tab^')) {\r\n                let index = word.search('\\\\^tab\\\\^');\r\n                word = word.slice(0, index) + word.slice(index + 5, word.length);\r\n            }\r\n            object1.singular[i] = word;\r\n        });\r\n\r\n        object1.plural.forEach((word, i) => {\r\n            while (word.includes('^tab^')) {\r\n                let index = word.search('\\\\^tab\\\\^');\r\n                word = word.slice(0, index) + word.slice(index + 5, word.length);\r\n            }\r\n            object1.plural[i] = word;\r\n        });\r\n\r\n        object2.singular.forEach((word, i) => {\r\n            while (word.includes('^tab^')) {\r\n                let index = word.search('\\\\^tab\\\\^');\r\n                word = word.slice(0, index) + word.slice(index + 5, word.length);\r\n            }\r\n            object2.singular[i] = word;\r\n        });\r\n\r\n        object2.plural.forEach((word, i) => {\r\n            while (word.includes('^tab^')) {\r\n                let index = word.search('\\\\^tab\\\\^');\r\n                word = word.slice(0, index) + word.slice(index + 5, word.length);\r\n            }\r\n            object2.plural[i] = word;\r\n        });\r\n\r\n        return Object.values(object1).slice(0, 3).toLocaleString() === Object.values(object2).slice(0, 3).toLocaleString();\r\n    }\r\n\r\n    failureAnimation(object: HTMLObjectElement): void {\r\n        if (!object) {\r\n            return;\r\n        }\r\n\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: Keyframe[] = [\r\n            { stroke: this.badColor, offset: 0.025 },\r\n\r\n            { rotate: \"10deg z\", offset: 0.25 },\r\n\r\n            { rotate: \"0deg z\", offset: 0.5 },\r\n\r\n            { rotate: \"-10deg z\", offset: 0.75, stroke: this.badColor },\r\n\r\n            { stroke: \"#eeeeeeff\", offset: 0.925 },\r\n\r\n            { rotate: \"0deg z\", offset: 1 }\r\n        ];\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 500\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    idleAnimation(object: HTMLObjectElement): void {\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#8f8f8f', '#fff', '#eeeeeeff'],\r\n            offset: [0, 1]\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 250\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    tabulatorAnimation(object: HTMLObjectElement): void {\r\n        if (!object) {\r\n            return;\r\n        }\r\n\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#eeeeeeff', this.badColor === 'rgb(186, 2, 70)' ? '#4400ff' : 'rgb(211, 0, 0)'],\r\n            offset: [0, 1]\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 250,\r\n            fill: 'forwards'\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    successAnimation(object: HTMLObjectElement): void {\r\n        if (!object) {\r\n            return;\r\n        }\r\n\r\n        let svg = object.contentDocument;\r\n        let rect = svg.querySelector('#mainRect');\r\n        let text = svg.querySelector('#text7');\r\n        let animationKeyframes: PropertyIndexedKeyframes = {\r\n            stroke: ['#eeeeeeff', '#08a000', '#eeeeeeff'],\r\n            offset: [0, 1]\r\n        }\r\n\r\n        let animationOptions: KeyframeAnimationOptions = {\r\n            duration: 500\r\n        }\r\n\r\n        rect.animate(animationKeyframes, animationOptions);\r\n        text.animate(animationKeyframes, animationOptions);\r\n    }\r\n\r\n    deletionAnimation(element: Element, duration: number, direction: PlaybackDirection): void {\r\n        if (element.tagName === 'OBJECT') {\r\n            let object = <HTMLObjectElement>element;\r\n            let svg = object.contentDocument;\r\n            let rect = svg.querySelector('#mainRect');\r\n            let text = svg.querySelector('#text7');\r\n            let animationKeyframes: PropertyIndexedKeyframes = {\r\n                stroke: [object.classList.contains('tabulator') ? (this.badColor === 'rgb(186, 2, 70)' ? '#4400ff' : 'rgb(211, 0, 0)') : '#eeeeeeff', this.badColor],\r\n                offset: [0, 1]\r\n            }\r\n\r\n            let animationOptions: KeyframeAnimationOptions = {\r\n                duration: duration,  \r\n                fill: 'forwards',\r\n                direction: direction\r\n            }\r\n\r\n            rect.animate(animationKeyframes, animationOptions);\r\n            text.animate(animationKeyframes, animationOptions);\r\n        } else if (element.tagName === 'BUTTON') {\r\n            let animationKeyframes: PropertyIndexedKeyframes = {\r\n                backgroundColor: [this.badColor === 'rgb(186, 2, 70)' ? '#ff0000' : this.badColor, this.badColor === 'rgb(186, 2, 70)' ? '#ba0303' : '#ad0668'],\r\n                boxShadow: [`0 0 0 0 ${this.badColor === 'rgb(186, 2, 70)' ? '#ba0303' : '#ad0668'}`, `0 0 1vh 1vh ${this.badColor === 'rgb(186, 2, 70)' ? '#ff0000' : this.badColor}`],\r\n                color: ['#ffffff', '#eeffff'],\r\n                border: ['none', 'none',],\r\n                offset: [0, 1]\r\n            }\r\n\r\n            let animationOptions: KeyframeAnimationOptions = {\r\n                duration: duration,\r\n                fill: 'forwards',\r\n                direction: direction\r\n            }\r\n\r\n            element.animate(animationKeyframes, animationOptions);\r\n        }\r\n    }\r\n\r\n}\r\n\r\ntype Parameter = 'nouns' | 'verbs' | 'add nouns' | 'add verbs';\r\n\r\nexport interface InflectedWord {\r\n    singular: [string, string, string, string, string, string] | [string, string, string];\r\n    plural: [string, string, string, string, string, string] | [string, string, string];\r\n    verb: boolean;\r\n    probability: number;\r\n}"],"names":["$32142c6d5b4110e3$var$e","e","t","n","i","s","document","createElement","id","classList","add","style","height","width","$32142c6d5b4110e3$var$t","constructor","vocabulary","wordIndex","enterMode","window","indexedDB","open","addEventListener","console","error","database","result","transaction","onerror","objectStore","getAll","onsuccess","length","createObjectStore","autoIncrement","createIndex","unique","objectStoreNames","contains","oncomplete","log","modifyDocument","container","querySelector","iconPlaceholder","navbar","padding","body","backgroundImage","setAttribute","innerHTML","data","insertAdjacentElement","split","appendChild","offsetHeight","buttonLeft","homeButton","l","contentDocument","$32142c6d5b4110e3$var$o","$32142c6d5b4110e3$var$r","buttonRight","type","latinWord","inflections","germanTranslation","relatedForeignWords","selected","probability","childElementCount","children","remove","a","c","clientHeight","parseFloat","maxCharacters","Math","floor","innerWidth","Object","values","filter","charAt","get","put","keyDownFunction","key","lastElementChild","defineProperty","keys","value","slice","setTimeout","includes","r","o","hidden","failureAnimation","idleAnimation","stroke","offset","rotate","duration","animate","$32142c6d5b4110e3$var$n","innerText","removeEventListener","forEach","append","gridTemplateRows","getElementsByClassName","item","size","maxLength","onblur","parseInt","trim","onkeydown","blur","onkeyup","d","checked","h","target","deleteWord","clearTimeout","querySelectorAll","splice","openCursor","update","continue","delete","$32142c6d5b4110e3$var$i","totalAttempts","totalPoints","commandMode","command","inputIndex","time","round","backgroundColor","setInterval","resizeFunction","firstChild","movementAnimation","mouseOverFunction","selectedInput","inputStyling","offsetY","returnLastElement","currentWord","currentWordIndex","replaceWith","fixedAnimation","isNaN","successAnimation","resultStyling","toLocaleString","startNewTrainingRound","commandAnimation","alert","random","abs","max","getElementById","findIndex","transition","paddingLeft","fill","innerHeight","scrollHeight","$32142c6d5b4110e3$var$s","tabMode","tabulator","tabCount","v","failures","badColor","tabIndex","fontSize","startsWith","cancelTabMode","onclick","deletionButton","singular","empty","plural","verb","keydownFunction","changeSelectedInput","compare","compareObjects","clientWidth","childNodes","tabulatorAnimation","focus","findLastIndex","push","find","parentElement","deletionAnimation","Array","from","map","search","RegExp","match","findMostUsedTabulator","concat","sort","JSON","parse","stringify","tagName","direction","boxShadow","color","border","input","$543d6d2a56ed7d8d$export$331ff980f0d45cff","div","$543d6d2a56ed7d8d$export$abeb1bd8b6f9168","request","_","req","event","db","objectStore2","notImportantRequest_____yet","addVocabularyIcon","classes","icon","inputs","ii","object","svg","idontcare","forbiddenCharacters","rect","text","animationKeyframes","animationOptions","$543d6d2a56ed7d8d$export$927980128d33596b","showVocabularyIcon","str","span","navbarClickFunction","word","Cdiv","div1","div2","div3","div4","inputList","letter","checkboxList","checkboxDivList","saved","indicator","element","mouseover","clickFunction","index","cdiv","cursor","k","updatedData","$543d6d2a56ed7d8d$export$e73a7799776ae73d","inp","trainingIcon","homeDiv","hd","button","mode","changeMade","undefined","emptyLines","obj","addition","w","lowestDifference","savedProperty","overallProbabilty","randomNumber","lastProbability","rn","previousFixedDiv","specificationDiv","$543d6d2a56ed7d8d$export$82d34e6fb29a1ab3","param","inflectVocabularyIcon","elem","array","deletionMode","deletionFunction","vocab1","vocab2","wi1","wi2","overallIndexes","tabulatorStyle","tabulatorIndexes","indexes","broken","wi","vocab","regex","matches","start_end","tab","inflectedWord","tabs","start","end","checkedTabs","b","knownCase","isEmpty","p","string1","string2","obj1","obj2","object1","object2","$543d6d2a56ed7d8d$export$d12a05a2da93ee73","version","$543d6d2a56ed7d8d$export$7aa98d28c688390a"],"version":3,"file":"index.64a0c9c6.js.map"}